h2(#Delegates). Delegates

Operation reflection true.


h3(#ValidationDelegate). Validation Delegates 

h3(#InvocationDelegate). Invocation Delegates 

h3(#SettingDelegate). Setting Delegates 

h3(#QueryDelegate). Query Delegates 

h3(#OCLinEcoreEObjectValidator). OCLinEcoreEObjectValidator

Unfortunately, in the Indigo release, EMF does not support this customization and so amust be activated by explicitly using an EValidator that is aware of the ValidationDelegateExtension extended API. This is available by using the OCLinEcoreEObjectValidator, which you may install globally by:

bc.. 
EValidator.Registry.INSTANCE.put(null, new OCLinEcoreEObjectValidator());
p. 

or more selectively by adjusting the inheritance of the Validator class generated by EMF from (for a model of a Company):

bc.. 
import org.eclipse.ocl.examples.xtext.oclinecore.validation.OCLinEcoreEObjectValidator;

/**
 * <!-- begin-user-doc -->
 * The <b>Validator</b> for the model.
 * <!-- end-user-doc -->
 * @see company.CompanyPackage
 */
public class CompanyValidator extends EObjectValidator {
p. 

to

bc.. 
import org.eclipse.ocl.examples.xtext.oclinecore.validation.OCLinEcoreEObjectValidator;

/**
 * <!-- begin-user-doc -->
 * The <b>Validator</b> for the model.
 * <!-- end-user-doc -->
 * @see company.CompanyPackage
 * @generated not
 */
public class CompanyValidator extends OCLinEcoreEObjectValidator {
p. 

Note the *@generated not* to preserve the change when genmodel is run again.

h3(#CompleteOCLEObjectValidator). CompleteOCLEObjectValidator


