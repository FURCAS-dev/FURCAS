/**
 * Generated by the MOIN Generator Version 3.0
 **/

package textblockdefinition.__impl;

public class TextblockDefinitionReferencesProductionWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<textblockdefinition.TextblockDefinitionReferencesProduction> implements textblockdefinition.TextblockDefinitionReferencesProduction,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The TextblockDefinitionReferencesProduction wrapper
     */
    public TextblockDefinitionReferencesProductionWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, textblockdefinition.__impl.TextblockDefinitionReferencesProductionImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private textblockdefinition.__impl.TextblockDefinitionReferencesProductionImpl getCastWrappedObject() {
        return (textblockdefinition.__impl.TextblockDefinitionReferencesProductionImpl) getWrappedObject();
    }

    public textblockdefinition.TextblockDefinitionReferencesProduction unwrap() {
        return (textblockdefinition.TextblockDefinitionReferencesProduction) getWrappedObject();
    }
    
    public boolean exists(tcs.Template _ParseRule, textblockdefinition.TextBlockDefinition _TextBlockDefinition) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParseRule), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TextBlockDefinition));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParseRule), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TextBlockDefinition)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public tcs.Template getParseRule(textblockdefinition.TextBlockDefinition _TextBlockDefinition) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (tcs.Template) wrapResult(getCastWrappedObject().getParseRule(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TextBlockDefinition)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (tcs.Template) wrapResult(getCastWrappedObject().getParseRule(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TextBlockDefinition))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getTextBlockDefinition(tcs.Template _ParseRule) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getTextBlockDefinition(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParseRule)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getTextBlockDefinition(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParseRule))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(tcs.Template _ParseRule, textblockdefinition.TextBlockDefinition _TextBlockDefinition) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParseRule), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TextBlockDefinition));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParseRule), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TextBlockDefinition)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(tcs.Template _ParseRule, textblockdefinition.TextBlockDefinition _TextBlockDefinition) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParseRule), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TextBlockDefinition));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParseRule), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TextBlockDefinition)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<textblockdefinition.TextblockDefinitionReferencesProduction> get___JmiInterface() {
        return textblockdefinition.TextblockDefinitionReferencesProduction.class;
    }

    protected String metaObjectToString() {
        return "textblockdefinition.TextblockDefinitionReferencesProduction (Java Type)\ntextblockdefinition.TextblockDefinition_References_Production (MOF Type)"; //$NON-NLS-1$
    }    
}