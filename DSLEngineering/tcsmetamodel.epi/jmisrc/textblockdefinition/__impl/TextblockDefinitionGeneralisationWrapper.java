/**
 * Generated by the MOIN Generator Version 3.0
 **/

package textblockdefinition.__impl;

public class TextblockDefinitionGeneralisationWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<textblockdefinition.TextblockDefinitionGeneralisation> implements textblockdefinition.TextblockDefinitionGeneralisation,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The TextblockDefinitionGeneralisation wrapper
     */
    public TextblockDefinitionGeneralisationWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, textblockdefinition.__impl.TextblockDefinitionGeneralisationImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private textblockdefinition.__impl.TextblockDefinitionGeneralisationImpl getCastWrappedObject() {
        return (textblockdefinition.__impl.TextblockDefinitionGeneralisationImpl) getWrappedObject();
    }

    public textblockdefinition.TextblockDefinitionGeneralisation unwrap() {
        return (textblockdefinition.TextblockDefinitionGeneralisation) getWrappedObject();
    }
    
    public boolean exists(textblockdefinition.TextBlockDefinition _Generalisation, textblockdefinition.TextBlockDefinition _TextBlockDefinition) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Generalisation), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TextBlockDefinition));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Generalisation), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TextBlockDefinition)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public textblockdefinition.TextBlockDefinition getGeneralisation(textblockdefinition.TextBlockDefinition _TextBlockDefinition) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (textblockdefinition.TextBlockDefinition) wrapResult(getCastWrappedObject().getGeneralisation(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TextBlockDefinition)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (textblockdefinition.TextBlockDefinition) wrapResult(getCastWrappedObject().getGeneralisation(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TextBlockDefinition))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getTextBlockDefinition(textblockdefinition.TextBlockDefinition _Generalisation) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getTextBlockDefinition(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Generalisation)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getTextBlockDefinition(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Generalisation))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(textblockdefinition.TextBlockDefinition _Generalisation, textblockdefinition.TextBlockDefinition _TextBlockDefinition) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Generalisation), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TextBlockDefinition));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Generalisation), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TextBlockDefinition)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(textblockdefinition.TextBlockDefinition _Generalisation, textblockdefinition.TextBlockDefinition _TextBlockDefinition) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Generalisation), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TextBlockDefinition));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Generalisation), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TextBlockDefinition)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<textblockdefinition.TextblockDefinitionGeneralisation> get___JmiInterface() {
        return textblockdefinition.TextblockDefinitionGeneralisation.class;
    }

    protected String metaObjectToString() {
        return "textblockdefinition.TextblockDefinitionGeneralisation (Java Type)\ntextblockdefinition.TextblockDefinition_Generalisation (MOF Type)"; //$NON-NLS-1$
    }    
}