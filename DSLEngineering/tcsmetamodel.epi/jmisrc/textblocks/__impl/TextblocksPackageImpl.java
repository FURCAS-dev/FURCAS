/**
 * Generated by the MOIN Generator Version 3.0
 **/

package textblocks.__impl;

public final class TextblocksPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;
<<<<<<< HEAD
    
=======

>>>>>>> e04eb9c33a214a29f23acac04720aff53a6082b7
    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(27);
        FEATURE_IDS.put("textblockdefinition", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("DocumentNode", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("TextBlock", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("AbstractToken", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("UnlexedToken", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("LexedToken", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("OmittedToken", Integer.valueOf(6)); //$NON-NLS-1$
        FEATURE_IDS.put("EOSToken", Integer.valueOf(7)); //$NON-NLS-1$
        FEATURE_IDS.put("BOSToken", Integer.valueOf(8)); //$NON-NLS-1$
        FEATURE_IDS.put("TextBlock_Contains_Tokens", Integer.valueOf(9)); //$NON-NLS-1$
        FEATURE_IDS.put("TextBlock_Contains_Subblocks", Integer.valueOf(10)); //$NON-NLS-1$
        FEATURE_IDS.put("DocumentNode_References_CorrespondingModelElement", Integer.valueOf(11)); //$NON-NLS-1$
        FEATURE_IDS.put("DocumentNode_Has_DocumentNodeVersions", Integer.valueOf(12)); //$NON-NLS-1$
        FEATURE_IDS.put("TextBlockType", Integer.valueOf(13)); //$NON-NLS-1$
        FEATURE_IDS.put("LexedToken_Referenes_SequenceElement", Integer.valueOf(14)); //$NON-NLS-1$
        FEATURE_IDS.put("LexedToken_Referenes_FunctionCall", Integer.valueOf(15)); //$NON-NLS-1$
        FEATURE_IDS.put("DocumentNode_ReferencedElement", Integer.valueOf(16)); //$NON-NLS-1$
        FEATURE_IDS.put("TextBlock_SequenceElement", Integer.valueOf(17)); //$NON-NLS-1$
        FEATURE_IDS.put("TextBlock_ElementsInContext", Integer.valueOf(18)); //$NON-NLS-1$
        FEATURE_IDS.put("TextBlock_AdditionalTemplates", Integer.valueOf(19)); //$NON-NLS-1$
    }

    // constructors    
    public TextblocksPackageImpl()
    {
        super();
    }
    public TextblocksPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    public com.sap.tc.moin.repository.mmi.reflect.RefEnum create___RefEnum(com.sap.tc.moin.repository.mmi.model.EnumerationType enumType, String name) {
        com.sap.tc.moin.repository.mmi.reflect.RefEnum result = null;
        java.lang.String enumName = enumType.getName();
          if (enumName.equals("Version")) { //$NON-NLS-1$
            result = textblocks.VersionEnum.forName(name);
          }
        return result;
    }
    // internal structure type creators
    // nested packages
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getTextblockdefinition(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "textblockdefinition"); //$NON-NLS-1$
    }
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getDocumentNode(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "DocumentNode"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getTextBlock(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "TextBlock"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAbstractToken(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "AbstractToken"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUnlexedToken(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UnlexedToken"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getLexedToken(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "LexedToken"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getOmittedToken(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "OmittedToken"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getEostoken(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "EOSToken"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getBostoken(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "BOSToken"); //$NON-NLS-1$
    }
    // associations
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTextBlockContainsTokens(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TextBlock_Contains_Tokens"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTextBlockContainsSubblocks(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TextBlock_Contains_Subblocks"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getDocumentNodeReferencesCorrespondingModelElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "DocumentNode_References_CorrespondingModelElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getDocumentNodeHasDocumentNodeVersions(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "DocumentNode_Has_DocumentNodeVersions"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTextBlockType(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TextBlockType"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getLexedTokenReferenesSequenceElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "LexedToken_Referenes_SequenceElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getLexedTokenReferenesFunctionCall(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "LexedToken_Referenes_FunctionCall"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getDocumentNodeReferencedElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "DocumentNode_ReferencedElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTextBlockSequenceElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TextBlock_SequenceElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTextBlockElementsInContext(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TextBlock_ElementsInContext"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTextBlockAdditionalTemplates(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TextBlock_AdditionalTemplates"); //$NON-NLS-1$
    }
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new textblockdefinition.__impl.TextblockdefinitionPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 1:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 2:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("textblocks.__impl.TextBlockImpl")); //$NON-NLS-1$
                case 3:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 4:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("textblocks.__impl.UnlexedTokenImpl")); //$NON-NLS-1$
                case 5:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("textblocks.__impl.LexedTokenImpl")); //$NON-NLS-1$
                case 6:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("textblocks.__impl.OmittedTokenImpl")); //$NON-NLS-1$
                case 7:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("textblocks.__impl.EostokenImpl")); //$NON-NLS-1$
                case 8:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("textblocks.__impl.BostokenImpl")); //$NON-NLS-1$
                case 9:
                    return new textblocks.__impl.TextBlockContainsTokensImpl(workspace, mofId, immediatePackage, metaObject);
                case 10:
                    return new textblocks.__impl.TextBlockContainsSubblocksImpl(workspace, mofId, immediatePackage, metaObject);
                case 11:
                    return new textblocks.__impl.DocumentNodeReferencesCorrespondingModelElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 12:
                    return new textblocks.__impl.DocumentNodeHasDocumentNodeVersionsImpl(workspace, mofId, immediatePackage, metaObject);
                case 13:
                    return new textblocks.__impl.TextBlockTypeImpl(workspace, mofId, immediatePackage, metaObject);
                case 14:
                    return new textblocks.__impl.LexedTokenReferenesSequenceElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 15:
                    return new textblocks.__impl.LexedTokenReferenesFunctionCallImpl(workspace, mofId, immediatePackage, metaObject);
                case 16:
                    return new textblocks.__impl.DocumentNodeReferencedElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 17:
                    return new textblocks.__impl.TextBlockSequenceElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 18:
                    return new textblocks.__impl.TextBlockElementsInContextImpl(workspace, mofId, immediatePackage, metaObject);
                case 19:
                    return new textblocks.__impl.TextBlockAdditionalTemplatesImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

<<<<<<< HEAD
=======
    @SuppressWarnings("unchecked")
>>>>>>> e04eb9c33a214a29f23acac04720aff53a6082b7
    public java.lang.Class<textblocks.TextblocksPackage> get___JmiInterface() {
        return textblocks.TextblocksPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(1);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
<<<<<<< HEAD
            java.lang.String name = ""; //$NON-NLS-1$
=======
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
>>>>>>> e04eb9c33a214a29f23acac04720aff53a6082b7
            RefPackageAndName rpan = null;
            name = "textblockdefinition"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "textblockdefinition.TextblockdefinitionPackage", true); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(8);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
            name = "DocumentNode"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "textblocks.DocumentNode"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "TextBlock"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "textblocks.TextBlock"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "AbstractToken"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "textblocks.AbstractToken"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UnlexedToken"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "textblocks.UnlexedToken"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "LexedToken"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "textblocks.LexedToken"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "OmittedToken"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "textblocks.OmittedToken"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "EOSToken"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "textblocks.Eostoken"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "BOSToken"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "textblocks.Bostoken"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(11);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
<<<<<<< HEAD
            java.lang.String name = ""; //$NON-NLS-1$
=======
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
>>>>>>> e04eb9c33a214a29f23acac04720aff53a6082b7
            RefAssociationAndName raan = null;
            name = "TextBlock_Contains_Tokens"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "textblocks.TextBlockContainsTokens"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TextBlock_Contains_Subblocks"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "textblocks.TextBlockContainsSubblocks"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "DocumentNode_References_CorrespondingModelElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "textblocks.DocumentNodeReferencesCorrespondingModelElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "DocumentNode_Has_DocumentNodeVersions"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "textblocks.DocumentNodeHasDocumentNodeVersions"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TextBlockType"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "textblocks.TextBlockType"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "LexedToken_Referenes_SequenceElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "textblocks.LexedTokenReferenesSequenceElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "LexedToken_Referenes_FunctionCall"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "textblocks.LexedTokenReferenesFunctionCall"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "DocumentNode_ReferencedElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "textblocks.DocumentNodeReferencedElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TextBlock_SequenceElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "textblocks.TextBlockSequenceElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TextBlock_ElementsInContext"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "textblocks.TextBlockElementsInContext"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TextBlock_AdditionalTemplates"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "textblocks.TextBlockAdditionalTemplates"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<textblocks.__impl.TextblocksPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new textblocks.__impl.TextblocksPackageWrapper(conn, this, synchronize);
    }

}