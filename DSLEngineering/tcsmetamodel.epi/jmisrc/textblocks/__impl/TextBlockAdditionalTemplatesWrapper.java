/**
 * Generated by the MOIN Generator Version 3.0
 **/

package textblocks.__impl;

public class TextBlockAdditionalTemplatesWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<textblocks.TextBlockAdditionalTemplates> implements textblocks.TextBlockAdditionalTemplates,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The TextBlockAdditionalTemplates wrapper
     */
    public TextBlockAdditionalTemplatesWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, textblocks.__impl.TextBlockAdditionalTemplatesImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private textblocks.__impl.TextBlockAdditionalTemplatesImpl getCastWrappedObject() {
        return (textblocks.__impl.TextBlockAdditionalTemplatesImpl) getWrappedObject();
    }

    public textblocks.TextBlockAdditionalTemplates unwrap() {
        return (textblocks.TextBlockAdditionalTemplates) getWrappedObject();
    }
    
    public boolean exists(textblocks.TextBlock _Textblock, tcs.Template _AdditionalTemplates) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AdditionalTemplates));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AdditionalTemplates)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getTextblock(tcs.Template _AdditionalTemplates) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getTextblock(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AdditionalTemplates)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getTextblock(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AdditionalTemplates))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.List getAdditionalTemplates(textblocks.TextBlock _Textblock) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.List) wrapResult(getCastWrappedObject().getAdditionalTemplates(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.List) wrapResult(getCastWrappedObject().getAdditionalTemplates(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(textblocks.TextBlock _Textblock, tcs.Template _AdditionalTemplates) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AdditionalTemplates));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AdditionalTemplates)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(textblocks.TextBlock _Textblock, tcs.Template _AdditionalTemplates) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AdditionalTemplates));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AdditionalTemplates)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<textblocks.TextBlockAdditionalTemplates> get___JmiInterface() {
        return textblocks.TextBlockAdditionalTemplates.class;
    }

    protected String metaObjectToString() {
        return "textblocks.TextBlockAdditionalTemplates (Java Type)\ntextblocks.TextBlock_AdditionalTemplates (MOF Type)"; //$NON-NLS-1$
    }    
}