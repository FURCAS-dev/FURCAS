/**
 * Generated by the MOIN Generator Version 3.0
 **/

package textblocks.__impl;

public class TextBlockElementsInContextWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<textblocks.TextBlockElementsInContext> implements textblocks.TextBlockElementsInContext,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The TextBlockElementsInContext wrapper
     */
    public TextBlockElementsInContextWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, textblocks.__impl.TextBlockElementsInContextImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private textblocks.__impl.TextBlockElementsInContextImpl getCastWrappedObject() {
        return (textblocks.__impl.TextBlockElementsInContextImpl) getWrappedObject();
    }

    public textblocks.TextBlockElementsInContext unwrap() {
        return (textblocks.TextBlockElementsInContext) getWrappedObject();
    }
    
    public boolean exists(textblocks.TextBlock _Textblock, com.sap.tc.moin.repository.mmi.reflect.RefObject _ElementsInContext) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ElementsInContext));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ElementsInContext)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getTextblock(com.sap.tc.moin.repository.mmi.reflect.RefObject _ElementsInContext) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getTextblock(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ElementsInContext)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getTextblock(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ElementsInContext))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getElementsInContext(textblocks.TextBlock _Textblock) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getElementsInContext(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getElementsInContext(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(textblocks.TextBlock _Textblock, com.sap.tc.moin.repository.mmi.reflect.RefObject _ElementsInContext) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ElementsInContext));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ElementsInContext)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(textblocks.TextBlock _Textblock, com.sap.tc.moin.repository.mmi.reflect.RefObject _ElementsInContext) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ElementsInContext));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ElementsInContext)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

<<<<<<< HEAD
=======
    @SuppressWarnings("unchecked")
>>>>>>> e04eb9c33a214a29f23acac04720aff53a6082b7
    public java.lang.Class<textblocks.TextBlockElementsInContext> get___JmiInterface() {
        return textblocks.TextBlockElementsInContext.class;
    }

    protected String metaObjectToString() {
        return "textblocks.TextBlockElementsInContext (Java Type)\ntextblocks.TextBlock_ElementsInContext (MOF Type)"; //$NON-NLS-1$
    }    
}