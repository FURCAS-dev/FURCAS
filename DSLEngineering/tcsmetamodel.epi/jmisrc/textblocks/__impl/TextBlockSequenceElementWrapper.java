/**
 * Generated by the MOIN Generator Version 3.0
 **/

package textblocks.__impl;

public class TextBlockSequenceElementWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<textblocks.TextBlockSequenceElement> implements textblocks.TextBlockSequenceElement,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The TextBlockSequenceElement wrapper
     */
    public TextBlockSequenceElementWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, textblocks.__impl.TextBlockSequenceElementImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private textblocks.__impl.TextBlockSequenceElementImpl getCastWrappedObject() {
        return (textblocks.__impl.TextBlockSequenceElementImpl) getWrappedObject();
    }

    public textblocks.TextBlockSequenceElement unwrap() {
        return (textblocks.TextBlockSequenceElement) getWrappedObject();
    }
    
    public boolean exists(textblocks.TextBlock _Textblock, tcs.SequenceElement _SequenceElement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _SequenceElement));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _SequenceElement)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getTextblock(tcs.SequenceElement _SequenceElement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getTextblock(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _SequenceElement)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getTextblock(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _SequenceElement))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public tcs.SequenceElement getSequenceElement(textblocks.TextBlock _Textblock) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (tcs.SequenceElement) wrapResult(getCastWrappedObject().getSequenceElement(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (tcs.SequenceElement) wrapResult(getCastWrappedObject().getSequenceElement(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(textblocks.TextBlock _Textblock, tcs.SequenceElement _SequenceElement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _SequenceElement));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _SequenceElement)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(textblocks.TextBlock _Textblock, tcs.SequenceElement _SequenceElement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _SequenceElement));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Textblock), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _SequenceElement)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<textblocks.TextBlockSequenceElement> get___JmiInterface() {
        return textblocks.TextBlockSequenceElement.class;
    }

    protected String metaObjectToString() {
        return "textblocks.TextBlockSequenceElement (Java Type)\ntextblocks.TextBlock_SequenceElement (MOF Type)"; //$NON-NLS-1$
    }    
}