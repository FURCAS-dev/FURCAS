/**
 * Generated by the MOIN Generator Version 3.0
 **/

package textblocks.__impl;

public class LexedTokenReferenesFunctionCallWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<textblocks.LexedTokenReferenesFunctionCall> implements textblocks.LexedTokenReferenesFunctionCall,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The LexedTokenReferenesFunctionCall wrapper
     */
    public LexedTokenReferenesFunctionCallWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, textblocks.__impl.LexedTokenReferenesFunctionCallImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private textblocks.__impl.LexedTokenReferenesFunctionCallImpl getCastWrappedObject() {
        return (textblocks.__impl.LexedTokenReferenesFunctionCallImpl) getWrappedObject();
    }

    public textblocks.LexedTokenReferenesFunctionCall unwrap() {
        return (textblocks.LexedTokenReferenesFunctionCall) getWrappedObject();
    }
    
    public boolean exists(textblocks.LexedToken _Lexedtoken, tcs.FunctionCall _Functioncall) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Lexedtoken), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Functioncall));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Lexedtoken), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Functioncall)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getLexedtoken(tcs.FunctionCall _Functioncall) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getLexedtoken(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Functioncall)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getLexedtoken(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Functioncall))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public tcs.FunctionCall getFunctioncall(textblocks.LexedToken _Lexedtoken) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (tcs.FunctionCall) wrapResult(getCastWrappedObject().getFunctioncall(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Lexedtoken)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (tcs.FunctionCall) wrapResult(getCastWrappedObject().getFunctioncall(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Lexedtoken))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(textblocks.LexedToken _Lexedtoken, tcs.FunctionCall _Functioncall) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Lexedtoken), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Functioncall));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Lexedtoken), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Functioncall)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(textblocks.LexedToken _Lexedtoken, tcs.FunctionCall _Functioncall) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Lexedtoken), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Functioncall));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Lexedtoken), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Functioncall)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

<<<<<<< HEAD
=======
    @SuppressWarnings("unchecked")
>>>>>>> e04eb9c33a214a29f23acac04720aff53a6082b7
    public java.lang.Class<textblocks.LexedTokenReferenesFunctionCall> get___JmiInterface() {
        return textblocks.LexedTokenReferenesFunctionCall.class;
    }

    protected String metaObjectToString() {
        return "textblocks.LexedTokenReferenesFunctionCall (Java Type)\ntextblocks.LexedToken_Referenes_FunctionCall (MOF Type)"; //$NON-NLS-1$
    }    
}