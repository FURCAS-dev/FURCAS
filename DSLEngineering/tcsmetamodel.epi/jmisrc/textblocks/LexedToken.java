/**
 * Generated by the MOIN Generator Version 3.0
 **/

package textblocks;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface LexedToken extends textblocks.AbstractToken {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, textblocks.LexedToken> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, textblocks.LexedToken>("480716BCBE2DC5420C5F11DDA75D00016CE99C52", "demo.sap.com/tcsmeta", "textblocks", "LexedToken"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // references
    public tcs.SequenceElement getSequenceElement() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setSequenceElement(tcs.SequenceElement newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public tcs.FunctionCall getParentFunctionCall() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setParentFunctionCall(tcs.FunctionCall newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>childrenChanged</code> attribute.
         * @return  the descriptor for the <code>childrenChanged</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,textblocks.DocumentNode,java.lang.Boolean> CHILDREN_CHANGED( ) {
            return textblocks.DocumentNode.DESCRIPTORS.CHILDREN_CHANGED( );
        }
        /**
         * Returns the descriptor for the <code>version</code> attribute.
         * @return  the descriptor for the <code>version</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,textblocks.DocumentNode,textblocks.Version> VERSION( ) {
            return textblocks.DocumentNode.DESCRIPTORS.VERSION( );
        }
        /**
         * Returns the descriptor for the <code>relexingNeeded</code> attribute.
         * @return  the descriptor for the <code>relexingNeeded</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,textblocks.DocumentNode,java.lang.Boolean> RELEXING_NEEDED( ) {
            return textblocks.DocumentNode.DESCRIPTORS.RELEXING_NEEDED( );
        }
        /**
         * Returns the descriptor for the <code>startRow</code> attribute.
         * @return  the descriptor for the <code>startRow</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,textblocks.DocumentNode,java.lang.Integer> START_ROW( ) {
            return textblocks.DocumentNode.DESCRIPTORS.START_ROW( );
        }
        /**
         * Returns the descriptor for the <code>startColumn</code> attribute.
         * @return  the descriptor for the <code>startColumn</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,textblocks.DocumentNode,java.lang.Integer> START_COLUMN( ) {
            return textblocks.DocumentNode.DESCRIPTORS.START_COLUMN( );
        }
        /**
         * Returns the descriptor for the <code>endRow</code> attribute.
         * @return  the descriptor for the <code>endRow</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,textblocks.DocumentNode,java.lang.Integer> END_ROW( ) {
            return textblocks.DocumentNode.DESCRIPTORS.END_ROW( );
        }
        /**
         * Returns the descriptor for the <code>endColumn</code> attribute.
         * @return  the descriptor for the <code>endColumn</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,textblocks.DocumentNode,java.lang.Integer> END_COLUMN( ) {
            return textblocks.DocumentNode.DESCRIPTORS.END_COLUMN( );
        }
        /**
         * Returns the descriptor for the <code>offset</code> attribute.
         * @return  the descriptor for the <code>offset</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,textblocks.DocumentNode,java.lang.Integer> OFFSET( ) {
            return textblocks.DocumentNode.DESCRIPTORS.OFFSET( );
        }
        /**
         * Returns the descriptor for the <code>length</code> attribute.
         * @return  the descriptor for the <code>length</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,textblocks.DocumentNode,java.lang.Integer> LENGTH( ) {
            return textblocks.DocumentNode.DESCRIPTORS.LENGTH( );
        }
        /**
         * Returns the descriptor for the <code>offsetRelative</code> attribute.
         * @return  the descriptor for the <code>offsetRelative</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,textblocks.DocumentNode,java.lang.Boolean> OFFSET_RELATIVE( ) {
            return textblocks.DocumentNode.DESCRIPTORS.OFFSET_RELATIVE( );
        }
        /**
         * Returns the descriptor for the <code>value</code> attribute.
         * @return  the descriptor for the <code>value</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,textblocks.AbstractToken,java.lang.String> VALUE( ) {
            return textblocks.AbstractToken.DESCRIPTORS.VALUE( );
        }
        /**
         * Returns the descriptor for the <code>lookahead</code> attribute.
         * @return  the descriptor for the <code>lookahead</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,textblocks.AbstractToken,java.lang.Integer> LOOKAHEAD( ) {
            return textblocks.AbstractToken.DESCRIPTORS.LOOKAHEAD( );
        }
        /**
         * Returns the descriptor for the <code>lookback</code> attribute.
         * @return  the descriptor for the <code>lookback</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,textblocks.AbstractToken,java.lang.Integer> LOOKBACK( ) {
            return textblocks.AbstractToken.DESCRIPTORS.LOOKBACK( );
        }
        /**
         * Returns the descriptor for the <code>state</code> attribute.
         * @return  the descriptor for the <code>state</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,textblocks.AbstractToken,java.lang.Integer> STATE( ) {
            return textblocks.AbstractToken.DESCRIPTORS.STATE( );
        }
        /**
         * Returns the descriptor for the <code>type</code> attribute.
         * @return  the descriptor for the <code>type</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,textblocks.AbstractToken,java.lang.Integer> TYPE( ) {
            return textblocks.AbstractToken.DESCRIPTORS.TYPE( );
        }
        /**
         * Returns the descriptor for the <code>correspondingModelElements</code> reference.
         * @return  the descriptor for the <code>correspondingModelElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,textblocks.DocumentNode,java.util.List<com.sap.tc.moin.repository.mmi.reflect.RefObject>> CORRESPONDING_MODEL_ELEMENTS( ) {
            return textblocks.DocumentNode.DESCRIPTORS.CORRESPONDING_MODEL_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>otherVersions</code> reference.
         * @return  the descriptor for the <code>otherVersions</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,textblocks.DocumentNode,java.util.List<textblocks.DocumentNode>> OTHER_VERSIONS( ) {
            return textblocks.DocumentNode.DESCRIPTORS.OTHER_VERSIONS( );
        }
        /**
         * Returns the descriptor for the <code>referencedElements</code> reference.
         * @return  the descriptor for the <code>referencedElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,textblocks.DocumentNode,java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefObject>> REFERENCED_ELEMENTS( ) {
            return textblocks.DocumentNode.DESCRIPTORS.REFERENCED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>parentBlock</code> reference.
         * @return  the descriptor for the <code>parentBlock</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,textblocks.AbstractToken,textblocks.TextBlock> PARENT_BLOCK( ) {
            return textblocks.AbstractToken.DESCRIPTORS.PARENT_BLOCK( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,textblocks.LexedToken,tcs.SequenceElement> __sequenceElement;
        /**
         * Returns the descriptor for the <code>sequenceElement</code> reference.
         * @return  the descriptor for the <code>sequenceElement</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,textblocks.LexedToken,tcs.SequenceElement> SEQUENCE_ELEMENT( ) {
            if ( __sequenceElement == null ) {
                __sequenceElement = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,textblocks.LexedToken,tcs.SequenceElement>( "48CA4A7334A5A94080B911DDB2150018DE1146FF", "demo.sap.com/tcsmeta", new java.lang.String[] { "textblocks", "LexedToken", "sequenceElement" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __sequenceElement;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,textblocks.LexedToken,tcs.FunctionCall> __parentFunctionCall;
        /**
         * Returns the descriptor for the <code>parentFunctionCall</code> reference.
         * @return  the descriptor for the <code>parentFunctionCall</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,textblocks.LexedToken,tcs.FunctionCall> PARENT_FUNCTION_CALL( ) {
            if ( __parentFunctionCall == null ) {
                __parentFunctionCall = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,textblocks.LexedToken,tcs.FunctionCall>( "48CA4AE3778A99A380B911DDC4490018DE1146FF", "demo.sap.com/tcsmeta", new java.lang.String[] { "textblocks", "LexedToken", "parentFunctionCall" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __parentFunctionCall;
        }
        /**
         * Returns the descriptor for the <code>getAbsoluteOffset</code> operation.
         * @return  the descriptor for the <code>getAbsoluteOffset</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,textblocks.DocumentNode,java.lang.Integer> GET_ABSOLUTE_OFFSET( ) {
            return textblocks.DocumentNode.DESCRIPTORS.GET_ABSOLUTE_OFFSET( );
        }
    }
}    