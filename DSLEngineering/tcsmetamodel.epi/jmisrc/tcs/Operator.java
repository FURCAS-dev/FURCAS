/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface Operator extends tcs.NamedElement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.Operator> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.Operator>("483FE093F861ACED2E3811DD9414001742153E0C", "demo.sap.com/tcsmeta", "TCS", "Operator"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public boolean isPostfix() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setPostfix(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public int getArity() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setArity(int newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public tcs.Literal getLiteral() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setLiteral(tcs.Literal newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<tcs.OperatorTemplate> getTemplates() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>location</code> attribute.
         * @return  the descriptor for the <code>location</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.lang.String> LOCATION( ) {
            return tcs.LocatedElement.DESCRIPTORS.LOCATION( );
        }
        /**
         * Returns the descriptor for the <code>commentsBefore</code> attribute.
         * @return  the descriptor for the <code>commentsBefore</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_BEFORE( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_BEFORE( );
        }
        /**
         * Returns the descriptor for the <code>commentsAfter</code> attribute.
         * @return  the descriptor for the <code>commentsAfter</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_AFTER( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_AFTER( );
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.NamedElement,java.lang.String> NAME( ) {
            return tcs.NamedElement.DESCRIPTORS.NAME( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.Operator,java.lang.Boolean> __isPostfix;
        /**
         * Returns the descriptor for the <code>isPostfix</code> attribute.
         * @return  the descriptor for the <code>isPostfix</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.Operator,java.lang.Boolean> IS_POSTFIX( ) {
            if ( __isPostfix == null ) {
                __isPostfix = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.Operator,java.lang.Boolean>( "4843B73CAE7ECC10308211DD99E2001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "Operator", "isPostfix" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isPostfix;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.Operator,java.lang.Integer> __arity;
        /**
         * Returns the descriptor for the <code>arity</code> attribute.
         * @return  the descriptor for the <code>arity</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.Operator,java.lang.Integer> ARITY( ) {
            if ( __arity == null ) {
                __arity = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.Operator,java.lang.Integer>( "4843B746B4D43230308211DD9284001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "Operator", "arity" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __arity;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Operator,tcs.Literal> __literal;
        /**
         * Returns the descriptor for the <code>literal</code> reference.
         * @return  the descriptor for the <code>literal</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Operator,tcs.Literal> LITERAL( ) {
            if ( __literal == null ) {
                __literal = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Operator,tcs.Literal>( "4843CA33FC53DF63308D11DD8314001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "Operator", "literal" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __literal;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Operator,java.util.Collection<tcs.OperatorTemplate>> __templates;
        /**
         * Returns the descriptor for the <code>templates</code> reference.
         * @return  the descriptor for the <code>templates</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Operator,java.util.Collection<tcs.OperatorTemplate>> TEMPLATES( ) {
            if ( __templates == null ) {
                __templates = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Operator,java.util.Collection<tcs.OperatorTemplate>>( "4860F5D10869860041F111DDB6FF001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "Operator", "templates" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __templates;
        }
    }
}    