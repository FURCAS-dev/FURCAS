/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface OperatorTemplate extends tcs.ContextTemplate {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.OperatorTemplate> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.OperatorTemplate>("483FE093F85F62F02E3811DDC13C001742153E0C", "demo.sap.com/tcsmeta", "TCS", "OperatorTemplate"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // references
    public tcs.Sequence getOtSequence() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setOtSequence(tcs.Sequence newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<tcs.Operator> getOperators() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public tcs.PropertyReference getStoreOperatorTo() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setStoreOperatorTo(tcs.PropertyReference newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public tcs.PropertyReference getStoreRightSideTo() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setStoreRightSideTo(tcs.PropertyReference newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public tcs.PropertyReference getStoreLeftSideTo() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setStoreLeftSideTo(tcs.PropertyReference newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>location</code> attribute.
         * @return  the descriptor for the <code>location</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.lang.String> LOCATION( ) {
            return tcs.LocatedElement.DESCRIPTORS.LOCATION( );
        }
        /**
         * Returns the descriptor for the <code>commentsBefore</code> attribute.
         * @return  the descriptor for the <code>commentsBefore</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_BEFORE( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_BEFORE( );
        }
        /**
         * Returns the descriptor for the <code>commentsAfter</code> attribute.
         * @return  the descriptor for the <code>commentsAfter</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_AFTER( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_AFTER( );
        }
        /**
         * Returns the descriptor for the <code>names</code> attribute.
         * @return  the descriptor for the <code>names</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.QualifiedNamedElement,java.util.List<java.lang.String>> NAMES( ) {
            return tcs.QualifiedNamedElement.DESCRIPTORS.NAMES( );
        }
        /**
         * Returns the descriptor for the <code>disambiguate</code> attribute.
         * @return  the descriptor for the <code>disambiguate</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.Template,java.lang.String> DISAMBIGUATE( ) {
            return tcs.Template.DESCRIPTORS.DISAMBIGUATE( );
        }
        /**
         * Returns the descriptor for the <code>disambiguateV3</code> attribute.
         * @return  the descriptor for the <code>disambiguateV3</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.Template,java.lang.String> DISAMBIGUATE_V3( ) {
            return tcs.Template.DESCRIPTORS.DISAMBIGUATE_V3( );
        }
        /**
         * Returns the descriptor for the <code>isContext</code> attribute.
         * @return  the descriptor for the <code>isContext</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ContextTemplate,java.lang.Boolean> IS_CONTEXT( ) {
            return tcs.ContextTemplate.DESCRIPTORS.IS_CONTEXT( );
        }
        /**
         * Returns the descriptor for the <code>isReferenceOnly</code> attribute.
         * @return  the descriptor for the <code>isReferenceOnly</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ContextTemplate,java.lang.Boolean> IS_REFERENCE_ONLY( ) {
            return tcs.ContextTemplate.DESCRIPTORS.IS_REFERENCE_ONLY( );
        }
        /**
         * Returns the descriptor for the <code>metaReference</code> reference.
         * @return  the descriptor for the <code>metaReference</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.QualifiedNamedElement,com.sap.tc.moin.repository.mmi.model.Classifier> META_REFERENCE( ) {
            return tcs.QualifiedNamedElement.DESCRIPTORS.META_REFERENCE( );
        }
        /**
         * Returns the descriptor for the <code>concretesyntax</code> reference.
         * @return  the descriptor for the <code>concretesyntax</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Template,tcs.ConcreteSyntax> CONCRETESYNTAX( ) {
            return tcs.Template.DESCRIPTORS.CONCRETESYNTAX( );
        }
        /**
         * Returns the descriptor for the <code>contextTags</code> reference.
         * @return  the descriptor for the <code>contextTags</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ContextTemplate,tcs.ContextTags> CONTEXT_TAGS( ) {
            return tcs.ContextTemplate.DESCRIPTORS.CONTEXT_TAGS( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.OperatorTemplate,tcs.Sequence> __otSequence;
        /**
         * Returns the descriptor for the <code>otSequence</code> reference.
         * @return  the descriptor for the <code>otSequence</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.OperatorTemplate,tcs.Sequence> OT_SEQUENCE( ) {
            if ( __otSequence == null ) {
                __otSequence = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.OperatorTemplate,tcs.Sequence>( "4843B6934A105910308211DDC2AF001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "OperatorTemplate", "otSequence" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __otSequence;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.OperatorTemplate,java.util.Collection<tcs.Operator>> __operators;
        /**
         * Returns the descriptor for the <code>operators</code> reference.
         * @return  the descriptor for the <code>operators</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.OperatorTemplate,java.util.Collection<tcs.Operator>> OPERATORS( ) {
            if ( __operators == null ) {
                __operators = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.OperatorTemplate,java.util.Collection<tcs.Operator>>( "4843B790E0F07682308211DDA9B8001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "OperatorTemplate", "operators" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __operators;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.OperatorTemplate,tcs.PropertyReference> __storeOperatorTo;
        /**
         * Returns the descriptor for the <code>storeOperatorTo</code> reference.
         * @return  the descriptor for the <code>storeOperatorTo</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.OperatorTemplate,tcs.PropertyReference> STORE_OPERATOR_TO( ) {
            if ( __storeOperatorTo == null ) {
                __storeOperatorTo = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.OperatorTemplate,tcs.PropertyReference>( "4914224BC65B3C40ACBC11DDABE3001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "OperatorTemplate", "storeOperatorTo" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __storeOperatorTo;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.OperatorTemplate,tcs.PropertyReference> __storeRightSideTo;
        /**
         * Returns the descriptor for the <code>storeRightSideTo</code> reference.
         * @return  the descriptor for the <code>storeRightSideTo</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.OperatorTemplate,tcs.PropertyReference> STORE_RIGHT_SIDE_TO( ) {
            if ( __storeRightSideTo == null ) {
                __storeRightSideTo = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.OperatorTemplate,tcs.PropertyReference>( "49142250C9589DC3ACBC11DD9701001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "OperatorTemplate", "storeRightSideTo" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __storeRightSideTo;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.OperatorTemplate,tcs.PropertyReference> __storeLeftSideTo;
        /**
         * Returns the descriptor for the <code>storeLeftSideTo</code> reference.
         * @return  the descriptor for the <code>storeLeftSideTo</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.OperatorTemplate,tcs.PropertyReference> STORE_LEFT_SIDE_TO( ) {
            if ( __storeLeftSideTo == null ) {
                __storeLeftSideTo = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.OperatorTemplate,tcs.PropertyReference>( "49142A5892BE17E3ACC111DDC813001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "OperatorTemplate", "storeLeftSideTo" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __storeLeftSideTo;
        }
        /**
         * Returns the descriptor for the <code>hasSyntaxContributions</code> operation.
         * @return  the descriptor for the <code>hasSyntaxContributions</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,tcs.Template,java.lang.Boolean> HAS_SYNTAX_CONTRIBUTIONS( ) {
            return tcs.Template.DESCRIPTORS.HAS_SYNTAX_CONTRIBUTIONS( );
        }
        /**
         * Returns the descriptor for the <code>getCalledTemplates</code> operation.
         * @return  the descriptor for the <code>getCalledTemplates</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,tcs.Template,java.util.Collection<tcs.Template>> GET_CALLED_TEMPLATES( ) {
            return tcs.Template.DESCRIPTORS.GET_CALLED_TEMPLATES( );
        }
    }
}    