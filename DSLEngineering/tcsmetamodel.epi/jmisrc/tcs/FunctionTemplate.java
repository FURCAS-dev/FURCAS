/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface FunctionTemplate extends tcs.Template {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.FunctionTemplate> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.FunctionTemplate>("483FE093F85A80FE2E3811DD917A001742153E0C", "demo.sap.com/tcsmeta", "TCS", "FunctionTemplate"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public java.lang.String getFunctionName() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setFunctionName(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public tcs.Sequence getFunctionSequence() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setFunctionSequence(tcs.Sequence newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>location</code> attribute.
         * @return  the descriptor for the <code>location</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.lang.String> LOCATION( ) {
            return tcs.LocatedElement.DESCRIPTORS.LOCATION( );
        }
        /**
         * Returns the descriptor for the <code>commentsBefore</code> attribute.
         * @return  the descriptor for the <code>commentsBefore</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_BEFORE( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_BEFORE( );
        }
        /**
         * Returns the descriptor for the <code>commentsAfter</code> attribute.
         * @return  the descriptor for the <code>commentsAfter</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_AFTER( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_AFTER( );
        }
        /**
         * Returns the descriptor for the <code>names</code> attribute.
         * @return  the descriptor for the <code>names</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.QualifiedNamedElement,java.util.List<java.lang.String>> NAMES( ) {
            return tcs.QualifiedNamedElement.DESCRIPTORS.NAMES( );
        }
        /**
         * Returns the descriptor for the <code>disambiguate</code> attribute.
         * @return  the descriptor for the <code>disambiguate</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.Template,java.lang.String> DISAMBIGUATE( ) {
            return tcs.Template.DESCRIPTORS.DISAMBIGUATE( );
        }
        /**
         * Returns the descriptor for the <code>disambiguateV3</code> attribute.
         * @return  the descriptor for the <code>disambiguateV3</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.Template,java.lang.String> DISAMBIGUATE_V3( ) {
            return tcs.Template.DESCRIPTORS.DISAMBIGUATE_V3( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.FunctionTemplate,java.lang.String> __functionName;
        /**
         * Returns the descriptor for the <code>functionName</code> attribute.
         * @return  the descriptor for the <code>functionName</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.FunctionTemplate,java.lang.String> FUNCTION_NAME( ) {
            if ( __functionName == null ) {
                __functionName = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.FunctionTemplate,java.lang.String>( "48400552DFD30BE02E4E11DDB5BE001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "FunctionTemplate", "functionName" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __functionName;
        }
        /**
         * Returns the descriptor for the <code>metaReference</code> reference.
         * @return  the descriptor for the <code>metaReference</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.QualifiedNamedElement,com.sap.tc.moin.repository.mmi.model.Classifier> META_REFERENCE( ) {
            return tcs.QualifiedNamedElement.DESCRIPTORS.META_REFERENCE( );
        }
        /**
         * Returns the descriptor for the <code>concretesyntax</code> reference.
         * @return  the descriptor for the <code>concretesyntax</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Template,tcs.ConcreteSyntax> CONCRETESYNTAX( ) {
            return tcs.Template.DESCRIPTORS.CONCRETESYNTAX( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.FunctionTemplate,tcs.Sequence> __functionSequence;
        /**
         * Returns the descriptor for the <code>functionSequence</code> reference.
         * @return  the descriptor for the <code>functionSequence</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.FunctionTemplate,tcs.Sequence> FUNCTION_SEQUENCE( ) {
            if ( __functionSequence == null ) {
                __functionSequence = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.FunctionTemplate,tcs.Sequence>( "48400507B29FB2422E4E11DDC815001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "FunctionTemplate", "functionSequence" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __functionSequence;
        }
        /**
         * Returns the descriptor for the <code>hasSyntaxContributions</code> operation.
         * @return  the descriptor for the <code>hasSyntaxContributions</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,tcs.Template,java.lang.Boolean> HAS_SYNTAX_CONTRIBUTIONS( ) {
            return tcs.Template.DESCRIPTORS.HAS_SYNTAX_CONTRIBUTIONS( );
        }
        /**
         * Returns the descriptor for the <code>getCalledTemplates</code> operation.
         * @return  the descriptor for the <code>getCalledTemplates</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,tcs.Template,java.util.Collection<tcs.Template>> GET_CALLED_TEMPLATES( ) {
            return tcs.Template.DESCRIPTORS.GET_CALLED_TEMPLATES( );
        }
    }
}    