/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs;
/**
 * This interface is not intended to be implemented by clients.
 */
public interface ConcreteSyntaxSymbol extends com.sap.tc.moin.repository.mmi.reflect.RefAssociation
{
    // association extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.AssociationDescriptor<tcs.ConcreteSyntaxSymbol> ASSOCIATION_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.AssociationDescriptor<tcs.ConcreteSyntaxSymbol>("4840048B690B2DD02E4E11DD844E001742153E0C", "demo.sap.com/tcsmeta", "TCS", "ConcreteSyntax_Symbol"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 


    // association interface
    public boolean exists(tcs.ConcreteSyntax _Concretesyntax, tcs.Symbol _Symbol) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public tcs.ConcreteSyntax getConcretesyntax(tcs.Symbol _Symbol) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<tcs.Symbol> getSymbol(tcs.ConcreteSyntax _Concretesyntax) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean add(tcs.ConcreteSyntax _Concretesyntax, tcs.Symbol _Symbol) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean remove(tcs.ConcreteSyntax _Concretesyntax, tcs.Symbol _Symbol) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
}