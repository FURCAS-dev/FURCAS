/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface ContextTemplate extends tcs.Template {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.ContextTemplate> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.ContextTemplate>("E0677A9ADD5D15D0C7A511DEABFA00016CE99C52", "demo.sap.com/tcsmeta", "TCS", "ContextTemplate"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public boolean isContext() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setContext(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isReferenceOnly() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setReferenceOnly(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public tcs.ContextTags getContextTags() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setContextTags(tcs.ContextTags newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>location</code> attribute.
         * @return  the descriptor for the <code>location</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.lang.String> LOCATION( ) {
            return tcs.LocatedElement.DESCRIPTORS.LOCATION( );
        }
        /**
         * Returns the descriptor for the <code>commentsBefore</code> attribute.
         * @return  the descriptor for the <code>commentsBefore</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_BEFORE( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_BEFORE( );
        }
        /**
         * Returns the descriptor for the <code>commentsAfter</code> attribute.
         * @return  the descriptor for the <code>commentsAfter</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_AFTER( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_AFTER( );
        }
        /**
         * Returns the descriptor for the <code>names</code> attribute.
         * @return  the descriptor for the <code>names</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.QualifiedNamedElement,java.util.List<java.lang.String>> NAMES( ) {
            return tcs.QualifiedNamedElement.DESCRIPTORS.NAMES( );
        }
        /**
         * Returns the descriptor for the <code>disambiguate</code> attribute.
         * @return  the descriptor for the <code>disambiguate</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.Template,java.lang.String> DISAMBIGUATE( ) {
            return tcs.Template.DESCRIPTORS.DISAMBIGUATE( );
        }
        /**
         * Returns the descriptor for the <code>disambiguateV3</code> attribute.
         * @return  the descriptor for the <code>disambiguateV3</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.Template,java.lang.String> DISAMBIGUATE_V3( ) {
            return tcs.Template.DESCRIPTORS.DISAMBIGUATE_V3( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ContextTemplate,java.lang.Boolean> __isContext;
        /**
         * Returns the descriptor for the <code>isContext</code> attribute.
         * @return  the descriptor for the <code>isContext</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ContextTemplate,java.lang.Boolean> IS_CONTEXT( ) {
            if ( __isContext == null ) {
                __isContext = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ContextTemplate,java.lang.Boolean>( "E0677A9A50C1CBB0C7A611DEAAEF00016CE99C52", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ContextTemplate", "isContext" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isContext;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ContextTemplate,java.lang.Boolean> __isReferenceOnly;
        /**
         * Returns the descriptor for the <code>isReferenceOnly</code> attribute.
         * @return  the descriptor for the <code>isReferenceOnly</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ContextTemplate,java.lang.Boolean> IS_REFERENCE_ONLY( ) {
            if ( __isReferenceOnly == null ) {
                __isReferenceOnly = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ContextTemplate,java.lang.Boolean>( "E0677A9A6A35E8B0C7A611DEB0B900016CE99C52", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ContextTemplate", "isReferenceOnly" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isReferenceOnly;
        }
        /**
         * Returns the descriptor for the <code>metaReference</code> reference.
         * @return  the descriptor for the <code>metaReference</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.QualifiedNamedElement,com.sap.tc.moin.repository.mmi.model.Classifier> META_REFERENCE( ) {
            return tcs.QualifiedNamedElement.DESCRIPTORS.META_REFERENCE( );
        }
        /**
         * Returns the descriptor for the <code>concretesyntax</code> reference.
         * @return  the descriptor for the <code>concretesyntax</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Template,tcs.ConcreteSyntax> CONCRETESYNTAX( ) {
            return tcs.Template.DESCRIPTORS.CONCRETESYNTAX( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ContextTemplate,tcs.ContextTags> __contextTags;
        /**
         * Returns the descriptor for the <code>contextTags</code> reference.
         * @return  the descriptor for the <code>contextTags</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ContextTemplate,tcs.ContextTags> CONTEXT_TAGS( ) {
            if ( __contextTags == null ) {
                __contextTags = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ContextTemplate,tcs.ContextTags>( "E0677A9A1E867380C7A611DEC95B00016CE99C52", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ContextTemplate", "contextTags" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __contextTags;
        }
        /**
         * Returns the descriptor for the <code>hasSyntaxContributions</code> operation.
         * @return  the descriptor for the <code>hasSyntaxContributions</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,tcs.Template,java.lang.Boolean> HAS_SYNTAX_CONTRIBUTIONS( ) {
            return tcs.Template.DESCRIPTORS.HAS_SYNTAX_CONTRIBUTIONS( );
        }
        /**
         * Returns the descriptor for the <code>getCalledTemplates</code> operation.
         * @return  the descriptor for the <code>getCalledTemplates</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,tcs.Template,java.util.Collection<tcs.Template>> GET_CALLED_TEMPLATES( ) {
            return tcs.Template.DESCRIPTORS.GET_CALLED_TEMPLATES( );
        }
    }
}    