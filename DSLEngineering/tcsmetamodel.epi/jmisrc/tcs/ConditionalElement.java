/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface ConditionalElement extends tcs.SequenceElement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.ConditionalElement> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.ConditionalElement>("483FE093F86B49D72E3811DD916A001742153E0C", "demo.sap.com/tcsmeta", "TCS", "ConditionalElement"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // references
    public tcs.Sequence getElseSequence() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setElseSequence(tcs.Sequence newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public tcs.Sequence getThenSequence() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setThenSequence(tcs.Sequence newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public tcs.Expression getCondition() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setCondition(tcs.Expression newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>location</code> attribute.
         * @return  the descriptor for the <code>location</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.lang.String> LOCATION( ) {
            return tcs.LocatedElement.DESCRIPTORS.LOCATION( );
        }
        /**
         * Returns the descriptor for the <code>commentsBefore</code> attribute.
         * @return  the descriptor for the <code>commentsBefore</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_BEFORE( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_BEFORE( );
        }
        /**
         * Returns the descriptor for the <code>commentsAfter</code> attribute.
         * @return  the descriptor for the <code>commentsAfter</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_AFTER( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_AFTER( );
        }
        /**
         * Returns the descriptor for the <code>elementSequence</code> reference.
         * @return  the descriptor for the <code>elementSequence</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.SequenceElement,tcs.Sequence> ELEMENT_SEQUENCE( ) {
            return tcs.SequenceElement.DESCRIPTORS.ELEMENT_SEQUENCE( );
        }
        /**
         * Returns the descriptor for the <code>parentTemplate</code> reference.
         * @return  the descriptor for the <code>parentTemplate</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.SequenceElement,tcs.Template> PARENT_TEMPLATE( ) {
            return tcs.SequenceElement.DESCRIPTORS.PARENT_TEMPLATE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ConditionalElement,tcs.Sequence> __elseSequence;
        /**
         * Returns the descriptor for the <code>elseSequence</code> reference.
         * @return  the descriptor for the <code>elseSequence</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ConditionalElement,tcs.Sequence> ELSE_SEQUENCE( ) {
            if ( __elseSequence == null ) {
                __elseSequence = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ConditionalElement,tcs.Sequence>( "4843BB7A36237563308511DDBE5D001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ConditionalElement", "elseSequence" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __elseSequence;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ConditionalElement,tcs.Sequence> __thenSequence;
        /**
         * Returns the descriptor for the <code>thenSequence</code> reference.
         * @return  the descriptor for the <code>thenSequence</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ConditionalElement,tcs.Sequence> THEN_SEQUENCE( ) {
            if ( __thenSequence == null ) {
                __thenSequence = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ConditionalElement,tcs.Sequence>( "4843BC3FAB9FE7B3308511DD8993001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ConditionalElement", "thenSequence" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __thenSequence;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ConditionalElement,tcs.Expression> __condition;
        /**
         * Returns the descriptor for the <code>condition</code> reference.
         * @return  the descriptor for the <code>condition</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ConditionalElement,tcs.Expression> CONDITION( ) {
            if ( __condition == null ) {
                __condition = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ConditionalElement,tcs.Expression>( "4843C95D7CE2E733308D11DDC3AC001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ConditionalElement", "condition" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __condition;
        }
        /**
         * Returns the descriptor for the <code>hasSyntaxContributions</code> operation.
         * @return  the descriptor for the <code>hasSyntaxContributions</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,tcs.SequenceElement,java.lang.Boolean> HAS_SYNTAX_CONTRIBUTIONS( ) {
            return tcs.SequenceElement.DESCRIPTORS.HAS_SYNTAX_CONTRIBUTIONS( );
        }
    }
}    