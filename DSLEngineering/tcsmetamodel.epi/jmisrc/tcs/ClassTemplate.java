/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface ClassTemplate extends tcs.ContextTemplate {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.ClassTemplate> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.ClassTemplate>("483FE093F85CF1F02E3811DD822D001742153E0C", "demo.sap.com/tcsmeta", "TCS", "ClassTemplate"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public boolean isAbstract() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAbstract(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isDeep() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setDeep(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isOperatored() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setOperatored(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isMain() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setMain(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isMulti() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setMulti(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isAddToContext() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAddToContext(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isNonPrimary() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setNonPrimary(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.lang.String getMode() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setMode(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public tcs.Sequence getTemplateSequence() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setTemplateSequence(tcs.Sequence newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public tcs.Sequence getPrefixSequence() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setPrefixSequence(tcs.Sequence newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public tcs.OperatorList getOperatorList() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setOperatorList(tcs.OperatorList newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>location</code> attribute.
         * @return  the descriptor for the <code>location</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.lang.String> LOCATION( ) {
            return tcs.LocatedElement.DESCRIPTORS.LOCATION( );
        }
        /**
         * Returns the descriptor for the <code>commentsBefore</code> attribute.
         * @return  the descriptor for the <code>commentsBefore</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_BEFORE( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_BEFORE( );
        }
        /**
         * Returns the descriptor for the <code>commentsAfter</code> attribute.
         * @return  the descriptor for the <code>commentsAfter</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_AFTER( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_AFTER( );
        }
        /**
         * Returns the descriptor for the <code>names</code> attribute.
         * @return  the descriptor for the <code>names</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.QualifiedNamedElement,java.util.List<java.lang.String>> NAMES( ) {
            return tcs.QualifiedNamedElement.DESCRIPTORS.NAMES( );
        }
        /**
         * Returns the descriptor for the <code>disambiguate</code> attribute.
         * @return  the descriptor for the <code>disambiguate</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.Template,java.lang.String> DISAMBIGUATE( ) {
            return tcs.Template.DESCRIPTORS.DISAMBIGUATE( );
        }
        /**
         * Returns the descriptor for the <code>disambiguateV3</code> attribute.
         * @return  the descriptor for the <code>disambiguateV3</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.Template,java.lang.String> DISAMBIGUATE_V3( ) {
            return tcs.Template.DESCRIPTORS.DISAMBIGUATE_V3( );
        }
        /**
         * Returns the descriptor for the <code>isContext</code> attribute.
         * @return  the descriptor for the <code>isContext</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ContextTemplate,java.lang.Boolean> IS_CONTEXT( ) {
            return tcs.ContextTemplate.DESCRIPTORS.IS_CONTEXT( );
        }
        /**
         * Returns the descriptor for the <code>isReferenceOnly</code> attribute.
         * @return  the descriptor for the <code>isReferenceOnly</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ContextTemplate,java.lang.Boolean> IS_REFERENCE_ONLY( ) {
            return tcs.ContextTemplate.DESCRIPTORS.IS_REFERENCE_ONLY( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean> __isAbstract;
        /**
         * Returns the descriptor for the <code>isAbstract</code> attribute.
         * @return  the descriptor for the <code>isAbstract</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean> IS_ABSTRACT( ) {
            if ( __isAbstract == null ) {
                __isAbstract = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean>( "4840063F6D2C32502E4F11DDBCA6001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ClassTemplate", "isAbstract" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isAbstract;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean> __isDeep;
        /**
         * Returns the descriptor for the <code>isDeep</code> attribute.
         * @return  the descriptor for the <code>isDeep</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean> IS_DEEP( ) {
            if ( __isDeep == null ) {
                __isDeep = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean>( "4840064D74FF10B02E4F11DDB8ED001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ClassTemplate", "isDeep" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isDeep;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean> __isOperatored;
        /**
         * Returns the descriptor for the <code>isOperatored</code> attribute.
         * @return  the descriptor for the <code>isOperatored</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean> IS_OPERATORED( ) {
            if ( __isOperatored == null ) {
                __isOperatored = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean>( "484006567A65F8202E4F11DDA69F001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ClassTemplate", "isOperatored" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isOperatored;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean> __isMain;
        /**
         * Returns the descriptor for the <code>isMain</code> attribute.
         * @return  the descriptor for the <code>isMain</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean> IS_MAIN( ) {
            if ( __isMain == null ) {
                __isMain = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean>( "4840066C877E7A502E4F11DDBAE1001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ClassTemplate", "isMain" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isMain;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean> __isMulti;
        /**
         * Returns the descriptor for the <code>isMulti</code> attribute.
         * @return  the descriptor for the <code>isMulti</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean> IS_MULTI( ) {
            if ( __isMulti == null ) {
                __isMulti = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean>( "4840067A8FE052402E4F11DDA1EA001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ClassTemplate", "isMulti" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isMulti;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean> __isAddToContext;
        /**
         * Returns the descriptor for the <code>isAddToContext</code> attribute.
         * @return  the descriptor for the <code>isAddToContext</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean> IS_ADD_TO_CONTEXT( ) {
            if ( __isAddToContext == null ) {
                __isAddToContext = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean>( "484006A8ABA42BA02E4F11DDB4C1001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ClassTemplate", "isAddToContext" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isAddToContext;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean> __isNonPrimary;
        /**
         * Returns the descriptor for the <code>isNonPrimary</code> attribute.
         * @return  the descriptor for the <code>isNonPrimary</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean> IS_NON_PRIMARY( ) {
            if ( __isNonPrimary == null ) {
                __isNonPrimary = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.Boolean>( "484006B8B4B8FFE02E4F11DDBF1B001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ClassTemplate", "isNonPrimary" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isNonPrimary;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.String> __mode;
        /**
         * Returns the descriptor for the <code>mode</code> attribute.
         * @return  the descriptor for the <code>mode</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.String> MODE( ) {
            if ( __mode == null ) {
                __mode = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ClassTemplate,java.lang.String>( "484006C2BAD2BC902E4F11DDA62F001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ClassTemplate", "mode" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __mode;
        }
        /**
         * Returns the descriptor for the <code>metaReference</code> reference.
         * @return  the descriptor for the <code>metaReference</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.QualifiedNamedElement,com.sap.tc.moin.repository.mmi.model.Classifier> META_REFERENCE( ) {
            return tcs.QualifiedNamedElement.DESCRIPTORS.META_REFERENCE( );
        }
        /**
         * Returns the descriptor for the <code>concretesyntax</code> reference.
         * @return  the descriptor for the <code>concretesyntax</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Template,tcs.ConcreteSyntax> CONCRETESYNTAX( ) {
            return tcs.Template.DESCRIPTORS.CONCRETESYNTAX( );
        }
        /**
         * Returns the descriptor for the <code>contextTags</code> reference.
         * @return  the descriptor for the <code>contextTags</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ContextTemplate,tcs.ContextTags> CONTEXT_TAGS( ) {
            return tcs.ContextTemplate.DESCRIPTORS.CONTEXT_TAGS( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ClassTemplate,tcs.Sequence> __templateSequence;
        /**
         * Returns the descriptor for the <code>templateSequence</code> reference.
         * @return  the descriptor for the <code>templateSequence</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ClassTemplate,tcs.Sequence> TEMPLATE_SEQUENCE( ) {
            if ( __templateSequence == null ) {
                __templateSequence = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ClassTemplate,tcs.Sequence>( "484006E8D1A6DA532E4F11DD8EED001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ClassTemplate", "templateSequence" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __templateSequence;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ClassTemplate,tcs.Sequence> __prefixSequence;
        /**
         * Returns the descriptor for the <code>prefixSequence</code> reference.
         * @return  the descriptor for the <code>prefixSequence</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ClassTemplate,tcs.Sequence> PREFIX_SEQUENCE( ) {
            if ( __prefixSequence == null ) {
                __prefixSequence = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ClassTemplate,tcs.Sequence>( "4840070CE73447432E4F11DDB0F2001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ClassTemplate", "prefixSequence" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __prefixSequence;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ClassTemplate,tcs.OperatorList> __operatorList;
        /**
         * Returns the descriptor for the <code>operatorList</code> reference.
         * @return  the descriptor for the <code>operatorList</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ClassTemplate,tcs.OperatorList> OPERATOR_LIST( ) {
            if ( __operatorList == null ) {
                __operatorList = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ClassTemplate,tcs.OperatorList>( "48400738015B87A22E5011DDB943001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ClassTemplate", "operatorList" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __operatorList;
        }
        /**
         * Returns the descriptor for the <code>hasSyntaxContribution</code> operation.
         * @return  the descriptor for the <code>hasSyntaxContribution</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,tcs.Template,java.lang.Boolean> HAS_SYNTAX_CONTRIBUTION( ) {
            return tcs.Template.DESCRIPTORS.HAS_SYNTAX_CONTRIBUTION( );
        }
        /**
         * Returns the descriptor for the <code>getCalledTemplates</code> operation.
         * @return  the descriptor for the <code>getCalledTemplates</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,tcs.Template,java.util.Collection<tcs.Template>> GET_CALLED_TEMPLATES( ) {
            return tcs.Template.DESCRIPTORS.GET_CALLED_TEMPLATES( );
        }
    }
}    