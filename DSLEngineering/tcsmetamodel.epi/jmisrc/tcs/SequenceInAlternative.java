/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface SequenceInAlternative extends tcs.Sequence {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.SequenceInAlternative> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.SequenceInAlternative>("496F03BE10363160E2E811DD834C00016CE99C52", "demo.sap.com/tcsmeta", "TCS", "SequenceInAlternative"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public java.lang.String getDisambiguate() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setDisambiguate(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>location</code> attribute.
         * @return  the descriptor for the <code>location</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.lang.String> LOCATION( ) {
            return tcs.LocatedElement.DESCRIPTORS.LOCATION( );
        }
        /**
         * Returns the descriptor for the <code>commentsBefore</code> attribute.
         * @return  the descriptor for the <code>commentsBefore</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_BEFORE( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_BEFORE( );
        }
        /**
         * Returns the descriptor for the <code>commentsAfter</code> attribute.
         * @return  the descriptor for the <code>commentsAfter</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_AFTER( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_AFTER( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.SequenceInAlternative,java.lang.String> __disambiguate;
        /**
         * Returns the descriptor for the <code>disambiguate</code> attribute.
         * @return  the descriptor for the <code>disambiguate</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.SequenceInAlternative,java.lang.String> DISAMBIGUATE( ) {
            if ( __disambiguate == null ) {
                __disambiguate = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.SequenceInAlternative,java.lang.String>( "496F042D52B9C7E0E2E811DDA2A200016CE99C52", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "SequenceInAlternative", "disambiguate" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __disambiguate;
        }
        /**
         * Returns the descriptor for the <code>elements</code> reference.
         * @return  the descriptor for the <code>elements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Sequence,java.util.List<tcs.SequenceElement>> ELEMENTS( ) {
            return tcs.Sequence.DESCRIPTORS.ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>thencontainer</code> reference.
         * @return  the descriptor for the <code>thencontainer</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Sequence,tcs.ConditionalElement> THENCONTAINER( ) {
            return tcs.Sequence.DESCRIPTORS.THENCONTAINER( );
        }
        /**
         * Returns the descriptor for the <code>elsecontainer</code> reference.
         * @return  the descriptor for the <code>elsecontainer</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Sequence,tcs.ConditionalElement> ELSECONTAINER( ) {
            return tcs.Sequence.DESCRIPTORS.ELSECONTAINER( );
        }
        /**
         * Returns the descriptor for the <code>functioncontainer</code> reference.
         * @return  the descriptor for the <code>functioncontainer</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Sequence,tcs.FunctionTemplate> FUNCTIONCONTAINER( ) {
            return tcs.Sequence.DESCRIPTORS.FUNCTIONCONTAINER( );
        }
        /**
         * Returns the descriptor for the <code>separatorcontainer</code> reference.
         * @return  the descriptor for the <code>separatorcontainer</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Sequence,tcs.SeparatorParg> SEPARATORCONTAINER( ) {
            return tcs.Sequence.DESCRIPTORS.SEPARATORCONTAINER( );
        }
    }
}    