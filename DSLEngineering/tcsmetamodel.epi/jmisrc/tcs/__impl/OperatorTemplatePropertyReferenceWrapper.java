/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs.__impl;

public class OperatorTemplatePropertyReferenceWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<tcs.OperatorTemplatePropertyReference> implements tcs.OperatorTemplatePropertyReference,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The OperatorTemplatePropertyReference wrapper
     */
    public OperatorTemplatePropertyReferenceWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, tcs.__impl.OperatorTemplatePropertyReferenceImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private tcs.__impl.OperatorTemplatePropertyReferenceImpl getCastWrappedObject() {
        return (tcs.__impl.OperatorTemplatePropertyReferenceImpl) getWrappedObject();
    }

    public tcs.OperatorTemplatePropertyReference unwrap() {
        return (tcs.OperatorTemplatePropertyReference) getWrappedObject();
    }
    
    public boolean exists(tcs.OperatorTemplate _Operatortemplate, tcs.PropertyReference _StoreOperatorTo) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Operatortemplate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _StoreOperatorTo));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Operatortemplate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _StoreOperatorTo)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public tcs.OperatorTemplate getOperatortemplate(tcs.PropertyReference _StoreOperatorTo) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (tcs.OperatorTemplate) wrapResult(getCastWrappedObject().getOperatortemplate(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _StoreOperatorTo)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (tcs.OperatorTemplate) wrapResult(getCastWrappedObject().getOperatortemplate(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _StoreOperatorTo))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public tcs.PropertyReference getStoreOperatorTo(tcs.OperatorTemplate _Operatortemplate) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (tcs.PropertyReference) wrapResult(getCastWrappedObject().getStoreOperatorTo(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Operatortemplate)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (tcs.PropertyReference) wrapResult(getCastWrappedObject().getStoreOperatorTo(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Operatortemplate))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(tcs.OperatorTemplate _Operatortemplate, tcs.PropertyReference _StoreOperatorTo) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Operatortemplate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _StoreOperatorTo));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Operatortemplate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _StoreOperatorTo)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(tcs.OperatorTemplate _Operatortemplate, tcs.PropertyReference _StoreOperatorTo) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Operatortemplate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _StoreOperatorTo));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Operatortemplate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _StoreOperatorTo)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

<<<<<<< HEAD
=======
    @SuppressWarnings("unchecked")
>>>>>>> e04eb9c33a214a29f23acac04720aff53a6082b7
    public java.lang.Class<tcs.OperatorTemplatePropertyReference> get___JmiInterface() {
        return tcs.OperatorTemplatePropertyReference.class;
    }

    protected String metaObjectToString() {
        return "tcs.OperatorTemplatePropertyReference (Java Type)\nTCS.OperatorTemplate_PropertyReference (MOF Type)"; //$NON-NLS-1$
    }    
}