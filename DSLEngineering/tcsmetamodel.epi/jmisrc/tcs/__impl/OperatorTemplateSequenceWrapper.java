/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs.__impl;

public class OperatorTemplateSequenceWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<tcs.OperatorTemplateSequence> implements tcs.OperatorTemplateSequence,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The OperatorTemplateSequence wrapper
     */
    public OperatorTemplateSequenceWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, tcs.__impl.OperatorTemplateSequenceImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private tcs.__impl.OperatorTemplateSequenceImpl getCastWrappedObject() {
        return (tcs.__impl.OperatorTemplateSequenceImpl) getWrappedObject();
    }

    public tcs.OperatorTemplateSequence unwrap() {
        return (tcs.OperatorTemplateSequence) getWrappedObject();
    }
    
    public boolean exists(tcs.OperatorTemplate _OtContainer, tcs.Sequence _Sequence) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OtContainer), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Sequence));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OtContainer), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Sequence)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public tcs.OperatorTemplate getOtContainer(tcs.Sequence _Sequence) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (tcs.OperatorTemplate) wrapResult(getCastWrappedObject().getOtContainer(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Sequence)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (tcs.OperatorTemplate) wrapResult(getCastWrappedObject().getOtContainer(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Sequence))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public tcs.Sequence getSequence(tcs.OperatorTemplate _OtContainer) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (tcs.Sequence) wrapResult(getCastWrappedObject().getSequence(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OtContainer)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (tcs.Sequence) wrapResult(getCastWrappedObject().getSequence(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OtContainer))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(tcs.OperatorTemplate _OtContainer, tcs.Sequence _Sequence) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OtContainer), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Sequence));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OtContainer), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Sequence)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(tcs.OperatorTemplate _OtContainer, tcs.Sequence _Sequence) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OtContainer), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Sequence));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OtContainer), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Sequence)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

<<<<<<< HEAD
=======
    @SuppressWarnings("unchecked")
>>>>>>> e04eb9c33a214a29f23acac04720aff53a6082b7
    public java.lang.Class<tcs.OperatorTemplateSequence> get___JmiInterface() {
        return tcs.OperatorTemplateSequence.class;
    }

    protected String metaObjectToString() {
        return "tcs.OperatorTemplateSequence (Java Type)\nTCS.OperatorTemplate_Sequence (MOF Type)"; //$NON-NLS-1$
    }    
}