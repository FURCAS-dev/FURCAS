/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs.__impl;

public class ClassTemplateOperatorListWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<tcs.ClassTemplateOperatorList> implements tcs.ClassTemplateOperatorList,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ClassTemplateOperatorList wrapper
     */
    public ClassTemplateOperatorListWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, tcs.__impl.ClassTemplateOperatorListImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private tcs.__impl.ClassTemplateOperatorListImpl getCastWrappedObject() {
        return (tcs.__impl.ClassTemplateOperatorListImpl) getWrappedObject();
    }

    public tcs.ClassTemplateOperatorList unwrap() {
        return (tcs.ClassTemplateOperatorList) getWrappedObject();
    }
    
    public boolean exists(tcs.ClassTemplate _Classtemplate, tcs.OperatorList _Operatorlist) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Classtemplate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Operatorlist));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Classtemplate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Operatorlist)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public tcs.ClassTemplate getClasstemplate(tcs.OperatorList _Operatorlist) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (tcs.ClassTemplate) wrapResult(getCastWrappedObject().getClasstemplate(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Operatorlist)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (tcs.ClassTemplate) wrapResult(getCastWrappedObject().getClasstemplate(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Operatorlist))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public tcs.OperatorList getOperatorlist(tcs.ClassTemplate _Classtemplate) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (tcs.OperatorList) wrapResult(getCastWrappedObject().getOperatorlist(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Classtemplate)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (tcs.OperatorList) wrapResult(getCastWrappedObject().getOperatorlist(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Classtemplate))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(tcs.ClassTemplate _Classtemplate, tcs.OperatorList _Operatorlist) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Classtemplate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Operatorlist));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Classtemplate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Operatorlist)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(tcs.ClassTemplate _Classtemplate, tcs.OperatorList _Operatorlist) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Classtemplate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Operatorlist));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Classtemplate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Operatorlist)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

<<<<<<< HEAD
=======
    @SuppressWarnings("unchecked")
>>>>>>> e04eb9c33a214a29f23acac04720aff53a6082b7
    public java.lang.Class<tcs.ClassTemplateOperatorList> get___JmiInterface() {
        return tcs.ClassTemplateOperatorList.class;
    }

    protected String metaObjectToString() {
        return "tcs.ClassTemplateOperatorList (Java Type)\nTCS.ClassTemplate_OperatorList (MOF Type)"; //$NON-NLS-1$
    }    
}