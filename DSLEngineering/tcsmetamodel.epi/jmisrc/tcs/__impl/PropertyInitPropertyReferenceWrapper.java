/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs.__impl;

public class PropertyInitPropertyReferenceWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<tcs.PropertyInitPropertyReference> implements tcs.PropertyInitPropertyReference,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The PropertyInitPropertyReference wrapper
     */
    public PropertyInitPropertyReferenceWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, tcs.__impl.PropertyInitPropertyReferenceImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private tcs.__impl.PropertyInitPropertyReferenceImpl getCastWrappedObject() {
        return (tcs.__impl.PropertyInitPropertyReferenceImpl) getWrappedObject();
    }

    public tcs.PropertyInitPropertyReference unwrap() {
        return (tcs.PropertyInitPropertyReference) getWrappedObject();
    }
    
    public boolean exists(tcs.PropertyInit _Propertyinit, tcs.PropertyReference _PropertyReference) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Propertyinit), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PropertyReference));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Propertyinit), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PropertyReference)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public tcs.PropertyInit getPropertyinit(tcs.PropertyReference _PropertyReference) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (tcs.PropertyInit) wrapResult(getCastWrappedObject().getPropertyinit(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PropertyReference)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (tcs.PropertyInit) wrapResult(getCastWrappedObject().getPropertyinit(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PropertyReference))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public tcs.PropertyReference getPropertyReference(tcs.PropertyInit _Propertyinit) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (tcs.PropertyReference) wrapResult(getCastWrappedObject().getPropertyReference(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Propertyinit)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (tcs.PropertyReference) wrapResult(getCastWrappedObject().getPropertyReference(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Propertyinit))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(tcs.PropertyInit _Propertyinit, tcs.PropertyReference _PropertyReference) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Propertyinit), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PropertyReference));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Propertyinit), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PropertyReference)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(tcs.PropertyInit _Propertyinit, tcs.PropertyReference _PropertyReference) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Propertyinit), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PropertyReference));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Propertyinit), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PropertyReference)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<tcs.PropertyInitPropertyReference> get___JmiInterface() {
        return tcs.PropertyInitPropertyReference.class;
    }

    protected String metaObjectToString() {
        return "tcs.PropertyInitPropertyReference (Java Type)\nTCS.PropertyInit_PropertyReference (MOF Type)"; //$NON-NLS-1$
    }    
}