/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs.__impl;

public class PropertyStrucFeatureWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<tcs.PropertyStrucFeature> implements tcs.PropertyStrucFeature,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The PropertyStrucFeature wrapper
     */
    public PropertyStrucFeatureWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, tcs.__impl.PropertyStrucFeatureImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private tcs.__impl.PropertyStrucFeatureImpl getCastWrappedObject() {
        return (tcs.__impl.PropertyStrucFeatureImpl) getWrappedObject();
    }

    public tcs.PropertyStrucFeature unwrap() {
        return (tcs.PropertyStrucFeature) getWrappedObject();
    }
    
    public boolean exists(tcs.PropertyReference _Property, com.sap.tc.moin.repository.mmi.model.TypedElement _Strucfeature) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Strucfeature));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Strucfeature)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getProperty(com.sap.tc.moin.repository.mmi.model.TypedElement _Strucfeature) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getProperty(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Strucfeature)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getProperty(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Strucfeature))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.model.TypedElement getStrucfeature(tcs.PropertyReference _Property) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.model.TypedElement) wrapResult(getCastWrappedObject().getStrucfeature(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.model.TypedElement) wrapResult(getCastWrappedObject().getStrucfeature(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(tcs.PropertyReference _Property, com.sap.tc.moin.repository.mmi.model.TypedElement _Strucfeature) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Strucfeature));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Strucfeature)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(tcs.PropertyReference _Property, com.sap.tc.moin.repository.mmi.model.TypedElement _Strucfeature) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Strucfeature));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Strucfeature)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<tcs.PropertyStrucFeature> get___JmiInterface() {
        return tcs.PropertyStrucFeature.class;
    }

    protected String metaObjectToString() {
        return "tcs.PropertyStrucFeature (Java Type)\nTCS.Property_StrucFeature (MOF Type)"; //$NON-NLS-1$
    }    
}