/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs.__impl;

public class QualifiedNamedElementModelElementWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<tcs.QualifiedNamedElementModelElement> implements tcs.QualifiedNamedElementModelElement,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The QualifiedNamedElementModelElement wrapper
     */
    public QualifiedNamedElementModelElementWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, tcs.__impl.QualifiedNamedElementModelElementImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private tcs.__impl.QualifiedNamedElementModelElementImpl getCastWrappedObject() {
        return (tcs.__impl.QualifiedNamedElementModelElementImpl) getWrappedObject();
    }

    public tcs.QualifiedNamedElementModelElement unwrap() {
        return (tcs.QualifiedNamedElementModelElement) getWrappedObject();
    }
    
    public boolean exists(tcs.QualifiedNamedElement _Qualifiednamedelement, com.sap.tc.moin.repository.mmi.model.Classifier _MetaReference) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Qualifiednamedelement), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _MetaReference));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Qualifiednamedelement), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _MetaReference)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getQualifiednamedelement(com.sap.tc.moin.repository.mmi.model.Classifier _MetaReference) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getQualifiednamedelement(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _MetaReference)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getQualifiednamedelement(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _MetaReference))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.model.Classifier getMetaReference(tcs.QualifiedNamedElement _Qualifiednamedelement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.model.Classifier) wrapResult(getCastWrappedObject().getMetaReference(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Qualifiednamedelement)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.model.Classifier) wrapResult(getCastWrappedObject().getMetaReference(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Qualifiednamedelement))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(tcs.QualifiedNamedElement _Qualifiednamedelement, com.sap.tc.moin.repository.mmi.model.Classifier _MetaReference) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Qualifiednamedelement), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _MetaReference));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Qualifiednamedelement), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _MetaReference)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(tcs.QualifiedNamedElement _Qualifiednamedelement, com.sap.tc.moin.repository.mmi.model.Classifier _MetaReference) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Qualifiednamedelement), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _MetaReference));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Qualifiednamedelement), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _MetaReference)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<tcs.QualifiedNamedElementModelElement> get___JmiInterface() {
        return tcs.QualifiedNamedElementModelElement.class;
    }

    protected String metaObjectToString() {
        return "tcs.QualifiedNamedElementModelElement (Java Type)\nTCS.QualifiedNamedElement_ModelElement (MOF Type)"; //$NON-NLS-1$
    }    
}