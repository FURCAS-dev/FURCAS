/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs.__impl;

public class SequenceElementTemplateWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<tcs.SequenceElementTemplate> implements tcs.SequenceElementTemplate,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The SequenceElementTemplate wrapper
     */
    public SequenceElementTemplateWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, tcs.__impl.SequenceElementTemplateImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private tcs.__impl.SequenceElementTemplateImpl getCastWrappedObject() {
        return (tcs.__impl.SequenceElementTemplateImpl) getWrappedObject();
    }

    public tcs.SequenceElementTemplate unwrap() {
        return (tcs.SequenceElementTemplate) getWrappedObject();
    }
    
    public boolean exists(tcs.SequenceElement _Sequenceelement, tcs.Template _ParentTemplate) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Sequenceelement), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParentTemplate));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Sequenceelement), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParentTemplate)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getSequenceelement(tcs.Template _ParentTemplate) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getSequenceelement(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParentTemplate)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getSequenceelement(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParentTemplate))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public tcs.Template getParentTemplate(tcs.SequenceElement _Sequenceelement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (tcs.Template) wrapResult(getCastWrappedObject().getParentTemplate(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Sequenceelement)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (tcs.Template) wrapResult(getCastWrappedObject().getParentTemplate(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Sequenceelement))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(tcs.SequenceElement _Sequenceelement, tcs.Template _ParentTemplate) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Sequenceelement), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParentTemplate));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Sequenceelement), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParentTemplate)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(tcs.SequenceElement _Sequenceelement, tcs.Template _ParentTemplate) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Sequenceelement), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParentTemplate));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Sequenceelement), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParentTemplate)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<tcs.SequenceElementTemplate> get___JmiInterface() {
        return tcs.SequenceElementTemplate.class;
    }

    protected String metaObjectToString() {
        return "tcs.SequenceElementTemplate (Java Type)\nTCS.SequenceElement_Template (MOF Type)"; //$NON-NLS-1$
    }    
}