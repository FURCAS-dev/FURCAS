/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs.__impl;

public class EnumLiteralMappingLiteralRefWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<tcs.EnumLiteralMappingLiteralRef> implements tcs.EnumLiteralMappingLiteralRef,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The EnumLiteralMappingLiteralRef wrapper
     */
    public EnumLiteralMappingLiteralRefWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, tcs.__impl.EnumLiteralMappingLiteralRefImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private tcs.__impl.EnumLiteralMappingLiteralRefImpl getCastWrappedObject() {
        return (tcs.__impl.EnumLiteralMappingLiteralRefImpl) getWrappedObject();
    }

    public tcs.EnumLiteralMappingLiteralRef unwrap() {
        return (tcs.EnumLiteralMappingLiteralRef) getWrappedObject();
    }
    
    public boolean exists(tcs.EnumLiteralMapping _Enumliteralmapping, tcs.LiteralRef _Element) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralmapping), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Element));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralmapping), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Element)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public tcs.EnumLiteralMapping getEnumliteralmapping(tcs.LiteralRef _Element) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (tcs.EnumLiteralMapping) wrapResult(getCastWrappedObject().getEnumliteralmapping(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Element)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (tcs.EnumLiteralMapping) wrapResult(getCastWrappedObject().getEnumliteralmapping(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Element))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public tcs.LiteralRef getElement(tcs.EnumLiteralMapping _Enumliteralmapping) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (tcs.LiteralRef) wrapResult(getCastWrappedObject().getElement(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralmapping)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (tcs.LiteralRef) wrapResult(getCastWrappedObject().getElement(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralmapping))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(tcs.EnumLiteralMapping _Enumliteralmapping, tcs.LiteralRef _Element) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralmapping), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Element));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralmapping), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Element)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(tcs.EnumLiteralMapping _Enumliteralmapping, tcs.LiteralRef _Element) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralmapping), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Element));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralmapping), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Element)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<tcs.EnumLiteralMappingLiteralRef> get___JmiInterface() {
        return tcs.EnumLiteralMappingLiteralRef.class;
    }

    protected String metaObjectToString() {
        return "tcs.EnumLiteralMappingLiteralRef (Java Type)\nTCS.EnumLiteralMapping_LiteralRef (MOF Type)"; //$NON-NLS-1$
    }    
}