/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs.__impl;

public class ContextTagsWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefObjectWrapperImpl<tcs.__impl.ContextTagsImpl> implements tcs.ContextTags,com.sap.tc.moin.repository.Partitionable {

<<<<<<< HEAD
    
=======

>>>>>>> e04eb9c33a214a29f23acac04720aff53a6082b7
    static {
    }

    public ContextTagsWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, tcs.__impl.ContextTagsImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

<<<<<<< HEAD
=======
    @SuppressWarnings("unused")
>>>>>>> e04eb9c33a214a29f23acac04720aff53a6082b7
    private tcs.__impl.ContextTagsImpl getCastWrappedObject() {
        return (tcs.__impl.ContextTagsImpl) getWrappedObject();
    }
    
    private tcs.__impl.ContextTagsImpl getCastWrappedObject(com.sap.tc.moin.repository.core.CorePartitionable resolved) {
        return (tcs.__impl.ContextTagsImpl) resolved;
    }
    
    public tcs.__impl.ContextTagsImpl unwrap() {
        return (tcs.__impl.ContextTagsImpl) getWrappedObject();
    }
        
    // methods for attributes
    public java.util.Collection<java.lang.String> getTags() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection<java.lang.String>) wrapResult(getCastWrappedObject().getTags(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection<java.lang.String>) wrapResult(getCastWrappedObject().getTags(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }



     
    // methods for references
   
    // methods for modeled operations
    
    // methods for internal modeled operations

    // reflective methods
    

    // get the JMI interface
<<<<<<< HEAD
=======
    @SuppressWarnings("unchecked")
>>>>>>> e04eb9c33a214a29f23acac04720aff53a6082b7
    public java.lang.Class<tcs.ContextTags> get___JmiInterface() {
        return tcs.ContextTags.class;
    }

    // to String
    protected String metaObjectToString() {
        return "tcs.ContextTags (Java Type)\nTCS.ContextTags (MOF Type)"; //$NON-NLS-1$
    }    
}