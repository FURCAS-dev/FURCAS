/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs.__impl;

public class PropertyPropertyArgWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<tcs.PropertyPropertyArg> implements tcs.PropertyPropertyArg,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The PropertyPropertyArg wrapper
     */
    public PropertyPropertyArgWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, tcs.__impl.PropertyPropertyArgImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private tcs.__impl.PropertyPropertyArgImpl getCastWrappedObject() {
        return (tcs.__impl.PropertyPropertyArgImpl) getWrappedObject();
    }

    public tcs.PropertyPropertyArg unwrap() {
        return (tcs.PropertyPropertyArg) getWrappedObject();
    }
    
    public boolean exists(tcs.Property _Property, tcs.PropertyArg _Propertyarg) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Propertyarg));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Propertyarg)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public tcs.Property getProperty(tcs.PropertyArg _Propertyarg) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (tcs.Property) wrapResult(getCastWrappedObject().getProperty(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Propertyarg)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (tcs.Property) wrapResult(getCastWrappedObject().getProperty(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Propertyarg))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.List getPropertyarg(tcs.Property _Property) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.List) wrapResult(getCastWrappedObject().getPropertyarg(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.List) wrapResult(getCastWrappedObject().getPropertyarg(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(tcs.Property _Property, tcs.PropertyArg _Propertyarg) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Propertyarg));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Propertyarg)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(tcs.Property _Property, tcs.PropertyArg _Propertyarg) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Propertyarg));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Propertyarg)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

<<<<<<< HEAD
=======
    @SuppressWarnings("unchecked")
>>>>>>> e04eb9c33a214a29f23acac04720aff53a6082b7
    public java.lang.Class<tcs.PropertyPropertyArg> get___JmiInterface() {
        return tcs.PropertyPropertyArg.class;
    }

    protected String metaObjectToString() {
        return "tcs.PropertyPropertyArg (Java Type)\nTCS.Property_PropertyArg (MOF Type)"; //$NON-NLS-1$
    }    
}