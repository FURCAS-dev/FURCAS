/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs.__impl;

public class EnumLiteralMappingEnumLiteralValWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<tcs.EnumLiteralMappingEnumLiteralVal> implements tcs.EnumLiteralMappingEnumLiteralVal,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The EnumLiteralMappingEnumLiteralVal wrapper
     */
    public EnumLiteralMappingEnumLiteralValWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, tcs.__impl.EnumLiteralMappingEnumLiteralValImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private tcs.__impl.EnumLiteralMappingEnumLiteralValImpl getCastWrappedObject() {
        return (tcs.__impl.EnumLiteralMappingEnumLiteralValImpl) getWrappedObject();
    }

    public tcs.EnumLiteralMappingEnumLiteralVal unwrap() {
        return (tcs.EnumLiteralMappingEnumLiteralVal) getWrappedObject();
    }
    
    public boolean exists(tcs.EnumLiteralMapping _Enumliteralmapping, tcs.EnumLiteralVal _Enumliteralval) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralmapping), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralval));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralmapping), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralval)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public tcs.EnumLiteralMapping getEnumliteralmapping(tcs.EnumLiteralVal _Enumliteralval) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (tcs.EnumLiteralMapping) wrapResult(getCastWrappedObject().getEnumliteralmapping(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralval)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (tcs.EnumLiteralMapping) wrapResult(getCastWrappedObject().getEnumliteralmapping(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralval))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public tcs.EnumLiteralVal getEnumliteralval(tcs.EnumLiteralMapping _Enumliteralmapping) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (tcs.EnumLiteralVal) wrapResult(getCastWrappedObject().getEnumliteralval(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralmapping)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (tcs.EnumLiteralVal) wrapResult(getCastWrappedObject().getEnumliteralval(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralmapping))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(tcs.EnumLiteralMapping _Enumliteralmapping, tcs.EnumLiteralVal _Enumliteralval) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralmapping), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralval));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralmapping), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralval)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(tcs.EnumLiteralMapping _Enumliteralmapping, tcs.EnumLiteralVal _Enumliteralval) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralmapping), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralval));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralmapping), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Enumliteralval)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<tcs.EnumLiteralMappingEnumLiteralVal> get___JmiInterface() {
        return tcs.EnumLiteralMappingEnumLiteralVal.class;
    }

    protected String metaObjectToString() {
        return "tcs.EnumLiteralMappingEnumLiteralVal (Java Type)\nTCS.EnumLiteralMapping_EnumLiteralVal (MOF Type)"; //$NON-NLS-1$
    }    
}