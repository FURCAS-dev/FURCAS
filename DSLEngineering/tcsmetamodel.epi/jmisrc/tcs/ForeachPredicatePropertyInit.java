/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface ForeachPredicatePropertyInit extends tcs.PropertyInit {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.ForeachPredicatePropertyInit> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.ForeachPredicatePropertyInit>("E02C978B7DC0D9706AE111DEAF43001CBF7437BB", "demo.sap.com/tcsmeta", "TCS", "ForeachPredicatePropertyInit"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public java.lang.String getMode() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setMode(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public java.util.Collection<tcs.PredicateSemantic> getPredicatesemantic() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>value</code> attribute.
         * @return  the descriptor for the <code>value</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.PropertyInit,java.lang.String> VALUE( ) {
            return tcs.PropertyInit.DESCRIPTORS.VALUE( );
        }
        /**
         * Returns the descriptor for the <code>isDefault</code> attribute.
         * @return  the descriptor for the <code>isDefault</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.PropertyInit,java.lang.Boolean> IS_DEFAULT( ) {
            return tcs.PropertyInit.DESCRIPTORS.IS_DEFAULT( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ForeachPredicatePropertyInit,java.lang.String> __mode;
        /**
         * Returns the descriptor for the <code>mode</code> attribute.
         * @return  the descriptor for the <code>mode</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ForeachPredicatePropertyInit,java.lang.String> MODE( ) {
            if ( __mode == null ) {
                __mode = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.ForeachPredicatePropertyInit,java.lang.String>( "E02C978B8B33B0A06AE111DEBA1A001CBF7437BB", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ForeachPredicatePropertyInit", "mode" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __mode;
        }
        /**
         * Returns the descriptor for the <code>injectorActionsBlockReference</code> reference.
         * @return  the descriptor for the <code>injectorActionsBlockReference</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.InjectorAction,tcs.InjectorActionsBlock> INJECTOR_ACTIONS_BLOCK_REFERENCE( ) {
            return tcs.InjectorAction.DESCRIPTORS.INJECTOR_ACTIONS_BLOCK_REFERENCE( );
        }
        /**
         * Returns the descriptor for the <code>propertyReference</code> reference.
         * @return  the descriptor for the <code>propertyReference</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.PropertyInit,tcs.PropertyReference> PROPERTY_REFERENCE( ) {
            return tcs.PropertyInit.DESCRIPTORS.PROPERTY_REFERENCE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ForeachPredicatePropertyInit,java.util.Collection<tcs.PredicateSemantic>> __predicatesemantic;
        /**
         * Returns the descriptor for the <code>predicatesemantic</code> reference.
         * @return  the descriptor for the <code>predicatesemantic</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ForeachPredicatePropertyInit,java.util.Collection<tcs.PredicateSemantic>> PREDICATESEMANTIC( ) {
            if ( __predicatesemantic == null ) {
                __predicatesemantic = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.ForeachPredicatePropertyInit,java.util.Collection<tcs.PredicateSemantic>>( "E046953010CDFBD088B011DE9B7C001CBF7437BB", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "ForeachPredicatePropertyInit", "predicatesemantic" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __predicatesemantic;
        }
    }
}    