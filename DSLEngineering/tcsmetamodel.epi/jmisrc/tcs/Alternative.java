/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface Alternative extends tcs.SequenceElement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.Alternative> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.Alternative>("483FE093F86D93C02E3811DDBFBA001742153E0C", "demo.sap.com/tcsmeta", "TCS", "Alternative"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public boolean isMulti() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setMulti(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public java.util.Collection<tcs.SequenceInAlternative> getSequences() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>location</code> attribute.
         * @return  the descriptor for the <code>location</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.lang.String> LOCATION( ) {
            return tcs.LocatedElement.DESCRIPTORS.LOCATION( );
        }
        /**
         * Returns the descriptor for the <code>commentsBefore</code> attribute.
         * @return  the descriptor for the <code>commentsBefore</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_BEFORE( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_BEFORE( );
        }
        /**
         * Returns the descriptor for the <code>commentsAfter</code> attribute.
         * @return  the descriptor for the <code>commentsAfter</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_AFTER( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_AFTER( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.Alternative,java.lang.Boolean> __isMulti;
        /**
         * Returns the descriptor for the <code>isMulti</code> attribute.
         * @return  the descriptor for the <code>isMulti</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.Alternative,java.lang.Boolean> IS_MULTI( ) {
            if ( __isMulti == null ) {
                __isMulti = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.Alternative,java.lang.Boolean>( "4864C8654F7C81C0443811DDA3B1001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "Alternative", "isMulti" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isMulti;
        }
        /**
         * Returns the descriptor for the <code>elementSequence</code> reference.
         * @return  the descriptor for the <code>elementSequence</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.SequenceElement,tcs.Sequence> ELEMENT_SEQUENCE( ) {
            return tcs.SequenceElement.DESCRIPTORS.ELEMENT_SEQUENCE( );
        }
        /**
         * Returns the descriptor for the <code>parentTemplate</code> reference.
         * @return  the descriptor for the <code>parentTemplate</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.SequenceElement,tcs.Template> PARENT_TEMPLATE( ) {
            return tcs.SequenceElement.DESCRIPTORS.PARENT_TEMPLATE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Alternative,java.util.Collection<tcs.SequenceInAlternative>> __sequences;
        /**
         * Returns the descriptor for the <code>sequences</code> reference.
         * @return  the descriptor for the <code>sequences</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Alternative,java.util.Collection<tcs.SequenceInAlternative>> SEQUENCES( ) {
            if ( __sequences == null ) {
                __sequences = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.Alternative,java.util.Collection<tcs.SequenceInAlternative>>( "496F6B77E31E1EC0E32511DD9AFC00016CE99C52", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "Alternative", "sequences" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __sequences;
        }
        /**
         * Returns the descriptor for the <code>hasSyntaxContributions</code> operation.
         * @return  the descriptor for the <code>hasSyntaxContributions</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,tcs.SequenceElement,java.lang.Boolean> HAS_SYNTAX_CONTRIBUTIONS( ) {
            return tcs.SequenceElement.DESCRIPTORS.HAS_SYNTAX_CONTRIBUTIONS( );
        }
    }
}    