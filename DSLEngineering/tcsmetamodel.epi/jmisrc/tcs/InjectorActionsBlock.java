/**
 * Generated by the MOIN Generator Version 3.0
 **/

package tcs;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface InjectorActionsBlock extends tcs.SequenceElement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.InjectorActionsBlock> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, tcs.InjectorActionsBlock>("4912CB052AE90D40ABF011DDCDF8001742153E0C", "demo.sap.com/tcsmeta", "TCS", "InjectorActionsBlock"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // references
    public java.util.Collection<tcs.InjectorAction> getInjectorActions() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>location</code> attribute.
         * @return  the descriptor for the <code>location</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.lang.String> LOCATION( ) {
            return tcs.LocatedElement.DESCRIPTORS.LOCATION( );
        }
        /**
         * Returns the descriptor for the <code>commentsBefore</code> attribute.
         * @return  the descriptor for the <code>commentsBefore</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_BEFORE( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_BEFORE( );
        }
        /**
         * Returns the descriptor for the <code>commentsAfter</code> attribute.
         * @return  the descriptor for the <code>commentsAfter</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,tcs.LocatedElement,java.util.List<java.lang.String>> COMMENTS_AFTER( ) {
            return tcs.LocatedElement.DESCRIPTORS.COMMENTS_AFTER( );
        }
        /**
         * Returns the descriptor for the <code>elementSequence</code> reference.
         * @return  the descriptor for the <code>elementSequence</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.SequenceElement,tcs.Sequence> ELEMENT_SEQUENCE( ) {
            return tcs.SequenceElement.DESCRIPTORS.ELEMENT_SEQUENCE( );
        }
        /**
         * Returns the descriptor for the <code>parentTemplate</code> reference.
         * @return  the descriptor for the <code>parentTemplate</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.SequenceElement,tcs.Template> PARENT_TEMPLATE( ) {
            return tcs.SequenceElement.DESCRIPTORS.PARENT_TEMPLATE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.InjectorActionsBlock,java.util.Collection<tcs.InjectorAction>> __injectorActions;
        /**
         * Returns the descriptor for the <code>injectorActions</code> reference.
         * @return  the descriptor for the <code>injectorActions</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.InjectorActionsBlock,java.util.Collection<tcs.InjectorAction>> INJECTOR_ACTIONS( ) {
            if ( __injectorActions == null ) {
                __injectorActions = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,tcs.InjectorActionsBlock,java.util.Collection<tcs.InjectorAction>>( "4912CB2C4252DB50ABF011DD8BC9001742153E0C", "demo.sap.com/tcsmeta", new java.lang.String[] { "TCS", "InjectorActionsBlock", "injectorActions" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __injectorActions;
        }
        /**
         * Returns the descriptor for the <code>hasSyntaxContributions</code> operation.
         * @return  the descriptor for the <code>hasSyntaxContributions</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,tcs.SequenceElement,java.lang.Boolean> HAS_SYNTAX_CONTRIBUTIONS( ) {
            return tcs.SequenceElement.DESCRIPTORS.HAS_SYNTAX_CONTRIBUTIONS( );
        }
    }
}    