<?xml version="1.0" encoding="ISO-8859-1"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:TCS="TCS">
  <TCS:ConcreteSyntax location="1:1-209:2" name="Bibtext" lexer="&#xD;&#xA;%options testLiterals = false;&#xD;&#xA;&#xD;&#xA;NL&#xD;&#xA;&#x9;:&#x9;(&#x9;'\r' '\n'&#xD;&#xA;&#x9;&#x9;|&#x9;'\n' '\r'&#x9;//Improbable&#xD;&#xA;&#x9;&#x9;|&#x9;'\r'&#xD;&#xA;&#x9;&#x9;|&#x9;'\n'&#xD;&#xA;&#x9;&#x9;)&#xD;&#xA;&#x9;{newline();}&#xD;&#xA;&#x9;;&#xD;&#xA;&#xD;&#xA;WS&#xD;&#xA;&#x9;:&#x9;(&#x9;' '&#xD;&#xA;&#x9;&#x9;|&#x9;'\t'&#xD;&#xA;&#x9;&#x9;)&#xD;&#xA;&#x9;;&#xD;&#xA;&#xD;&#xA;%protected&#xD;&#xA;DIGIT&#xD;&#xA;&#x9;:&#x9;'0'..'9'&#xD;&#xA;&#x9;;&#xD;&#xA;&#xD;&#xA;%protected&#xD;&#xA;ALPHA&#xD;&#xA;&#x9;:&#x9;'a'..'z'&#xD;&#xA;&#x9;|&#x9;'A'..'Z'&#xD;&#xA;&#x9;|&#x9;'_'&#xD;&#xA;&#x9;//For Unicode compatibility (from 0000 to 00ff)&#xD;&#xA;&#x9;|&#x9;'\u00C0' .. '\u00D6'&#xD;&#xA;&#x9;|&#x9;'\u00D8' .. '\u00F6'&#xD;&#xA;&#x9;|&#x9;'\u00F8' .. '\u00FF'&#xD;&#xA;&#x9;;&#xD;&#xA;&#xD;&#xA;%protected&#xD;&#xA;SNAME&#xD;&#xA;%v2&#x9;options {&#xD;&#xA;%v2&#x9;&#x9;testLiterals = true;&#xD;&#xA;%v2&#x9;}&#xD;&#xA;&#x9;:&#x9;(ALPHA) (ALPHA | DIGIT)*&#xD;&#xA;;&#xD;&#xA;&#xD;&#xA;NAME&#xD;&#xA;&#x9;:&#x9;(&#xD;&#xA;%v3&#x9;&#x9;&#x9;SNAME&#xD;&#xA;%v2&#x9;&#x9;&#x9;s:SNAME {if(s.getType() != SNAME) $setType(s.getType());}&#xD;&#xA;&#x9;&#x9;|&#x9;'&quot;'!&#xD;&#xA;&#x9;&#x9;&#x9;(&#x9;ESC&#xD;&#xA;&#x9;&#x9;&#x9;|&#x9;'\n' {newline();}&#xD;&#xA;&#x9;&#x9;&#x9;|&#x9;~('\\'|'\&quot;'|'\n')&#xD;&#xA;&#x9;&#x9;&#x9;)*&#xD;&#xA;&#x9;&#x9;&#x9;'&quot;'!&#xD;&#xA;%v3&#x9;&#x9;&#x9;{setText(ei.unescapeString(getText(), 1));}&#xD;&#xA;&#x9;&#x9;)&#xD;&#xA;&#x9;;&#xD;&#xA;&#xD;&#xA;%protected&#xD;&#xA;ESC&#xD;&#xA;&#x9;:&#x9;'\\'!&#xD;&#xA;&#x9;&#x9;(&#x9;'n' %v2{%setText(&quot;\n&quot;);}&#xD;&#xA;&#x9;&#x9;|&#x9;'r' %v2{%setText(&quot;\r&quot;);}&#xD;&#xA;&#x9;&#x9;|&#x9;'t' %v2{%setText(&quot;\t&quot;);}&#xD;&#xA;&#x9;&#x9;|&#x9;'b' %v2{%setText(&quot;\b&quot;);}&#xD;&#xA;&#x9;&#x9;|&#x9;'f' %v2{%setText(&quot;\f&quot;);}&#xD;&#xA;&#x9;&#x9;|&#x9;'&quot;' %v2{%setText(&quot;\&quot;&quot;);}&#xD;&#xA;&#x9;&#x9;|&#x9;'\'' %v2{%setText(&quot;\'&quot;);}&#xD;&#xA;&#x9;&#x9;|&#x9;'\\' %v2{%setText(&quot;\\&quot;);}&#xD;&#xA;&#x9;&#x9;|&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;('0'..'3')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;(&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;options {&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;warnWhenFollowAmbig = false;&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;:&#x9;('0'..'7')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;options {&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;warnWhenFollowAmbig = false;&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;:&#x9;'0'..'7'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)?&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;)?&#xD;&#xA;&#x9;&#x9;&#x9;|&#x9;('4'..'7')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;(&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;options {&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;warnWhenFollowAmbig = false;&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;:&#x9;('0'..'7')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;)?&#xD;&#xA;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;String s = %getText;&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;int i;&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;int ret = 0;&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;String ans;&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;for (i=0; i&lt;s.length(); ++i)&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ret = ret*8 + s.charAt(i) - '0';&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;ans = String.valueOf((char) ret);&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;%setText(ans);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;)&#xD;&#xA;&#x9;;&#xD;&#xA;&#xD;&#xA;STRING&#xD;&#xA;&#x9;:&#x9;'\''!&#xD;&#xA;&#x9;&#x9;(&#x9;ESC&#xD;&#xA;&#x9;&#x9;|&#x9;'\n' {newline();}&#xD;&#xA;&#x9;&#x9;|&#x9;~('\\'|'\''|'\n')&#xD;&#xA;&#x9;&#x9;)*&#xD;&#xA;&#x9;&#x9;'\''!&#xD;&#xA;%v3&#x9;&#x9;&#x9;{setText(ei.unescapeString(getText(), 1));}&#xD;&#xA;&#x9;;&#xD;&#xA;&#xD;&#xA;&#x9;">
    <templates xsi:type="TCS:PrimitiveTemplate" location="8:2-9:21" name="identifier" typeName="String" isDefault="true" tokenName="NAME" value="%token%">
      <commentsBefore>-- BEGIN Primitive templates</commentsBefore>
      <commentsBefore>-- Specifies representation of primitive types.</commentsBefore>
      <commentsBefore>-- Only needs modification when default lexer is not satisfactory.</commentsBefore>
      <commentsBefore>-- Generally modified along with the lexer.</commentsBefore>
      <commentsAfter>-- END Primitive templates</commentsAfter>
      <commentsAfter>-- BEGIN Class templates</commentsAfter>
      <commentsAfter>-- Specifies representation of classes.</commentsAfter>
      <commentsAfter>-- This is the main section to work on.</commentsAfter>
    </templates>
    <templates xsi:type="TCS:ClassTemplate" location="19:2-21:4" name="BibTextFile" isMain="true" isContext="true">
      <commentsBefore>-- END Primitive templates</commentsBefore>
      <commentsBefore>-- BEGIN Class templates</commentsBefore>
      <commentsBefore>-- Specifies representation of classes.</commentsBefore>
      <commentsBefore>-- This is the main section to work on.</commentsBefore>
      <templateSequence location="20:5-20:14">
        <commentsAfter>-- entries each in new line</commentsAfter>
        <elements xsi:type="TCS:Block" location="20:5-20:14">
          <commentsAfter>-- entries each in new line</commentsAfter>
          <blockSequence location="20:6-20:13">
            <elements xsi:type="TCS:Property" location="20:6-20:13" name="entries"/>
          </blockSequence>
        </elements>
      </templateSequence>
    </templates>
    <templates xsi:type="TCS:ClassTemplate" location="23:2-23:33" name="BibTextEntry" isAbstract="true"/>
    <templates xsi:type="TCS:ClassTemplate" location="25:2-31:4" name="Article">
      <templateSequence location="26:5-30:6">
        <elements xsi:type="TCS:LiteralRef" location="26:5-26:14" referredLiteral="/1"/>
        <elements xsi:type="TCS:LiteralRef" location="26:15-26:18" referredLiteral="/0/@symbols.1"/>
        <elements xsi:type="TCS:Block" location="27:3-29:4">
          <blockSequence location="28:3-28:64">
            <elements xsi:type="TCS:Property" location="28:3-28:6" name="key"/>
            <elements xsi:type="TCS:LiteralRef" location="28:7-28:10" referredLiteral="/0/@symbols.0"/>
            <elements xsi:type="TCS:Property" location="28:11-28:32" name="author">
              <propertyArgs xsi:type="TCS:RefersToPArg" location="28:18-28:31" propertyName="name"/>
            </elements>
            <elements xsi:type="TCS:LiteralRef" location="28:33-28:36" referredLiteral="/0/@symbols.0"/>
            <elements xsi:type="TCS:Property" location="28:37-28:64" name="attributes">
              <propertyArgs xsi:type="TCS:SeparatorPArg" location="28:48-28:63">
                <separatorSequence location="28:60-28:63">
                  <elements xsi:type="TCS:LiteralRef" location="28:60-28:63" referredLiteral="/0/@symbols.0"/>
                </separatorSequence>
              </propertyArgs>
            </elements>
          </blockSequence>
        </elements>
        <elements xsi:type="TCS:LiteralRef" location="30:3-30:6" referredLiteral="/0/@symbols.2"/>
      </templateSequence>
    </templates>
    <templates xsi:type="TCS:ClassTemplate" location="33:2-33:30" name="Attribute" isAbstract="true"/>
    <templates xsi:type="TCS:ClassTemplate" location="35:2-37:4" name="Author" isAddToContext="true">
      <templateSequence location="36:5-36:26">
        <elements xsi:type="TCS:LiteralRef" location="36:5-36:13" referredLiteral="/2"/>
        <elements xsi:type="TCS:LiteralRef" location="36:14-36:17" referredLiteral="/3"/>
        <elements xsi:type="TCS:Property" location="36:18-36:22" name="name"/>
        <elements xsi:type="TCS:LiteralRef" location="36:23-36:26" referredLiteral="/4"/>
      </templateSequence>
    </templates>
    <templates xsi:type="TCS:ClassTemplate" location="39:2-41:4" name="Year">
      <commentsAfter>-- BEGIN Special symbols</commentsAfter>
      <commentsAfter>-- Possible modifications:</commentsAfter>
      <templateSequence location="40:5-40:21">
        <elements xsi:type="TCS:LiteralRef" location="40:5-40:11" referredLiteral="/5"/>
        <elements xsi:type="TCS:LiteralRef" location="40:12-40:15" referredLiteral="/3"/>
        <elements xsi:type="TCS:Property" location="40:16-40:21" name="value"/>
      </templateSequence>
    </templates>
    <symbols location="50:3-50:38" name="coma" literalRefs="/0/@templates.3/@templateSequence/@elements.2/@blockSequence/@elements.1 /0/@templates.3/@templateSequence/@elements.2/@blockSequence/@elements.3 /0/@templates.3/@templateSequence/@elements.2/@blockSequence/@elements.4/@propertyArgs.0/@separatorSequence/@elements.0" value=",">
      <commentsBefore>--&#x9;&#x9;lsquare&#x9;&#x9;= &quot;[&quot;;</commentsBefore>
      <commentsBefore>--&#x9;&#x9;rsquare&#x9;&#x9;= &quot;]&quot;&#x9;: rightSpace;</commentsBefore>
      <commentsBefore>--&#x9;&#x9;excl&#x9;&#x9;= &quot;!&quot;;</commentsBefore>
      <commentsAfter>--&#x9;&#x9;lparen&#x9;&#x9;= &quot;(&quot;;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;rparen&#x9;&#x9;= &quot;)&quot;&#x9;: leftNone, rightSpace;</commentsAfter>
      <spaces>leftNone</spaces>
      <spaces>rightSpace</spaces>
    </symbols>
    <symbols location="53:3-53:29" name="lcurly" literalRefs="/0/@templates.3/@templateSequence/@elements.1" value="{">
      <commentsBefore>--&#x9;&#x9;lparen&#x9;&#x9;= &quot;(&quot;;</commentsBefore>
      <commentsBefore>--&#x9;&#x9;rparen&#x9;&#x9;= &quot;)&quot;&#x9;: leftNone, rightSpace;</commentsBefore>
      <spaces>leftSpace</spaces>
    </symbols>
    <symbols location="54:3-54:40" name="rcurly" literalRefs="/0/@templates.3/@templateSequence/@elements.3" value="}">
      <commentsAfter>--&#x9;&#x9;semi&#x9;&#x9;= &quot;;&quot;&#x9;: leftNone, rightSpace;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;colon&#x9;&#x9;= &quot;:&quot;&#x9;: leftSpace, rightSpace;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;pipe&#x9;&#x9;= &quot;|&quot;&#x9;: leftSpace, rightSpace;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;sharp&#x9;&#x9;= &quot;#&quot;&#x9;: leftSpace;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;qmark&#x9;&#x9;= &quot;?&quot;;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;coloncolon&#x9;= &quot;::&quot;&#x9;: leftNone, rightNone;</commentsAfter>
      <commentsAfter>-- operator symbols</commentsAfter>
      <commentsAfter>--&#x9;&#x9;point&#x9;&#x9;= &quot;.&quot;&#x9;: leftNone;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;rarrow&#x9;&#x9;= &quot;->&quot;&#x9;: leftNone;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;minus&#x9;&#x9;= &quot;-&quot;&#x9;: leftSpace, rightSpace;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;star&#x9;&#x9;= &quot;*&quot;&#x9;: leftSpace, rightSpace;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;slash&#x9;&#x9;= &quot;/&quot;&#x9;: leftSpace, rightSpace;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;plus&#x9;&#x9;= &quot;+&quot;&#x9;: leftSpace, rightSpace;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;eq&#x9;&#x9;&#x9;= &quot;=&quot;&#x9;: leftSpace, rightSpace;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;gt&#x9;&#x9;&#x9;= &quot;>&quot;&#x9;: leftSpace, rightSpace;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;lt&#x9;&#x9;&#x9;= &quot;&lt;&quot;&#x9;: leftSpace, rightSpace;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;ge&#x9;&#x9;&#x9;= &quot;>=&quot;&#x9;: leftSpace, rightSpace;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;le&#x9;&#x9;&#x9;= &quot;&lt;=&quot;&#x9;: leftSpace, rightSpace;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;ne&#x9;&#x9;&#x9;= &quot;&lt;>&quot;&#x9;: leftSpace, rightSpace;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;larrow&#x9;&#x9;= &quot;&lt;-&quot;&#x9;: leftSpace, rightSpace;</commentsAfter>
      <spaces>leftNone</spaces>
      <spaces>rightSpace</spaces>
    </symbols>
    <tokens location="92:2-92:42" name="COMMENT">
      <commentsBefore>-- END Special symbols</commentsBefore>
      <commentsBefore>-- BEGIN Operator table</commentsBefore>
      <commentsBefore>-- Defines all operators with their priority, arity, and associativity.</commentsBefore>
      <commentsBefore>-- All defined operators must be used in operator templates.</commentsBefore>
      <commentsBefore>-- Specify operator table(s) here if necessary.</commentsBefore>
      <commentsBefore>-- END Operator table</commentsBefore>
      <commentsBefore>-- BEGIN Lexer</commentsBefore>
      <commentsBefore>-- Specifies the lexical entities.</commentsBefore>
      <commentsBefore>-- Only needs modification when default lexer is not satisfactory.</commentsBefore>
      <commentsBefore>-- Generally modified along with Primitive templates.</commentsBefore>
      <pattern location="92:18-92:41">
        <simplePatterns xsi:type="TCS:RulePattern" location="92:18-92:41">
          <rule xsi:type="TCS:EndOfLineRule" location="92:18-92:41">
            <start location="92:36-92:40" name="--"/>
          </rule>
        </simplePatterns>
      </pattern>
    </tokens>
  </TCS:ConcreteSyntax>
  <TCS:Keyword location="26:5-26:14" literalRefs="/0/@templates.3/@templateSequence/@elements.0" value="article"/>
  <TCS:Keyword location="36:5-36:13" literalRefs="/0/@templates.5/@templateSequence/@elements.0" value="author"/>
  <TCS:Keyword location="36:14-36:17" literalRefs="/0/@templates.5/@templateSequence/@elements.1 /0/@templates.6/@templateSequence/@elements.1" value="="/>
  <TCS:Keyword location="36:23-36:26" literalRefs="/0/@templates.5/@templateSequence/@elements.3" value="."/>
  <TCS:Keyword location="40:5-40:11" literalRefs="/0/@templates.6/@templateSequence/@elements.0" value="year"/>
</xmi:XMI>
