// $ANTLR 3.1.1 parser/TCS.g 2010-02-16 14:12:01

package com.sap.mi.textual.grammar.parser;
import com.sap.mi.textual.grammar.antlr3.ANTLR3LocationToken;
import com.sap.mi.textual.common.interfaces.IModelElementProxy;
import com.sap.mi.textual.grammar.impl.PredicateSemantic;
import com.sap.mi.textual.moinlookup.util.RuleNameFinder;
import java.text.CharacterIterator;
import java.text.StringCharacterIterator;
import com.sap.mi.textual.grammar.impl.ObservableInjectingParser;
import org.antlr.runtime.Token;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
public class TCSParser extends ObservableInjectingParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "NAME", "STRING", "INT", "FLOAT", "DLCOLON", "LPAREN", "RPAREN", "EQ", "LCURLY", "RCURLY", "SEMI", "RARROW", "COLON", "COMA", "SHARP", "LT", "GT", "LSQUARE", "RSQUARE", "QMARK", "DLSQUARE", "PIPE", "DRSQUARE", "STAR", "DOLLAR", "DLCURLY", "DRCURLY", "LARROW", "POINT", "MINUS", "COMMENT", "MULTI_LINE_COMMENT", "EXCL", "AROBAS", "SLASH", "PLUS", "GE", "LE", "NE", "NL", "WS", "DIGIT", "ALPHA", "SNAME", "ESC", "'and'", "'ifmissing'", "'all'", "'disambiguateV3'", "'leftSpace'", "'foreach'", "'leftNone'", "'multi'", "'function'", "'forcedLower'", "'importContext'", "'partial'", "'disambiguate'", "'autoCreate'", "'primitiveTemplate'", "'keywords'", "'part'", "'isDefined'", "'octal'", "'serializer'", "'end'", "'addToContext'", "'default'", "'storeRightTo'", "'startNL'", "'template'", "'indentIncr'", "'k'", "'one'", "'nonPrimary'", "'instanceOf'", "'context'", "'true'", "'startNbNL'", "'drop'", "'endNL'", "'createAs'", "'refersTo'", "'orKeyword'", "'left'", "'operatorTemplate'", "'start'", "'right'", "'nbNL'", "'symbols'", "'hex'", "'using'", "'always'", "'forcedUpper'", "'PartitionHandling'", "'rightSpace'", "'main'", "'multiLine'", "'word'", "'esc'", "'rightNone'", "'source'", "'filter'", "'storeOpTo'", "'name'", "'deep'", "'token'", "'invert'", "'createIn'", "'never'", "'referenceOnly'", "'semDisambiguate'", "'content'", "'false'", "'as'", "'mode'", "'for'", "'textblocks'", "'lexer'", "'endOfLine'", "'abstract'", "'value'", "'operators'", "'operatored'", "'auto'", "'separator'", "'query'", "'enumerationTemplate'", "'prefix'", "'container'", "'syntax'", "'lookIn'", "'model'", "'postfix'", "'priority'", "'when'", "'omitted'"
    };
    public static final int DLCURLY=29;
    public static final int LT=19;
    public static final int STAR=27;
    public static final int LSQUARE=21;
    public static final int DRCURLY=30;
    public static final int EXCL=36;
    public static final int EOF=-1;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int RPAREN=10;
    public static final int T__91=91;
    public static final int NAME=4;
    public static final int T__92=92;
    public static final int T__90=90;
    public static final int NL=43;
    public static final int EQ=11;
    public static final int COMMENT=34;
    public static final int T__99=99;
    public static final int T__98=98;
    public static final int T__97=97;
    public static final int T__96=96;
    public static final int NE=42;
    public static final int T__95=95;
    public static final int T__139=139;
    public static final int T__138=138;
    public static final int GE=40;
    public static final int T__137=137;
    public static final int T__136=136;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int SHARP=18;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int LCURLY=12;
    public static final int INT=6;
    public static final int T__85=85;
    public static final int T__84=84;
    public static final int T__87=87;
    public static final int T__140=140;
    public static final int T__86=86;
    public static final int T__89=89;
    public static final int ALPHA=46;
    public static final int T__88=88;
    public static final int T__126=126;
    public static final int T__125=125;
    public static final int T__128=128;
    public static final int T__127=127;
    public static final int WS=44;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__129=129;
    public static final int SNAME=47;
    public static final int T__70=70;
    public static final int GT=20;
    public static final int T__76=76;
    public static final int T__75=75;
    public static final int T__74=74;
    public static final int T__130=130;
    public static final int QMARK=23;
    public static final int T__73=73;
    public static final int T__131=131;
    public static final int T__132=132;
    public static final int T__79=79;
    public static final int T__133=133;
    public static final int T__78=78;
    public static final int T__134=134;
    public static final int T__77=77;
    public static final int T__135=135;
    public static final int DOLLAR=28;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int POINT=32;
    public static final int AROBAS=37;
    public static final int T__118=118;
    public static final int ESC=48;
    public static final int T__119=119;
    public static final int T__116=116;
    public static final int DLCOLON=8;
    public static final int T__117=117;
    public static final int T__114=114;
    public static final int DRSQUARE=26;
    public static final int T__115=115;
    public static final int T__124=124;
    public static final int T__123=123;
    public static final int LARROW=31;
    public static final int T__122=122;
    public static final int T__121=121;
    public static final int FLOAT=7;
    public static final int T__120=120;
    public static final int T__61=61;
    public static final int T__60=60;
    public static final int LPAREN=9;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int SLASH=38;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__107=107;
    public static final int T__108=108;
    public static final int T__109=109;
    public static final int T__59=59;
    public static final int T__103=103;
    public static final int T__104=104;
    public static final int T__105=105;
    public static final int T__106=106;
    public static final int T__111=111;
    public static final int T__110=110;
    public static final int T__113=113;
    public static final int PLUS=39;
    public static final int PIPE=25;
    public static final int T__112=112;
    public static final int DIGIT=45;
    public static final int T__50=50;
    public static final int DLSQUARE=24;
    public static final int T__49=49;
    public static final int RARROW=15;
    public static final int T__102=102;
    public static final int T__101=101;
    public static final int T__100=100;
    public static final int MINUS=33;
    public static final int RSQUARE=22;
    public static final int COMA=17;
    public static final int SEMI=14;
    public static final int MULTI_LINE_COMMENT=35;
    public static final int COLON=16;
    public static final int RCURLY=13;
    public static final int LE=41;
    public static final int STRING=5;

    // delegates
    // delegators


        public TCSParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public TCSParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return TCSParser.tokenNames; }
    public String getGrammarFileName() { return "parser/TCS.g"; }


       private static final String syntaxUUID = "E0DCF6CD76DF71431AFC11DFBDD1E3828D1504C0";
       public String getSyntaxUUID() {
            return syntaxUUID;
       }
       /**
         * Unescape string.
         * 
         * @param s the s
         * @param delimLength the delim length
         * 
         * @return the string
         */
        public String unescapeString(String s) {
            StringBuilder ret = new StringBuilder();
            // get rid of the starting and ending delimiters (e.g., '\'', '"')
           int delimLength = 1; // for delimLength > 0, the following code needs to change
           if (s.charAt(0) == '\'' && s.charAt(s.length()-delimLength) == '\'' || s.charAt(0) == '\"' && s.charAt(s.length()-delimLength) == '\"') {
                    s = s.substring(delimLength, s.length()-(delimLength * 2 - 1));
            }
            
            CharacterIterator ci = new StringCharacterIterator(s);
            char c = ci.first();
            while(c != CharacterIterator.DONE) {
                char tc = 0;
                switch(c) {
                case '\\':
                    c = ci.next();
                    switch(c) {
                    case 'n':
                        tc = '\n';
                        break;
                    case 'r':
                        tc = '\r';
                        break;
                    case 't':
                        tc = '\t';
                        break;
                    case 'b':
                        tc = '\b';
                        break;
                    case 'f':
                        tc = '\f';
                        break;
                    case '"':
                        tc = '"';
                        break;
                    case '\'':
                        tc = '\'';
                        break;
                    case '\\':
                        tc = '\\';
                        break;
                    case '0':
                    case '1':
                    case '2':
                    case '3':
                        throw new RuntimeException("octal escape sequences not supported yet");
                    default:
                        throw new RuntimeException("unknown escape sequence: '\\" + c + "'");
                    }
                    break;
                default:
                    tc = c;
                    break;
                }
                ret.append(tc);
                c = ci.next();
            }
            return ret.toString();
        }




    // $ANTLR start "identifier"
    // parser/TCS.g:207:1: identifier returns [Object ret2] : (ast= NAME ) ;
    public final Object identifier() throws RecognitionException {

        Object ret2 = null;

        Token ast=null;

        java.lang.Object ret=null;
        try {
            // parser/TCS.g:208:3: ( (ast= NAME ) )
            // parser/TCS.g:209:3: (ast= NAME )
            {
            // parser/TCS.g:209:3: (ast= NAME )
            // parser/TCS.g:209:4: ast= NAME
            {
            ast=(Token)match(input,NAME,FOLLOW_NAME_in_identifier69); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              ret = unescapeString( ast.getText());

            }

            }

            if ( state.backtracking==0 ) {

              ret2=ret;

            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "identifier"


    // $ANTLR start "identifierOrKeyword"
    // parser/TCS.g:217:1: identifierOrKeyword returns [Object ret2] : (ast= NAME | 'and' | 'ifmissing' | 'all' | 'disambiguateV3' | 'leftSpace' | 'foreach' | 'leftNone' | 'multi' | 'function' | 'forcedLower' | 'importContext' | 'partial' | 'disambiguate' | 'autoCreate' | 'primitiveTemplate' | 'keywords' | 'part' | 'isDefined' | 'octal' | 'serializer' | 'end' | 'addToContext' | 'default' | 'storeRightTo' | 'startNL' | 'template' | 'indentIncr' | 'k' | 'one' | 'nonPrimary' | 'instanceOf' | 'context' | 'true' | 'startNbNL' | 'drop' | 'endNL' | 'createAs' | 'refersTo' | 'orKeyword' | 'left' | 'operatorTemplate' | 'start' | 'right' | 'nbNL' | 'symbols' | 'hex' | 'using' | 'always' | 'forcedUpper' | 'PartitionHandling' | 'rightSpace' | 'main' | 'multiLine' | 'word' | 'esc' | 'rightNone' | 'source' | 'filter' | 'storeOpTo' | 'name' | 'deep' | 'token' | 'invert' | 'createIn' | 'never' | 'referenceOnly' | 'semDisambiguate' | 'content' | 'false' | 'as' | 'mode' | 'for' | 'textblocks' | 'lexer' | 'endOfLine' | 'abstract' | 'value' | 'operators' | 'operatored' | 'auto' | 'separator' | 'query' | 'enumerationTemplate' | 'prefix' | 'container' | 'syntax' | 'lookIn' | 'model' | 'postfix' | 'priority' | 'when' | 'omitted' ) ;
    public final Object identifierOrKeyword() throws RecognitionException {

        Object ret2 = null;

        Token ast=null;

        java.lang.Object ret=null;
        try {
            // parser/TCS.g:218:3: ( (ast= NAME | 'and' | 'ifmissing' | 'all' | 'disambiguateV3' | 'leftSpace' | 'foreach' | 'leftNone' | 'multi' | 'function' | 'forcedLower' | 'importContext' | 'partial' | 'disambiguate' | 'autoCreate' | 'primitiveTemplate' | 'keywords' | 'part' | 'isDefined' | 'octal' | 'serializer' | 'end' | 'addToContext' | 'default' | 'storeRightTo' | 'startNL' | 'template' | 'indentIncr' | 'k' | 'one' | 'nonPrimary' | 'instanceOf' | 'context' | 'true' | 'startNbNL' | 'drop' | 'endNL' | 'createAs' | 'refersTo' | 'orKeyword' | 'left' | 'operatorTemplate' | 'start' | 'right' | 'nbNL' | 'symbols' | 'hex' | 'using' | 'always' | 'forcedUpper' | 'PartitionHandling' | 'rightSpace' | 'main' | 'multiLine' | 'word' | 'esc' | 'rightNone' | 'source' | 'filter' | 'storeOpTo' | 'name' | 'deep' | 'token' | 'invert' | 'createIn' | 'never' | 'referenceOnly' | 'semDisambiguate' | 'content' | 'false' | 'as' | 'mode' | 'for' | 'textblocks' | 'lexer' | 'endOfLine' | 'abstract' | 'value' | 'operators' | 'operatored' | 'auto' | 'separator' | 'query' | 'enumerationTemplate' | 'prefix' | 'container' | 'syntax' | 'lookIn' | 'model' | 'postfix' | 'priority' | 'when' | 'omitted' ) )
            // parser/TCS.g:219:3: (ast= NAME | 'and' | 'ifmissing' | 'all' | 'disambiguateV3' | 'leftSpace' | 'foreach' | 'leftNone' | 'multi' | 'function' | 'forcedLower' | 'importContext' | 'partial' | 'disambiguate' | 'autoCreate' | 'primitiveTemplate' | 'keywords' | 'part' | 'isDefined' | 'octal' | 'serializer' | 'end' | 'addToContext' | 'default' | 'storeRightTo' | 'startNL' | 'template' | 'indentIncr' | 'k' | 'one' | 'nonPrimary' | 'instanceOf' | 'context' | 'true' | 'startNbNL' | 'drop' | 'endNL' | 'createAs' | 'refersTo' | 'orKeyword' | 'left' | 'operatorTemplate' | 'start' | 'right' | 'nbNL' | 'symbols' | 'hex' | 'using' | 'always' | 'forcedUpper' | 'PartitionHandling' | 'rightSpace' | 'main' | 'multiLine' | 'word' | 'esc' | 'rightNone' | 'source' | 'filter' | 'storeOpTo' | 'name' | 'deep' | 'token' | 'invert' | 'createIn' | 'never' | 'referenceOnly' | 'semDisambiguate' | 'content' | 'false' | 'as' | 'mode' | 'for' | 'textblocks' | 'lexer' | 'endOfLine' | 'abstract' | 'value' | 'operators' | 'operatored' | 'auto' | 'separator' | 'query' | 'enumerationTemplate' | 'prefix' | 'container' | 'syntax' | 'lookIn' | 'model' | 'postfix' | 'priority' | 'when' | 'omitted' )
            {
            // parser/TCS.g:219:3: (ast= NAME | 'and' | 'ifmissing' | 'all' | 'disambiguateV3' | 'leftSpace' | 'foreach' | 'leftNone' | 'multi' | 'function' | 'forcedLower' | 'importContext' | 'partial' | 'disambiguate' | 'autoCreate' | 'primitiveTemplate' | 'keywords' | 'part' | 'isDefined' | 'octal' | 'serializer' | 'end' | 'addToContext' | 'default' | 'storeRightTo' | 'startNL' | 'template' | 'indentIncr' | 'k' | 'one' | 'nonPrimary' | 'instanceOf' | 'context' | 'true' | 'startNbNL' | 'drop' | 'endNL' | 'createAs' | 'refersTo' | 'orKeyword' | 'left' | 'operatorTemplate' | 'start' | 'right' | 'nbNL' | 'symbols' | 'hex' | 'using' | 'always' | 'forcedUpper' | 'PartitionHandling' | 'rightSpace' | 'main' | 'multiLine' | 'word' | 'esc' | 'rightNone' | 'source' | 'filter' | 'storeOpTo' | 'name' | 'deep' | 'token' | 'invert' | 'createIn' | 'never' | 'referenceOnly' | 'semDisambiguate' | 'content' | 'false' | 'as' | 'mode' | 'for' | 'textblocks' | 'lexer' | 'endOfLine' | 'abstract' | 'value' | 'operators' | 'operatored' | 'auto' | 'separator' | 'query' | 'enumerationTemplate' | 'prefix' | 'container' | 'syntax' | 'lookIn' | 'model' | 'postfix' | 'priority' | 'when' | 'omitted' )
            int alt1=93;
            switch ( input.LA(1) ) {
            case NAME:
                {
                alt1=1;
                }
                break;
            case 49:
                {
                alt1=2;
                }
                break;
            case 50:
                {
                alt1=3;
                }
                break;
            case 51:
                {
                alt1=4;
                }
                break;
            case 52:
                {
                alt1=5;
                }
                break;
            case 53:
                {
                alt1=6;
                }
                break;
            case 54:
                {
                alt1=7;
                }
                break;
            case 55:
                {
                alt1=8;
                }
                break;
            case 56:
                {
                alt1=9;
                }
                break;
            case 57:
                {
                alt1=10;
                }
                break;
            case 58:
                {
                alt1=11;
                }
                break;
            case 59:
                {
                alt1=12;
                }
                break;
            case 60:
                {
                alt1=13;
                }
                break;
            case 61:
                {
                alt1=14;
                }
                break;
            case 62:
                {
                alt1=15;
                }
                break;
            case 63:
                {
                alt1=16;
                }
                break;
            case 64:
                {
                alt1=17;
                }
                break;
            case 65:
                {
                alt1=18;
                }
                break;
            case 66:
                {
                alt1=19;
                }
                break;
            case 67:
                {
                alt1=20;
                }
                break;
            case 68:
                {
                alt1=21;
                }
                break;
            case 69:
                {
                alt1=22;
                }
                break;
            case 70:
                {
                alt1=23;
                }
                break;
            case 71:
                {
                alt1=24;
                }
                break;
            case 72:
                {
                alt1=25;
                }
                break;
            case 73:
                {
                alt1=26;
                }
                break;
            case 74:
                {
                alt1=27;
                }
                break;
            case 75:
                {
                alt1=28;
                }
                break;
            case 76:
                {
                alt1=29;
                }
                break;
            case 77:
                {
                alt1=30;
                }
                break;
            case 78:
                {
                alt1=31;
                }
                break;
            case 79:
                {
                alt1=32;
                }
                break;
            case 80:
                {
                alt1=33;
                }
                break;
            case 81:
                {
                alt1=34;
                }
                break;
            case 82:
                {
                alt1=35;
                }
                break;
            case 83:
                {
                alt1=36;
                }
                break;
            case 84:
                {
                alt1=37;
                }
                break;
            case 85:
                {
                alt1=38;
                }
                break;
            case 86:
                {
                alt1=39;
                }
                break;
            case 87:
                {
                alt1=40;
                }
                break;
            case 88:
                {
                alt1=41;
                }
                break;
            case 89:
                {
                alt1=42;
                }
                break;
            case 90:
                {
                alt1=43;
                }
                break;
            case 91:
                {
                alt1=44;
                }
                break;
            case 92:
                {
                alt1=45;
                }
                break;
            case 93:
                {
                alt1=46;
                }
                break;
            case 94:
                {
                alt1=47;
                }
                break;
            case 95:
                {
                alt1=48;
                }
                break;
            case 96:
                {
                alt1=49;
                }
                break;
            case 97:
                {
                alt1=50;
                }
                break;
            case 98:
                {
                alt1=51;
                }
                break;
            case 99:
                {
                alt1=52;
                }
                break;
            case 100:
                {
                alt1=53;
                }
                break;
            case 101:
                {
                alt1=54;
                }
                break;
            case 102:
                {
                alt1=55;
                }
                break;
            case 103:
                {
                alt1=56;
                }
                break;
            case 104:
                {
                alt1=57;
                }
                break;
            case 105:
                {
                alt1=58;
                }
                break;
            case 106:
                {
                alt1=59;
                }
                break;
            case 107:
                {
                alt1=60;
                }
                break;
            case 108:
                {
                alt1=61;
                }
                break;
            case 109:
                {
                alt1=62;
                }
                break;
            case 110:
                {
                alt1=63;
                }
                break;
            case 111:
                {
                alt1=64;
                }
                break;
            case 112:
                {
                alt1=65;
                }
                break;
            case 113:
                {
                alt1=66;
                }
                break;
            case 114:
                {
                alt1=67;
                }
                break;
            case 115:
                {
                alt1=68;
                }
                break;
            case 116:
                {
                alt1=69;
                }
                break;
            case 117:
                {
                alt1=70;
                }
                break;
            case 118:
                {
                alt1=71;
                }
                break;
            case 119:
                {
                alt1=72;
                }
                break;
            case 120:
                {
                alt1=73;
                }
                break;
            case 121:
                {
                alt1=74;
                }
                break;
            case 122:
                {
                alt1=75;
                }
                break;
            case 123:
                {
                alt1=76;
                }
                break;
            case 124:
                {
                alt1=77;
                }
                break;
            case 125:
                {
                alt1=78;
                }
                break;
            case 126:
                {
                alt1=79;
                }
                break;
            case 127:
                {
                alt1=80;
                }
                break;
            case 128:
                {
                alt1=81;
                }
                break;
            case 129:
                {
                alt1=82;
                }
                break;
            case 130:
                {
                alt1=83;
                }
                break;
            case 131:
                {
                alt1=84;
                }
                break;
            case 132:
                {
                alt1=85;
                }
                break;
            case 133:
                {
                alt1=86;
                }
                break;
            case 134:
                {
                alt1=87;
                }
                break;
            case 135:
                {
                alt1=88;
                }
                break;
            case 136:
                {
                alt1=89;
                }
                break;
            case 137:
                {
                alt1=90;
                }
                break;
            case 138:
                {
                alt1=91;
                }
                break;
            case 139:
                {
                alt1=92;
                }
                break;
            case 140:
                {
                alt1=93;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }

            switch (alt1) {
                case 1 :
                    // parser/TCS.g:219:4: ast= NAME
                    {
                    ast=(Token)match(input,NAME,FOLLOW_NAME_in_identifierOrKeyword100); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = unescapeString( ast.getText());

                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:221:5: 'and'
                    {
                    match(input,49,FOLLOW_49_in_identifierOrKeyword108); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "and";
                    }

                    }
                    break;
                case 3 :
                    // parser/TCS.g:222:5: 'ifmissing'
                    {
                    match(input,50,FOLLOW_50_in_identifierOrKeyword116); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "ifmissing";
                    }

                    }
                    break;
                case 4 :
                    // parser/TCS.g:223:5: 'all'
                    {
                    match(input,51,FOLLOW_51_in_identifierOrKeyword124); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "all";
                    }

                    }
                    break;
                case 5 :
                    // parser/TCS.g:224:5: 'disambiguateV3'
                    {
                    match(input,52,FOLLOW_52_in_identifierOrKeyword132); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "disambiguateV3";
                    }

                    }
                    break;
                case 6 :
                    // parser/TCS.g:225:5: 'leftSpace'
                    {
                    match(input,53,FOLLOW_53_in_identifierOrKeyword140); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "leftSpace";
                    }

                    }
                    break;
                case 7 :
                    // parser/TCS.g:226:5: 'foreach'
                    {
                    match(input,54,FOLLOW_54_in_identifierOrKeyword148); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "foreach";
                    }

                    }
                    break;
                case 8 :
                    // parser/TCS.g:227:5: 'leftNone'
                    {
                    match(input,55,FOLLOW_55_in_identifierOrKeyword156); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "leftNone";
                    }

                    }
                    break;
                case 9 :
                    // parser/TCS.g:228:5: 'multi'
                    {
                    match(input,56,FOLLOW_56_in_identifierOrKeyword164); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "multi";
                    }

                    }
                    break;
                case 10 :
                    // parser/TCS.g:229:5: 'function'
                    {
                    match(input,57,FOLLOW_57_in_identifierOrKeyword172); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "function";
                    }

                    }
                    break;
                case 11 :
                    // parser/TCS.g:230:5: 'forcedLower'
                    {
                    match(input,58,FOLLOW_58_in_identifierOrKeyword180); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "forcedLower";
                    }

                    }
                    break;
                case 12 :
                    // parser/TCS.g:231:5: 'importContext'
                    {
                    match(input,59,FOLLOW_59_in_identifierOrKeyword188); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "importContext";
                    }

                    }
                    break;
                case 13 :
                    // parser/TCS.g:232:5: 'partial'
                    {
                    match(input,60,FOLLOW_60_in_identifierOrKeyword196); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "partial";
                    }

                    }
                    break;
                case 14 :
                    // parser/TCS.g:233:5: 'disambiguate'
                    {
                    match(input,61,FOLLOW_61_in_identifierOrKeyword204); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "disambiguate";
                    }

                    }
                    break;
                case 15 :
                    // parser/TCS.g:234:5: 'autoCreate'
                    {
                    match(input,62,FOLLOW_62_in_identifierOrKeyword212); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "autoCreate";
                    }

                    }
                    break;
                case 16 :
                    // parser/TCS.g:235:5: 'primitiveTemplate'
                    {
                    match(input,63,FOLLOW_63_in_identifierOrKeyword220); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "primitiveTemplate";
                    }

                    }
                    break;
                case 17 :
                    // parser/TCS.g:236:5: 'keywords'
                    {
                    match(input,64,FOLLOW_64_in_identifierOrKeyword228); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "keywords";
                    }

                    }
                    break;
                case 18 :
                    // parser/TCS.g:237:5: 'part'
                    {
                    match(input,65,FOLLOW_65_in_identifierOrKeyword236); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "part";
                    }

                    }
                    break;
                case 19 :
                    // parser/TCS.g:238:5: 'isDefined'
                    {
                    match(input,66,FOLLOW_66_in_identifierOrKeyword244); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "isDefined";
                    }

                    }
                    break;
                case 20 :
                    // parser/TCS.g:239:5: 'octal'
                    {
                    match(input,67,FOLLOW_67_in_identifierOrKeyword252); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "octal";
                    }

                    }
                    break;
                case 21 :
                    // parser/TCS.g:240:5: 'serializer'
                    {
                    match(input,68,FOLLOW_68_in_identifierOrKeyword260); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "serializer";
                    }

                    }
                    break;
                case 22 :
                    // parser/TCS.g:241:5: 'end'
                    {
                    match(input,69,FOLLOW_69_in_identifierOrKeyword268); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "end";
                    }

                    }
                    break;
                case 23 :
                    // parser/TCS.g:242:5: 'addToContext'
                    {
                    match(input,70,FOLLOW_70_in_identifierOrKeyword276); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "addToContext";
                    }

                    }
                    break;
                case 24 :
                    // parser/TCS.g:243:5: 'default'
                    {
                    match(input,71,FOLLOW_71_in_identifierOrKeyword284); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "default";
                    }

                    }
                    break;
                case 25 :
                    // parser/TCS.g:244:5: 'storeRightTo'
                    {
                    match(input,72,FOLLOW_72_in_identifierOrKeyword292); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "storeRightTo";
                    }

                    }
                    break;
                case 26 :
                    // parser/TCS.g:245:5: 'startNL'
                    {
                    match(input,73,FOLLOW_73_in_identifierOrKeyword300); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "startNL";
                    }

                    }
                    break;
                case 27 :
                    // parser/TCS.g:246:5: 'template'
                    {
                    match(input,74,FOLLOW_74_in_identifierOrKeyword308); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "template";
                    }

                    }
                    break;
                case 28 :
                    // parser/TCS.g:247:5: 'indentIncr'
                    {
                    match(input,75,FOLLOW_75_in_identifierOrKeyword316); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "indentIncr";
                    }

                    }
                    break;
                case 29 :
                    // parser/TCS.g:248:5: 'k'
                    {
                    match(input,76,FOLLOW_76_in_identifierOrKeyword324); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "k";
                    }

                    }
                    break;
                case 30 :
                    // parser/TCS.g:249:5: 'one'
                    {
                    match(input,77,FOLLOW_77_in_identifierOrKeyword332); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "one";
                    }

                    }
                    break;
                case 31 :
                    // parser/TCS.g:250:5: 'nonPrimary'
                    {
                    match(input,78,FOLLOW_78_in_identifierOrKeyword340); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "nonPrimary";
                    }

                    }
                    break;
                case 32 :
                    // parser/TCS.g:251:5: 'instanceOf'
                    {
                    match(input,79,FOLLOW_79_in_identifierOrKeyword348); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "instanceOf";
                    }

                    }
                    break;
                case 33 :
                    // parser/TCS.g:252:5: 'context'
                    {
                    match(input,80,FOLLOW_80_in_identifierOrKeyword356); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "context";
                    }

                    }
                    break;
                case 34 :
                    // parser/TCS.g:253:5: 'true'
                    {
                    match(input,81,FOLLOW_81_in_identifierOrKeyword364); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "true";
                    }

                    }
                    break;
                case 35 :
                    // parser/TCS.g:254:5: 'startNbNL'
                    {
                    match(input,82,FOLLOW_82_in_identifierOrKeyword372); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "startNbNL";
                    }

                    }
                    break;
                case 36 :
                    // parser/TCS.g:255:5: 'drop'
                    {
                    match(input,83,FOLLOW_83_in_identifierOrKeyword380); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "drop";
                    }

                    }
                    break;
                case 37 :
                    // parser/TCS.g:256:5: 'endNL'
                    {
                    match(input,84,FOLLOW_84_in_identifierOrKeyword388); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "endNL";
                    }

                    }
                    break;
                case 38 :
                    // parser/TCS.g:257:5: 'createAs'
                    {
                    match(input,85,FOLLOW_85_in_identifierOrKeyword396); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "createAs";
                    }

                    }
                    break;
                case 39 :
                    // parser/TCS.g:258:5: 'refersTo'
                    {
                    match(input,86,FOLLOW_86_in_identifierOrKeyword404); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "refersTo";
                    }

                    }
                    break;
                case 40 :
                    // parser/TCS.g:259:5: 'orKeyword'
                    {
                    match(input,87,FOLLOW_87_in_identifierOrKeyword412); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "orKeyword";
                    }

                    }
                    break;
                case 41 :
                    // parser/TCS.g:260:5: 'left'
                    {
                    match(input,88,FOLLOW_88_in_identifierOrKeyword420); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "left";
                    }

                    }
                    break;
                case 42 :
                    // parser/TCS.g:261:5: 'operatorTemplate'
                    {
                    match(input,89,FOLLOW_89_in_identifierOrKeyword428); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "operatorTemplate";
                    }

                    }
                    break;
                case 43 :
                    // parser/TCS.g:262:5: 'start'
                    {
                    match(input,90,FOLLOW_90_in_identifierOrKeyword436); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "start";
                    }

                    }
                    break;
                case 44 :
                    // parser/TCS.g:263:5: 'right'
                    {
                    match(input,91,FOLLOW_91_in_identifierOrKeyword444); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "right";
                    }

                    }
                    break;
                case 45 :
                    // parser/TCS.g:264:5: 'nbNL'
                    {
                    match(input,92,FOLLOW_92_in_identifierOrKeyword452); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "nbNL";
                    }

                    }
                    break;
                case 46 :
                    // parser/TCS.g:265:5: 'symbols'
                    {
                    match(input,93,FOLLOW_93_in_identifierOrKeyword460); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "symbols";
                    }

                    }
                    break;
                case 47 :
                    // parser/TCS.g:266:5: 'hex'
                    {
                    match(input,94,FOLLOW_94_in_identifierOrKeyword468); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "hex";
                    }

                    }
                    break;
                case 48 :
                    // parser/TCS.g:267:5: 'using'
                    {
                    match(input,95,FOLLOW_95_in_identifierOrKeyword476); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "using";
                    }

                    }
                    break;
                case 49 :
                    // parser/TCS.g:268:5: 'always'
                    {
                    match(input,96,FOLLOW_96_in_identifierOrKeyword484); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "always";
                    }

                    }
                    break;
                case 50 :
                    // parser/TCS.g:269:5: 'forcedUpper'
                    {
                    match(input,97,FOLLOW_97_in_identifierOrKeyword492); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "forcedUpper";
                    }

                    }
                    break;
                case 51 :
                    // parser/TCS.g:270:5: 'PartitionHandling'
                    {
                    match(input,98,FOLLOW_98_in_identifierOrKeyword500); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "PartitionHandling";
                    }

                    }
                    break;
                case 52 :
                    // parser/TCS.g:271:5: 'rightSpace'
                    {
                    match(input,99,FOLLOW_99_in_identifierOrKeyword508); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "rightSpace";
                    }

                    }
                    break;
                case 53 :
                    // parser/TCS.g:272:5: 'main'
                    {
                    match(input,100,FOLLOW_100_in_identifierOrKeyword516); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "main";
                    }

                    }
                    break;
                case 54 :
                    // parser/TCS.g:273:5: 'multiLine'
                    {
                    match(input,101,FOLLOW_101_in_identifierOrKeyword524); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "multiLine";
                    }

                    }
                    break;
                case 55 :
                    // parser/TCS.g:274:5: 'word'
                    {
                    match(input,102,FOLLOW_102_in_identifierOrKeyword532); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "word";
                    }

                    }
                    break;
                case 56 :
                    // parser/TCS.g:275:5: 'esc'
                    {
                    match(input,103,FOLLOW_103_in_identifierOrKeyword540); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "esc";
                    }

                    }
                    break;
                case 57 :
                    // parser/TCS.g:276:5: 'rightNone'
                    {
                    match(input,104,FOLLOW_104_in_identifierOrKeyword548); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "rightNone";
                    }

                    }
                    break;
                case 58 :
                    // parser/TCS.g:277:5: 'source'
                    {
                    match(input,105,FOLLOW_105_in_identifierOrKeyword556); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "source";
                    }

                    }
                    break;
                case 59 :
                    // parser/TCS.g:278:5: 'filter'
                    {
                    match(input,106,FOLLOW_106_in_identifierOrKeyword564); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "filter";
                    }

                    }
                    break;
                case 60 :
                    // parser/TCS.g:279:5: 'storeOpTo'
                    {
                    match(input,107,FOLLOW_107_in_identifierOrKeyword572); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "storeOpTo";
                    }

                    }
                    break;
                case 61 :
                    // parser/TCS.g:280:5: 'name'
                    {
                    match(input,108,FOLLOW_108_in_identifierOrKeyword580); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "name";
                    }

                    }
                    break;
                case 62 :
                    // parser/TCS.g:281:5: 'deep'
                    {
                    match(input,109,FOLLOW_109_in_identifierOrKeyword588); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "deep";
                    }

                    }
                    break;
                case 63 :
                    // parser/TCS.g:282:5: 'token'
                    {
                    match(input,110,FOLLOW_110_in_identifierOrKeyword596); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "token";
                    }

                    }
                    break;
                case 64 :
                    // parser/TCS.g:283:5: 'invert'
                    {
                    match(input,111,FOLLOW_111_in_identifierOrKeyword604); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "invert";
                    }

                    }
                    break;
                case 65 :
                    // parser/TCS.g:284:5: 'createIn'
                    {
                    match(input,112,FOLLOW_112_in_identifierOrKeyword612); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "createIn";
                    }

                    }
                    break;
                case 66 :
                    // parser/TCS.g:285:5: 'never'
                    {
                    match(input,113,FOLLOW_113_in_identifierOrKeyword620); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "never";
                    }

                    }
                    break;
                case 67 :
                    // parser/TCS.g:286:5: 'referenceOnly'
                    {
                    match(input,114,FOLLOW_114_in_identifierOrKeyword628); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "referenceOnly";
                    }

                    }
                    break;
                case 68 :
                    // parser/TCS.g:287:5: 'semDisambiguate'
                    {
                    match(input,115,FOLLOW_115_in_identifierOrKeyword636); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "semDisambiguate";
                    }

                    }
                    break;
                case 69 :
                    // parser/TCS.g:288:5: 'content'
                    {
                    match(input,116,FOLLOW_116_in_identifierOrKeyword644); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "content";
                    }

                    }
                    break;
                case 70 :
                    // parser/TCS.g:289:5: 'false'
                    {
                    match(input,117,FOLLOW_117_in_identifierOrKeyword652); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "false";
                    }

                    }
                    break;
                case 71 :
                    // parser/TCS.g:290:5: 'as'
                    {
                    match(input,118,FOLLOW_118_in_identifierOrKeyword660); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "as";
                    }

                    }
                    break;
                case 72 :
                    // parser/TCS.g:291:5: 'mode'
                    {
                    match(input,119,FOLLOW_119_in_identifierOrKeyword668); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "mode";
                    }

                    }
                    break;
                case 73 :
                    // parser/TCS.g:292:5: 'for'
                    {
                    match(input,120,FOLLOW_120_in_identifierOrKeyword676); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "for";
                    }

                    }
                    break;
                case 74 :
                    // parser/TCS.g:293:5: 'textblocks'
                    {
                    match(input,121,FOLLOW_121_in_identifierOrKeyword684); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "textblocks";
                    }

                    }
                    break;
                case 75 :
                    // parser/TCS.g:294:5: 'lexer'
                    {
                    match(input,122,FOLLOW_122_in_identifierOrKeyword692); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "lexer";
                    }

                    }
                    break;
                case 76 :
                    // parser/TCS.g:295:5: 'endOfLine'
                    {
                    match(input,123,FOLLOW_123_in_identifierOrKeyword700); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "endOfLine";
                    }

                    }
                    break;
                case 77 :
                    // parser/TCS.g:296:5: 'abstract'
                    {
                    match(input,124,FOLLOW_124_in_identifierOrKeyword708); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "abstract";
                    }

                    }
                    break;
                case 78 :
                    // parser/TCS.g:297:5: 'value'
                    {
                    match(input,125,FOLLOW_125_in_identifierOrKeyword716); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "value";
                    }

                    }
                    break;
                case 79 :
                    // parser/TCS.g:298:5: 'operators'
                    {
                    match(input,126,FOLLOW_126_in_identifierOrKeyword724); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "operators";
                    }

                    }
                    break;
                case 80 :
                    // parser/TCS.g:299:5: 'operatored'
                    {
                    match(input,127,FOLLOW_127_in_identifierOrKeyword732); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "operatored";
                    }

                    }
                    break;
                case 81 :
                    // parser/TCS.g:300:5: 'auto'
                    {
                    match(input,128,FOLLOW_128_in_identifierOrKeyword740); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "auto";
                    }

                    }
                    break;
                case 82 :
                    // parser/TCS.g:301:5: 'separator'
                    {
                    match(input,129,FOLLOW_129_in_identifierOrKeyword748); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "separator";
                    }

                    }
                    break;
                case 83 :
                    // parser/TCS.g:302:5: 'query'
                    {
                    match(input,130,FOLLOW_130_in_identifierOrKeyword756); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "query";
                    }

                    }
                    break;
                case 84 :
                    // parser/TCS.g:303:5: 'enumerationTemplate'
                    {
                    match(input,131,FOLLOW_131_in_identifierOrKeyword764); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "enumerationTemplate";
                    }

                    }
                    break;
                case 85 :
                    // parser/TCS.g:304:5: 'prefix'
                    {
                    match(input,132,FOLLOW_132_in_identifierOrKeyword772); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "prefix";
                    }

                    }
                    break;
                case 86 :
                    // parser/TCS.g:305:5: 'container'
                    {
                    match(input,133,FOLLOW_133_in_identifierOrKeyword780); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "container";
                    }

                    }
                    break;
                case 87 :
                    // parser/TCS.g:306:5: 'syntax'
                    {
                    match(input,134,FOLLOW_134_in_identifierOrKeyword788); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "syntax";
                    }

                    }
                    break;
                case 88 :
                    // parser/TCS.g:307:5: 'lookIn'
                    {
                    match(input,135,FOLLOW_135_in_identifierOrKeyword796); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "lookIn";
                    }

                    }
                    break;
                case 89 :
                    // parser/TCS.g:308:5: 'model'
                    {
                    match(input,136,FOLLOW_136_in_identifierOrKeyword804); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "model";
                    }

                    }
                    break;
                case 90 :
                    // parser/TCS.g:309:5: 'postfix'
                    {
                    match(input,137,FOLLOW_137_in_identifierOrKeyword812); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "postfix";
                    }

                    }
                    break;
                case 91 :
                    // parser/TCS.g:310:5: 'priority'
                    {
                    match(input,138,FOLLOW_138_in_identifierOrKeyword820); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "priority";
                    }

                    }
                    break;
                case 92 :
                    // parser/TCS.g:311:5: 'when'
                    {
                    match(input,139,FOLLOW_139_in_identifierOrKeyword828); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "when";
                    }

                    }
                    break;
                case 93 :
                    // parser/TCS.g:312:5: 'omitted'
                    {
                    match(input,140,FOLLOW_140_in_identifierOrKeyword836); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      ret = "omitted";
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              ret2=ret;

            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "identifierOrKeyword"


    // $ANTLR start "stringSymbol"
    // parser/TCS.g:319:1: stringSymbol returns [Object ret2] : (ast= STRING ) ;
    public final Object stringSymbol() throws RecognitionException {

        Object ret2 = null;

        Token ast=null;

        java.lang.Object ret=null;
        try {
            // parser/TCS.g:320:3: ( (ast= STRING ) )
            // parser/TCS.g:321:3: (ast= STRING )
            {
            // parser/TCS.g:321:3: (ast= STRING )
            // parser/TCS.g:321:4: ast= STRING
            {
            ast=(Token)match(input,STRING,FOLLOW_STRING_in_stringSymbol867); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              ret = unescapeString( ast.getText());

            }

            }

            if ( state.backtracking==0 ) {

              ret2=ret;

            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "stringSymbol"


    // $ANTLR start "integerSymbol"
    // parser/TCS.g:329:1: integerSymbol returns [Object ret2] : (ast= INT ) ;
    public final Object integerSymbol() throws RecognitionException {

        Object ret2 = null;

        Token ast=null;

        java.lang.Object ret=null;
        try {
            // parser/TCS.g:330:3: ( (ast= INT ) )
            // parser/TCS.g:331:3: (ast= INT )
            {
            // parser/TCS.g:331:3: (ast= INT )
            // parser/TCS.g:331:4: ast= INT
            {
            ast=(Token)match(input,INT,FOLLOW_INT_in_integerSymbol898); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              ret = Integer.valueOf( ast.getText());

            }

            }

            if ( state.backtracking==0 ) {

              ret2=ret;

            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "integerSymbol"


    // $ANTLR start "floatSymbol"
    // parser/TCS.g:339:1: floatSymbol returns [Object ret2] : (ast= FLOAT ) ;
    public final Object floatSymbol() throws RecognitionException {

        Object ret2 = null;

        Token ast=null;

        java.lang.Object ret=null;
        try {
            // parser/TCS.g:340:3: ( (ast= FLOAT ) )
            // parser/TCS.g:341:3: (ast= FLOAT )
            {
            // parser/TCS.g:341:3: (ast= FLOAT )
            // parser/TCS.g:341:4: ast= FLOAT
            {
            ast=(Token)match(input,FLOAT,FOLLOW_FLOAT_in_floatSymbol929); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              ret = Double.valueOf( ast.getText());

            }

            }

            if ( state.backtracking==0 ) {

              ret2=ret;

            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "floatSymbol"


    // $ANTLR start "model_classifier"
    // parser/TCS.g:349:1: model_classifier returns [Object ret2] : ( ( ( (temp= model_namespace ) DLCOLON (temp= identifier ) ) | ( (temp= identifier ) ) ) ) ;
    public final Object model_classifier() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("Model","Classifier");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createReferenceProxy(metaType) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:354:3: ( ( ( ( (temp= model_namespace ) DLCOLON (temp= identifier ) ) | ( (temp= identifier ) ) ) ) )
            // parser/TCS.g:355:3: ( ( ( (temp= model_namespace ) DLCOLON (temp= identifier ) ) | ( (temp= identifier ) ) ) )
            {
            // parser/TCS.g:355:3: ( ( ( (temp= model_namespace ) DLCOLON (temp= identifier ) ) | ( (temp= identifier ) ) ) )
            // parser/TCS.g:355:4: ( ( (temp= model_namespace ) DLCOLON (temp= identifier ) ) | ( (temp= identifier ) ) )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD75FD4EA31AFC11DFA9FBE3828D1504C0");
            }
            // parser/TCS.g:355:64: ( ( (temp= model_namespace ) DLCOLON (temp= identifier ) ) | ( (temp= identifier ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==NAME) ) {
                int LA2_1 = input.LA(2);

                if ( (LA2_1==DLCOLON) ) {
                    alt2=1;
                }
                else if ( (LA2_1==EOF||(LA2_1>=LPAREN && LA2_1<=RPAREN)||LA2_1==SEMI||LA2_1==COLON||LA2_1==SHARP||LA2_1==56||(LA2_1>=70 && LA2_1<=71)||LA2_1==78||LA2_1==80||LA2_1==95||LA2_1==98||LA2_1==100||LA2_1==109||LA2_1==114||LA2_1==124||(LA2_1>=127 && LA2_1<=128)||LA2_1==132) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret2;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA2_0==LPAREN) ) {
                alt2=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // parser/TCS.g:355:65: ( (temp= model_namespace ) DLCOLON (temp= identifier ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:355:81: ( (temp= model_namespace ) DLCOLON (temp= identifier ) )
                    // parser/TCS.g:355:82: (temp= model_namespace ) DLCOLON (temp= identifier )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD75F3D8C21AFC11DF909EE3828D1504C0");
                    }
                    // parser/TCS.g:355:141: (temp= model_namespace )
                    // parser/TCS.g:355:143: temp= model_namespace
                    {
                    pushFollow(FOLLOW_model_namespace_in_model_classifier969);
                    temp=model_namespace();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "container", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD75F893B01AFC11DFA904E3828D1504C0");
                    }
                    match(input,DLCOLON,FOLLOW_DLCOLON_in_model_classifier976); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD75F893B21AFC11DF9ABAE3828D1504C0");
                    }
                    // parser/TCS.g:355:362: (temp= identifier )
                    // parser/TCS.g:355:364: temp= identifier
                    {
                    pushFollow(FOLLOW_identifier_in_model_classifier984);
                    temp=identifier();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "name", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:355:448: ( (temp= identifier ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    // parser/TCS.g:355:464: ( (temp= identifier ) )
                    // parser/TCS.g:355:465: (temp= identifier )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD75FD4EA11AFC11DF866CE3828D1504C0");
                    }
                    // parser/TCS.g:355:524: (temp= identifier )
                    // parser/TCS.g:355:526: temp= identifier
                    {
                    pushFollow(FOLLOW_identifier_in_model_classifier1003);
                    temp=identifier();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "name", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "model_classifier"


    // $ANTLR start "primary_model_namespace"
    // parser/TCS.g:364:1: primary_model_namespace returns [Object ret2] : (ret= model_generalizableelement | ( LPAREN ret= model_namespace RPAREN ) ) ;
    public final Object primary_model_namespace() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        try {
            // parser/TCS.g:365:3: ( (ret= model_generalizableelement | ( LPAREN ret= model_namespace RPAREN ) ) )
            // parser/TCS.g:366:3: (ret= model_generalizableelement | ( LPAREN ret= model_namespace RPAREN ) )
            {
            // parser/TCS.g:366:3: (ret= model_generalizableelement | ( LPAREN ret= model_namespace RPAREN ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==NAME) ) {
                alt3=1;
            }
            else if ( (LA3_0==LPAREN) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // parser/TCS.g:366:4: ret= model_generalizableelement
                    {
                    pushFollow(FOLLOW_model_generalizableelement_in_primary_model_namespace1049);
                    ret=model_generalizableelement();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 2 :
                    // parser/TCS.g:367:5: ( LPAREN ret= model_namespace RPAREN )
                    {
                    // parser/TCS.g:367:5: ( LPAREN ret= model_namespace RPAREN )
                    // parser/TCS.g:367:6: LPAREN ret= model_namespace RPAREN
                    {
                    if ( state.backtracking==0 ) {
                      _enterOpdBrackSeq();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl();
                    }
                    match(input,LPAREN,FOLLOW_LPAREN_in_primary_model_namespace1058); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl();
                    }
                    pushFollow(FOLLOW_model_namespace_in_primary_model_namespace1064);
                    ret=model_namespace();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl();
                    }
                    match(input,RPAREN,FOLLOW_RPAREN_in_primary_model_namespace1068); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitOpdBrackSeq();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

                ret2=ret;

            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "primary_model_namespace"


    // $ANTLR start "dblcolon_priority_0"
    // parser/TCS.g:374:1: dblcolon_priority_0 returns [Object ret2] : ( (ret= primary_model_namespace ( ( DLCOLON )=> ( DLCOLON ( (ret= model_modelelement[opName, ret, firstToken] ) ) ) )* ) ) ;
    public final Object dblcolon_priority_0() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        java.lang.String opName=null; org.antlr.runtime.Token firstToken=input.LT(1);
        try {
            // parser/TCS.g:375:3: ( ( (ret= primary_model_namespace ( ( DLCOLON )=> ( DLCOLON ( (ret= model_modelelement[opName, ret, firstToken] ) ) ) )* ) ) )
            // parser/TCS.g:376:4: ( (ret= primary_model_namespace ( ( DLCOLON )=> ( DLCOLON ( (ret= model_modelelement[opName, ret, firstToken] ) ) ) )* ) )
            {
            // parser/TCS.g:376:4: ( (ret= primary_model_namespace ( ( DLCOLON )=> ( DLCOLON ( (ret= model_modelelement[opName, ret, firstToken] ) ) ) )* ) )
            // parser/TCS.g:376:6: (ret= primary_model_namespace ( ( DLCOLON )=> ( DLCOLON ( (ret= model_modelelement[opName, ret, firstToken] ) ) ) )* )
            {
            // parser/TCS.g:376:6: (ret= primary_model_namespace ( ( DLCOLON )=> ( DLCOLON ( (ret= model_modelelement[opName, ret, firstToken] ) ) ) )* )
            // parser/TCS.g:376:8: ret= primary_model_namespace ( ( DLCOLON )=> ( DLCOLON ( (ret= model_modelelement[opName, ret, firstToken] ) ) ) )*
            {
            pushFollow(FOLLOW_primary_model_namespace_in_dblcolon_priority_01106);
            ret=primary_model_namespace();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            // parser/TCS.g:376:35: ( ( DLCOLON )=> ( DLCOLON ( (ret= model_modelelement[opName, ret, firstToken] ) ) ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==DLCOLON) ) {
                    int LA4_1 = input.LA(2);

                    if ( (LA4_1==NAME) ) {
                        int LA4_3 = input.LA(3);

                        if ( (LA4_3==DLCOLON) && (synpred95_TCS())) {
                            alt4=1;
                        }
                        else if ( (LA4_3==RPAREN) ) {
                            int LA4_5 = input.LA(4);

                            if ( (LA4_5==DLCOLON) && (synpred95_TCS())) {
                                alt4=1;
                            }
                            else if ( (LA4_5==RPAREN) && (synpred95_TCS())) {
                                alt4=1;
                            }


                        }


                    }


                }


                switch (alt4) {
            	case 1 :
            	    // parser/TCS.g:376:36: ( DLCOLON )=> ( DLCOLON ( (ret= model_modelelement[opName, ret, firstToken] ) ) )
            	    {
            	    // parser/TCS.g:376:47: ( DLCOLON ( (ret= model_modelelement[opName, ret, firstToken] ) ) )
            	    // parser/TCS.g:376:48: DLCOLON ( (ret= model_modelelement[opName, ret, firstToken] ) )
            	    {
            	    if ( state.backtracking==0 ) {
            	      _enterOpSeq("::", 2, false);
            	    }
            	    if ( state.backtracking==0 ) {
            	      _beforeSeqEl();
            	    }
            	    match(input,DLCOLON,FOLLOW_DLCOLON_in_dblcolon_priority_01115); if (state.failed) return ret2;
            	    if ( state.backtracking==0 ) {
            	      opName = "::";
            	    }
            	    if ( state.backtracking==0 ) {
            	      _afterSeqEl();
            	    }
            	    // parser/TCS.g:376:135: ( (ret= model_modelelement[opName, ret, firstToken] ) )
            	    // parser/TCS.g:376:136: (ret= model_modelelement[opName, ret, firstToken] )
            	    {
            	    // parser/TCS.g:376:136: (ret= model_modelelement[opName, ret, firstToken] )
            	    // parser/TCS.g:376:137: ret= model_modelelement[opName, ret, firstToken]
            	    {
            	    pushFollow(FOLLOW_model_modelelement_in_dblcolon_priority_01123);
            	    ret=model_modelelement(opName, ret, firstToken);

            	    checkFollows();
            	    state._fsp--;
            	    if (state.failed) return ret2;

            	    }


            	    }

            	    if ( state.backtracking==0 ) {
            	      _exitOpSeq();
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              this.setLocationAndComment(ret, firstToken);
              ret2=ret;
               
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "dblcolon_priority_0"


    // $ANTLR start "model_namespace"
    // parser/TCS.g:384:1: model_namespace returns [Object ret2] : ret= dblcolon_priority_0 ;
    public final Object model_namespace() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        try {
            // parser/TCS.g:385:3: (ret= dblcolon_priority_0 )
            // parser/TCS.g:386:3: ret= dblcolon_priority_0
            {
            pushFollow(FOLLOW_dblcolon_priority_0_in_model_namespace1155);
            ret=dblcolon_priority_0();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {

              ret2=ret;
               
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "model_namespace"


    // $ANTLR start "model_generalizableelement"
    // parser/TCS.g:393:1: model_generalizableelement returns [Object ret2] : ( (temp= identifier ) ) ;
    public final Object model_generalizableelement() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("Model","GeneralizableElement");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createReferenceProxy(metaType) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:398:3: ( ( (temp= identifier ) ) )
            // parser/TCS.g:399:3: ( (temp= identifier ) )
            {
            // parser/TCS.g:399:3: ( (temp= identifier ) )
            // parser/TCS.g:399:4: (temp= identifier )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7606C4831AFC11DF89C0E3828D1504C0");
            }
            // parser/TCS.g:399:63: (temp= identifier )
            // parser/TCS.g:399:65: temp= identifier
            {
            pushFollow(FOLLOW_identifier_in_model_generalizableelement1188);
            temp=identifier();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "name", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "model_generalizableelement"


    // $ANTLR start "model_modelelement"
    // parser/TCS.g:407:1: model_modelelement[java.lang.String opName, Object left, org.antlr.runtime.Token firstToken] returns [Object ret2] : ( (temp= identifier ) ) ;
    public final Object model_modelelement(java.lang.String opName, Object left, org.antlr.runtime.Token firstToken) throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("Model","ModelElement");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ?  createReferenceProxy(metaType) : null;


        try {
            // parser/TCS.g:412:3: ( ( (temp= identifier ) ) )
            // parser/TCS.g:413:3: ( (temp= identifier ) )
            {
            // parser/TCS.g:413:3: ( (temp= identifier ) )
            // parser/TCS.g:413:4: (temp= identifier )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD760935821AFC11DFA0FCE3828D1504C0");
            }
            // parser/TCS.g:413:63: (temp= identifier )
            // parser/TCS.g:413:65: temp= identifier
            {
            pushFollow(FOLLOW_identifier_in_model_modelelement1236);
            temp=identifier();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "name", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              // discarding operator name instead of storing it here
              setProperty(ret,"container" , left);
              ret2 = createOrResolve(ret, firstToken);
              onRuleElementCreationCommited(ret2);


            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "model_modelelement"


    // $ANTLR start "textblockdefinition_textblockdefinition"
    // parser/TCS.g:423:1: textblockdefinition_textblockdefinition returns [Object ret2] : () ;
    public final Object textblockdefinition_textblockdefinition() throws RecognitionException {

        Object ret2 = null;

        List<String> metaType=list("textblockdefinition","TextBlockDefinition");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:428:3: ( () )
            // parser/TCS.g:429:3: ()
            {
            // parser/TCS.g:429:3: ()
            // parser/TCS.g:429:4: 
            {
            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "textblockdefinition_textblockdefinition"


    // $ANTLR start "main"
    // parser/TCS.g:437:1: main returns [Object ret2] : ( (ret= tcs_concretesyntax ) EOF ) ;
    public final Object main() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        try {
            // parser/TCS.g:438:3: ( ( (ret= tcs_concretesyntax ) EOF ) )
            // parser/TCS.g:439:3: ( (ret= tcs_concretesyntax ) EOF )
            {
            // parser/TCS.g:439:3: ( (ret= tcs_concretesyntax ) EOF )
            // parser/TCS.g:439:4: (ret= tcs_concretesyntax ) EOF
            {
            // parser/TCS.g:439:4: (ret= tcs_concretesyntax )
            // parser/TCS.g:439:5: ret= tcs_concretesyntax
            {
            pushFollow(FOLLOW_tcs_concretesyntax_in_main1306);
            ret=tcs_concretesyntax();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;

            }

            match(input,EOF,FOLLOW_EOF_in_main1309); if (state.failed) return ret2;

            }

            if ( state.backtracking==0 ) {

              ret2=ret;

            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "main"


    // $ANTLR start "tcs_concretesyntax"
    // parser/TCS.g:446:1: tcs_concretesyntax returns [Object ret2] : ( 'syntax' (temp= identifier )? ( ( LPAREN 'k' EQ (temp= integerSymbol ) RPAREN ) | ) ( ( (temp= tcs_partitionhandling ) ) | ) LCURLY ( ( (temp= tcs_template (temp= tcs_template )* )? ( ( 'keywords' LCURLY ( ( (temp= tcs_keyword (temp= tcs_keyword )* )? ) ) RCURLY ) | ) ( ( 'symbols' LCURLY ( ( (temp= tcs_symbol (temp= tcs_symbol )* )? ) ) RCURLY ) | ) (temp= tcs_operatorlist (temp= tcs_operatorlist )* )? (temp= tcs_token (temp= tcs_token )* )? ( ( 'lexer' EQ (temp= stringSymbol ) SEMI ) | ) ) ) RCURLY ) ;
    public final Object tcs_concretesyntax() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","ConcreteSyntax");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, true, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:451:3: ( ( 'syntax' (temp= identifier )? ( ( LPAREN 'k' EQ (temp= integerSymbol ) RPAREN ) | ) ( ( (temp= tcs_partitionhandling ) ) | ) LCURLY ( ( (temp= tcs_template (temp= tcs_template )* )? ( ( 'keywords' LCURLY ( ( (temp= tcs_keyword (temp= tcs_keyword )* )? ) ) RCURLY ) | ) ( ( 'symbols' LCURLY ( ( (temp= tcs_symbol (temp= tcs_symbol )* )? ) ) RCURLY ) | ) (temp= tcs_operatorlist (temp= tcs_operatorlist )* )? (temp= tcs_token (temp= tcs_token )* )? ( ( 'lexer' EQ (temp= stringSymbol ) SEMI ) | ) ) ) RCURLY ) )
            // parser/TCS.g:452:3: ( 'syntax' (temp= identifier )? ( ( LPAREN 'k' EQ (temp= integerSymbol ) RPAREN ) | ) ( ( (temp= tcs_partitionhandling ) ) | ) LCURLY ( ( (temp= tcs_template (temp= tcs_template )* )? ( ( 'keywords' LCURLY ( ( (temp= tcs_keyword (temp= tcs_keyword )* )? ) ) RCURLY ) | ) ( ( 'symbols' LCURLY ( ( (temp= tcs_symbol (temp= tcs_symbol )* )? ) ) RCURLY ) | ) (temp= tcs_operatorlist (temp= tcs_operatorlist )* )? (temp= tcs_token (temp= tcs_token )* )? ( ( 'lexer' EQ (temp= stringSymbol ) SEMI ) | ) ) ) RCURLY )
            {
            // parser/TCS.g:452:3: ( 'syntax' (temp= identifier )? ( ( LPAREN 'k' EQ (temp= integerSymbol ) RPAREN ) | ) ( ( (temp= tcs_partitionhandling ) ) | ) LCURLY ( ( (temp= tcs_template (temp= tcs_template )* )? ( ( 'keywords' LCURLY ( ( (temp= tcs_keyword (temp= tcs_keyword )* )? ) ) RCURLY ) | ) ( ( 'symbols' LCURLY ( ( (temp= tcs_symbol (temp= tcs_symbol )* )? ) ) RCURLY ) | ) (temp= tcs_operatorlist (temp= tcs_operatorlist )* )? (temp= tcs_token (temp= tcs_token )* )? ( ( 'lexer' EQ (temp= stringSymbol ) SEMI ) | ) ) ) RCURLY )
            // parser/TCS.g:452:4: 'syntax' (temp= identifier )? ( ( LPAREN 'k' EQ (temp= integerSymbol ) RPAREN ) | ) ( ( (temp= tcs_partitionhandling ) ) | ) LCURLY ( ( (temp= tcs_template (temp= tcs_template )* )? ( ( 'keywords' LCURLY ( ( (temp= tcs_keyword (temp= tcs_keyword )* )? ) ) RCURLY ) | ) ( ( 'symbols' LCURLY ( ( (temp= tcs_symbol (temp= tcs_symbol )* )? ) ) RCURLY ) | ) (temp= tcs_operatorlist (temp= tcs_operatorlist )* )? (temp= tcs_token (temp= tcs_token )* )? ( ( 'lexer' EQ (temp= stringSymbol ) SEMI ) | ) ) ) RCURLY
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD760DF0701AFC11DFBEFEE3828D1504C0");
            }
            match(input,134,FOLLOW_134_in_tcs_concretesyntax1340); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD760DF0721AFC11DFA3ECE3828D1504C0");
            }
            // parser/TCS.g:452:146: (temp= identifier )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==NAME) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // parser/TCS.g:452:148: temp= identifier
                    {
                    pushFollow(FOLLOW_identifier_in_tcs_concretesyntax1347);
                    temp=identifier();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "name", temp);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD761061761AFC11DFC700E3828D1504C0");
            }
            // parser/TCS.g:452:276: ( ( LPAREN 'k' EQ (temp= integerSymbol ) RPAREN ) | )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==LPAREN) ) {
                alt6=1;
            }
            else if ( (LA6_0==LCURLY||LA6_0==98) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // parser/TCS.g:452:277: ( LPAREN 'k' EQ (temp= integerSymbol ) RPAREN )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:452:293: ( LPAREN 'k' EQ (temp= integerSymbol ) RPAREN )
                    // parser/TCS.g:452:294: LPAREN 'k' EQ (temp= integerSymbol ) RPAREN
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD760DF0761AFC11DFA3EDE3828D1504C0");
                    }
                    match(input,LPAREN,FOLLOW_LPAREN_in_tcs_concretesyntax1362); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD761061701AFC11DF9B72E3828D1504C0");
                    }
                    match(input,76,FOLLOW_76_in_tcs_concretesyntax1366); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD761061711AFC11DF9BE9E3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_concretesyntax1370); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD761061731AFC11DFCD06E3828D1504C0");
                    }
                    // parser/TCS.g:452:593: (temp= integerSymbol )
                    // parser/TCS.g:452:595: temp= integerSymbol
                    {
                    pushFollow(FOLLOW_integerSymbol_in_tcs_concretesyntax1378);
                    temp=integerSymbol();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "k", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD761061741AFC11DFBF09E3828D1504C0");
                    }
                    match(input,RPAREN,FOLLOW_RPAREN_in_tcs_concretesyntax1385); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:452:762: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7610617D1AFC11DFB3F8E3828D1504C0");
            }
            // parser/TCS.g:453:77: ( ( (temp= tcs_partitionhandling ) ) | )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==98) ) {
                alt7=1;
            }
            else if ( (LA7_0==LCURLY) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // parser/TCS.g:453:78: ( (temp= tcs_partitionhandling ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:453:94: ( (temp= tcs_partitionhandling ) )
                    // parser/TCS.g:453:95: (temp= tcs_partitionhandling )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7610617B1AFC11DFAA09E3828D1504C0");
                    }
                    // parser/TCS.g:453:154: (temp= tcs_partitionhandling )
                    // parser/TCS.g:453:156: temp= tcs_partitionhandling
                    {
                    pushFollow(FOLLOW_tcs_partitionhandling_in_tcs_concretesyntax1412);
                    temp=tcs_partitionhandling();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "partitionHandling", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:453:264: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7610617E1AFC11DF95D3E3828D1504C0");
            }
            match(input,LCURLY,FOLLOW_LCURLY_in_tcs_concretesyntax1432); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76178D621AFC11DFB78AE3828D1504C0");
            }
            // parser/TCS.g:454:159: ( ( (temp= tcs_template (temp= tcs_template )* )? ( ( 'keywords' LCURLY ( ( (temp= tcs_keyword (temp= tcs_keyword )* )? ) ) RCURLY ) | ) ( ( 'symbols' LCURLY ( ( (temp= tcs_symbol (temp= tcs_symbol )* )? ) ) RCURLY ) | ) (temp= tcs_operatorlist (temp= tcs_operatorlist )* )? (temp= tcs_token (temp= tcs_token )* )? ( ( 'lexer' EQ (temp= stringSymbol ) SEMI ) | ) ) )
            // parser/TCS.g:454:160: ( (temp= tcs_template (temp= tcs_template )* )? ( ( 'keywords' LCURLY ( ( (temp= tcs_keyword (temp= tcs_keyword )* )? ) ) RCURLY ) | ) ( ( 'symbols' LCURLY ( ( (temp= tcs_symbol (temp= tcs_symbol )* )? ) ) RCURLY ) | ) (temp= tcs_operatorlist (temp= tcs_operatorlist )* )? (temp= tcs_token (temp= tcs_token )* )? ( ( 'lexer' EQ (temp= stringSymbol ) SEMI ) | ) )
            {
            // parser/TCS.g:454:160: ( (temp= tcs_template (temp= tcs_template )* )? ( ( 'keywords' LCURLY ( ( (temp= tcs_keyword (temp= tcs_keyword )* )? ) ) RCURLY ) | ) ( ( 'symbols' LCURLY ( ( (temp= tcs_symbol (temp= tcs_symbol )* )? ) ) RCURLY ) | ) (temp= tcs_operatorlist (temp= tcs_operatorlist )* )? (temp= tcs_token (temp= tcs_token )* )? ( ( 'lexer' EQ (temp= stringSymbol ) SEMI ) | ) )
            // parser/TCS.g:454:161: (temp= tcs_template (temp= tcs_template )* )? ( ( 'keywords' LCURLY ( ( (temp= tcs_keyword (temp= tcs_keyword )* )? ) ) RCURLY ) | ) ( ( 'symbols' LCURLY ( ( (temp= tcs_symbol (temp= tcs_symbol )* )? ) ) RCURLY ) | ) (temp= tcs_operatorlist (temp= tcs_operatorlist )* )? (temp= tcs_token (temp= tcs_token )* )? ( ( 'lexer' EQ (temp= stringSymbol ) SEMI ) | )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD761061801AFC11DF8194E3828D1504C0");
            }
            // parser/TCS.g:454:220: (temp= tcs_template (temp= tcs_template )* )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==57||LA9_0==63||LA9_0==74||LA9_0==89||LA9_0==131) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // parser/TCS.g:454:222: temp= tcs_template (temp= tcs_template )*
                    {
                    pushFollow(FOLLOW_tcs_template_in_tcs_concretesyntax1443);
                    temp=tcs_template();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "templates", temp);
                    }
                    // parser/TCS.g:454:279: (temp= tcs_template )*
                    loop8:
                    do {
                        int alt8=2;
                        int LA8_0 = input.LA(1);

                        if ( (LA8_0==57||LA8_0==63||LA8_0==74||LA8_0==89||LA8_0==131) ) {
                            alt8=1;
                        }


                        switch (alt8) {
                    	case 1 :
                    	    // parser/TCS.g:454:281: temp= tcs_template
                    	    {
                    	    pushFollow(FOLLOW_tcs_template_in_tcs_concretesyntax1451);
                    	    temp=tcs_template();

                    	    checkFollows();
                    	    state._fsp--;
                    	    if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      setProperty(ret, "templates", temp);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop8;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7612AB621AFC11DFA859E3828D1504C0");
            }
            // parser/TCS.g:454:419: ( ( 'keywords' LCURLY ( ( (temp= tcs_keyword (temp= tcs_keyword )* )? ) ) RCURLY ) | )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==64) ) {
                alt12=1;
            }
            else if ( (LA12_0==RCURLY||LA12_0==93||LA12_0==110||LA12_0==122||LA12_0==126||LA12_0==140) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // parser/TCS.g:454:420: ( 'keywords' LCURLY ( ( (temp= tcs_keyword (temp= tcs_keyword )* )? ) ) RCURLY )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:454:436: ( 'keywords' LCURLY ( ( (temp= tcs_keyword (temp= tcs_keyword )* )? ) ) RCURLY )
                    // parser/TCS.g:454:437: 'keywords' LCURLY ( ( (temp= tcs_keyword (temp= tcs_keyword )* )? ) ) RCURLY
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD761061841AFC11DF9EC4E3828D1504C0");
                    }
                    match(input,64,FOLLOW_64_in_tcs_concretesyntax1468); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD761061851AFC11DFB7C4E3828D1504C0");
                    }
                    match(input,LCURLY,FOLLOW_LCURLY_in_tcs_concretesyntax1472); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD761061891AFC11DFA087E3828D1504C0");
                    }
                    // parser/TCS.g:454:664: ( ( (temp= tcs_keyword (temp= tcs_keyword )* )? ) )
                    // parser/TCS.g:454:665: ( (temp= tcs_keyword (temp= tcs_keyword )* )? )
                    {
                    // parser/TCS.g:454:665: ( (temp= tcs_keyword (temp= tcs_keyword )* )? )
                    // parser/TCS.g:454:666: (temp= tcs_keyword (temp= tcs_keyword )* )?
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD761061871AFC11DFAB4BE3828D1504C0");
                    }
                    // parser/TCS.g:454:725: (temp= tcs_keyword (temp= tcs_keyword )* )?
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==NAME||LA11_0==EQ) ) {
                        alt11=1;
                    }
                    switch (alt11) {
                        case 1 :
                            // parser/TCS.g:454:727: temp= tcs_keyword (temp= tcs_keyword )*
                            {
                            pushFollow(FOLLOW_tcs_keyword_in_tcs_concretesyntax1483);
                            temp=tcs_keyword();

                            checkFollows();
                            state._fsp--;
                            if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "keywords", temp);
                            }
                            // parser/TCS.g:454:782: (temp= tcs_keyword )*
                            loop10:
                            do {
                                int alt10=2;
                                int LA10_0 = input.LA(1);

                                if ( (LA10_0==NAME||LA10_0==EQ) ) {
                                    alt10=1;
                                }


                                switch (alt10) {
                            	case 1 :
                            	    // parser/TCS.g:454:784: temp= tcs_keyword
                            	    {
                            	    pushFollow(FOLLOW_tcs_keyword_in_tcs_concretesyntax1491);
                            	    temp=tcs_keyword();

                            	    checkFollows();
                            	    state._fsp--;
                            	    if (state.failed) return ret2;
                            	    if ( state.backtracking==0 ) {
                            	      setProperty(ret, "keywords", temp);
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop10;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7612AB601AFC11DF8864E3828D1504C0");
                    }
                    match(input,RCURLY,FOLLOW_RCURLY_in_tcs_concretesyntax1506); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:454:979: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7612AB6E1AFC11DFBE16E3828D1504C0");
            }
            // parser/TCS.g:455:77: ( ( 'symbols' LCURLY ( ( (temp= tcs_symbol (temp= tcs_symbol )* )? ) ) RCURLY ) | )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==93) ) {
                alt15=1;
            }
            else if ( (LA15_0==RCURLY||LA15_0==110||LA15_0==122||LA15_0==126||LA15_0==140) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // parser/TCS.g:455:78: ( 'symbols' LCURLY ( ( (temp= tcs_symbol (temp= tcs_symbol )* )? ) ) RCURLY )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:455:94: ( 'symbols' LCURLY ( ( (temp= tcs_symbol (temp= tcs_symbol )* )? ) ) RCURLY )
                    // parser/TCS.g:455:95: 'symbols' LCURLY ( ( (temp= tcs_symbol (temp= tcs_symbol )* )? ) ) RCURLY
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7612AB661AFC11DFA8D5E3828D1504C0");
                    }
                    match(input,93,FOLLOW_93_in_tcs_concretesyntax1529); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7612AB671AFC11DFB19CE3828D1504C0");
                    }
                    match(input,LCURLY,FOLLOW_LCURLY_in_tcs_concretesyntax1533); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7612AB6B1AFC11DF9726E3828D1504C0");
                    }
                    // parser/TCS.g:455:321: ( ( (temp= tcs_symbol (temp= tcs_symbol )* )? ) )
                    // parser/TCS.g:455:322: ( (temp= tcs_symbol (temp= tcs_symbol )* )? )
                    {
                    // parser/TCS.g:455:322: ( (temp= tcs_symbol (temp= tcs_symbol )* )? )
                    // parser/TCS.g:455:323: (temp= tcs_symbol (temp= tcs_symbol )* )?
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7612AB691AFC11DFA873E3828D1504C0");
                    }
                    // parser/TCS.g:455:382: (temp= tcs_symbol (temp= tcs_symbol )* )?
                    int alt14=2;
                    int LA14_0 = input.LA(1);

                    if ( (LA14_0==NAME||LA14_0==EQ) ) {
                        alt14=1;
                    }
                    switch (alt14) {
                        case 1 :
                            // parser/TCS.g:455:384: temp= tcs_symbol (temp= tcs_symbol )*
                            {
                            pushFollow(FOLLOW_tcs_symbol_in_tcs_concretesyntax1544);
                            temp=tcs_symbol();

                            checkFollows();
                            state._fsp--;
                            if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "symbols", temp);
                            }
                            // parser/TCS.g:455:437: (temp= tcs_symbol )*
                            loop13:
                            do {
                                int alt13=2;
                                int LA13_0 = input.LA(1);

                                if ( (LA13_0==NAME||LA13_0==EQ) ) {
                                    alt13=1;
                                }


                                switch (alt13) {
                            	case 1 :
                            	    // parser/TCS.g:455:439: temp= tcs_symbol
                            	    {
                            	    pushFollow(FOLLOW_tcs_symbol_in_tcs_concretesyntax1552);
                            	    temp=tcs_symbol();

                            	    checkFollows();
                            	    state._fsp--;
                            	    if (state.failed) return ret2;
                            	    if ( state.backtracking==0 ) {
                            	      setProperty(ret, "symbols", temp);
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop13;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7612AB6C1AFC11DF8BD5E3828D1504C0");
                    }
                    match(input,RCURLY,FOLLOW_RCURLY_in_tcs_concretesyntax1567); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:455:632: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7612AB701AFC11DFB2E5E3828D1504C0");
            }
            // parser/TCS.g:456:76: (temp= tcs_operatorlist (temp= tcs_operatorlist )* )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==126) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // parser/TCS.g:456:78: temp= tcs_operatorlist (temp= tcs_operatorlist )*
                    {
                    pushFollow(FOLLOW_tcs_operatorlist_in_tcs_concretesyntax1588);
                    temp=tcs_operatorlist();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "operatorLists", temp);
                    }
                    // parser/TCS.g:456:143: (temp= tcs_operatorlist )*
                    loop16:
                    do {
                        int alt16=2;
                        int LA16_0 = input.LA(1);

                        if ( (LA16_0==126) ) {
                            alt16=1;
                        }


                        switch (alt16) {
                    	case 1 :
                    	    // parser/TCS.g:456:145: temp= tcs_operatorlist
                    	    {
                    	    pushFollow(FOLLOW_tcs_operatorlist_in_tcs_concretesyntax1596);
                    	    temp=tcs_operatorlist();

                    	    checkFollows();
                    	    state._fsp--;
                    	    if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      setProperty(ret, "operatorLists", temp);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop16;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76151C611AFC11DF812BE3828D1504C0");
            }
            // parser/TCS.g:456:290: (temp= tcs_token (temp= tcs_token )* )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==110||LA19_0==140) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // parser/TCS.g:456:292: temp= tcs_token (temp= tcs_token )*
                    {
                    pushFollow(FOLLOW_tcs_token_in_tcs_concretesyntax1611);
                    temp=tcs_token();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "tokens", temp);
                    }
                    // parser/TCS.g:456:343: (temp= tcs_token )*
                    loop18:
                    do {
                        int alt18=2;
                        int LA18_0 = input.LA(1);

                        if ( (LA18_0==110||LA18_0==140) ) {
                            alt18=1;
                        }


                        switch (alt18) {
                    	case 1 :
                    	    // parser/TCS.g:456:345: temp= tcs_token
                    	    {
                    	    pushFollow(FOLLOW_tcs_token_in_tcs_concretesyntax1619);
                    	    temp=tcs_token();

                    	    checkFollows();
                    	    state._fsp--;
                    	    if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      setProperty(ret, "tokens", temp);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop18;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76151C6C1AFC11DFC93DE3828D1504C0");
            }
            // parser/TCS.g:456:477: ( ( 'lexer' EQ (temp= stringSymbol ) SEMI ) | )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==122) ) {
                alt20=1;
            }
            else if ( (LA20_0==RCURLY) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // parser/TCS.g:456:478: ( 'lexer' EQ (temp= stringSymbol ) SEMI )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:456:494: ( 'lexer' EQ (temp= stringSymbol ) SEMI )
                    // parser/TCS.g:456:495: 'lexer' EQ (temp= stringSymbol ) SEMI
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76151C651AFC11DF9747E3828D1504C0");
                    }
                    match(input,122,FOLLOW_122_in_tcs_concretesyntax1636); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76151C661AFC11DFA4BBE3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_concretesyntax1640); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76151C691AFC11DF9DF1E3828D1504C0");
                    }
                    // parser/TCS.g:456:715: (temp= stringSymbol )
                    // parser/TCS.g:456:717: temp= stringSymbol
                    {
                    pushFollow(FOLLOW_stringSymbol_in_tcs_concretesyntax1648);
                    temp=stringSymbol();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "lexer", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76151C6A1AFC11DFB12BE3828D1504C0");
                    }
                    match(input,SEMI,FOLLOW_SEMI_in_tcs_concretesyntax1655); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:456:885: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }


            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76178D631AFC11DFAAA4E3828D1504C0");
            }
            match(input,RCURLY,FOLLOW_RCURLY_in_tcs_concretesyntax1676); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, true);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_concretesyntax"


    // $ANTLR start "reference"
    // parser/TCS.g:465:1: reference[Object ret] : ( ( ( (temp= model_classifier ) ) | ( RARROW (temp= identifier ( ( DLCOLON ) temp= identifier )* )? ) ) ) ;
    public final void reference(Object ret) throws RecognitionException {
        Object temp = null;


        try {
            // parser/TCS.g:466:3: ( ( ( ( (temp= model_classifier ) ) | ( RARROW (temp= identifier ( ( DLCOLON ) temp= identifier )* )? ) ) ) )
            // parser/TCS.g:467:3: ( ( ( (temp= model_classifier ) ) | ( RARROW (temp= identifier ( ( DLCOLON ) temp= identifier )* )? ) ) )
            {
            // parser/TCS.g:467:3: ( ( ( (temp= model_classifier ) ) | ( RARROW (temp= identifier ( ( DLCOLON ) temp= identifier )* )? ) ) )
            // parser/TCS.g:467:4: ( ( (temp= model_classifier ) ) | ( RARROW (temp= identifier ( ( DLCOLON ) temp= identifier )* )? ) )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD761C48531AFC11DFBB93E3828D1504C0");
            }
            // parser/TCS.g:467:64: ( ( (temp= model_classifier ) ) | ( RARROW (temp= identifier ( ( DLCOLON ) temp= identifier )* )? ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==NAME||LA23_0==LPAREN) ) {
                alt23=1;
            }
            else if ( (LA23_0==RARROW) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // parser/TCS.g:467:65: ( (temp= model_classifier ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:467:81: ( (temp= model_classifier ) )
                    // parser/TCS.g:467:82: (temp= model_classifier )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7619D7541AFC11DF9D68E3828D1504C0");
                    }
                    // parser/TCS.g:467:141: (temp= model_classifier )
                    // parser/TCS.g:467:143: temp= model_classifier
                    {
                    pushFollow(FOLLOW_model_classifier_in_reference1721);
                    temp=model_classifier();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "metaReference", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:467:242: ( RARROW (temp= identifier ( ( DLCOLON ) temp= identifier )* )? )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    // parser/TCS.g:467:258: ( RARROW (temp= identifier ( ( DLCOLON ) temp= identifier )* )? )
                    // parser/TCS.g:467:259: RARROW (temp= identifier ( ( DLCOLON ) temp= identifier )* )?
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7619D7561AFC11DFC22BE3828D1504C0");
                    }
                    match(input,RARROW,FOLLOW_RARROW_in_reference1737); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD761C48511AFC11DFAFBCE3828D1504C0");
                    }
                    // parser/TCS.g:467:401: (temp= identifier ( ( DLCOLON ) temp= identifier )* )?
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==NAME) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            // parser/TCS.g:467:403: temp= identifier ( ( DLCOLON ) temp= identifier )*
                            {
                            pushFollow(FOLLOW_identifier_in_reference1745);
                            temp=identifier();

                            checkFollows();
                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "names", temp);
                            }
                            // parser/TCS.g:467:454: ( ( DLCOLON ) temp= identifier )*
                            loop21:
                            do {
                                int alt21=2;
                                int LA21_0 = input.LA(1);

                                if ( (LA21_0==DLCOLON) ) {
                                    alt21=1;
                                }


                                switch (alt21) {
                            	case 1 :
                            	    // parser/TCS.g:467:455: ( DLCOLON ) temp= identifier
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	      _enterSepSeq();
                            	    }
                            	    // parser/TCS.g:467:472: ( DLCOLON )
                            	    // parser/TCS.g:467:473: DLCOLON
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	      _beforeSeqEl("E0DCF6CD7619D7581AFC11DFC816E3828D1504C0");
                            	    }
                            	    match(input,DLCOLON,FOLLOW_DLCOLON_in_reference1754); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {
                            	      _afterSeqEl();
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	      _exitSepSeq();
                            	    }
                            	    pushFollow(FOLLOW_identifier_in_reference1762);
                            	    temp=identifier();

                            	    checkFollows();
                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {
                            	      setProperty(ret, "names", temp);
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop21;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

                
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "reference"


    // $ANTLR start "tcs_template"
    // parser/TCS.g:475:1: tcs_template returns [Object ret2] : (ret= tcs_contexttemplate | ret= tcs_primitivetemplate | ret= tcs_enumerationtemplate | ret= tcs_functiontemplate ) ;
    public final Object tcs_template() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        try {
            // parser/TCS.g:476:3: ( (ret= tcs_contexttemplate | ret= tcs_primitivetemplate | ret= tcs_enumerationtemplate | ret= tcs_functiontemplate ) )
            // parser/TCS.g:477:3: (ret= tcs_contexttemplate | ret= tcs_primitivetemplate | ret= tcs_enumerationtemplate | ret= tcs_functiontemplate )
            {
            // parser/TCS.g:477:3: (ret= tcs_contexttemplate | ret= tcs_primitivetemplate | ret= tcs_enumerationtemplate | ret= tcs_functiontemplate )
            int alt24=4;
            switch ( input.LA(1) ) {
            case 74:
            case 89:
                {
                alt24=1;
                }
                break;
            case 63:
                {
                alt24=2;
                }
                break;
            case 131:
                {
                alt24=3;
                }
                break;
            case 57:
                {
                alt24=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // parser/TCS.g:477:4: ret= tcs_contexttemplate
                    {
                    pushFollow(FOLLOW_tcs_contexttemplate_in_tcs_template1803);
                    ret=tcs_contexttemplate();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 2 :
                    // parser/TCS.g:478:5: ret= tcs_primitivetemplate
                    {
                    pushFollow(FOLLOW_tcs_primitivetemplate_in_tcs_template1811);
                    ret=tcs_primitivetemplate();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 3 :
                    // parser/TCS.g:479:5: ret= tcs_enumerationtemplate
                    {
                    pushFollow(FOLLOW_tcs_enumerationtemplate_in_tcs_template1819);
                    ret=tcs_enumerationtemplate();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 4 :
                    // parser/TCS.g:480:5: ret= tcs_functiontemplate
                    {
                    pushFollow(FOLLOW_tcs_functiontemplate_in_tcs_template1827);
                    ret=tcs_functiontemplate();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              ret2=ret;
               
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_template"


    // $ANTLR start "tcs_contexttemplate"
    // parser/TCS.g:487:1: tcs_contexttemplate returns [Object ret2] : (ret= tcs_classtemplate | ret= tcs_operatortemplate ) ;
    public final Object tcs_contexttemplate() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        try {
            // parser/TCS.g:488:3: ( (ret= tcs_classtemplate | ret= tcs_operatortemplate ) )
            // parser/TCS.g:489:3: (ret= tcs_classtemplate | ret= tcs_operatortemplate )
            {
            // parser/TCS.g:489:3: (ret= tcs_classtemplate | ret= tcs_operatortemplate )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==74) ) {
                alt25=1;
            }
            else if ( (LA25_0==89) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // parser/TCS.g:489:4: ret= tcs_classtemplate
                    {
                    pushFollow(FOLLOW_tcs_classtemplate_in_tcs_contexttemplate1854);
                    ret=tcs_classtemplate();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 2 :
                    // parser/TCS.g:490:5: ret= tcs_operatortemplate
                    {
                    pushFollow(FOLLOW_tcs_operatortemplate_in_tcs_contexttemplate1862);
                    ret=tcs_operatortemplate();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              ret2=ret;
               
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_contexttemplate"


    // $ANTLR start "tcs_primitivetemplate"
    // parser/TCS.g:497:1: tcs_primitivetemplate returns [Object ret2] : ( 'primitiveTemplate' (temp= identifier ) 'for' reference[ret] ( ( 'default' ) | ) 'using' (temp= identifier ) ( ( 'orKeyword' ) | ) COLON 'value' EQ (temp= stringSymbol ) ( ( COMA 'serializer' EQ (temp= stringSymbol ) ) | ) SEMI (temp= textblockdefinition_textblockdefinition )? ) ;
    public final Object tcs_primitivetemplate() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","PrimitiveTemplate");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:502:3: ( ( 'primitiveTemplate' (temp= identifier ) 'for' reference[ret] ( ( 'default' ) | ) 'using' (temp= identifier ) ( ( 'orKeyword' ) | ) COLON 'value' EQ (temp= stringSymbol ) ( ( COMA 'serializer' EQ (temp= stringSymbol ) ) | ) SEMI (temp= textblockdefinition_textblockdefinition )? ) )
            // parser/TCS.g:503:3: ( 'primitiveTemplate' (temp= identifier ) 'for' reference[ret] ( ( 'default' ) | ) 'using' (temp= identifier ) ( ( 'orKeyword' ) | ) COLON 'value' EQ (temp= stringSymbol ) ( ( COMA 'serializer' EQ (temp= stringSymbol ) ) | ) SEMI (temp= textblockdefinition_textblockdefinition )? )
            {
            // parser/TCS.g:503:3: ( 'primitiveTemplate' (temp= identifier ) 'for' reference[ret] ( ( 'default' ) | ) 'using' (temp= identifier ) ( ( 'orKeyword' ) | ) COLON 'value' EQ (temp= stringSymbol ) ( ( COMA 'serializer' EQ (temp= stringSymbol ) ) | ) SEMI (temp= textblockdefinition_textblockdefinition )? )
            // parser/TCS.g:503:4: 'primitiveTemplate' (temp= identifier ) 'for' reference[ret] ( ( 'default' ) | ) 'using' (temp= identifier ) ( ( 'orKeyword' ) | ) COLON 'value' EQ (temp= stringSymbol ) ( ( COMA 'serializer' EQ (temp= stringSymbol ) ) | ) SEMI (temp= textblockdefinition_textblockdefinition )?
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD762374401AFC11DF85A0E3828D1504C0");
            }
            match(input,63,FOLLOW_63_in_tcs_primitivetemplate1892); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD762374421AFC11DFCFCAE3828D1504C0");
            }
            // parser/TCS.g:503:157: (temp= identifier )
            // parser/TCS.g:503:159: temp= identifier
            {
            pushFollow(FOLLOW_identifier_in_tcs_primitivetemplate1899);
            temp=identifier();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "templateName", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD762374431AFC11DFC198E3828D1504C0");
            }
            match(input,120,FOLLOW_120_in_tcs_primitivetemplate1905); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD762374441AFC11DFA641E3828D1504C0");
            }
            pushFollow(FOLLOW_reference_in_tcs_primitivetemplate1908);
            reference(ret);

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7625BE331AFC11DF9BF5E3828D1504C0");
            }
            // parser/TCS.g:503:462: ( ( 'default' ) | )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==71) ) {
                alt26=1;
            }
            else if ( (LA26_0==95) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // parser/TCS.g:503:463: ( 'default' )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:503:479: ( 'default' )
                    // parser/TCS.g:503:480: 'default'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7625BE311AFC11DFB7B5E3828D1504C0");
                    }
                    match(input,71,FOLLOW_71_in_tcs_primitivetemplate1918); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isDefault", java.lang.Boolean.TRUE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:503:638: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isDefault", java.lang.Boolean.FALSE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7625BE341AFC11DFC583E3828D1504C0");
            }
            match(input,95,FOLLOW_95_in_tcs_primitivetemplate1936); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7625BE361AFC11DFB8F7E3828D1504C0");
            }
            // parser/TCS.g:504:158: (temp= identifier )
            // parser/TCS.g:504:160: temp= identifier
            {
            pushFollow(FOLLOW_identifier_in_tcs_primitivetemplate1943);
            temp=identifier();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "tokenName", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7625BE3C1AFC11DFC585E3828D1504C0");
            }
            // parser/TCS.g:504:291: ( ( 'orKeyword' ) | )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==87) ) {
                alt27=1;
            }
            else if ( (LA27_0==COLON) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // parser/TCS.g:504:292: ( 'orKeyword' )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:504:308: ( 'orKeyword' )
                    // parser/TCS.g:504:309: 'orKeyword'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7625BE3A1AFC11DFAB68E3828D1504C0");
                    }
                    match(input,87,FOLLOW_87_in_tcs_primitivetemplate1955); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "orKeyword", java.lang.Boolean.TRUE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:504:469: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "orKeyword", java.lang.Boolean.FALSE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7625BE3D1AFC11DF8068E3828D1504C0");
            }
            match(input,COLON,FOLLOW_COLON_in_tcs_primitivetemplate1974); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7625BE3E1AFC11DFCB96E3828D1504C0");
            }
            match(input,125,FOLLOW_125_in_tcs_primitivetemplate1978); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7625BE3F1AFC11DFBEE1E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_primitivetemplate1982); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7625BE421AFC11DFAA35E3828D1504C0");
            }
            // parser/TCS.g:505:319: (temp= stringSymbol )
            // parser/TCS.g:505:321: temp= stringSymbol
            {
            pushFollow(FOLLOW_stringSymbol_in_tcs_primitivetemplate1990);
            temp=stringSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "value", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7625BE4D1AFC11DF923AE3828D1504C0");
            }
            // parser/TCS.g:505:450: ( ( COMA 'serializer' EQ (temp= stringSymbol ) ) | )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==COMA) ) {
                alt28=1;
            }
            else if ( (LA28_0==SEMI) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // parser/TCS.g:505:451: ( COMA 'serializer' EQ (temp= stringSymbol ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:505:467: ( COMA 'serializer' EQ (temp= stringSymbol ) )
                    // parser/TCS.g:505:468: COMA 'serializer' EQ (temp= stringSymbol )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7625BE461AFC11DF86C8E3828D1504C0");
                    }
                    match(input,COMA,FOLLOW_COMA_in_tcs_primitivetemplate2003); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7625BE471AFC11DF805BE3828D1504C0");
                    }
                    match(input,68,FOLLOW_68_in_tcs_primitivetemplate2007); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7625BE481AFC11DFBBF0E3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_primitivetemplate2011); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7625BE4B1AFC11DFA467E3828D1504C0");
                    }
                    // parser/TCS.g:505:774: (temp= stringSymbol )
                    // parser/TCS.g:505:776: temp= stringSymbol
                    {
                    pushFollow(FOLLOW_stringSymbol_in_tcs_primitivetemplate2019);
                    temp=stringSymbol();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "serializer", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:505:868: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7625BE4E1AFC11DFBC3AE3828D1504C0");
            }
            match(input,SEMI,FOLLOW_SEMI_in_tcs_primitivetemplate2039); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76282F301AFC11DFC274E3828D1504C0");
            }
            // parser/TCS.g:506:157: (temp= textblockdefinition_textblockdefinition )?
            int alt29=2;
            alt29 = dfa29.predict(input);
            switch (alt29) {
                case 1 :
                    // parser/TCS.g:506:159: temp= textblockdefinition_textblockdefinition
                    {
                    pushFollow(FOLLOW_textblockdefinition_textblockdefinition_in_tcs_primitivetemplate2047);
                    temp=textblockdefinition_textblockdefinition();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "textBlockDefinition", temp);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_primitivetemplate"


    // $ANTLR start "tcs_enumerationtemplate"
    // parser/TCS.g:514:1: tcs_enumerationtemplate returns [Object ret2] : ( 'enumerationTemplate' reference[ret] ( ( 'auto' ) | ) ( ( ( ( COLON ( ( (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )? ) ) SEMI ) ) ) | ( SEMI ) ) (temp= textblockdefinition_textblockdefinition )? ) ;
    public final Object tcs_enumerationtemplate() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","EnumerationTemplate");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, true, true) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:519:3: ( ( 'enumerationTemplate' reference[ret] ( ( 'auto' ) | ) ( ( ( ( COLON ( ( (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )? ) ) SEMI ) ) ) | ( SEMI ) ) (temp= textblockdefinition_textblockdefinition )? ) )
            // parser/TCS.g:520:3: ( 'enumerationTemplate' reference[ret] ( ( 'auto' ) | ) ( ( ( ( COLON ( ( (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )? ) ) SEMI ) ) ) | ( SEMI ) ) (temp= textblockdefinition_textblockdefinition )? )
            {
            // parser/TCS.g:520:3: ( 'enumerationTemplate' reference[ret] ( ( 'auto' ) | ) ( ( ( ( COLON ( ( (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )? ) ) SEMI ) ) ) | ( SEMI ) ) (temp= textblockdefinition_textblockdefinition )? )
            // parser/TCS.g:520:4: 'enumerationTemplate' reference[ret] ( ( 'auto' ) | ) ( ( ( ( COLON ( ( (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )? ) ) SEMI ) ) ) | ( SEMI ) ) (temp= textblockdefinition_textblockdefinition )?
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD762A79201AFC11DFBAA9E3828D1504C0");
            }
            match(input,131,FOLLOW_131_in_tcs_enumerationtemplate2092); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD762A79211AFC11DFCA66E3828D1504C0");
            }
            pushFollow(FOLLOW_reference_in_tcs_enumerationtemplate2095);
            reference(ret);

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD762A79271AFC11DF9BDAE3828D1504C0");
            }
            // parser/TCS.g:520:249: ( ( 'auto' ) | )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==128) ) {
                alt30=1;
            }
            else if ( (LA30_0==SEMI||LA30_0==COLON) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // parser/TCS.g:520:250: ( 'auto' )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:520:266: ( 'auto' )
                    // parser/TCS.g:520:267: 'auto'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD762A79251AFC11DF949BE3828D1504C0");
                    }
                    match(input,128,FOLLOW_128_in_tcs_enumerationtemplate2105); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "automatic", java.lang.Boolean.TRUE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:520:422: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "automatic", java.lang.Boolean.FALSE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD762CEA201AFC11DFAF48E3828D1504C0");
            }
            // parser/TCS.g:521:77: ( ( ( ( COLON ( ( (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )? ) ) SEMI ) ) ) | ( SEMI ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==COLON) ) {
                alt33=1;
            }
            else if ( (LA33_0==SEMI) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // parser/TCS.g:521:78: ( ( ( COLON ( ( (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )? ) ) SEMI ) ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:521:94: ( ( ( COLON ( ( (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )? ) ) SEMI ) ) )
                    // parser/TCS.g:521:95: ( ( COLON ( ( (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )? ) ) SEMI ) )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD762A79361AFC11DFC154E3828D1504C0");
                    }
                    // parser/TCS.g:521:154: ( ( COLON ( ( (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )? ) ) SEMI ) )
                    // parser/TCS.g:521:155: ( COLON ( ( (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )? ) ) SEMI )
                    {
                    // parser/TCS.g:521:155: ( COLON ( ( (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )? ) ) SEMI )
                    // parser/TCS.g:521:156: COLON ( ( (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )? ) ) SEMI
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD762A792B1AFC11DF8ABBE3828D1504C0");
                    }
                    match(input,COLON,FOLLOW_COLON_in_tcs_enumerationtemplate2133); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD762A79331AFC11DFB4C6E3828D1504C0");
                    }
                    // parser/TCS.g:521:297: ( ( (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )? ) )
                    // parser/TCS.g:521:298: ( (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )? )
                    {
                    // parser/TCS.g:521:298: ( (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )? )
                    // parser/TCS.g:521:299: (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )?
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD762A79301AFC11DF96EFE3828D1504C0");
                    }
                    // parser/TCS.g:521:358: (temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )* )?
                    int alt32=2;
                    int LA32_0 = input.LA(1);

                    if ( (LA32_0==SHARP) ) {
                        alt32=1;
                    }
                    switch (alt32) {
                        case 1 :
                            // parser/TCS.g:521:360: temp= tcs_enumliteralmapping ( ( COMA ) temp= tcs_enumliteralmapping )*
                            {
                            pushFollow(FOLLOW_tcs_enumliteralmapping_in_tcs_enumerationtemplate2144);
                            temp=tcs_enumliteralmapping();

                            checkFollows();
                            state._fsp--;
                            if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "mappings", temp);
                            }
                            // parser/TCS.g:521:426: ( ( COMA ) temp= tcs_enumliteralmapping )*
                            loop31:
                            do {
                                int alt31=2;
                                int LA31_0 = input.LA(1);

                                if ( (LA31_0==COMA) ) {
                                    alt31=1;
                                }


                                switch (alt31) {
                            	case 1 :
                            	    // parser/TCS.g:521:427: ( COMA ) temp= tcs_enumliteralmapping
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	      _enterSepSeq();
                            	    }
                            	    // parser/TCS.g:521:444: ( COMA )
                            	    // parser/TCS.g:521:445: COMA
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	      _beforeSeqEl("E0DCF6CD762A792D1AFC11DF9EAFE3828D1504C0");
                            	    }
                            	    match(input,COMA,FOLLOW_COMA_in_tcs_enumerationtemplate2153); if (state.failed) return ret2;
                            	    if ( state.backtracking==0 ) {
                            	      _afterSeqEl();
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	      _exitSepSeq();
                            	    }
                            	    pushFollow(FOLLOW_tcs_enumliteralmapping_in_tcs_enumerationtemplate2161);
                            	    temp=tcs_enumliteralmapping();

                            	    checkFollows();
                            	    state._fsp--;
                            	    if (state.failed) return ret2;
                            	    if ( state.backtracking==0 ) {
                            	      setProperty(ret, "mappings", temp);
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop31;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD762A79341AFC11DFAB6FE3828D1504C0");
                    }
                    match(input,SEMI,FOLLOW_SEMI_in_tcs_enumerationtemplate2176); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:521:766: ( SEMI )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    // parser/TCS.g:521:782: ( SEMI )
                    // parser/TCS.g:521:783: SEMI
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD762A79381AFC11DFBDAEE3828D1504C0");
                    }
                    match(input,SEMI,FOLLOW_SEMI_in_tcs_enumerationtemplate2193); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD762CEA231AFC11DFB4D5E3828D1504C0");
            }
            // parser/TCS.g:522:76: (temp= textblockdefinition_textblockdefinition )?
            int alt34=2;
            alt34 = dfa34.predict(input);
            switch (alt34) {
                case 1 :
                    // parser/TCS.g:522:78: temp= textblockdefinition_textblockdefinition
                    {
                    pushFollow(FOLLOW_textblockdefinition_textblockdefinition_in_tcs_enumerationtemplate2207);
                    temp=textblockdefinition_textblockdefinition();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "textBlockDefinition", temp);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, true);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_enumerationtemplate"


    // $ANTLR start "tcs_enumliteralmapping"
    // parser/TCS.g:530:1: tcs_enumliteralmapping returns [Object ret2] : ( (temp= tcs_enumliteralval ) EQ (temp= tcs_literalref ) ) ;
    public final Object tcs_enumliteralmapping() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","EnumLiteralMapping");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:535:3: ( ( (temp= tcs_enumliteralval ) EQ (temp= tcs_literalref ) ) )
            // parser/TCS.g:536:3: ( (temp= tcs_enumliteralval ) EQ (temp= tcs_literalref ) )
            {
            // parser/TCS.g:536:3: ( (temp= tcs_enumliteralval ) EQ (temp= tcs_literalref ) )
            // parser/TCS.g:536:4: (temp= tcs_enumliteralval ) EQ (temp= tcs_literalref )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD762CEA281AFC11DFA9A6E3828D1504C0");
            }
            // parser/TCS.g:536:63: (temp= tcs_enumliteralval )
            // parser/TCS.g:536:65: temp= tcs_enumliteralval
            {
            pushFollow(FOLLOW_tcs_enumliteralval_in_tcs_enumliteralmapping2256);
            temp=tcs_enumliteralval();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "literal", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD762CEA291AFC11DFB18EE3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_enumliteralmapping2263); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD762CEA2B1AFC11DF937EE3828D1504C0");
            }
            // parser/TCS.g:536:280: (temp= tcs_literalref )
            // parser/TCS.g:536:282: temp= tcs_literalref
            {
            pushFollow(FOLLOW_tcs_literalref_in_tcs_enumliteralmapping2271);
            temp=tcs_literalref();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "element", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_enumliteralmapping"


    // $ANTLR start "tcs_classtemplate"
    // parser/TCS.g:544:1: tcs_classtemplate returns [Object ret2] : ( 'template' reference[ret] ( ( 'referenceOnly' ) | ( ( ( SHARP (temp= identifier ) ) | ) ( ( LPAREN 'disambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'disambiguateV3' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'semDisambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( 'multi' ) | ) ( ( 'main' ) | ) ( ( ( ( 'deep' ) | ) 'abstract' ) | ) ( ( 'operatored' ( ( LPAREN (temp= identifier ) RPAREN ) | ) ) | ) ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | ) ( ( 'addToContext' ) | ) ( ( 'nonPrimary' ) | ) ( ( 'prefix' ( ( COLON ( ( (temp= tcs_sequence ) ) ) ) ) ) | ) ) ) ( ( (temp= tcs_partitionhandling ) ) | ) ( ( ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) ) | ( SEMI ) ) (temp= textblockdefinition_textblockdefinition )? ) ;
    public final Object tcs_classtemplate() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","ClassTemplate");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, true, true) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:549:3: ( ( 'template' reference[ret] ( ( 'referenceOnly' ) | ( ( ( SHARP (temp= identifier ) ) | ) ( ( LPAREN 'disambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'disambiguateV3' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'semDisambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( 'multi' ) | ) ( ( 'main' ) | ) ( ( ( ( 'deep' ) | ) 'abstract' ) | ) ( ( 'operatored' ( ( LPAREN (temp= identifier ) RPAREN ) | ) ) | ) ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | ) ( ( 'addToContext' ) | ) ( ( 'nonPrimary' ) | ) ( ( 'prefix' ( ( COLON ( ( (temp= tcs_sequence ) ) ) ) ) ) | ) ) ) ( ( (temp= tcs_partitionhandling ) ) | ) ( ( ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) ) | ( SEMI ) ) (temp= textblockdefinition_textblockdefinition )? ) )
            // parser/TCS.g:550:3: ( 'template' reference[ret] ( ( 'referenceOnly' ) | ( ( ( SHARP (temp= identifier ) ) | ) ( ( LPAREN 'disambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'disambiguateV3' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'semDisambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( 'multi' ) | ) ( ( 'main' ) | ) ( ( ( ( 'deep' ) | ) 'abstract' ) | ) ( ( 'operatored' ( ( LPAREN (temp= identifier ) RPAREN ) | ) ) | ) ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | ) ( ( 'addToContext' ) | ) ( ( 'nonPrimary' ) | ) ( ( 'prefix' ( ( COLON ( ( (temp= tcs_sequence ) ) ) ) ) ) | ) ) ) ( ( (temp= tcs_partitionhandling ) ) | ) ( ( ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) ) | ( SEMI ) ) (temp= textblockdefinition_textblockdefinition )? )
            {
            // parser/TCS.g:550:3: ( 'template' reference[ret] ( ( 'referenceOnly' ) | ( ( ( SHARP (temp= identifier ) ) | ) ( ( LPAREN 'disambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'disambiguateV3' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'semDisambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( 'multi' ) | ) ( ( 'main' ) | ) ( ( ( ( 'deep' ) | ) 'abstract' ) | ) ( ( 'operatored' ( ( LPAREN (temp= identifier ) RPAREN ) | ) ) | ) ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | ) ( ( 'addToContext' ) | ) ( ( 'nonPrimary' ) | ) ( ( 'prefix' ( ( COLON ( ( (temp= tcs_sequence ) ) ) ) ) ) | ) ) ) ( ( (temp= tcs_partitionhandling ) ) | ) ( ( ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) ) | ( SEMI ) ) (temp= textblockdefinition_textblockdefinition )? )
            // parser/TCS.g:550:4: 'template' reference[ret] ( ( 'referenceOnly' ) | ( ( ( SHARP (temp= identifier ) ) | ) ( ( LPAREN 'disambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'disambiguateV3' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'semDisambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( 'multi' ) | ) ( ( 'main' ) | ) ( ( ( ( 'deep' ) | ) 'abstract' ) | ) ( ( 'operatored' ( ( LPAREN (temp= identifier ) RPAREN ) | ) ) | ) ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | ) ( ( 'addToContext' ) | ) ( ( 'nonPrimary' ) | ) ( ( 'prefix' ( ( COLON ( ( (temp= tcs_sequence ) ) ) ) ) ) | ) ) ) ( ( (temp= tcs_partitionhandling ) ) | ) ( ( ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) ) | ( SEMI ) ) (temp= textblockdefinition_textblockdefinition )?
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD762F5B201AFC11DF9AADE3828D1504C0");
            }
            match(input,74,FOLLOW_74_in_tcs_classtemplate2314); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD762F5B211AFC11DFB7F7E3828D1504C0");
            }
            pushFollow(FOLLOW_reference_in_tcs_classtemplate2317);
            reference(ret);

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7638D1071AFC11DF9448E3828D1504C0");
            }
            // parser/TCS.g:550:238: ( ( 'referenceOnly' ) | ( ( ( SHARP (temp= identifier ) ) | ) ( ( LPAREN 'disambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'disambiguateV3' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'semDisambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( 'multi' ) | ) ( ( 'main' ) | ) ( ( ( ( 'deep' ) | ) 'abstract' ) | ) ( ( 'operatored' ( ( LPAREN (temp= identifier ) RPAREN ) | ) ) | ) ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | ) ( ( 'addToContext' ) | ) ( ( 'nonPrimary' ) | ) ( ( 'prefix' ( ( COLON ( ( (temp= tcs_sequence ) ) ) ) ) ) | ) ) )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==114) ) {
                alt50=1;
            }
            else if ( (LA50_0==LPAREN||LA50_0==SEMI||LA50_0==COLON||LA50_0==SHARP||LA50_0==56||LA50_0==70||LA50_0==78||LA50_0==80||LA50_0==98||LA50_0==100||LA50_0==109||LA50_0==124||LA50_0==127||LA50_0==132) ) {
                alt50=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // parser/TCS.g:550:239: ( 'referenceOnly' )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:550:255: ( 'referenceOnly' )
                    // parser/TCS.g:550:256: 'referenceOnly'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD762F5B251AFC11DFC5CEE3828D1504C0");
                    }
                    match(input,114,FOLLOW_114_in_tcs_classtemplate2327); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isReferenceOnly", java.lang.Boolean.TRUE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:550:426: ( ( ( SHARP (temp= identifier ) ) | ) ( ( LPAREN 'disambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'disambiguateV3' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'semDisambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( 'multi' ) | ) ( ( 'main' ) | ) ( ( ( ( 'deep' ) | ) 'abstract' ) | ) ( ( 'operatored' ( ( LPAREN (temp= identifier ) RPAREN ) | ) ) | ) ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | ) ( ( 'addToContext' ) | ) ( ( 'nonPrimary' ) | ) ( ( 'prefix' ( ( COLON ( ( (temp= tcs_sequence ) ) ) ) ) ) | ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    // parser/TCS.g:550:442: ( ( ( SHARP (temp= identifier ) ) | ) ( ( LPAREN 'disambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'disambiguateV3' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'semDisambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( 'multi' ) | ) ( ( 'main' ) | ) ( ( ( ( 'deep' ) | ) 'abstract' ) | ) ( ( 'operatored' ( ( LPAREN (temp= identifier ) RPAREN ) | ) ) | ) ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | ) ( ( 'addToContext' ) | ) ( ( 'nonPrimary' ) | ) ( ( 'prefix' ( ( COLON ( ( (temp= tcs_sequence ) ) ) ) ) ) | ) )
                    // parser/TCS.g:550:443: ( ( SHARP (temp= identifier ) ) | ) ( ( LPAREN 'disambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'disambiguateV3' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( LPAREN 'semDisambiguate' EQ (temp= stringSymbol ) RPAREN ) | ) ( ( 'multi' ) | ) ( ( 'main' ) | ) ( ( ( ( 'deep' ) | ) 'abstract' ) | ) ( ( 'operatored' ( ( LPAREN (temp= identifier ) RPAREN ) | ) ) | ) ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | ) ( ( 'addToContext' ) | ) ( ( 'nonPrimary' ) | ) ( ( 'prefix' ( ( COLON ( ( (temp= tcs_sequence ) ) ) ) ) ) | )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7631A5171AFC11DF9037E3828D1504C0");
                    }
                    // parser/TCS.g:550:503: ( ( SHARP (temp= identifier ) ) | )
                    int alt35=2;
                    int LA35_0 = input.LA(1);

                    if ( (LA35_0==SHARP) ) {
                        alt35=1;
                    }
                    else if ( (LA35_0==LPAREN||LA35_0==SEMI||LA35_0==COLON||LA35_0==56||LA35_0==70||LA35_0==78||LA35_0==80||LA35_0==98||LA35_0==100||LA35_0==109||LA35_0==124||LA35_0==127||LA35_0==132) ) {
                        alt35=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret2;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 35, 0, input);

                        throw nvae;
                    }
                    switch (alt35) {
                        case 1 :
                            // parser/TCS.g:550:504: ( SHARP (temp= identifier ) )
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(0);
                            }
                            // parser/TCS.g:550:520: ( SHARP (temp= identifier ) )
                            // parser/TCS.g:550:521: SHARP (temp= identifier )
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7631A5131AFC11DFCCA0E3828D1504C0");
                            }
                            match(input,SHARP,FOLLOW_SHARP_in_tcs_classtemplate2347); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7631A5151AFC11DF892AE3828D1504C0");
                            }
                            // parser/TCS.g:550:662: (temp= identifier )
                            // parser/TCS.g:550:664: temp= identifier
                            {
                            pushFollow(FOLLOW_identifier_in_tcs_classtemplate2355);
                            temp=identifier();

                            checkFollows();
                            state._fsp--;
                            if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "mode", temp);
                            }

                            }

                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }

                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;
                        case 2 :
                            // parser/TCS.g:550:748: 
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(1);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7631A5231AFC11DF89BEE3828D1504C0");
                    }
                    // parser/TCS.g:551:77: ( ( LPAREN 'disambiguate' EQ (temp= stringSymbol ) RPAREN ) | )
                    int alt36=2;
                    int LA36_0 = input.LA(1);

                    if ( (LA36_0==LPAREN) ) {
                        int LA36_1 = input.LA(2);

                        if ( (LA36_1==61) ) {
                            alt36=1;
                        }
                        else if ( (LA36_1==52||LA36_1==115) ) {
                            alt36=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ret2;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 36, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA36_0==SEMI||LA36_0==COLON||LA36_0==56||LA36_0==70||LA36_0==78||LA36_0==80||LA36_0==98||LA36_0==100||LA36_0==109||LA36_0==124||LA36_0==127||LA36_0==132) ) {
                        alt36=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret2;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 36, 0, input);

                        throw nvae;
                    }
                    switch (alt36) {
                        case 1 :
                            // parser/TCS.g:551:78: ( LPAREN 'disambiguate' EQ (temp= stringSymbol ) RPAREN )
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(0);
                            }
                            // parser/TCS.g:551:94: ( LPAREN 'disambiguate' EQ (temp= stringSymbol ) RPAREN )
                            // parser/TCS.g:551:95: LPAREN 'disambiguate' EQ (temp= stringSymbol ) RPAREN
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7631A51B1AFC11DF9EE9E3828D1504C0");
                            }
                            match(input,LPAREN,FOLLOW_LPAREN_in_tcs_classtemplate2381); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7631A51C1AFC11DFB3F0E3828D1504C0");
                            }
                            match(input,61,FOLLOW_61_in_tcs_classtemplate2385); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7631A51D1AFC11DF95C4E3828D1504C0");
                            }
                            match(input,EQ,FOLLOW_EQ_in_tcs_classtemplate2389); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7631A5201AFC11DF8CE3E3828D1504C0");
                            }
                            // parser/TCS.g:551:405: (temp= stringSymbol )
                            // parser/TCS.g:551:407: temp= stringSymbol
                            {
                            pushFollow(FOLLOW_stringSymbol_in_tcs_classtemplate2397);
                            temp=stringSymbol();

                            checkFollows();
                            state._fsp--;
                            if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "disambiguate", temp);
                            }

                            }

                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7631A5211AFC11DF85A8E3828D1504C0");
                            }
                            match(input,RPAREN,FOLLOW_RPAREN_in_tcs_classtemplate2404); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }

                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;
                        case 2 :
                            // parser/TCS.g:551:584: 
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(1);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7631A52F1AFC11DF8E51E3828D1504C0");
                    }
                    // parser/TCS.g:552:77: ( ( LPAREN 'disambiguateV3' EQ (temp= stringSymbol ) RPAREN ) | )
                    int alt37=2;
                    int LA37_0 = input.LA(1);

                    if ( (LA37_0==LPAREN) ) {
                        int LA37_1 = input.LA(2);

                        if ( (LA37_1==115) ) {
                            alt37=2;
                        }
                        else if ( (LA37_1==52) ) {
                            alt37=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ret2;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 37, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA37_0==SEMI||LA37_0==COLON||LA37_0==56||LA37_0==70||LA37_0==78||LA37_0==80||LA37_0==98||LA37_0==100||LA37_0==109||LA37_0==124||LA37_0==127||LA37_0==132) ) {
                        alt37=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret2;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 37, 0, input);

                        throw nvae;
                    }
                    switch (alt37) {
                        case 1 :
                            // parser/TCS.g:552:78: ( LPAREN 'disambiguateV3' EQ (temp= stringSymbol ) RPAREN )
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(0);
                            }
                            // parser/TCS.g:552:94: ( LPAREN 'disambiguateV3' EQ (temp= stringSymbol ) RPAREN )
                            // parser/TCS.g:552:95: LPAREN 'disambiguateV3' EQ (temp= stringSymbol ) RPAREN
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7631A5271AFC11DFA74EE3828D1504C0");
                            }
                            match(input,LPAREN,FOLLOW_LPAREN_in_tcs_classtemplate2428); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7631A5281AFC11DFB1F0E3828D1504C0");
                            }
                            match(input,52,FOLLOW_52_in_tcs_classtemplate2432); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7631A5291AFC11DFA7E8E3828D1504C0");
                            }
                            match(input,EQ,FOLLOW_EQ_in_tcs_classtemplate2436); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7631A52C1AFC11DF9E4EE3828D1504C0");
                            }
                            // parser/TCS.g:552:407: (temp= stringSymbol )
                            // parser/TCS.g:552:409: temp= stringSymbol
                            {
                            pushFollow(FOLLOW_stringSymbol_in_tcs_classtemplate2444);
                            temp=stringSymbol();

                            checkFollows();
                            state._fsp--;
                            if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "disambiguateV3", temp);
                            }

                            }

                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7631A52D1AFC11DFA9D4E3828D1504C0");
                            }
                            match(input,RPAREN,FOLLOW_RPAREN_in_tcs_classtemplate2451); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }

                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;
                        case 2 :
                            // parser/TCS.g:552:588: 
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(1);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7631A53B1AFC11DFA53FE3828D1504C0");
                    }
                    // parser/TCS.g:553:77: ( ( LPAREN 'semDisambiguate' EQ (temp= stringSymbol ) RPAREN ) | )
                    int alt38=2;
                    int LA38_0 = input.LA(1);

                    if ( (LA38_0==LPAREN) ) {
                        alt38=1;
                    }
                    else if ( (LA38_0==SEMI||LA38_0==COLON||LA38_0==56||LA38_0==70||LA38_0==78||LA38_0==80||LA38_0==98||LA38_0==100||LA38_0==109||LA38_0==124||LA38_0==127||LA38_0==132) ) {
                        alt38=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret2;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 38, 0, input);

                        throw nvae;
                    }
                    switch (alt38) {
                        case 1 :
                            // parser/TCS.g:553:78: ( LPAREN 'semDisambiguate' EQ (temp= stringSymbol ) RPAREN )
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(0);
                            }
                            // parser/TCS.g:553:94: ( LPAREN 'semDisambiguate' EQ (temp= stringSymbol ) RPAREN )
                            // parser/TCS.g:553:95: LPAREN 'semDisambiguate' EQ (temp= stringSymbol ) RPAREN
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7631A5331AFC11DFBC88E3828D1504C0");
                            }
                            match(input,LPAREN,FOLLOW_LPAREN_in_tcs_classtemplate2475); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7631A5341AFC11DF9C73E3828D1504C0");
                            }
                            match(input,115,FOLLOW_115_in_tcs_classtemplate2479); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7631A5351AFC11DF9B6DE3828D1504C0");
                            }
                            match(input,EQ,FOLLOW_EQ_in_tcs_classtemplate2483); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7631A5381AFC11DFC8D2E3828D1504C0");
                            }
                            // parser/TCS.g:553:408: (temp= stringSymbol )
                            // parser/TCS.g:553:410: temp= stringSymbol
                            {
                            pushFollow(FOLLOW_stringSymbol_in_tcs_classtemplate2491);
                            temp=stringSymbol();

                            checkFollows();
                            state._fsp--;
                            if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "semDisambiguate", temp);
                            }

                            }

                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7631A5391AFC11DFC129E3828D1504C0");
                            }
                            match(input,RPAREN,FOLLOW_RPAREN_in_tcs_classtemplate2498); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }

                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;
                        case 2 :
                            // parser/TCS.g:553:590: 
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(1);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763416151AFC11DF8E0DE3828D1504C0");
                    }
                    // parser/TCS.g:554:77: ( ( 'multi' ) | )
                    int alt39=2;
                    int LA39_0 = input.LA(1);

                    if ( (LA39_0==56) ) {
                        alt39=1;
                    }
                    else if ( (LA39_0==SEMI||LA39_0==COLON||LA39_0==70||LA39_0==78||LA39_0==80||LA39_0==98||LA39_0==100||LA39_0==109||LA39_0==124||LA39_0==127||LA39_0==132) ) {
                        alt39=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret2;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 39, 0, input);

                        throw nvae;
                    }
                    switch (alt39) {
                        case 1 :
                            // parser/TCS.g:554:78: ( 'multi' )
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(0);
                            }
                            // parser/TCS.g:554:94: ( 'multi' )
                            // parser/TCS.g:554:95: 'multi'
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD763416131AFC11DFCF4DE3828D1504C0");
                            }
                            match(input,56,FOLLOW_56_in_tcs_classtemplate2521); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }

                            if ( state.backtracking==0 ) {
                              setProperty(ret, "isMulti", java.lang.Boolean.TRUE);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;
                        case 2 :
                            // parser/TCS.g:554:249: 
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(1);
                            }
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "isMulti", java.lang.Boolean.FALSE);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7634161B1AFC11DF9115E3828D1504C0");
                    }
                    // parser/TCS.g:555:77: ( ( 'main' ) | )
                    int alt40=2;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==100) ) {
                        alt40=1;
                    }
                    else if ( (LA40_0==SEMI||LA40_0==COLON||LA40_0==70||LA40_0==78||LA40_0==80||LA40_0==98||LA40_0==109||LA40_0==124||LA40_0==127||LA40_0==132) ) {
                        alt40=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret2;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 40, 0, input);

                        throw nvae;
                    }
                    switch (alt40) {
                        case 1 :
                            // parser/TCS.g:555:78: ( 'main' )
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(0);
                            }
                            // parser/TCS.g:555:94: ( 'main' )
                            // parser/TCS.g:555:95: 'main'
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD763416191AFC11DF9569E3828D1504C0");
                            }
                            match(input,100,FOLLOW_100_in_tcs_classtemplate2545); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }

                            if ( state.backtracking==0 ) {
                              setProperty(ret, "isMain", java.lang.Boolean.TRUE);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;
                        case 2 :
                            // parser/TCS.g:555:247: 
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(1);
                            }
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "isMain", java.lang.Boolean.FALSE);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763416271AFC11DFAF7DE3828D1504C0");
                    }
                    // parser/TCS.g:556:77: ( ( ( ( 'deep' ) | ) 'abstract' ) | )
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==109||LA42_0==124) ) {
                        alt42=1;
                    }
                    else if ( (LA42_0==SEMI||LA42_0==COLON||LA42_0==70||LA42_0==78||LA42_0==80||LA42_0==98||LA42_0==127||LA42_0==132) ) {
                        alt42=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret2;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 42, 0, input);

                        throw nvae;
                    }
                    switch (alt42) {
                        case 1 :
                            // parser/TCS.g:556:78: ( ( ( 'deep' ) | ) 'abstract' )
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(0);
                            }
                            // parser/TCS.g:556:94: ( ( ( 'deep' ) | ) 'abstract' )
                            // parser/TCS.g:556:95: ( ( 'deep' ) | ) 'abstract'
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD763416241AFC11DFCE4CE3828D1504C0");
                            }
                            // parser/TCS.g:556:155: ( ( 'deep' ) | )
                            int alt41=2;
                            int LA41_0 = input.LA(1);

                            if ( (LA41_0==109) ) {
                                alt41=1;
                            }
                            else if ( (LA41_0==124) ) {
                                alt41=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return ret2;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 41, 0, input);

                                throw nvae;
                            }
                            switch (alt41) {
                                case 1 :
                                    // parser/TCS.g:556:156: ( 'deep' )
                                    {
                                    if ( state.backtracking==0 ) {
                                      _enterAlt(0);
                                    }
                                    // parser/TCS.g:556:172: ( 'deep' )
                                    // parser/TCS.g:556:173: 'deep'
                                    {
                                    if ( state.backtracking==0 ) {
                                      _beforeSeqEl("E0DCF6CD763416221AFC11DFCD8CE3828D1504C0");
                                    }
                                    match(input,109,FOLLOW_109_in_tcs_classtemplate2575); if (state.failed) return ret2;
                                    if ( state.backtracking==0 ) {
                                      _afterSeqEl();
                                    }

                                    }

                                    if ( state.backtracking==0 ) {
                                      setProperty(ret, "isDeep", java.lang.Boolean.TRUE);
                                    }
                                    if ( state.backtracking==0 ) {
                                      _exitAlt();
                                    }

                                    }
                                    break;
                                case 2 :
                                    // parser/TCS.g:556:325: 
                                    {
                                    if ( state.backtracking==0 ) {
                                      _enterAlt(1);
                                    }
                                    if ( state.backtracking==0 ) {
                                      setProperty(ret, "isDeep", java.lang.Boolean.FALSE);
                                    }
                                    if ( state.backtracking==0 ) {
                                      _exitAlt();
                                    }

                                    }
                                    break;

                            }

                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD763416251AFC11DF8B88E3828D1504C0");
                            }
                            match(input,124,FOLLOW_124_in_tcs_classtemplate2593); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }

                            if ( state.backtracking==0 ) {
                              setProperty(ret, "isAbstract", java.lang.Boolean.TRUE);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;
                        case 2 :
                            // parser/TCS.g:557:177: 
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(1);
                            }
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "isAbstract", java.lang.Boolean.FALSE);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763660051AFC11DF950CE3828D1504C0");
                    }
                    // parser/TCS.g:558:77: ( ( 'operatored' ( ( LPAREN (temp= identifier ) RPAREN ) | ) ) | )
                    int alt44=2;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==127) ) {
                        alt44=1;
                    }
                    else if ( (LA44_0==SEMI||LA44_0==COLON||LA44_0==70||LA44_0==78||LA44_0==80||LA44_0==98||LA44_0==132) ) {
                        alt44=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret2;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 44, 0, input);

                        throw nvae;
                    }
                    switch (alt44) {
                        case 1 :
                            // parser/TCS.g:558:78: ( 'operatored' ( ( LPAREN (temp= identifier ) RPAREN ) | ) )
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(0);
                            }
                            // parser/TCS.g:558:94: ( 'operatored' ( ( LPAREN (temp= identifier ) RPAREN ) | ) )
                            // parser/TCS.g:558:95: 'operatored' ( ( LPAREN (temp= identifier ) RPAREN ) | )
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7634162B1AFC11DFCC4BE3828D1504C0");
                            }
                            match(input,127,FOLLOW_127_in_tcs_classtemplate2617); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD763660031AFC11DFB8FCE3828D1504C0");
                            }
                            // parser/TCS.g:558:242: ( ( LPAREN (temp= identifier ) RPAREN ) | )
                            int alt43=2;
                            int LA43_0 = input.LA(1);

                            if ( (LA43_0==LPAREN) ) {
                                alt43=1;
                            }
                            else if ( (LA43_0==SEMI||LA43_0==COLON||LA43_0==70||LA43_0==78||LA43_0==80||LA43_0==98||LA43_0==132) ) {
                                alt43=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return ret2;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 43, 0, input);

                                throw nvae;
                            }
                            switch (alt43) {
                                case 1 :
                                    // parser/TCS.g:558:243: ( LPAREN (temp= identifier ) RPAREN )
                                    {
                                    if ( state.backtracking==0 ) {
                                      _enterAlt(0);
                                    }
                                    // parser/TCS.g:558:259: ( LPAREN (temp= identifier ) RPAREN )
                                    // parser/TCS.g:558:260: LPAREN (temp= identifier ) RPAREN
                                    {
                                    if ( state.backtracking==0 ) {
                                      _beforeSeqEl("E0DCF6CD7634162F1AFC11DFBB70E3828D1504C0");
                                    }
                                    match(input,LPAREN,FOLLOW_LPAREN_in_tcs_classtemplate2627); if (state.failed) return ret2;
                                    if ( state.backtracking==0 ) {
                                      _afterSeqEl();
                                    }
                                    if ( state.backtracking==0 ) {
                                      _beforeSeqEl("E0DCF6CD763660001AFC11DFB4CFE3828D1504C0");
                                    }
                                    // parser/TCS.g:558:402: (temp= identifier )
                                    // parser/TCS.g:558:404: temp= identifier
                                    {
                                    pushFollow(FOLLOW_identifier_in_tcs_classtemplate2635);
                                    temp=identifier();

                                    checkFollows();
                                    state._fsp--;
                                    if (state.failed) return ret2;
                                    if ( state.backtracking==0 ) {
                                      setRef(ret, "operatorList", list("TCS","OperatorList"), "name", temp, null, "never", null, false, null);
                                    }

                                    }

                                    if ( state.backtracking==0 ) {
                                      _afterSeqEl();
                                    }
                                    if ( state.backtracking==0 ) {
                                      _beforeSeqEl("E0DCF6CD763660011AFC11DF982EE3828D1504C0");
                                    }
                                    match(input,RPAREN,FOLLOW_RPAREN_in_tcs_classtemplate2642); if (state.failed) return ret2;
                                    if ( state.backtracking==0 ) {
                                      _afterSeqEl();
                                    }

                                    }

                                    if ( state.backtracking==0 ) {
                                      _exitAlt();
                                    }

                                    }
                                    break;
                                case 2 :
                                    // parser/TCS.g:558:644: 
                                    {
                                    if ( state.backtracking==0 ) {
                                      _enterAlt(1);
                                    }
                                    if ( state.backtracking==0 ) {
                                      _exitAlt();
                                    }

                                    }
                                    break;

                            }

                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }

                            if ( state.backtracking==0 ) {
                              setProperty(ret, "isOperatored", java.lang.Boolean.TRUE);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;
                        case 2 :
                            // parser/TCS.g:559:94: 
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(1);
                            }
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "isOperatored", java.lang.Boolean.FALSE);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763660121AFC11DFB06CE3828D1504C0");
                    }
                    // parser/TCS.g:560:77: ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | )
                    int alt46=2;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==80) ) {
                        alt46=1;
                    }
                    else if ( (LA46_0==SEMI||LA46_0==COLON||LA46_0==70||LA46_0==78||LA46_0==98||LA46_0==132) ) {
                        alt46=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret2;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 46, 0, input);

                        throw nvae;
                    }
                    switch (alt46) {
                        case 1 :
                            // parser/TCS.g:560:78: ( 'context' ( ( (temp= tcs_contexttags ) ) | ) )
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(0);
                            }
                            // parser/TCS.g:560:94: ( 'context' ( ( (temp= tcs_contexttags ) ) | ) )
                            // parser/TCS.g:560:95: 'context' ( ( (temp= tcs_contexttags ) ) | )
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD763660091AFC11DFCA93E3828D1504C0");
                            }
                            match(input,80,FOLLOW_80_in_tcs_classtemplate2680); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD763660101AFC11DF9256E3828D1504C0");
                            }
                            // parser/TCS.g:560:239: ( ( (temp= tcs_contexttags ) ) | )
                            int alt45=2;
                            int LA45_0 = input.LA(1);

                            if ( (LA45_0==LPAREN) ) {
                                alt45=1;
                            }
                            else if ( (LA45_0==SEMI||LA45_0==COLON||LA45_0==70||LA45_0==78||LA45_0==98||LA45_0==132) ) {
                                alt45=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return ret2;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 45, 0, input);

                                throw nvae;
                            }
                            switch (alt45) {
                                case 1 :
                                    // parser/TCS.g:560:240: ( (temp= tcs_contexttags ) )
                                    {
                                    if ( state.backtracking==0 ) {
                                      _enterAlt(0);
                                    }
                                    // parser/TCS.g:560:256: ( (temp= tcs_contexttags ) )
                                    // parser/TCS.g:560:257: (temp= tcs_contexttags )
                                    {
                                    if ( state.backtracking==0 ) {
                                      _beforeSeqEl("E0DCF6CD7636600E1AFC11DFB62FE3828D1504C0");
                                    }
                                    // parser/TCS.g:560:316: (temp= tcs_contexttags )
                                    // parser/TCS.g:560:318: temp= tcs_contexttags
                                    {
                                    pushFollow(FOLLOW_tcs_contexttags_in_tcs_classtemplate2693);
                                    temp=tcs_contexttags();

                                    checkFollows();
                                    state._fsp--;
                                    if (state.failed) return ret2;
                                    if ( state.backtracking==0 ) {
                                      setProperty(ret, "contextTags", temp);
                                    }

                                    }

                                    if ( state.backtracking==0 ) {
                                      _afterSeqEl();
                                    }

                                    }

                                    if ( state.backtracking==0 ) {
                                      _exitAlt();
                                    }

                                    }
                                    break;
                                case 2 :
                                    // parser/TCS.g:560:414: 
                                    {
                                    if ( state.backtracking==0 ) {
                                      _enterAlt(1);
                                    }
                                    if ( state.backtracking==0 ) {
                                      _exitAlt();
                                    }

                                    }
                                    break;

                            }

                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }

                            if ( state.backtracking==0 ) {
                              setProperty(ret, "isContext", java.lang.Boolean.TRUE);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;
                        case 2 :
                            // parser/TCS.g:561:91: 
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(1);
                            }
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "isContext", java.lang.Boolean.FALSE);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763660181AFC11DF8EE4E3828D1504C0");
                    }
                    // parser/TCS.g:562:77: ( ( 'addToContext' ) | )
                    int alt47=2;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==70) ) {
                        alt47=1;
                    }
                    else if ( (LA47_0==SEMI||LA47_0==COLON||LA47_0==78||LA47_0==98||LA47_0==132) ) {
                        alt47=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret2;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 47, 0, input);

                        throw nvae;
                    }
                    switch (alt47) {
                        case 1 :
                            // parser/TCS.g:562:78: ( 'addToContext' )
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(0);
                            }
                            // parser/TCS.g:562:94: ( 'addToContext' )
                            // parser/TCS.g:562:95: 'addToContext'
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD763660161AFC11DF896EE3828D1504C0");
                            }
                            match(input,70,FOLLOW_70_in_tcs_classtemplate2733); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }

                            if ( state.backtracking==0 ) {
                              setProperty(ret, "isAddToContext", java.lang.Boolean.TRUE);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;
                        case 2 :
                            // parser/TCS.g:562:263: 
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(1);
                            }
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "isAddToContext", java.lang.Boolean.FALSE);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7636601E1AFC11DFAA58E3828D1504C0");
                    }
                    // parser/TCS.g:563:77: ( ( 'nonPrimary' ) | )
                    int alt48=2;
                    int LA48_0 = input.LA(1);

                    if ( (LA48_0==78) ) {
                        alt48=1;
                    }
                    else if ( (LA48_0==SEMI||LA48_0==COLON||LA48_0==98||LA48_0==132) ) {
                        alt48=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret2;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 48, 0, input);

                        throw nvae;
                    }
                    switch (alt48) {
                        case 1 :
                            // parser/TCS.g:563:78: ( 'nonPrimary' )
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(0);
                            }
                            // parser/TCS.g:563:94: ( 'nonPrimary' )
                            // parser/TCS.g:563:95: 'nonPrimary'
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7636601C1AFC11DFBE3CE3828D1504C0");
                            }
                            match(input,78,FOLLOW_78_in_tcs_classtemplate2757); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }

                            if ( state.backtracking==0 ) {
                              setProperty(ret, "isNonPrimary", java.lang.Boolean.TRUE);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;
                        case 2 :
                            // parser/TCS.g:563:259: 
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(1);
                            }
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "isNonPrimary", java.lang.Boolean.FALSE);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7638D1051AFC11DFBBC4E3828D1504C0");
                    }
                    // parser/TCS.g:564:77: ( ( 'prefix' ( ( COLON ( ( (temp= tcs_sequence ) ) ) ) ) ) | )
                    int alt49=2;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==132) ) {
                        alt49=1;
                    }
                    else if ( (LA49_0==SEMI||LA49_0==COLON||LA49_0==98) ) {
                        alt49=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret2;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 49, 0, input);

                        throw nvae;
                    }
                    switch (alt49) {
                        case 1 :
                            // parser/TCS.g:564:78: ( 'prefix' ( ( COLON ( ( (temp= tcs_sequence ) ) ) ) ) )
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(0);
                            }
                            // parser/TCS.g:564:94: ( 'prefix' ( ( COLON ( ( (temp= tcs_sequence ) ) ) ) ) )
                            // parser/TCS.g:564:95: 'prefix' ( ( COLON ( ( (temp= tcs_sequence ) ) ) ) )
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD763660221AFC11DF8862E3828D1504C0");
                            }
                            match(input,132,FOLLOW_132_in_tcs_classtemplate2781); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7638D1031AFC11DFB59FE3828D1504C0");
                            }
                            // parser/TCS.g:564:237: ( ( COLON ( ( (temp= tcs_sequence ) ) ) ) )
                            // parser/TCS.g:564:238: ( COLON ( ( (temp= tcs_sequence ) ) ) )
                            {
                            // parser/TCS.g:564:238: ( COLON ( ( (temp= tcs_sequence ) ) ) )
                            // parser/TCS.g:564:239: COLON ( ( (temp= tcs_sequence ) ) )
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD763660231AFC11DF8139E3828D1504C0");
                            }
                            match(input,COLON,FOLLOW_COLON_in_tcs_classtemplate2788); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD7638D1011AFC11DFB408E3828D1504C0");
                            }
                            // parser/TCS.g:564:380: ( ( (temp= tcs_sequence ) ) )
                            // parser/TCS.g:564:381: ( (temp= tcs_sequence ) )
                            {
                            // parser/TCS.g:564:381: ( (temp= tcs_sequence ) )
                            // parser/TCS.g:564:382: (temp= tcs_sequence )
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD763660251AFC11DFC01CE3828D1504C0");
                            }
                            // parser/TCS.g:564:441: (temp= tcs_sequence )
                            // parser/TCS.g:564:443: temp= tcs_sequence
                            {
                            pushFollow(FOLLOW_tcs_sequence_in_tcs_classtemplate2799);
                            temp=tcs_sequence();

                            checkFollows();
                            state._fsp--;
                            if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "prefixSequence", temp);
                            }

                            }

                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }

                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;
                        case 2 :
                            // parser/TCS.g:564:575: 
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(1);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isReferenceOnly", java.lang.Boolean.FALSE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7638D10E1AFC11DF9CE9E3828D1504C0");
            }
            // parser/TCS.g:566:77: ( ( (temp= tcs_partitionhandling ) ) | )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==98) ) {
                alt51=1;
            }
            else if ( (LA51_0==SEMI||LA51_0==COLON) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // parser/TCS.g:566:78: ( (temp= tcs_partitionhandling ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:566:94: ( (temp= tcs_partitionhandling ) )
                    // parser/TCS.g:566:95: (temp= tcs_partitionhandling )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7638D10C1AFC11DF94E2E3828D1504C0");
                    }
                    // parser/TCS.g:566:154: (temp= tcs_partitionhandling )
                    // parser/TCS.g:566:156: temp= tcs_partitionhandling
                    {
                    pushFollow(FOLLOW_tcs_partitionhandling_in_tcs_classtemplate2841);
                    temp=tcs_partitionhandling();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "partitionHandling", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:566:264: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7638D11E1AFC11DFC076E3828D1504C0");
            }
            // parser/TCS.g:567:77: ( ( ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) ) | ( SEMI ) )
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==COLON) ) {
                alt52=1;
            }
            else if ( (LA52_0==SEMI) ) {
                alt52=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }
            switch (alt52) {
                case 1 :
                    // parser/TCS.g:567:78: ( ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:567:94: ( ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) )
                    // parser/TCS.g:567:95: ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7638D11A1AFC11DFAD31E3828D1504C0");
                    }
                    // parser/TCS.g:567:154: ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) )
                    // parser/TCS.g:567:155: ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI )
                    {
                    // parser/TCS.g:567:155: ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI )
                    // parser/TCS.g:567:156: COLON ( ( (temp= tcs_sequence ) ) ) SEMI
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7638D1121AFC11DFCC0FE3828D1504C0");
                    }
                    match(input,COLON,FOLLOW_COLON_in_tcs_classtemplate2870); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7638D1171AFC11DFBB89E3828D1504C0");
                    }
                    // parser/TCS.g:567:297: ( ( (temp= tcs_sequence ) ) )
                    // parser/TCS.g:567:298: ( (temp= tcs_sequence ) )
                    {
                    // parser/TCS.g:567:298: ( (temp= tcs_sequence ) )
                    // parser/TCS.g:567:299: (temp= tcs_sequence )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7638D1141AFC11DFC67DE3828D1504C0");
                    }
                    // parser/TCS.g:567:358: (temp= tcs_sequence )
                    // parser/TCS.g:567:360: temp= tcs_sequence
                    {
                    pushFollow(FOLLOW_tcs_sequence_in_tcs_classtemplate2881);
                    temp=tcs_sequence();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "templateSequence", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7638D1181AFC11DF9C49E3828D1504C0");
                    }
                    match(input,SEMI,FOLLOW_SEMI_in_tcs_classtemplate2891); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:567:575: ( SEMI )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    // parser/TCS.g:567:591: ( SEMI )
                    // parser/TCS.g:567:592: SEMI
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7638D11C1AFC11DFC234E3828D1504C0");
                    }
                    match(input,SEMI,FOLLOW_SEMI_in_tcs_classtemplate2908); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7638D1211AFC11DF8E42E3828D1504C0");
            }
            // parser/TCS.g:568:76: (temp= textblockdefinition_textblockdefinition )?
            int alt53=2;
            alt53 = dfa53.predict(input);
            switch (alt53) {
                case 1 :
                    // parser/TCS.g:568:78: temp= textblockdefinition_textblockdefinition
                    {
                    pushFollow(FOLLOW_textblockdefinition_textblockdefinition_in_tcs_classtemplate2922);
                    temp=textblockdefinition_textblockdefinition();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "textBlockDefinition", temp);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, true);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_classtemplate"


    // $ANTLR start "tcs_partitionhandling"
    // parser/TCS.g:576:1: tcs_partitionhandling returns [Object ret2] : ( 'PartitionHandling' LCURLY ( ( ( ( 'name' EQ (temp= identifier ) COMA ) | ) ( ( 'auto' COMA ) | ) ( ( 'container' EQ (temp= identifier ) COMA ) | ) ( ( 'content' EQ (temp= tcs_partitioncontentenum ) COMA ) | ) ) ) RCURLY ) ;
    public final Object tcs_partitionhandling() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","PartitionHandling");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:581:3: ( ( 'PartitionHandling' LCURLY ( ( ( ( 'name' EQ (temp= identifier ) COMA ) | ) ( ( 'auto' COMA ) | ) ( ( 'container' EQ (temp= identifier ) COMA ) | ) ( ( 'content' EQ (temp= tcs_partitioncontentenum ) COMA ) | ) ) ) RCURLY ) )
            // parser/TCS.g:582:3: ( 'PartitionHandling' LCURLY ( ( ( ( 'name' EQ (temp= identifier ) COMA ) | ) ( ( 'auto' COMA ) | ) ( ( 'container' EQ (temp= identifier ) COMA ) | ) ( ( 'content' EQ (temp= tcs_partitioncontentenum ) COMA ) | ) ) ) RCURLY )
            {
            // parser/TCS.g:582:3: ( 'PartitionHandling' LCURLY ( ( ( ( 'name' EQ (temp= identifier ) COMA ) | ) ( ( 'auto' COMA ) | ) ( ( 'container' EQ (temp= identifier ) COMA ) | ) ( ( 'content' EQ (temp= tcs_partitioncontentenum ) COMA ) | ) ) ) RCURLY )
            // parser/TCS.g:582:4: 'PartitionHandling' LCURLY ( ( ( ( 'name' EQ (temp= identifier ) COMA ) | ) ( ( 'auto' COMA ) | ) ( ( 'container' EQ (temp= identifier ) COMA ) | ) ( ( 'content' EQ (temp= tcs_partitioncontentenum ) COMA ) | ) ) ) RCURLY
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD763D8BF01AFC11DF8CCAE3828D1504C0");
            }
            match(input,98,FOLLOW_98_in_tcs_partitionhandling2967); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD763D8BF11AFC11DF8628E3828D1504C0");
            }
            match(input,LCURLY,FOLLOW_LCURLY_in_tcs_partitionhandling2971); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD763FFCF01AFC11DFB68FE3828D1504C0");
            }
            // parser/TCS.g:582:240: ( ( ( ( 'name' EQ (temp= identifier ) COMA ) | ) ( ( 'auto' COMA ) | ) ( ( 'container' EQ (temp= identifier ) COMA ) | ) ( ( 'content' EQ (temp= tcs_partitioncontentenum ) COMA ) | ) ) )
            // parser/TCS.g:582:241: ( ( ( 'name' EQ (temp= identifier ) COMA ) | ) ( ( 'auto' COMA ) | ) ( ( 'container' EQ (temp= identifier ) COMA ) | ) ( ( 'content' EQ (temp= tcs_partitioncontentenum ) COMA ) | ) )
            {
            // parser/TCS.g:582:241: ( ( ( 'name' EQ (temp= identifier ) COMA ) | ) ( ( 'auto' COMA ) | ) ( ( 'container' EQ (temp= identifier ) COMA ) | ) ( ( 'content' EQ (temp= tcs_partitioncontentenum ) COMA ) | ) )
            // parser/TCS.g:582:242: ( ( 'name' EQ (temp= identifier ) COMA ) | ) ( ( 'auto' COMA ) | ) ( ( 'container' EQ (temp= identifier ) COMA ) | ) ( ( 'content' EQ (temp= tcs_partitioncontentenum ) COMA ) | )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD763D8BFB1AFC11DF8F3AE3828D1504C0");
            }
            // parser/TCS.g:582:302: ( ( 'name' EQ (temp= identifier ) COMA ) | )
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==108) ) {
                alt54=1;
            }
            else if ( (LA54_0==RCURLY||LA54_0==116||LA54_0==128||LA54_0==133) ) {
                alt54=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }
            switch (alt54) {
                case 1 :
                    // parser/TCS.g:582:303: ( 'name' EQ (temp= identifier ) COMA )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:582:319: ( 'name' EQ (temp= identifier ) COMA )
                    // parser/TCS.g:582:320: 'name' EQ (temp= identifier ) COMA
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763D8BF51AFC11DFB1F9E3828D1504C0");
                    }
                    match(input,108,FOLLOW_108_in_tcs_partitionhandling2984); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763D8BF61AFC11DFCD92E3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_partitionhandling2988); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763D8BF81AFC11DF907CE3828D1504C0");
                    }
                    // parser/TCS.g:582:539: (temp= identifier )
                    // parser/TCS.g:582:541: temp= identifier
                    {
                    pushFollow(FOLLOW_identifier_in_tcs_partitionhandling2996);
                    temp=identifier();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "name", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763D8BF91AFC11DF8906E3828D1504C0");
                    }
                    match(input,COMA,FOLLOW_COMA_in_tcs_partitionhandling3003); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:582:706: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD763D8C021AFC11DF942DE3828D1504C0");
            }
            // parser/TCS.g:583:77: ( ( 'auto' COMA ) | )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==128) ) {
                alt55=1;
            }
            else if ( (LA55_0==RCURLY||LA55_0==116||LA55_0==133) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // parser/TCS.g:583:78: ( 'auto' COMA )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:583:94: ( 'auto' COMA )
                    // parser/TCS.g:583:95: 'auto' COMA
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763D8BFF1AFC11DF9283E3828D1504C0");
                    }
                    match(input,128,FOLLOW_128_in_tcs_partitionhandling3026); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763D8C001AFC11DFC726E3828D1504C0");
                    }
                    match(input,COMA,FOLLOW_COMA_in_tcs_partitionhandling3030); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isAutomaticPartition", java.lang.Boolean.TRUE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:583:342: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isAutomaticPartition", java.lang.Boolean.FALSE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD763D8C0C1AFC11DF919EE3828D1504C0");
            }
            // parser/TCS.g:584:77: ( ( 'container' EQ (temp= identifier ) COMA ) | )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==133) ) {
                alt56=1;
            }
            else if ( (LA56_0==RCURLY||LA56_0==116) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // parser/TCS.g:584:78: ( 'container' EQ (temp= identifier ) COMA )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:584:94: ( 'container' EQ (temp= identifier ) COMA )
                    // parser/TCS.g:584:95: 'container' EQ (temp= identifier ) COMA
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763D8C061AFC11DF9345E3828D1504C0");
                    }
                    match(input,133,FOLLOW_133_in_tcs_partitionhandling3055); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763D8C071AFC11DFAC3EE3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_partitionhandling3059); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763D8C091AFC11DF8416E3828D1504C0");
                    }
                    // parser/TCS.g:584:319: (temp= identifier )
                    // parser/TCS.g:584:321: temp= identifier
                    {
                    pushFollow(FOLLOW_identifier_in_tcs_partitionhandling3067);
                    temp=identifier();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "container", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763D8C0A1AFC11DFA4FFE3828D1504C0");
                    }
                    match(input,COMA,FOLLOW_COMA_in_tcs_partitionhandling3074); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:584:491: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD763D8C161AFC11DFB363E3828D1504C0");
            }
            // parser/TCS.g:585:77: ( ( 'content' EQ (temp= tcs_partitioncontentenum ) COMA ) | )
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==116) ) {
                alt57=1;
            }
            else if ( (LA57_0==RCURLY) ) {
                alt57=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }
            switch (alt57) {
                case 1 :
                    // parser/TCS.g:585:78: ( 'content' EQ (temp= tcs_partitioncontentenum ) COMA )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:585:94: ( 'content' EQ (temp= tcs_partitioncontentenum ) COMA )
                    // parser/TCS.g:585:95: 'content' EQ (temp= tcs_partitioncontentenum ) COMA
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763D8C101AFC11DFA683E3828D1504C0");
                    }
                    match(input,116,FOLLOW_116_in_tcs_partitionhandling3097); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763D8C111AFC11DFA697E3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_partitionhandling3101); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763D8C131AFC11DFBCF5E3828D1504C0");
                    }
                    // parser/TCS.g:585:317: (temp= tcs_partitioncontentenum )
                    // parser/TCS.g:585:319: temp= tcs_partitioncontentenum
                    {
                    pushFollow(FOLLOW_tcs_partitioncontentenum_in_tcs_partitionhandling3109);
                    temp=tcs_partitioncontentenum();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "content", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD763D8C141AFC11DF8D61E3828D1504C0");
                    }
                    match(input,COMA,FOLLOW_COMA_in_tcs_partitionhandling3116); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:585:501: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }


            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD763FFCF11AFC11DFB612E3828D1504C0");
            }
            match(input,RCURLY,FOLLOW_RCURLY_in_tcs_partitionhandling3137); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_partitionhandling"


    // $ANTLR start "tcs_partitioncontentenum"
    // parser/TCS.g:594:1: tcs_partitioncontentenum returns [Object ret2] : ( ( 'all' ) | ( 'model' ) | ( 'textblocks' ) ) ;
    public final Object tcs_partitioncontentenum() throws RecognitionException {

        Object ret2 = null;

        java.lang.Object ret=null;
        try {
            // parser/TCS.g:595:3: ( ( ( 'all' ) | ( 'model' ) | ( 'textblocks' ) ) )
            // parser/TCS.g:596:3: ( ( 'all' ) | ( 'model' ) | ( 'textblocks' ) )
            {
            // parser/TCS.g:596:3: ( ( 'all' ) | ( 'model' ) | ( 'textblocks' ) )
            int alt58=3;
            switch ( input.LA(1) ) {
            case 51:
                {
                alt58=1;
                }
                break;
            case 136:
                {
                alt58=2;
                }
                break;
            case 121:
                {
                alt58=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }

            switch (alt58) {
                case 1 :
                    // parser/TCS.g:596:4: ( 'all' )
                    {
                    // parser/TCS.g:596:4: ( 'all' )
                    // parser/TCS.g:596:5: 'all'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764246E11AFC11DF8412E3828D1504C0");
                    }
                    match(input,51,FOLLOW_51_in_tcs_partitioncontentenum3179); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      ret = createEnumLiteral(list("TCS","PartitionContentEnum"), "all");
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:597:4: ( 'model' )
                    {
                    // parser/TCS.g:597:4: ( 'model' )
                    // parser/TCS.g:597:5: 'model'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7644B7E11AFC11DF86C9E3828D1504C0");
                    }
                    match(input,136,FOLLOW_136_in_tcs_partitioncontentenum3189); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      ret = createEnumLiteral(list("TCS","PartitionContentEnum"), "model");
                    }

                    }
                    break;
                case 3 :
                    // parser/TCS.g:598:4: ( 'textblocks' )
                    {
                    // parser/TCS.g:598:4: ( 'textblocks' )
                    // parser/TCS.g:598:5: 'textblocks'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7644B7E41AFC11DF9E8AE3828D1504C0");
                    }
                    match(input,121,FOLLOW_121_in_tcs_partitioncontentenum3199); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      ret = createEnumLiteral(list("TCS","PartitionContentEnum"), "textblocks");
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

                ret2=ret;

            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_partitioncontentenum"


    // $ANTLR start "tcs_operatortemplate"
    // parser/TCS.g:605:1: tcs_operatortemplate returns [Object ret2] : ( 'operatorTemplate' reference[ret] LPAREN 'operators' EQ (temp= identifier (temp= identifier )* )? COMA 'source' EQ (temp= tcs_propertyreference ) ( ( COMA 'storeOpTo' EQ (temp= tcs_propertyreference ) ) | ) ( ( COMA 'storeRightTo' EQ (temp= tcs_propertyreference ) ) | ) ( ( COMA 'disambiguate' EQ (temp= stringSymbol ) ) | ) ( ( COMA 'disambiguateV3' EQ (temp= stringSymbol ) ) | ) RPAREN ( ( 'referenceOnly' ) | ( ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | ) ) ) ( ( ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) ) | ( SEMI ) ) (temp= textblockdefinition_textblockdefinition )? ) ;
    public final Object tcs_operatortemplate() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","OperatorTemplate");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, true, true) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:610:3: ( ( 'operatorTemplate' reference[ret] LPAREN 'operators' EQ (temp= identifier (temp= identifier )* )? COMA 'source' EQ (temp= tcs_propertyreference ) ( ( COMA 'storeOpTo' EQ (temp= tcs_propertyreference ) ) | ) ( ( COMA 'storeRightTo' EQ (temp= tcs_propertyreference ) ) | ) ( ( COMA 'disambiguate' EQ (temp= stringSymbol ) ) | ) ( ( COMA 'disambiguateV3' EQ (temp= stringSymbol ) ) | ) RPAREN ( ( 'referenceOnly' ) | ( ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | ) ) ) ( ( ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) ) | ( SEMI ) ) (temp= textblockdefinition_textblockdefinition )? ) )
            // parser/TCS.g:611:3: ( 'operatorTemplate' reference[ret] LPAREN 'operators' EQ (temp= identifier (temp= identifier )* )? COMA 'source' EQ (temp= tcs_propertyreference ) ( ( COMA 'storeOpTo' EQ (temp= tcs_propertyreference ) ) | ) ( ( COMA 'storeRightTo' EQ (temp= tcs_propertyreference ) ) | ) ( ( COMA 'disambiguate' EQ (temp= stringSymbol ) ) | ) ( ( COMA 'disambiguateV3' EQ (temp= stringSymbol ) ) | ) RPAREN ( ( 'referenceOnly' ) | ( ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | ) ) ) ( ( ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) ) | ( SEMI ) ) (temp= textblockdefinition_textblockdefinition )? )
            {
            // parser/TCS.g:611:3: ( 'operatorTemplate' reference[ret] LPAREN 'operators' EQ (temp= identifier (temp= identifier )* )? COMA 'source' EQ (temp= tcs_propertyreference ) ( ( COMA 'storeOpTo' EQ (temp= tcs_propertyreference ) ) | ) ( ( COMA 'storeRightTo' EQ (temp= tcs_propertyreference ) ) | ) ( ( COMA 'disambiguate' EQ (temp= stringSymbol ) ) | ) ( ( COMA 'disambiguateV3' EQ (temp= stringSymbol ) ) | ) RPAREN ( ( 'referenceOnly' ) | ( ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | ) ) ) ( ( ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) ) | ( SEMI ) ) (temp= textblockdefinition_textblockdefinition )? )
            // parser/TCS.g:611:4: 'operatorTemplate' reference[ret] LPAREN 'operators' EQ (temp= identifier (temp= identifier )* )? COMA 'source' EQ (temp= tcs_propertyreference ) ( ( COMA 'storeOpTo' EQ (temp= tcs_propertyreference ) ) | ) ( ( COMA 'storeRightTo' EQ (temp= tcs_propertyreference ) ) | ) ( ( COMA 'disambiguate' EQ (temp= stringSymbol ) ) | ) ( ( COMA 'disambiguateV3' EQ (temp= stringSymbol ) ) | ) RPAREN ( ( 'referenceOnly' ) | ( ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | ) ) ) ( ( ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) ) | ( SEMI ) ) (temp= textblockdefinition_textblockdefinition )?
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764728E01AFC11DFB339E3828D1504C0");
            }
            match(input,89,FOLLOW_89_in_tcs_operatortemplate3230); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764728E11AFC11DFCD6AE3828D1504C0");
            }
            pushFollow(FOLLOW_reference_in_tcs_operatortemplate3233);
            reference(ret);

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764728E21AFC11DFA141E3828D1504C0");
            }
            match(input,LPAREN,FOLLOW_LPAREN_in_tcs_operatortemplate3238); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764728E31AFC11DF99B3E3828D1504C0");
            }
            match(input,126,FOLLOW_126_in_tcs_operatortemplate3242); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764728E41AFC11DF9612E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_operatortemplate3246); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764972D01AFC11DF91BAE3828D1504C0");
            }
            // parser/TCS.g:611:493: (temp= identifier (temp= identifier )* )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==NAME) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // parser/TCS.g:611:495: temp= identifier (temp= identifier )*
                    {
                    pushFollow(FOLLOW_identifier_in_tcs_operatortemplate3254);
                    temp=identifier();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setRef(ret, "operators", list("TCS","Operator"), "name", temp, null, "never", null, false, null);
                    }
                    // parser/TCS.g:611:611: (temp= identifier )*
                    loop59:
                    do {
                        int alt59=2;
                        int LA59_0 = input.LA(1);

                        if ( (LA59_0==NAME) ) {
                            alt59=1;
                        }


                        switch (alt59) {
                    	case 1 :
                    	    // parser/TCS.g:611:613: temp= identifier
                    	    {
                    	    pushFollow(FOLLOW_identifier_in_tcs_operatortemplate3262);
                    	    temp=identifier();

                    	    checkFollows();
                    	    state._fsp--;
                    	    if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      setRef(ret, "operators", list("TCS","Operator"), "name", temp, null, "never", null, false, null);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop59;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764972D11AFC11DFC21FE3828D1504C0");
            }
            match(input,COMA,FOLLOW_COMA_in_tcs_operatortemplate3274); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764972D21AFC11DFA515E3828D1504C0");
            }
            match(input,105,FOLLOW_105_in_tcs_operatortemplate3278); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764972D31AFC11DF89B7E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_operatortemplate3282); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764972D51AFC11DF8048E3828D1504C0");
            }
            // parser/TCS.g:611:1052: (temp= tcs_propertyreference )
            // parser/TCS.g:611:1054: temp= tcs_propertyreference
            {
            pushFollow(FOLLOW_tcs_propertyreference_in_tcs_operatortemplate3290);
            temp=tcs_propertyreference();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "storeLeftSideTo", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764972DF1AFC11DFB4A4E3828D1504C0");
            }
            // parser/TCS.g:611:1202: ( ( COMA 'storeOpTo' EQ (temp= tcs_propertyreference ) ) | )
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==COMA) ) {
                int LA61_1 = input.LA(2);

                if ( (LA61_1==52||LA61_1==61||LA61_1==72) ) {
                    alt61=2;
                }
                else if ( (LA61_1==107) ) {
                    alt61=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret2;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA61_0==RPAREN) ) {
                alt61=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }
            switch (alt61) {
                case 1 :
                    // parser/TCS.g:611:1203: ( COMA 'storeOpTo' EQ (temp= tcs_propertyreference ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:611:1219: ( COMA 'storeOpTo' EQ (temp= tcs_propertyreference ) )
                    // parser/TCS.g:611:1220: COMA 'storeOpTo' EQ (temp= tcs_propertyreference )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764972D91AFC11DFA665E3828D1504C0");
                    }
                    match(input,COMA,FOLLOW_COMA_in_tcs_operatortemplate3303); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764972DA1AFC11DF9AABE3828D1504C0");
                    }
                    match(input,107,FOLLOW_107_in_tcs_operatortemplate3307); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764972DB1AFC11DFA85DE3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_operatortemplate3311); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764972DD1AFC11DF8CEBE3828D1504C0");
                    }
                    // parser/TCS.g:611:1525: (temp= tcs_propertyreference )
                    // parser/TCS.g:611:1527: temp= tcs_propertyreference
                    {
                    pushFollow(FOLLOW_tcs_propertyreference_in_tcs_operatortemplate3319);
                    temp=tcs_propertyreference();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "storeOperatorTo", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:611:1633: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764972E91AFC11DFA4E2E3828D1504C0");
            }
            // parser/TCS.g:612:77: ( ( COMA 'storeRightTo' EQ (temp= tcs_propertyreference ) ) | )
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==COMA) ) {
                int LA62_1 = input.LA(2);

                if ( (LA62_1==52||LA62_1==61) ) {
                    alt62=2;
                }
                else if ( (LA62_1==72) ) {
                    alt62=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret2;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA62_0==RPAREN) ) {
                alt62=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }
            switch (alt62) {
                case 1 :
                    // parser/TCS.g:612:78: ( COMA 'storeRightTo' EQ (temp= tcs_propertyreference ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:612:94: ( COMA 'storeRightTo' EQ (temp= tcs_propertyreference ) )
                    // parser/TCS.g:612:95: COMA 'storeRightTo' EQ (temp= tcs_propertyreference )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764972E31AFC11DFB234E3828D1504C0");
                    }
                    match(input,COMA,FOLLOW_COMA_in_tcs_operatortemplate3345); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764972E41AFC11DFABC6E3828D1504C0");
                    }
                    match(input,72,FOLLOW_72_in_tcs_operatortemplate3349); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764972E51AFC11DFC966E3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_operatortemplate3353); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764972E71AFC11DFCDCAE3828D1504C0");
                    }
                    // parser/TCS.g:612:403: (temp= tcs_propertyreference )
                    // parser/TCS.g:612:405: temp= tcs_propertyreference
                    {
                    pushFollow(FOLLOW_tcs_propertyreference_in_tcs_operatortemplate3361);
                    temp=tcs_propertyreference();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "storeRightSideTo", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:612:512: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764972F41AFC11DFBAD6E3828D1504C0");
            }
            // parser/TCS.g:613:77: ( ( COMA 'disambiguate' EQ (temp= stringSymbol ) ) | )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==COMA) ) {
                int LA63_1 = input.LA(2);

                if ( (LA63_1==61) ) {
                    alt63=1;
                }
                else if ( (LA63_1==52) ) {
                    alt63=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret2;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 63, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA63_0==RPAREN) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }
            switch (alt63) {
                case 1 :
                    // parser/TCS.g:613:78: ( COMA 'disambiguate' EQ (temp= stringSymbol ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:613:94: ( COMA 'disambiguate' EQ (temp= stringSymbol ) )
                    // parser/TCS.g:613:95: COMA 'disambiguate' EQ (temp= stringSymbol )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764972ED1AFC11DF972AE3828D1504C0");
                    }
                    match(input,COMA,FOLLOW_COMA_in_tcs_operatortemplate3387); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764972EE1AFC11DFAE3DE3828D1504C0");
                    }
                    match(input,61,FOLLOW_61_in_tcs_operatortemplate3391); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764972EF1AFC11DFACB9E3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_operatortemplate3395); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764972F21AFC11DFB94DE3828D1504C0");
                    }
                    // parser/TCS.g:613:403: (temp= stringSymbol )
                    // parser/TCS.g:613:405: temp= stringSymbol
                    {
                    pushFollow(FOLLOW_stringSymbol_in_tcs_operatortemplate3403);
                    temp=stringSymbol();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "disambiguate", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:613:499: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764972FF1AFC11DF9CF2E3828D1504C0");
            }
            // parser/TCS.g:614:77: ( ( COMA 'disambiguateV3' EQ (temp= stringSymbol ) ) | )
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==COMA) ) {
                alt64=1;
            }
            else if ( (LA64_0==RPAREN) ) {
                alt64=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // parser/TCS.g:614:78: ( COMA 'disambiguateV3' EQ (temp= stringSymbol ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:614:94: ( COMA 'disambiguateV3' EQ (temp= stringSymbol ) )
                    // parser/TCS.g:614:95: COMA 'disambiguateV3' EQ (temp= stringSymbol )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764972F81AFC11DFBAF1E3828D1504C0");
                    }
                    match(input,COMA,FOLLOW_COMA_in_tcs_operatortemplate3429); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764972F91AFC11DF9FDAE3828D1504C0");
                    }
                    match(input,52,FOLLOW_52_in_tcs_operatortemplate3433); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764972FA1AFC11DFA611E3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_operatortemplate3437); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764972FD1AFC11DF8C53E3828D1504C0");
                    }
                    // parser/TCS.g:614:405: (temp= stringSymbol )
                    // parser/TCS.g:614:407: temp= stringSymbol
                    {
                    pushFollow(FOLLOW_stringSymbol_in_tcs_operatortemplate3445);
                    temp=stringSymbol();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "disambiguateV3", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:614:503: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764973001AFC11DF8315E3828D1504C0");
            }
            match(input,RPAREN,FOLLOW_RPAREN_in_tcs_operatortemplate3465); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764BE3E01AFC11DF9C35E3828D1504C0");
            }
            // parser/TCS.g:615:160: ( ( 'referenceOnly' ) | ( ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | ) ) )
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==114) ) {
                alt67=1;
            }
            else if ( (LA67_0==SEMI||LA67_0==COLON||LA67_0==80) ) {
                alt67=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }
            switch (alt67) {
                case 1 :
                    // parser/TCS.g:615:161: ( 'referenceOnly' )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:615:177: ( 'referenceOnly' )
                    // parser/TCS.g:615:178: 'referenceOnly'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764BE3D01AFC11DFC14CE3828D1504C0");
                    }
                    match(input,114,FOLLOW_114_in_tcs_operatortemplate3475); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isReferenceOnly", java.lang.Boolean.TRUE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:615:348: ( ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    // parser/TCS.g:615:364: ( ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | ) )
                    // parser/TCS.g:615:365: ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764BE3DE1AFC11DFA95BE3828D1504C0");
                    }
                    // parser/TCS.g:615:425: ( ( 'context' ( ( (temp= tcs_contexttags ) ) | ) ) | )
                    int alt66=2;
                    int LA66_0 = input.LA(1);

                    if ( (LA66_0==80) ) {
                        alt66=1;
                    }
                    else if ( (LA66_0==SEMI||LA66_0==COLON) ) {
                        alt66=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret2;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 66, 0, input);

                        throw nvae;
                    }
                    switch (alt66) {
                        case 1 :
                            // parser/TCS.g:615:426: ( 'context' ( ( (temp= tcs_contexttags ) ) | ) )
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(0);
                            }
                            // parser/TCS.g:615:442: ( 'context' ( ( (temp= tcs_contexttags ) ) | ) )
                            // parser/TCS.g:615:443: 'context' ( ( (temp= tcs_contexttags ) ) | )
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD764BE3D51AFC11DFCFC4E3828D1504C0");
                            }
                            match(input,80,FOLLOW_80_in_tcs_operatortemplate3494); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD764BE3DC1AFC11DFA6E3E3828D1504C0");
                            }
                            // parser/TCS.g:615:587: ( ( (temp= tcs_contexttags ) ) | )
                            int alt65=2;
                            int LA65_0 = input.LA(1);

                            if ( (LA65_0==LPAREN) ) {
                                alt65=1;
                            }
                            else if ( (LA65_0==SEMI||LA65_0==COLON) ) {
                                alt65=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return ret2;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 65, 0, input);

                                throw nvae;
                            }
                            switch (alt65) {
                                case 1 :
                                    // parser/TCS.g:615:588: ( (temp= tcs_contexttags ) )
                                    {
                                    if ( state.backtracking==0 ) {
                                      _enterAlt(0);
                                    }
                                    // parser/TCS.g:615:604: ( (temp= tcs_contexttags ) )
                                    // parser/TCS.g:615:605: (temp= tcs_contexttags )
                                    {
                                    if ( state.backtracking==0 ) {
                                      _beforeSeqEl("E0DCF6CD764BE3DA1AFC11DF8ADDE3828D1504C0");
                                    }
                                    // parser/TCS.g:615:664: (temp= tcs_contexttags )
                                    // parser/TCS.g:615:666: temp= tcs_contexttags
                                    {
                                    pushFollow(FOLLOW_tcs_contexttags_in_tcs_operatortemplate3507);
                                    temp=tcs_contexttags();

                                    checkFollows();
                                    state._fsp--;
                                    if (state.failed) return ret2;
                                    if ( state.backtracking==0 ) {
                                      setProperty(ret, "contextTags", temp);
                                    }

                                    }

                                    if ( state.backtracking==0 ) {
                                      _afterSeqEl();
                                    }

                                    }

                                    if ( state.backtracking==0 ) {
                                      _exitAlt();
                                    }

                                    }
                                    break;
                                case 2 :
                                    // parser/TCS.g:615:762: 
                                    {
                                    if ( state.backtracking==0 ) {
                                      _enterAlt(1);
                                    }
                                    if ( state.backtracking==0 ) {
                                      _exitAlt();
                                    }

                                    }
                                    break;

                            }

                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }

                            if ( state.backtracking==0 ) {
                              setProperty(ret, "isContext", java.lang.Boolean.TRUE);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;
                        case 2 :
                            // parser/TCS.g:616:91: 
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(1);
                            }
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "isContext", java.lang.Boolean.FALSE);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isReferenceOnly", java.lang.Boolean.FALSE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764BE3F01AFC11DF92E4E3828D1504C0");
            }
            // parser/TCS.g:618:77: ( ( ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) ) | ( SEMI ) )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==COLON) ) {
                alt68=1;
            }
            else if ( (LA68_0==SEMI) ) {
                alt68=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // parser/TCS.g:618:78: ( ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:618:94: ( ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) )
                    // parser/TCS.g:618:95: ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764BE3EC1AFC11DF869FE3828D1504C0");
                    }
                    // parser/TCS.g:618:154: ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) )
                    // parser/TCS.g:618:155: ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI )
                    {
                    // parser/TCS.g:618:155: ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI )
                    // parser/TCS.g:618:156: COLON ( ( (temp= tcs_sequence ) ) ) SEMI
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764BE3E41AFC11DFCB59E3828D1504C0");
                    }
                    match(input,COLON,FOLLOW_COLON_in_tcs_operatortemplate3558); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764BE3E91AFC11DF8FA1E3828D1504C0");
                    }
                    // parser/TCS.g:618:297: ( ( (temp= tcs_sequence ) ) )
                    // parser/TCS.g:618:298: ( (temp= tcs_sequence ) )
                    {
                    // parser/TCS.g:618:298: ( (temp= tcs_sequence ) )
                    // parser/TCS.g:618:299: (temp= tcs_sequence )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764BE3E61AFC11DF8D00E3828D1504C0");
                    }
                    // parser/TCS.g:618:358: (temp= tcs_sequence )
                    // parser/TCS.g:618:360: temp= tcs_sequence
                    {
                    pushFollow(FOLLOW_tcs_sequence_in_tcs_operatortemplate3569);
                    temp=tcs_sequence();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "otSequence", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764BE3EA1AFC11DFBA36E3828D1504C0");
                    }
                    match(input,SEMI,FOLLOW_SEMI_in_tcs_operatortemplate3579); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:618:569: ( SEMI )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    // parser/TCS.g:618:585: ( SEMI )
                    // parser/TCS.g:618:586: SEMI
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD764BE3EE1AFC11DFC53AE3828D1504C0");
                    }
                    match(input,SEMI,FOLLOW_SEMI_in_tcs_operatortemplate3596); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD764BE3F31AFC11DF8B5BE3828D1504C0");
            }
            // parser/TCS.g:619:76: (temp= textblockdefinition_textblockdefinition )?
            int alt69=2;
            alt69 = dfa69.predict(input);
            switch (alt69) {
                case 1 :
                    // parser/TCS.g:619:78: temp= textblockdefinition_textblockdefinition
                    {
                    pushFollow(FOLLOW_textblockdefinition_textblockdefinition_in_tcs_operatortemplate3610);
                    temp=textblockdefinition_textblockdefinition();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "textBlockDefinition", temp);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, true);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_operatortemplate"


    // $ANTLR start "tcs_functiontemplate"
    // parser/TCS.g:627:1: tcs_functiontemplate returns [Object ret2] : ( 'function' (temp= identifier ) LPAREN reference[ret] RPAREN ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) ) ;
    public final Object tcs_functiontemplate() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","FunctionTemplate");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, true, true) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:632:3: ( ( 'function' (temp= identifier ) LPAREN reference[ret] RPAREN ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) ) )
            // parser/TCS.g:633:3: ( 'function' (temp= identifier ) LPAREN reference[ret] RPAREN ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) )
            {
            // parser/TCS.g:633:3: ( 'function' (temp= identifier ) LPAREN reference[ret] RPAREN ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) ) )
            // parser/TCS.g:633:4: 'function' (temp= identifier ) LPAREN reference[ret] RPAREN ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD765EF6A01AFC11DF9FA7E3828D1504C0");
            }
            match(input,57,FOLLOW_57_in_tcs_functiontemplate3655); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD765EF6A21AFC11DF99A1E3828D1504C0");
            }
            // parser/TCS.g:633:148: (temp= identifier )
            // parser/TCS.g:633:150: temp= identifier
            {
            pushFollow(FOLLOW_identifier_in_tcs_functiontemplate3662);
            temp=identifier();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "functionName", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD765EF6A31AFC11DF92BDE3828D1504C0");
            }
            match(input,LPAREN,FOLLOW_LPAREN_in_tcs_functiontemplate3669); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD765EF6A41AFC11DF9B8EE3828D1504C0");
            }
            pushFollow(FOLLOW_reference_in_tcs_functiontemplate3673);
            reference(ret);

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD765EF6A51AFC11DF8A5FE3828D1504C0");
            }
            match(input,RPAREN,FOLLOW_RPAREN_in_tcs_functiontemplate3678); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD765EF6AE1AFC11DFCAEFE3828D1504C0");
            }
            // parser/TCS.g:633:538: ( ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI ) )
            // parser/TCS.g:633:539: ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI )
            {
            // parser/TCS.g:633:539: ( COLON ( ( (temp= tcs_sequence ) ) ) SEMI )
            // parser/TCS.g:633:540: COLON ( ( (temp= tcs_sequence ) ) ) SEMI
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD765EF6A61AFC11DF9678E3828D1504C0");
            }
            match(input,COLON,FOLLOW_COLON_in_tcs_functiontemplate3686); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD765EF6AB1AFC11DFC89AE3828D1504C0");
            }
            // parser/TCS.g:633:681: ( ( (temp= tcs_sequence ) ) )
            // parser/TCS.g:633:682: ( (temp= tcs_sequence ) )
            {
            // parser/TCS.g:633:682: ( (temp= tcs_sequence ) )
            // parser/TCS.g:633:683: (temp= tcs_sequence )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD765EF6A81AFC11DF8259E3828D1504C0");
            }
            // parser/TCS.g:633:742: (temp= tcs_sequence )
            // parser/TCS.g:633:744: temp= tcs_sequence
            {
            pushFollow(FOLLOW_tcs_sequence_in_tcs_functiontemplate3697);
            temp=tcs_sequence();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "functionSequence", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }


            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD765EF6AC1AFC11DF8E82E3828D1504C0");
            }
            match(input,SEMI,FOLLOW_SEMI_in_tcs_functiontemplate3707); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }


            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, true);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_functiontemplate"


    // $ANTLR start "tcs_contexttags"
    // parser/TCS.g:641:1: tcs_contexttags returns [Object ret2] : ( LPAREN (temp= identifier ( ( COMA ) temp= identifier )* )? RPAREN ) ;
    public final Object tcs_contexttags() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","ContextTags");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:646:3: ( ( LPAREN (temp= identifier ( ( COMA ) temp= identifier )* )? RPAREN ) )
            // parser/TCS.g:647:3: ( LPAREN (temp= identifier ( ( COMA ) temp= identifier )* )? RPAREN )
            {
            // parser/TCS.g:647:3: ( LPAREN (temp= identifier ( ( COMA ) temp= identifier )* )? RPAREN )
            // parser/TCS.g:647:4: LPAREN (temp= identifier ( ( COMA ) temp= identifier )* )? RPAREN
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD766140901AFC11DFC406E3828D1504C0");
            }
            match(input,LPAREN,FOLLOW_LPAREN_in_tcs_contexttags3752); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD766140951AFC11DF87FAE3828D1504C0");
            }
            // parser/TCS.g:647:146: (temp= identifier ( ( COMA ) temp= identifier )* )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==NAME) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // parser/TCS.g:647:148: temp= identifier ( ( COMA ) temp= identifier )*
                    {
                    pushFollow(FOLLOW_identifier_in_tcs_contexttags3760);
                    temp=identifier();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "tags", temp);
                    }
                    // parser/TCS.g:647:198: ( ( COMA ) temp= identifier )*
                    loop70:
                    do {
                        int alt70=2;
                        int LA70_0 = input.LA(1);

                        if ( (LA70_0==COMA) ) {
                            alt70=1;
                        }


                        switch (alt70) {
                    	case 1 :
                    	    // parser/TCS.g:647:199: ( COMA ) temp= identifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	      _enterSepSeq();
                    	    }
                    	    // parser/TCS.g:647:216: ( COMA )
                    	    // parser/TCS.g:647:217: COMA
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	      _beforeSeqEl("E0DCF6CD766140921AFC11DF96B0E3828D1504C0");
                    	    }
                    	    match(input,COMA,FOLLOW_COMA_in_tcs_contexttags3769); if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      _afterSeqEl();
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	      _exitSepSeq();
                    	    }
                    	    pushFollow(FOLLOW_identifier_in_tcs_contexttags3777);
                    	    temp=identifier();

                    	    checkFollows();
                    	    state._fsp--;
                    	    if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      setProperty(ret, "tags", temp);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop70;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD766140961AFC11DF825DE3828D1504C0");
            }
            match(input,RPAREN,FOLLOW_RPAREN_in_tcs_contexttags3789); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_contexttags"


    // $ANTLR start "tcs_sequence__impl"
    // parser/TCS.g:655:1: tcs_sequence__impl returns [Object ret2] : ( (temp= tcs_sequenceelement (temp= tcs_sequenceelement )* )? ) ;
    public final Object tcs_sequence__impl() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","Sequence");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:660:3: ( ( (temp= tcs_sequenceelement (temp= tcs_sequenceelement )* )? ) )
            // parser/TCS.g:661:3: ( (temp= tcs_sequenceelement (temp= tcs_sequenceelement )* )? )
            {
            // parser/TCS.g:661:3: ( (temp= tcs_sequenceelement (temp= tcs_sequenceelement )* )? )
            // parser/TCS.g:661:4: (temp= tcs_sequenceelement (temp= tcs_sequenceelement )* )?
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7661409B1AFC11DFBCD4E3828D1504C0");
            }
            // parser/TCS.g:661:63: (temp= tcs_sequenceelement (temp= tcs_sequenceelement )* )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( ((LA73_0>=NAME && LA73_0<=STRING)||LA73_0==LPAREN||LA73_0==RARROW||LA73_0==LT||LA73_0==LSQUARE||LA73_0==DLSQUARE||(LA73_0>=DOLLAR && LA73_0<=DLCURLY)||(LA73_0>=49 && LA73_0<=97)||(LA73_0>=99 && LA73_0<=140)) ) {
                alt73=1;
            }
            else if ( (LA73_0==98) ) {
                int LA73_2 = input.LA(2);

                if ( (LA73_2==LCURLY) ) {
                    int LA73_4 = input.LA(3);

                    if ( ((LA73_4>=58 && LA73_4<=62)||(LA73_4>=85 && LA73_4<=86)||(LA73_4>=97 && LA73_4<=98)||LA73_4==106||LA73_4==112||(LA73_4>=118 && LA73_4<=119)||(LA73_4>=129 && LA73_4<=130)||LA73_4==135) ) {
                        alt73=1;
                    }
                    else if ( (LA73_4==RCURLY) ) {
                        int LA73_5 = input.LA(4);

                        if ( (synpred167_TCS()) ) {
                            alt73=1;
                        }
                    }
                }
                else if ( (LA73_2==EOF||(LA73_2>=NAME && LA73_2<=STRING)||(LA73_2>=LPAREN && LA73_2<=RPAREN)||(LA73_2>=RCURLY && LA73_2<=COMA)||LA73_2==LT||(LA73_2>=LSQUARE && LA73_2<=RSQUARE)||LA73_2==DLSQUARE||(LA73_2>=DOLLAR && LA73_2<=DLCURLY)||(LA73_2>=49 && LA73_2<=140)) ) {
                    alt73=1;
                }
            }
            switch (alt73) {
                case 1 :
                    // parser/TCS.g:661:65: temp= tcs_sequenceelement (temp= tcs_sequenceelement )*
                    {
                    pushFollow(FOLLOW_tcs_sequenceelement_in_tcs_sequence__impl3834);
                    temp=tcs_sequenceelement();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "elements", temp);
                    }
                    // parser/TCS.g:661:128: (temp= tcs_sequenceelement )*
                    loop72:
                    do {
                        int alt72=2;
                        int LA72_0 = input.LA(1);

                        if ( (LA72_0==98) ) {
                            int LA72_1 = input.LA(2);

                            if ( (LA72_1==LCURLY) ) {
                                int LA72_4 = input.LA(3);

                                if ( ((LA72_4>=58 && LA72_4<=62)||(LA72_4>=85 && LA72_4<=86)||(LA72_4>=97 && LA72_4<=98)||LA72_4==106||LA72_4==112||(LA72_4>=118 && LA72_4<=119)||(LA72_4>=129 && LA72_4<=130)||LA72_4==135) ) {
                                    alt72=1;
                                }
                                else if ( (LA72_4==RCURLY) ) {
                                    int LA72_5 = input.LA(4);

                                    if ( (synpred166_TCS()) ) {
                                        alt72=1;
                                    }


                                }


                            }
                            else if ( (LA72_1==EOF||(LA72_1>=NAME && LA72_1<=STRING)||(LA72_1>=LPAREN && LA72_1<=RPAREN)||(LA72_1>=RCURLY && LA72_1<=COMA)||LA72_1==LT||(LA72_1>=LSQUARE && LA72_1<=RSQUARE)||LA72_1==DLSQUARE||(LA72_1>=DOLLAR && LA72_1<=DLCURLY)||(LA72_1>=49 && LA72_1<=140)) ) {
                                alt72=1;
                            }


                        }
                        else if ( ((LA72_0>=NAME && LA72_0<=STRING)||LA72_0==LPAREN||LA72_0==RARROW||LA72_0==LT||LA72_0==LSQUARE||LA72_0==DLSQUARE||(LA72_0>=DOLLAR && LA72_0<=DLCURLY)||(LA72_0>=49 && LA72_0<=97)||(LA72_0>=99 && LA72_0<=140)) ) {
                            alt72=1;
                        }


                        switch (alt72) {
                    	case 1 :
                    	    // parser/TCS.g:661:130: temp= tcs_sequenceelement
                    	    {
                    	    pushFollow(FOLLOW_tcs_sequenceelement_in_tcs_sequence__impl3842);
                    	    temp=tcs_sequenceelement();

                    	    checkFollows();
                    	    state._fsp--;
                    	    if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      setProperty(ret, "elements", temp);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop72;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_sequence__impl"


    // $ANTLR start "tcs_sequence"
    // parser/TCS.g:669:1: tcs_sequence returns [Object ret2] : (ret= tcs_sequence__impl | (ret= tcs_sequenceinalternative ) ) ;
    public final Object tcs_sequence() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        try {
            // parser/TCS.g:670:3: ( (ret= tcs_sequence__impl | (ret= tcs_sequenceinalternative ) ) )
            // parser/TCS.g:671:3: (ret= tcs_sequence__impl | (ret= tcs_sequenceinalternative ) )
            {
            // parser/TCS.g:671:3: (ret= tcs_sequence__impl | (ret= tcs_sequenceinalternative ) )
            int alt74=2;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // parser/TCS.g:671:4: ret= tcs_sequence__impl
                    {
                    pushFollow(FOLLOW_tcs_sequence__impl_in_tcs_sequence3887);
                    ret=tcs_sequence__impl();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 2 :
                    // parser/TCS.g:671:27: (ret= tcs_sequenceinalternative )
                    {
                    // parser/TCS.g:671:27: (ret= tcs_sequenceinalternative )
                    // parser/TCS.g:671:28: ret= tcs_sequenceinalternative
                    {
                    pushFollow(FOLLOW_tcs_sequenceinalternative_in_tcs_sequence3892);
                    ret=tcs_sequenceinalternative();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }

                    if ( state.backtracking==0 ) {

                      ret2=ret;
                       
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              ret2 = ret;
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_sequence"


    // $ANTLR start "tcs_sequenceelement"
    // parser/TCS.g:678:1: tcs_sequenceelement returns [Object ret2] : (ret= tcs_literalref | ret= tcs_property | ret= tcs_customseparator | ret= tcs_block | ret= tcs_conditionalelement | ret= tcs_alternative | ret= tcs_functioncall | ret= tcs_injectoractionsblock ) ;
    public final Object tcs_sequenceelement() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        try {
            // parser/TCS.g:679:3: ( (ret= tcs_literalref | ret= tcs_property | ret= tcs_customseparator | ret= tcs_block | ret= tcs_conditionalelement | ret= tcs_alternative | ret= tcs_functioncall | ret= tcs_injectoractionsblock ) )
            // parser/TCS.g:680:3: (ret= tcs_literalref | ret= tcs_property | ret= tcs_customseparator | ret= tcs_block | ret= tcs_conditionalelement | ret= tcs_alternative | ret= tcs_functioncall | ret= tcs_injectoractionsblock )
            {
            // parser/TCS.g:680:3: (ret= tcs_literalref | ret= tcs_property | ret= tcs_customseparator | ret= tcs_block | ret= tcs_conditionalelement | ret= tcs_alternative | ret= tcs_functioncall | ret= tcs_injectoractionsblock )
            int alt75=8;
            switch ( input.LA(1) ) {
            case STRING:
                {
                alt75=1;
                }
                break;
            case NAME:
            case RARROW:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
                {
                alt75=2;
                }
                break;
            case LT:
                {
                alt75=3;
                }
                break;
            case LSQUARE:
                {
                alt75=4;
                }
                break;
            case LPAREN:
                {
                alt75=5;
                }
                break;
            case DLSQUARE:
                {
                alt75=6;
                }
                break;
            case DOLLAR:
                {
                alt75=7;
                }
                break;
            case DLCURLY:
                {
                alt75=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }

            switch (alt75) {
                case 1 :
                    // parser/TCS.g:680:4: ret= tcs_literalref
                    {
                    pushFollow(FOLLOW_tcs_literalref_in_tcs_sequenceelement3921);
                    ret=tcs_literalref();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 2 :
                    // parser/TCS.g:681:5: ret= tcs_property
                    {
                    pushFollow(FOLLOW_tcs_property_in_tcs_sequenceelement3929);
                    ret=tcs_property();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 3 :
                    // parser/TCS.g:682:5: ret= tcs_customseparator
                    {
                    pushFollow(FOLLOW_tcs_customseparator_in_tcs_sequenceelement3937);
                    ret=tcs_customseparator();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 4 :
                    // parser/TCS.g:683:5: ret= tcs_block
                    {
                    pushFollow(FOLLOW_tcs_block_in_tcs_sequenceelement3945);
                    ret=tcs_block();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 5 :
                    // parser/TCS.g:684:5: ret= tcs_conditionalelement
                    {
                    pushFollow(FOLLOW_tcs_conditionalelement_in_tcs_sequenceelement3953);
                    ret=tcs_conditionalelement();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 6 :
                    // parser/TCS.g:685:5: ret= tcs_alternative
                    {
                    pushFollow(FOLLOW_tcs_alternative_in_tcs_sequenceelement3961);
                    ret=tcs_alternative();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 7 :
                    // parser/TCS.g:686:5: ret= tcs_functioncall
                    {
                    pushFollow(FOLLOW_tcs_functioncall_in_tcs_sequenceelement3969);
                    ret=tcs_functioncall();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 8 :
                    // parser/TCS.g:687:5: ret= tcs_injectoractionsblock
                    {
                    pushFollow(FOLLOW_tcs_injectoractionsblock_in_tcs_sequenceelement3977);
                    ret=tcs_injectoractionsblock();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              ret2=ret;
               
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_sequenceelement"


    // $ANTLR start "tcs_literalref"
    // parser/TCS.g:694:1: tcs_literalref returns [Object ret2] : ( (temp= stringSymbol ) ) ;
    public final Object tcs_literalref() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","LiteralRef");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:699:3: ( ( (temp= stringSymbol ) ) )
            // parser/TCS.g:700:3: ( (temp= stringSymbol ) )
            {
            // parser/TCS.g:700:3: ( (temp= stringSymbol ) )
            // parser/TCS.g:700:4: (temp= stringSymbol )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76686C811AFC11DF9AF2E3828D1504C0");
            }
            // parser/TCS.g:700:63: (temp= stringSymbol )
            // parser/TCS.g:700:65: temp= stringSymbol
            {
            pushFollow(FOLLOW_stringSymbol_in_tcs_literalref4011);
            temp=stringSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setRef(ret, "referredLiteral", list("TCS","Literal"), "value", temp, "#all", "ifmissing", list("TCS","Keyword"), false, null);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD766ADD801AFC11DF9159E3828D1504C0");
            }
            if ( state.backtracking==0 ) {
              setOclRef(ret, "parentTemplate", null, null, "OCL:#context", true);_exitInjectorAction();
            }
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_literalref"


    // $ANTLR start "tcs_propertyreference"
    // parser/TCS.g:708:1: tcs_propertyreference returns [Object ret2] : ( ( ( (temp= identifierOrKeyword ) ) | ( RARROW (temp= identifierOrKeyword )? ) ) ) ;
    public final Object tcs_propertyreference() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","PropertyReference");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:713:3: ( ( ( ( (temp= identifierOrKeyword ) ) | ( RARROW (temp= identifierOrKeyword )? ) ) ) )
            // parser/TCS.g:714:3: ( ( ( (temp= identifierOrKeyword ) ) | ( RARROW (temp= identifierOrKeyword )? ) ) )
            {
            // parser/TCS.g:714:3: ( ( ( (temp= identifierOrKeyword ) ) | ( RARROW (temp= identifierOrKeyword )? ) ) )
            // parser/TCS.g:714:4: ( ( (temp= identifierOrKeyword ) ) | ( RARROW (temp= identifierOrKeyword )? ) )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD766F98791AFC11DFB86AE3828D1504C0");
            }
            // parser/TCS.g:714:64: ( ( (temp= identifierOrKeyword ) ) | ( RARROW (temp= identifierOrKeyword )? ) )
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==NAME||(LA77_0>=49 && LA77_0<=140)) ) {
                alt77=1;
            }
            else if ( (LA77_0==RARROW) ) {
                alt77=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }
            switch (alt77) {
                case 1 :
                    // parser/TCS.g:714:65: ( (temp= identifierOrKeyword ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:714:81: ( (temp= identifierOrKeyword ) )
                    // parser/TCS.g:714:82: (temp= identifierOrKeyword )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD766F98721AFC11DFA2C1E3828D1504C0");
                    }
                    // parser/TCS.g:714:141: (temp= identifierOrKeyword )
                    // parser/TCS.g:714:143: temp= identifierOrKeyword
                    {
                    pushFollow(FOLLOW_identifierOrKeyword_in_tcs_propertyreference4067);
                    temp=identifierOrKeyword();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setOclRef(ret, "strucfeature", "name", temp, "OCL:let c = #context.oclAsType(TCS::Template).metaReference in"+"                                                let result = c.lookupElementExtended(?) in"+"                                                if not (result.oclIsInvalid()) then"+"                                                        if(result.oclIsTypeOf(Model::Attribute) or"+"                                                                        result.oclIsTypeOf(Model::Reference)"+"                                                                        or result.oclIsTypeOf(Model::StructureField)) then"+"                                                                Bag{result}     "+"                                                        else            "+"                                                                c.allSupertypes()->prepend(c)->collect("+"                                                                        st | st.oclAsType(Model::Classifier).typedElements->select("+"                                                                                te | "+"                                                                                        if te.oclIsTypeOf(Model::AssociationEnd) then"+"                                                                                                te.oclAsType(Model::AssociationEnd).otherEnd().name = ? "+"                                                                                        else            "+"                                                                                                false "+"                                                                                        endif"+"                                                                                )->collect(ae | ae.oclAsType(Model::AssociationEnd).otherEnd())"+"                                                                )"+"                                                        endif "+"                                                else    "+"                                                        c.allSupertypes()->prepend(c)->collect("+"                                                                st | st.oclAsType(Model::Classifier).typedElements->select("+"                                                                        te | "+"                                                                                if te.oclIsTypeOf(Model::AssociationEnd) then"+"                                                                                        te.oclAsType(Model::AssociationEnd).otherEnd().name = ? "+"                                                                                else"+"                                                                                        false "+"                                                                                endif"+"                                                                        )"+"                                                                )->collect(ae | ae.oclAsType(Model::AssociationEnd).otherEnd()"+"                                                        ) "+"                                                endif"+"                                                        ");
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:714:3487: ( RARROW (temp= identifierOrKeyword )? )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    // parser/TCS.g:714:3503: ( RARROW (temp= identifierOrKeyword )? )
                    // parser/TCS.g:714:3504: RARROW (temp= identifierOrKeyword )?
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD766F98741AFC11DF97D4E3828D1504C0");
                    }
                    match(input,RARROW,FOLLOW_RARROW_in_tcs_propertyreference4083); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD766F98771AFC11DF9960E3828D1504C0");
                    }
                    // parser/TCS.g:714:3646: (temp= identifierOrKeyword )?
                    int alt76=2;
                    alt76 = dfa76.predict(input);
                    switch (alt76) {
                        case 1 :
                            // parser/TCS.g:714:3648: temp= identifierOrKeyword
                            {
                            pushFollow(FOLLOW_identifierOrKeyword_in_tcs_propertyreference4091);
                            temp=identifierOrKeyword();

                            checkFollows();
                            state._fsp--;
                            if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "name", temp);
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_propertyreference"


    // $ANTLR start "tcs_property"
    // parser/TCS.g:723:1: tcs_property returns [Object ret2] : ( (temp= tcs_propertyreference ) ( ( LCURLY (temp= tcs_propertyarg ( ( COMA ) temp= tcs_propertyarg )* )? RCURLY ) | ) ) ;
    public final Object tcs_property() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","Property");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:728:3: ( ( (temp= tcs_propertyreference ) ( ( LCURLY (temp= tcs_propertyarg ( ( COMA ) temp= tcs_propertyarg )* )? RCURLY ) | ) ) )
            // parser/TCS.g:729:3: ( (temp= tcs_propertyreference ) ( ( LCURLY (temp= tcs_propertyarg ( ( COMA ) temp= tcs_propertyarg )* )? RCURLY ) | ) )
            {
            // parser/TCS.g:729:3: ( (temp= tcs_propertyreference ) ( ( LCURLY (temp= tcs_propertyarg ( ( COMA ) temp= tcs_propertyarg )* )? RCURLY ) | ) )
            // parser/TCS.g:729:4: (temp= tcs_propertyreference ) ( ( LCURLY (temp= tcs_propertyarg ( ( COMA ) temp= tcs_propertyarg )* )? RCURLY ) | )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7671E2611AFC11DFC32EE3828D1504C0");
            }
            // parser/TCS.g:729:63: (temp= tcs_propertyreference )
            // parser/TCS.g:729:65: temp= tcs_propertyreference
            {
            pushFollow(FOLLOW_tcs_propertyreference_in_tcs_property4146);
            temp=tcs_propertyreference();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "propertyReference", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7671E26D1AFC11DFC80FE3828D1504C0");
            }
            // parser/TCS.g:729:215: ( ( LCURLY (temp= tcs_propertyarg ( ( COMA ) temp= tcs_propertyarg )* )? RCURLY ) | )
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==LCURLY) ) {
                alt80=1;
            }
            else if ( (LA80_0==EOF||(LA80_0>=NAME && LA80_0<=STRING)||(LA80_0>=LPAREN && LA80_0<=RPAREN)||(LA80_0>=RCURLY && LA80_0<=COMA)||LA80_0==LT||(LA80_0>=LSQUARE && LA80_0<=RSQUARE)||(LA80_0>=DLSQUARE && LA80_0<=DRSQUARE)||(LA80_0>=DOLLAR && LA80_0<=DLCURLY)||(LA80_0>=49 && LA80_0<=140)) ) {
                alt80=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;
            }
            switch (alt80) {
                case 1 :
                    // parser/TCS.g:729:216: ( LCURLY (temp= tcs_propertyarg ( ( COMA ) temp= tcs_propertyarg )* )? RCURLY )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:729:232: ( LCURLY (temp= tcs_propertyarg ( ( COMA ) temp= tcs_propertyarg )* )? RCURLY )
                    // parser/TCS.g:729:233: LCURLY (temp= tcs_propertyarg ( ( COMA ) temp= tcs_propertyarg )* )? RCURLY
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7671E2651AFC11DFC3F1E3828D1504C0");
                    }
                    match(input,LCURLY,FOLLOW_LCURLY_in_tcs_property4159); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7671E26A1AFC11DF9400E3828D1504C0");
                    }
                    // parser/TCS.g:729:375: (temp= tcs_propertyarg ( ( COMA ) temp= tcs_propertyarg )* )?
                    int alt79=2;
                    int LA79_0 = input.LA(1);

                    if ( ((LA79_0>=58 && LA79_0<=62)||(LA79_0>=85 && LA79_0<=86)||(LA79_0>=97 && LA79_0<=98)||LA79_0==106||LA79_0==112||(LA79_0>=118 && LA79_0<=119)||(LA79_0>=129 && LA79_0<=130)||LA79_0==135) ) {
                        alt79=1;
                    }
                    switch (alt79) {
                        case 1 :
                            // parser/TCS.g:729:377: temp= tcs_propertyarg ( ( COMA ) temp= tcs_propertyarg )*
                            {
                            pushFollow(FOLLOW_tcs_propertyarg_in_tcs_property4167);
                            temp=tcs_propertyarg();

                            checkFollows();
                            state._fsp--;
                            if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "propertyArgs", temp);
                            }
                            // parser/TCS.g:729:440: ( ( COMA ) temp= tcs_propertyarg )*
                            loop78:
                            do {
                                int alt78=2;
                                int LA78_0 = input.LA(1);

                                if ( (LA78_0==COMA) ) {
                                    alt78=1;
                                }


                                switch (alt78) {
                            	case 1 :
                            	    // parser/TCS.g:729:441: ( COMA ) temp= tcs_propertyarg
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	      _enterSepSeq();
                            	    }
                            	    // parser/TCS.g:729:458: ( COMA )
                            	    // parser/TCS.g:729:459: COMA
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	      _beforeSeqEl("E0DCF6CD7671E2671AFC11DFB337E3828D1504C0");
                            	    }
                            	    match(input,COMA,FOLLOW_COMA_in_tcs_property4176); if (state.failed) return ret2;
                            	    if ( state.backtracking==0 ) {
                            	      _afterSeqEl();
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	      _exitSepSeq();
                            	    }
                            	    pushFollow(FOLLOW_tcs_propertyarg_in_tcs_property4184);
                            	    temp=tcs_propertyarg();

                            	    checkFollows();
                            	    state._fsp--;
                            	    if (state.failed) return ret2;
                            	    if ( state.backtracking==0 ) {
                            	      setProperty(ret, "propertyArgs", temp);
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop78;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7671E26B1AFC11DFCFE5E3828D1504C0");
                    }
                    match(input,RCURLY,FOLLOW_RCURLY_in_tcs_property4196); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:729:743: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7671E2701AFC11DFB340E3828D1504C0");
            }
            if ( state.backtracking==0 ) {
              setOclRef(ret, "parentTemplate", null, null, "OCL:#context", true);_exitInjectorAction();
            }
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_property"


    // $ANTLR start "tcs_customseparator"
    // parser/TCS.g:738:1: tcs_customseparator returns [Object ret2] : ( LT (temp= identifier ) GT ) ;
    public final Object tcs_customseparator() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","CustomSeparator");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:743:3: ( ( LT (temp= identifier ) GT ) )
            // parser/TCS.g:744:3: ( LT (temp= identifier ) GT )
            {
            // parser/TCS.g:744:3: ( LT (temp= identifier ) GT )
            // parser/TCS.g:744:4: LT (temp= identifier ) GT
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD767453601AFC11DFC284E3828D1504C0");
            }
            match(input,LT,FOLLOW_LT_in_tcs_customseparator4254); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD767453621AFC11DFB39BE3828D1504C0");
            }
            // parser/TCS.g:744:142: (temp= identifier )
            // parser/TCS.g:744:144: temp= identifier
            {
            pushFollow(FOLLOW_identifier_in_tcs_customseparator4262);
            temp=identifier();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "name", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD767453631AFC11DF8C57E3828D1504C0");
            }
            match(input,GT,FOLLOW_GT_in_tcs_customseparator4269); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD767453661AFC11DF9F82E3828D1504C0");
            }
            if ( state.backtracking==0 ) {
              setOclRef(ret, "parentTemplate", null, null, "OCL:#context", true);_exitInjectorAction();
            }
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_customseparator"


    // $ANTLR start "tcs_block"
    // parser/TCS.g:752:1: tcs_block returns [Object ret2] : ( LSQUARE (temp= tcs_sequence ) RSQUARE ( ( LCURLY (temp= tcs_blockarg ( ( COMA ) temp= tcs_blockarg )* )? RCURLY ) | ) ) ;
    public final Object tcs_block() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","Block");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:757:3: ( ( LSQUARE (temp= tcs_sequence ) RSQUARE ( ( LCURLY (temp= tcs_blockarg ( ( COMA ) temp= tcs_blockarg )* )? RCURLY ) | ) ) )
            // parser/TCS.g:758:3: ( LSQUARE (temp= tcs_sequence ) RSQUARE ( ( LCURLY (temp= tcs_blockarg ( ( COMA ) temp= tcs_blockarg )* )? RCURLY ) | ) )
            {
            // parser/TCS.g:758:3: ( LSQUARE (temp= tcs_sequence ) RSQUARE ( ( LCURLY (temp= tcs_blockarg ( ( COMA ) temp= tcs_blockarg )* )? RCURLY ) | ) )
            // parser/TCS.g:758:4: LSQUARE (temp= tcs_sequence ) RSQUARE ( ( LCURLY (temp= tcs_blockarg ( ( COMA ) temp= tcs_blockarg )* )? RCURLY ) | )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7674536A1AFC11DFBA3AE3828D1504C0");
            }
            match(input,LSQUARE,FOLLOW_LSQUARE_in_tcs_block4314); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7674536C1AFC11DF8CB8E3828D1504C0");
            }
            // parser/TCS.g:758:147: (temp= tcs_sequence )
            // parser/TCS.g:758:149: temp= tcs_sequence
            {
            pushFollow(FOLLOW_tcs_sequence_in_tcs_block4322);
            temp=tcs_sequence();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "blockSequence", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7674536D1AFC11DF8371E3828D1504C0");
            }
            match(input,RSQUARE,FOLLOW_RSQUARE_in_tcs_block4329); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD767453791AFC11DFB9D8E3828D1504C0");
            }
            // parser/TCS.g:758:370: ( ( LCURLY (temp= tcs_blockarg ( ( COMA ) temp= tcs_blockarg )* )? RCURLY ) | )
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==LCURLY) ) {
                alt83=1;
            }
            else if ( (LA83_0==EOF||(LA83_0>=NAME && LA83_0<=STRING)||(LA83_0>=LPAREN && LA83_0<=RPAREN)||(LA83_0>=RCURLY && LA83_0<=COMA)||LA83_0==LT||(LA83_0>=LSQUARE && LA83_0<=RSQUARE)||(LA83_0>=DLSQUARE && LA83_0<=DRSQUARE)||(LA83_0>=DOLLAR && LA83_0<=DLCURLY)||(LA83_0>=49 && LA83_0<=140)) ) {
                alt83=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 83, 0, input);

                throw nvae;
            }
            switch (alt83) {
                case 1 :
                    // parser/TCS.g:758:371: ( LCURLY (temp= tcs_blockarg ( ( COMA ) temp= tcs_blockarg )* )? RCURLY )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:758:387: ( LCURLY (temp= tcs_blockarg ( ( COMA ) temp= tcs_blockarg )* )? RCURLY )
                    // parser/TCS.g:758:388: LCURLY (temp= tcs_blockarg ( ( COMA ) temp= tcs_blockarg )* )? RCURLY
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD767453711AFC11DFA23EE3828D1504C0");
                    }
                    match(input,LCURLY,FOLLOW_LCURLY_in_tcs_block4340); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD767453761AFC11DF8BAFE3828D1504C0");
                    }
                    // parser/TCS.g:758:530: (temp= tcs_blockarg ( ( COMA ) temp= tcs_blockarg )* )?
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( (LA82_0==73||LA82_0==75||LA82_0==82||LA82_0==84||LA82_0==92) ) {
                        alt82=1;
                    }
                    switch (alt82) {
                        case 1 :
                            // parser/TCS.g:758:532: temp= tcs_blockarg ( ( COMA ) temp= tcs_blockarg )*
                            {
                            pushFollow(FOLLOW_tcs_blockarg_in_tcs_block4348);
                            temp=tcs_blockarg();

                            checkFollows();
                            state._fsp--;
                            if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "blockArgs", temp);
                            }
                            // parser/TCS.g:758:589: ( ( COMA ) temp= tcs_blockarg )*
                            loop81:
                            do {
                                int alt81=2;
                                int LA81_0 = input.LA(1);

                                if ( (LA81_0==COMA) ) {
                                    alt81=1;
                                }


                                switch (alt81) {
                            	case 1 :
                            	    // parser/TCS.g:758:590: ( COMA ) temp= tcs_blockarg
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	      _enterSepSeq();
                            	    }
                            	    // parser/TCS.g:758:607: ( COMA )
                            	    // parser/TCS.g:758:608: COMA
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	      _beforeSeqEl("E0DCF6CD767453731AFC11DF9329E3828D1504C0");
                            	    }
                            	    match(input,COMA,FOLLOW_COMA_in_tcs_block4357); if (state.failed) return ret2;
                            	    if ( state.backtracking==0 ) {
                            	      _afterSeqEl();
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	      _exitSepSeq();
                            	    }
                            	    pushFollow(FOLLOW_tcs_blockarg_in_tcs_block4365);
                            	    temp=tcs_blockarg();

                            	    checkFollows();
                            	    state._fsp--;
                            	    if (state.failed) return ret2;
                            	    if ( state.backtracking==0 ) {
                            	      setProperty(ret, "blockArgs", temp);
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop81;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD767453771AFC11DFC1C7E3828D1504C0");
                    }
                    match(input,RCURLY,FOLLOW_RCURLY_in_tcs_block4377); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:758:886: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7674537C1AFC11DFB09EE3828D1504C0");
            }
            if ( state.backtracking==0 ) {
              setOclRef(ret, "parentTemplate", null, null, "OCL:#context", true);_exitInjectorAction();
            }
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_block"


    // $ANTLR start "tcs_conditionalelement"
    // parser/TCS.g:767:1: tcs_conditionalelement returns [Object ret2] : ( LPAREN (temp= tcs_expression )? QMARK (temp= tcs_sequence ) ( ( COLON (temp= tcs_sequence ) ) | ) RPAREN ) ;
    public final Object tcs_conditionalelement() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","ConditionalElement");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:772:3: ( ( LPAREN (temp= tcs_expression )? QMARK (temp= tcs_sequence ) ( ( COLON (temp= tcs_sequence ) ) | ) RPAREN ) )
            // parser/TCS.g:773:3: ( LPAREN (temp= tcs_expression )? QMARK (temp= tcs_sequence ) ( ( COLON (temp= tcs_sequence ) ) | ) RPAREN )
            {
            // parser/TCS.g:773:3: ( LPAREN (temp= tcs_expression )? QMARK (temp= tcs_sequence ) ( ( COLON (temp= tcs_sequence ) ) | ) RPAREN )
            // parser/TCS.g:773:4: LPAREN (temp= tcs_expression )? QMARK (temp= tcs_sequence ) ( ( COLON (temp= tcs_sequence ) ) | ) RPAREN
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7676C4621AFC11DFC138E3828D1504C0");
            }
            match(input,LPAREN,FOLLOW_LPAREN_in_tcs_conditionalelement4435); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7676C4641AFC11DFB75BE3828D1504C0");
            }
            // parser/TCS.g:773:146: (temp= tcs_expression )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==NAME||LA84_0==RARROW||(LA84_0>=49 && LA84_0<=140)) ) {
                alt84=1;
            }
            else if ( (LA84_0==QMARK) ) {
                int LA84_2 = input.LA(2);

                if ( (synpred184_TCS()) ) {
                    alt84=1;
                }
            }
            switch (alt84) {
                case 1 :
                    // parser/TCS.g:773:148: temp= tcs_expression
                    {
                    pushFollow(FOLLOW_tcs_expression_in_tcs_conditionalelement4443);
                    temp=tcs_expression();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "condition", temp);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7676C4651AFC11DFCB65E3828D1504C0");
            }
            match(input,QMARK,FOLLOW_QMARK_in_tcs_conditionalelement4452); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7676C4671AFC11DFA2B2E3828D1504C0");
            }
            // parser/TCS.g:773:366: (temp= tcs_sequence )
            // parser/TCS.g:773:368: temp= tcs_sequence
            {
            pushFollow(FOLLOW_tcs_sequence_in_tcs_conditionalelement4460);
            temp=tcs_sequence();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "thenSequence", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7676C46F1AFC11DFCD5DE3828D1504C0");
            }
            // parser/TCS.g:773:504: ( ( COLON (temp= tcs_sequence ) ) | )
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==COLON) ) {
                alt85=1;
            }
            else if ( (LA85_0==RPAREN) ) {
                alt85=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }
            switch (alt85) {
                case 1 :
                    // parser/TCS.g:773:505: ( COLON (temp= tcs_sequence ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:773:521: ( COLON (temp= tcs_sequence ) )
                    // parser/TCS.g:773:522: COLON (temp= tcs_sequence )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7676C46B1AFC11DFACC6E3828D1504C0");
                    }
                    match(input,COLON,FOLLOW_COLON_in_tcs_conditionalelement4473); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7676C46D1AFC11DFB788E3828D1504C0");
                    }
                    // parser/TCS.g:773:663: (temp= tcs_sequence )
                    // parser/TCS.g:773:665: temp= tcs_sequence
                    {
                    pushFollow(FOLLOW_tcs_sequence_in_tcs_conditionalelement4481);
                    temp=tcs_sequence();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "elseSequence", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:773:759: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7676C4701AFC11DFAAD8E3828D1504C0");
            }
            match(input,RPAREN,FOLLOW_RPAREN_in_tcs_conditionalelement4501); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7676C4731AFC11DFBA43E3828D1504C0");
            }
            if ( state.backtracking==0 ) {
              setOclRef(ret, "parentTemplate", null, null, "OCL:#context", true);_exitInjectorAction();
            }
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_conditionalelement"


    // $ANTLR start "tcs_alternative"
    // parser/TCS.g:782:1: tcs_alternative returns [Object ret2] : ( DLSQUARE (temp= tcs_sequenceinalternative ( ( PIPE ) temp= tcs_sequenceinalternative )* )? DRSQUARE ( ( STAR ) | ) ) ;
    public final Object tcs_alternative() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","Alternative");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:787:3: ( ( DLSQUARE (temp= tcs_sequenceinalternative ( ( PIPE ) temp= tcs_sequenceinalternative )* )? DRSQUARE ( ( STAR ) | ) ) )
            // parser/TCS.g:788:3: ( DLSQUARE (temp= tcs_sequenceinalternative ( ( PIPE ) temp= tcs_sequenceinalternative )* )? DRSQUARE ( ( STAR ) | ) )
            {
            // parser/TCS.g:788:3: ( DLSQUARE (temp= tcs_sequenceinalternative ( ( PIPE ) temp= tcs_sequenceinalternative )* )? DRSQUARE ( ( STAR ) | ) )
            // parser/TCS.g:788:4: DLSQUARE (temp= tcs_sequenceinalternative ( ( PIPE ) temp= tcs_sequenceinalternative )* )? DRSQUARE ( ( STAR ) | )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76790E501AFC11DF96A3E3828D1504C0");
            }
            match(input,DLSQUARE,FOLLOW_DLSQUARE_in_tcs_alternative4546); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76790E551AFC11DFCA22E3828D1504C0");
            }
            // parser/TCS.g:788:148: (temp= tcs_sequenceinalternative ( ( PIPE ) temp= tcs_sequenceinalternative )* )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( ((LA87_0>=NAME && LA87_0<=STRING)||LA87_0==LPAREN||LA87_0==RARROW||LA87_0==LT||LA87_0==LSQUARE||(LA87_0>=DLSQUARE && LA87_0<=PIPE)||(LA87_0>=DOLLAR && LA87_0<=DLCURLY)||(LA87_0>=49 && LA87_0<=140)) ) {
                alt87=1;
            }
            else if ( (LA87_0==DRSQUARE) ) {
                int LA87_2 = input.LA(2);

                if ( (synpred187_TCS()) ) {
                    alt87=1;
                }
            }
            switch (alt87) {
                case 1 :
                    // parser/TCS.g:788:150: temp= tcs_sequenceinalternative ( ( PIPE ) temp= tcs_sequenceinalternative )*
                    {
                    pushFollow(FOLLOW_tcs_sequenceinalternative_in_tcs_alternative4554);
                    temp=tcs_sequenceinalternative();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "sequences", temp);
                    }
                    // parser/TCS.g:788:220: ( ( PIPE ) temp= tcs_sequenceinalternative )*
                    loop86:
                    do {
                        int alt86=2;
                        int LA86_0 = input.LA(1);

                        if ( (LA86_0==PIPE) ) {
                            alt86=1;
                        }


                        switch (alt86) {
                    	case 1 :
                    	    // parser/TCS.g:788:221: ( PIPE ) temp= tcs_sequenceinalternative
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	      _enterSepSeq();
                    	    }
                    	    // parser/TCS.g:788:238: ( PIPE )
                    	    // parser/TCS.g:788:239: PIPE
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	      _beforeSeqEl("E0DCF6CD76790E521AFC11DFC6F5E3828D1504C0");
                    	    }
                    	    match(input,PIPE,FOLLOW_PIPE_in_tcs_alternative4563); if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      _afterSeqEl();
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	      _exitSepSeq();
                    	    }
                    	    pushFollow(FOLLOW_tcs_sequenceinalternative_in_tcs_alternative4571);
                    	    temp=tcs_sequenceinalternative();

                    	    checkFollows();
                    	    state._fsp--;
                    	    if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      setProperty(ret, "sequences", temp);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop86;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76790E561AFC11DFC76FE3828D1504C0");
            }
            match(input,DRSQUARE,FOLLOW_DRSQUARE_in_tcs_alternative4583); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76790E5C1AFC11DF8CA4E3828D1504C0");
            }
            // parser/TCS.g:788:574: ( ( STAR ) | )
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==STAR) ) {
                alt88=1;
            }
            else if ( (LA88_0==EOF||(LA88_0>=NAME && LA88_0<=STRING)||(LA88_0>=LPAREN && LA88_0<=RPAREN)||(LA88_0>=RCURLY && LA88_0<=COMA)||LA88_0==LT||(LA88_0>=LSQUARE && LA88_0<=RSQUARE)||(LA88_0>=DLSQUARE && LA88_0<=DRSQUARE)||(LA88_0>=DOLLAR && LA88_0<=DLCURLY)||(LA88_0>=49 && LA88_0<=140)) ) {
                alt88=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }
            switch (alt88) {
                case 1 :
                    // parser/TCS.g:788:575: ( STAR )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:788:591: ( STAR )
                    // parser/TCS.g:788:592: STAR
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76790E5A1AFC11DF83A2E3828D1504C0");
                    }
                    match(input,STAR,FOLLOW_STAR_in_tcs_alternative4594); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isMulti", java.lang.Boolean.TRUE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:788:745: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isMulti", java.lang.Boolean.FALSE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76790E5F1AFC11DF8F3DE3828D1504C0");
            }
            if ( state.backtracking==0 ) {
              setOclRef(ret, "parentTemplate", null, null, "OCL:#context", true);_exitInjectorAction();
            }
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_alternative"


    // $ANTLR start "tcs_sequenceinalternative"
    // parser/TCS.g:797:1: tcs_sequenceinalternative returns [Object ret2] : ( ( ( 'disambiguate' LPAREN (temp= stringSymbol ) RPAREN ) | ) (temp= tcs_sequenceelement (temp= tcs_sequenceelement )* )? ) ;
    public final Object tcs_sequenceinalternative() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","SequenceInAlternative");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:802:3: ( ( ( ( 'disambiguate' LPAREN (temp= stringSymbol ) RPAREN ) | ) (temp= tcs_sequenceelement (temp= tcs_sequenceelement )* )? ) )
            // parser/TCS.g:803:3: ( ( ( 'disambiguate' LPAREN (temp= stringSymbol ) RPAREN ) | ) (temp= tcs_sequenceelement (temp= tcs_sequenceelement )* )? )
            {
            // parser/TCS.g:803:3: ( ( ( 'disambiguate' LPAREN (temp= stringSymbol ) RPAREN ) | ) (temp= tcs_sequenceelement (temp= tcs_sequenceelement )* )? )
            // parser/TCS.g:803:4: ( ( 'disambiguate' LPAREN (temp= stringSymbol ) RPAREN ) | ) (temp= tcs_sequenceelement (temp= tcs_sequenceelement )* )?
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76790E6D1AFC11DF94BDE3828D1504C0");
            }
            // parser/TCS.g:803:64: ( ( 'disambiguate' LPAREN (temp= stringSymbol ) RPAREN ) | )
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==61) ) {
                int LA89_1 = input.LA(2);

                if ( (LA89_1==EOF||(LA89_1>=NAME && LA89_1<=STRING)||LA89_1==RPAREN||(LA89_1>=LCURLY && LA89_1<=COMA)||LA89_1==LT||(LA89_1>=LSQUARE && LA89_1<=RSQUARE)||(LA89_1>=DLSQUARE && LA89_1<=DRSQUARE)||(LA89_1>=DOLLAR && LA89_1<=DLCURLY)||(LA89_1>=49 && LA89_1<=140)) ) {
                    alt89=2;
                }
                else if ( (LA89_1==LPAREN) ) {
                    int LA89_3 = input.LA(3);

                    if ( (LA89_3==NAME||LA89_3==RARROW||LA89_3==QMARK||(LA89_3>=49 && LA89_3<=140)) ) {
                        alt89=2;
                    }
                    else if ( (LA89_3==STRING) ) {
                        alt89=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret2;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 89, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret2;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA89_0==EOF||(LA89_0>=NAME && LA89_0<=STRING)||(LA89_0>=LPAREN && LA89_0<=RPAREN)||(LA89_0>=RCURLY && LA89_0<=COMA)||LA89_0==LT||(LA89_0>=LSQUARE && LA89_0<=RSQUARE)||(LA89_0>=DLSQUARE && LA89_0<=DRSQUARE)||(LA89_0>=DOLLAR && LA89_0<=DLCURLY)||(LA89_0>=49 && LA89_0<=60)||(LA89_0>=62 && LA89_0<=140)) ) {
                alt89=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 89, 0, input);

                throw nvae;
            }
            switch (alt89) {
                case 1 :
                    // parser/TCS.g:803:65: ( 'disambiguate' LPAREN (temp= stringSymbol ) RPAREN )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:803:81: ( 'disambiguate' LPAREN (temp= stringSymbol ) RPAREN )
                    // parser/TCS.g:803:82: 'disambiguate' LPAREN (temp= stringSymbol ) RPAREN
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76790E661AFC11DF8D75E3828D1504C0");
                    }
                    match(input,61,FOLLOW_61_in_tcs_sequenceinalternative4659); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76790E671AFC11DFBF92E3828D1504C0");
                    }
                    match(input,LPAREN,FOLLOW_LPAREN_in_tcs_sequenceinalternative4663); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76790E6A1AFC11DF8605E3828D1504C0");
                    }
                    // parser/TCS.g:803:313: (temp= stringSymbol )
                    // parser/TCS.g:803:315: temp= stringSymbol
                    {
                    pushFollow(FOLLOW_stringSymbol_in_tcs_sequenceinalternative4671);
                    temp=stringSymbol();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "disambiguate", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76790E6B1AFC11DFA2F1E3828D1504C0");
                    }
                    match(input,RPAREN,FOLLOW_RPAREN_in_tcs_sequenceinalternative4678); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:803:492: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD767B7F511AFC11DF94B8E3828D1504C0");
            }
            // parser/TCS.g:804:76: (temp= tcs_sequenceelement (temp= tcs_sequenceelement )* )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( ((LA91_0>=NAME && LA91_0<=STRING)||LA91_0==LPAREN||LA91_0==RARROW||LA91_0==LT||LA91_0==LSQUARE||LA91_0==DLSQUARE||(LA91_0>=DOLLAR && LA91_0<=DLCURLY)||(LA91_0>=49 && LA91_0<=97)||(LA91_0>=99 && LA91_0<=140)) ) {
                alt91=1;
            }
            else if ( (LA91_0==98) ) {
                int LA91_2 = input.LA(2);

                if ( (LA91_2==LCURLY) ) {
                    int LA91_4 = input.LA(3);

                    if ( (LA91_4==RCURLY) ) {
                        int LA91_5 = input.LA(4);

                        if ( (synpred191_TCS()) ) {
                            alt91=1;
                        }
                    }
                    else if ( ((LA91_4>=58 && LA91_4<=62)||(LA91_4>=85 && LA91_4<=86)||(LA91_4>=97 && LA91_4<=98)||LA91_4==106||LA91_4==112||(LA91_4>=118 && LA91_4<=119)||(LA91_4>=129 && LA91_4<=130)||LA91_4==135) ) {
                        alt91=1;
                    }
                }
                else if ( (LA91_2==EOF||(LA91_2>=NAME && LA91_2<=STRING)||(LA91_2>=LPAREN && LA91_2<=RPAREN)||(LA91_2>=RCURLY && LA91_2<=COMA)||LA91_2==LT||(LA91_2>=LSQUARE && LA91_2<=RSQUARE)||(LA91_2>=DLSQUARE && LA91_2<=DRSQUARE)||(LA91_2>=DOLLAR && LA91_2<=DLCURLY)||(LA91_2>=49 && LA91_2<=140)) ) {
                    alt91=1;
                }
            }
            switch (alt91) {
                case 1 :
                    // parser/TCS.g:804:78: temp= tcs_sequenceelement (temp= tcs_sequenceelement )*
                    {
                    pushFollow(FOLLOW_tcs_sequenceelement_in_tcs_sequenceinalternative4699);
                    temp=tcs_sequenceelement();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "elements", temp);
                    }
                    // parser/TCS.g:804:141: (temp= tcs_sequenceelement )*
                    loop90:
                    do {
                        int alt90=2;
                        int LA90_0 = input.LA(1);

                        if ( (LA90_0==98) ) {
                            int LA90_1 = input.LA(2);

                            if ( (LA90_1==LCURLY) ) {
                                int LA90_4 = input.LA(3);

                                if ( ((LA90_4>=58 && LA90_4<=62)||(LA90_4>=85 && LA90_4<=86)||(LA90_4>=97 && LA90_4<=98)||LA90_4==106||LA90_4==112||(LA90_4>=118 && LA90_4<=119)||(LA90_4>=129 && LA90_4<=130)||LA90_4==135) ) {
                                    alt90=1;
                                }
                                else if ( (LA90_4==RCURLY) ) {
                                    int LA90_5 = input.LA(4);

                                    if ( (synpred190_TCS()) ) {
                                        alt90=1;
                                    }


                                }


                            }
                            else if ( (LA90_1==EOF||(LA90_1>=NAME && LA90_1<=STRING)||(LA90_1>=LPAREN && LA90_1<=RPAREN)||(LA90_1>=RCURLY && LA90_1<=COMA)||LA90_1==LT||(LA90_1>=LSQUARE && LA90_1<=RSQUARE)||(LA90_1>=DLSQUARE && LA90_1<=DRSQUARE)||(LA90_1>=DOLLAR && LA90_1<=DLCURLY)||(LA90_1>=49 && LA90_1<=140)) ) {
                                alt90=1;
                            }


                        }
                        else if ( ((LA90_0>=NAME && LA90_0<=STRING)||LA90_0==LPAREN||LA90_0==RARROW||LA90_0==LT||LA90_0==LSQUARE||LA90_0==DLSQUARE||(LA90_0>=DOLLAR && LA90_0<=DLCURLY)||(LA90_0>=49 && LA90_0<=97)||(LA90_0>=99 && LA90_0<=140)) ) {
                            alt90=1;
                        }


                        switch (alt90) {
                    	case 1 :
                    	    // parser/TCS.g:804:143: temp= tcs_sequenceelement
                    	    {
                    	    pushFollow(FOLLOW_tcs_sequenceelement_in_tcs_sequenceinalternative4707);
                    	    temp=tcs_sequenceelement();

                    	    checkFollows();
                    	    state._fsp--;
                    	    if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      setProperty(ret, "elements", temp);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop90;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_sequenceinalternative"


    // $ANTLR start "tcs_functioncall"
    // parser/TCS.g:812:1: tcs_functioncall returns [Object ret2] : ( DOLLAR (temp= identifier ) ) ;
    public final Object tcs_functioncall() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","FunctionCall");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:817:3: ( ( DOLLAR (temp= identifier ) ) )
            // parser/TCS.g:818:3: ( DOLLAR (temp= identifier ) )
            {
            // parser/TCS.g:818:3: ( DOLLAR (temp= identifier ) )
            // parser/TCS.g:818:4: DOLLAR (temp= identifier )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD767B7F551AFC11DFA4B0E3828D1504C0");
            }
            match(input,DOLLAR,FOLLOW_DOLLAR_in_tcs_functioncall4756); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD767B7F581AFC11DFAB0AE3828D1504C0");
            }
            // parser/TCS.g:818:146: (temp= identifier )
            // parser/TCS.g:818:148: temp= identifier
            {
            pushFollow(FOLLOW_identifier_in_tcs_functioncall4764);
            temp=identifier();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setRef(ret, "calledFunction", list("TCS","FunctionTemplate"), "functionName", temp, null, "never", null, false, null);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD767B7F5B1AFC11DFBB22E3828D1504C0");
            }
            if ( state.backtracking==0 ) {
              setOclRef(ret, "parentTemplate", null, null, "OCL:#context", true);_exitInjectorAction();
            }
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_functioncall"


    // $ANTLR start "tcs_injectoractionsblock"
    // parser/TCS.g:826:1: tcs_injectoractionsblock returns [Object ret2] : ( DLCURLY (temp= tcs_injectoraction ( ( COMA ) temp= tcs_injectoraction )* )? DRCURLY ) ;
    public final Object tcs_injectoractionsblock() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","InjectorActionsBlock");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:831:3: ( ( DLCURLY (temp= tcs_injectoraction ( ( COMA ) temp= tcs_injectoraction )* )? DRCURLY ) )
            // parser/TCS.g:832:3: ( DLCURLY (temp= tcs_injectoraction ( ( COMA ) temp= tcs_injectoraction )* )? DRCURLY )
            {
            // parser/TCS.g:832:3: ( DLCURLY (temp= tcs_injectoraction ( ( COMA ) temp= tcs_injectoraction )* )? DRCURLY )
            // parser/TCS.g:832:4: DLCURLY (temp= tcs_injectoraction ( ( COMA ) temp= tcs_injectoraction )* )? DRCURLY
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD767B7F5F1AFC11DF8E19E3828D1504C0");
            }
            match(input,DLCURLY,FOLLOW_DLCURLY_in_tcs_injectoractionsblock4811); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD767B7F641AFC11DFB241E3828D1504C0");
            }
            // parser/TCS.g:832:147: (temp= tcs_injectoraction ( ( COMA ) temp= tcs_injectoraction )* )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==NAME||LA93_0==RARROW||(LA93_0>=49 && LA93_0<=140)) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // parser/TCS.g:832:149: temp= tcs_injectoraction ( ( COMA ) temp= tcs_injectoraction )*
                    {
                    pushFollow(FOLLOW_tcs_injectoraction_in_tcs_injectoractionsblock4819);
                    temp=tcs_injectoraction();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "injectorActions", temp);
                    }
                    // parser/TCS.g:832:218: ( ( COMA ) temp= tcs_injectoraction )*
                    loop92:
                    do {
                        int alt92=2;
                        int LA92_0 = input.LA(1);

                        if ( (LA92_0==COMA) ) {
                            alt92=1;
                        }


                        switch (alt92) {
                    	case 1 :
                    	    // parser/TCS.g:832:219: ( COMA ) temp= tcs_injectoraction
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	      _enterSepSeq();
                    	    }
                    	    // parser/TCS.g:832:236: ( COMA )
                    	    // parser/TCS.g:832:237: COMA
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	      _beforeSeqEl("E0DCF6CD767B7F611AFC11DF8CC7E3828D1504C0");
                    	    }
                    	    match(input,COMA,FOLLOW_COMA_in_tcs_injectoractionsblock4828); if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      _afterSeqEl();
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	      _exitSepSeq();
                    	    }
                    	    pushFollow(FOLLOW_tcs_injectoraction_in_tcs_injectoractionsblock4836);
                    	    temp=tcs_injectoraction();

                    	    checkFollows();
                    	    state._fsp--;
                    	    if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      setProperty(ret, "injectorActions", temp);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop92;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD767B7F651AFC11DFC427E3828D1504C0");
            }
            match(input,DRCURLY,FOLLOW_DRCURLY_in_tcs_injectoractionsblock4848); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD767B7F681AFC11DFBED7E3828D1504C0");
            }
            if ( state.backtracking==0 ) {
              setOclRef(ret, "parentTemplate", null, null, "OCL:#context", true);_exitInjectorAction();
            }
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_injectoractionsblock"


    // $ANTLR start "tcs_injectoraction"
    // parser/TCS.g:840:1: tcs_injectoraction returns [Object ret2] : (ret= tcs_propertyinit ) ;
    public final Object tcs_injectoraction() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        try {
            // parser/TCS.g:841:3: ( (ret= tcs_propertyinit ) )
            // parser/TCS.g:842:3: (ret= tcs_propertyinit )
            {
            // parser/TCS.g:842:3: (ret= tcs_propertyinit )
            // parser/TCS.g:842:4: ret= tcs_propertyinit
            {
            pushFollow(FOLLOW_tcs_propertyinit_in_tcs_injectoraction4889);
            ret=tcs_propertyinit();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;

            }

            if ( state.backtracking==0 ) {

              ret2=ret;
               
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_injectoraction"


    // $ANTLR start "tcs_propertyinit"
    // parser/TCS.g:849:1: tcs_propertyinit returns [Object ret2] : (ret= tcs_primitivepropertyinit | ret= tcs_lookuppropertyinit | ret= tcs_foreachpredicatepropertyinit ) ;
    public final Object tcs_propertyinit() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        try {
            // parser/TCS.g:850:3: ( (ret= tcs_primitivepropertyinit | ret= tcs_lookuppropertyinit | ret= tcs_foreachpredicatepropertyinit ) )
            // parser/TCS.g:851:3: (ret= tcs_primitivepropertyinit | ret= tcs_lookuppropertyinit | ret= tcs_foreachpredicatepropertyinit )
            {
            // parser/TCS.g:851:3: (ret= tcs_primitivepropertyinit | ret= tcs_lookuppropertyinit | ret= tcs_foreachpredicatepropertyinit )
            int alt94=3;
            alt94 = dfa94.predict(input);
            switch (alt94) {
                case 1 :
                    // parser/TCS.g:851:4: ret= tcs_primitivepropertyinit
                    {
                    pushFollow(FOLLOW_tcs_primitivepropertyinit_in_tcs_propertyinit4916);
                    ret=tcs_primitivepropertyinit();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 2 :
                    // parser/TCS.g:852:5: ret= tcs_lookuppropertyinit
                    {
                    pushFollow(FOLLOW_tcs_lookuppropertyinit_in_tcs_propertyinit4924);
                    ret=tcs_lookuppropertyinit();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 3 :
                    // parser/TCS.g:853:5: ret= tcs_foreachpredicatepropertyinit
                    {
                    pushFollow(FOLLOW_tcs_foreachpredicatepropertyinit_in_tcs_propertyinit4932);
                    ret=tcs_foreachpredicatepropertyinit();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              ret2=ret;
               
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_propertyinit"


    // $ANTLR start "tcs_primitivepropertyinit"
    // parser/TCS.g:860:1: tcs_primitivepropertyinit returns [Object ret2] : ( (temp= tcs_propertyreference ) ( ( LARROW ) | ( EQ ) ) (temp= identifier ) ) ;
    public final Object tcs_primitivepropertyinit() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","PrimitivePropertyInit");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:865:3: ( ( (temp= tcs_propertyreference ) ( ( LARROW ) | ( EQ ) ) (temp= identifier ) ) )
            // parser/TCS.g:866:3: ( (temp= tcs_propertyreference ) ( ( LARROW ) | ( EQ ) ) (temp= identifier ) )
            {
            // parser/TCS.g:866:3: ( (temp= tcs_propertyreference ) ( ( LARROW ) | ( EQ ) ) (temp= identifier ) )
            // parser/TCS.g:866:4: (temp= tcs_propertyreference ) ( ( LARROW ) | ( EQ ) ) (temp= identifier )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76803A431AFC11DF94B1E3828D1504C0");
            }
            // parser/TCS.g:866:63: (temp= tcs_propertyreference )
            // parser/TCS.g:866:65: temp= tcs_propertyreference
            {
            pushFollow(FOLLOW_tcs_propertyreference_in_tcs_primitivepropertyinit4966);
            temp=tcs_propertyreference();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "propertyReference", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76803A4B1AFC11DFAA17E3828D1504C0");
            }
            // parser/TCS.g:866:215: ( ( LARROW ) | ( EQ ) )
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==LARROW) ) {
                alt95=1;
            }
            else if ( (LA95_0==EQ) ) {
                alt95=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 95, 0, input);

                throw nvae;
            }
            switch (alt95) {
                case 1 :
                    // parser/TCS.g:866:216: ( LARROW )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:866:232: ( LARROW )
                    // parser/TCS.g:866:233: LARROW
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76803A471AFC11DF87E3E3828D1504C0");
                    }
                    match(input,LARROW,FOLLOW_LARROW_in_tcs_primitivepropertyinit4979); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isDefault", java.lang.Boolean.TRUE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:866:390: ( EQ )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    // parser/TCS.g:866:406: ( EQ )
                    // parser/TCS.g:866:407: EQ
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76803A491AFC11DFB8B2E3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_primitivepropertyinit4994); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isDefault", java.lang.Boolean.FALSE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76803A4D1AFC11DFAC80E3828D1504C0");
            }
            // parser/TCS.g:867:76: (temp= identifier )
            // parser/TCS.g:867:78: temp= identifier
            {
            pushFollow(FOLLOW_identifier_in_tcs_primitivepropertyinit5009);
            temp=identifier();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "value", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_primitivepropertyinit"


    // $ANTLR start "tcs_lookuppropertyinit"
    // parser/TCS.g:875:1: tcs_lookuppropertyinit returns [Object ret2] : ( (temp= tcs_propertyreference ) ( ( LARROW ) | ( EQ ) ) 'lookIn' LPAREN (temp= stringSymbol ) RPAREN ) ;
    public final Object tcs_lookuppropertyinit() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","LookupPropertyInit");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:880:3: ( ( (temp= tcs_propertyreference ) ( ( LARROW ) | ( EQ ) ) 'lookIn' LPAREN (temp= stringSymbol ) RPAREN ) )
            // parser/TCS.g:881:3: ( (temp= tcs_propertyreference ) ( ( LARROW ) | ( EQ ) ) 'lookIn' LPAREN (temp= stringSymbol ) RPAREN )
            {
            // parser/TCS.g:881:3: ( (temp= tcs_propertyreference ) ( ( LARROW ) | ( EQ ) ) 'lookIn' LPAREN (temp= stringSymbol ) RPAREN )
            // parser/TCS.g:881:4: (temp= tcs_propertyreference ) ( ( LARROW ) | ( EQ ) ) 'lookIn' LPAREN (temp= stringSymbol ) RPAREN
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76803A521AFC11DF9351E3828D1504C0");
            }
            // parser/TCS.g:881:63: (temp= tcs_propertyreference )
            // parser/TCS.g:881:65: temp= tcs_propertyreference
            {
            pushFollow(FOLLOW_tcs_propertyreference_in_tcs_lookuppropertyinit5056);
            temp=tcs_propertyreference();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "propertyReference", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7682AB451AFC11DFA6F3E3828D1504C0");
            }
            // parser/TCS.g:881:215: ( ( LARROW ) | ( EQ ) )
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==LARROW) ) {
                alt96=1;
            }
            else if ( (LA96_0==EQ) ) {
                alt96=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;
            }
            switch (alt96) {
                case 1 :
                    // parser/TCS.g:881:216: ( LARROW )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:881:232: ( LARROW )
                    // parser/TCS.g:881:233: LARROW
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7682AB411AFC11DFB684E3828D1504C0");
                    }
                    match(input,LARROW,FOLLOW_LARROW_in_tcs_lookuppropertyinit5069); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isDefault", java.lang.Boolean.TRUE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:881:390: ( EQ )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    // parser/TCS.g:881:406: ( EQ )
                    // parser/TCS.g:881:407: EQ
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7682AB431AFC11DF8B07E3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_lookuppropertyinit5084); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isDefault", java.lang.Boolean.FALSE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7682AB461AFC11DF93D8E3828D1504C0");
            }
            match(input,135,FOLLOW_135_in_tcs_lookuppropertyinit5095); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7682AB471AFC11DFA235E3828D1504C0");
            }
            match(input,LPAREN,FOLLOW_LPAREN_in_tcs_lookuppropertyinit5099); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7682AB4A1AFC11DFC835E3828D1504C0");
            }
            // parser/TCS.g:882:242: (temp= stringSymbol )
            // parser/TCS.g:882:244: temp= stringSymbol
            {
            pushFollow(FOLLOW_stringSymbol_in_tcs_lookuppropertyinit5107);
            temp=stringSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "value", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7682AB4B1AFC11DFB744E3828D1504C0");
            }
            match(input,RPAREN,FOLLOW_RPAREN_in_tcs_lookuppropertyinit5114); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_lookuppropertyinit"


    // $ANTLR start "tcs_foreachpredicatepropertyinit"
    // parser/TCS.g:890:1: tcs_foreachpredicatepropertyinit returns [Object ret2] : ( (temp= tcs_propertyreference ) ( ( LARROW ) | ( EQ ) ) 'foreach' LPAREN (temp= stringSymbol ) ( ( COMA 'mode' EQ (temp= stringSymbol ) ) | ) ( ( COMA (temp= tcs_predicatesemantic ( ( COMA ) temp= tcs_predicatesemantic )* )? ) | ) RPAREN ) ;
    public final Object tcs_foreachpredicatepropertyinit() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","ForeachPredicatePropertyInit");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:895:3: ( ( (temp= tcs_propertyreference ) ( ( LARROW ) | ( EQ ) ) 'foreach' LPAREN (temp= stringSymbol ) ( ( COMA 'mode' EQ (temp= stringSymbol ) ) | ) ( ( COMA (temp= tcs_predicatesemantic ( ( COMA ) temp= tcs_predicatesemantic )* )? ) | ) RPAREN ) )
            // parser/TCS.g:896:3: ( (temp= tcs_propertyreference ) ( ( LARROW ) | ( EQ ) ) 'foreach' LPAREN (temp= stringSymbol ) ( ( COMA 'mode' EQ (temp= stringSymbol ) ) | ) ( ( COMA (temp= tcs_predicatesemantic ( ( COMA ) temp= tcs_predicatesemantic )* )? ) | ) RPAREN )
            {
            // parser/TCS.g:896:3: ( (temp= tcs_propertyreference ) ( ( LARROW ) | ( EQ ) ) 'foreach' LPAREN (temp= stringSymbol ) ( ( COMA 'mode' EQ (temp= stringSymbol ) ) | ) ( ( COMA (temp= tcs_predicatesemantic ( ( COMA ) temp= tcs_predicatesemantic )* )? ) | ) RPAREN )
            // parser/TCS.g:896:4: (temp= tcs_propertyreference ) ( ( LARROW ) | ( EQ ) ) 'foreach' LPAREN (temp= stringSymbol ) ( ( COMA 'mode' EQ (temp= stringSymbol ) ) | ) ( ( COMA (temp= tcs_predicatesemantic ( ( COMA ) temp= tcs_predicatesemantic )* )? ) | ) RPAREN
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7682AB501AFC11DFCEA1E3828D1504C0");
            }
            // parser/TCS.g:896:63: (temp= tcs_propertyreference )
            // parser/TCS.g:896:65: temp= tcs_propertyreference
            {
            pushFollow(FOLLOW_tcs_propertyreference_in_tcs_foreachpredicatepropertyinit5159);
            temp=tcs_propertyreference();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "propertyReference", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7682AB581AFC11DF99A0E3828D1504C0");
            }
            // parser/TCS.g:896:215: ( ( LARROW ) | ( EQ ) )
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==LARROW) ) {
                alt97=1;
            }
            else if ( (LA97_0==EQ) ) {
                alt97=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 97, 0, input);

                throw nvae;
            }
            switch (alt97) {
                case 1 :
                    // parser/TCS.g:896:216: ( LARROW )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:896:232: ( LARROW )
                    // parser/TCS.g:896:233: LARROW
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7682AB541AFC11DF8244E3828D1504C0");
                    }
                    match(input,LARROW,FOLLOW_LARROW_in_tcs_foreachpredicatepropertyinit5172); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isDefault", java.lang.Boolean.TRUE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:896:390: ( EQ )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    // parser/TCS.g:896:406: ( EQ )
                    // parser/TCS.g:896:407: EQ
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7682AB561AFC11DF8389E3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_foreachpredicatepropertyinit5187); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isDefault", java.lang.Boolean.FALSE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7682AB591AFC11DFCDB4E3828D1504C0");
            }
            match(input,54,FOLLOW_54_in_tcs_foreachpredicatepropertyinit5198); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7682AB5A1AFC11DF883CE3828D1504C0");
            }
            match(input,LPAREN,FOLLOW_LPAREN_in_tcs_foreachpredicatepropertyinit5202); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7682AB5D1AFC11DFCAECE3828D1504C0");
            }
            // parser/TCS.g:897:243: (temp= stringSymbol )
            // parser/TCS.g:897:245: temp= stringSymbol
            {
            pushFollow(FOLLOW_stringSymbol_in_tcs_foreachpredicatepropertyinit5210);
            temp=stringSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "value", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7682AB681AFC11DF9B30E3828D1504C0");
            }
            // parser/TCS.g:897:374: ( ( COMA 'mode' EQ (temp= stringSymbol ) ) | )
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==COMA) ) {
                int LA98_1 = input.LA(2);

                if ( (LA98_1==119) ) {
                    int LA98_3 = input.LA(3);

                    if ( (LA98_3==EQ) ) {
                        int LA98_4 = input.LA(4);

                        if ( (LA98_4==STRING) ) {
                            int LA98_5 = input.LA(5);

                            if ( (LA98_5==COMA) ) {
                                int LA98_6 = input.LA(6);

                                if ( (synpred199_TCS()) ) {
                                    alt98=1;
                                }
                                else if ( (true) ) {
                                    alt98=2;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return ret2;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 98, 6, input);

                                    throw nvae;
                                }
                            }
                            else if ( (LA98_5==RPAREN) ) {
                                alt98=1;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return ret2;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 98, 5, input);

                                throw nvae;
                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ret2;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 98, 4, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret2;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 98, 3, input);

                        throw nvae;
                    }
                }
                else if ( (LA98_1==RPAREN||LA98_1==118||LA98_1==139) ) {
                    alt98=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret2;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 98, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA98_0==RPAREN) ) {
                alt98=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 98, 0, input);

                throw nvae;
            }
            switch (alt98) {
                case 1 :
                    // parser/TCS.g:897:375: ( COMA 'mode' EQ (temp= stringSymbol ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:897:391: ( COMA 'mode' EQ (temp= stringSymbol ) )
                    // parser/TCS.g:897:392: COMA 'mode' EQ (temp= stringSymbol )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7682AB611AFC11DFA19EE3828D1504C0");
                    }
                    match(input,COMA,FOLLOW_COMA_in_tcs_foreachpredicatepropertyinit5223); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7682AB621AFC11DF8CB5E3828D1504C0");
                    }
                    match(input,119,FOLLOW_119_in_tcs_foreachpredicatepropertyinit5227); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7682AB631AFC11DF8D4BE3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_foreachpredicatepropertyinit5231); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7682AB661AFC11DFCC19E3828D1504C0");
                    }
                    // parser/TCS.g:897:692: (temp= stringSymbol )
                    // parser/TCS.g:897:694: temp= stringSymbol
                    {
                    pushFollow(FOLLOW_stringSymbol_in_tcs_foreachpredicatepropertyinit5239);
                    temp=stringSymbol();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "mode", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:897:780: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7684F5351AFC11DFA9A9E3828D1504C0");
            }
            // parser/TCS.g:898:77: ( ( COMA (temp= tcs_predicatesemantic ( ( COMA ) temp= tcs_predicatesemantic )* )? ) | )
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==COMA) ) {
                alt101=1;
            }
            else if ( (LA101_0==RPAREN) ) {
                alt101=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 101, 0, input);

                throw nvae;
            }
            switch (alt101) {
                case 1 :
                    // parser/TCS.g:898:78: ( COMA (temp= tcs_predicatesemantic ( ( COMA ) temp= tcs_predicatesemantic )* )? )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:898:94: ( COMA (temp= tcs_predicatesemantic ( ( COMA ) temp= tcs_predicatesemantic )* )? )
                    // parser/TCS.g:898:95: COMA (temp= tcs_predicatesemantic ( ( COMA ) temp= tcs_predicatesemantic )* )?
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7682AB6C1AFC11DFA1F3E3828D1504C0");
                    }
                    match(input,COMA,FOLLOW_COMA_in_tcs_foreachpredicatepropertyinit5265); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7684F5331AFC11DF8DC4E3828D1504C0");
                    }
                    // parser/TCS.g:898:235: (temp= tcs_predicatesemantic ( ( COMA ) temp= tcs_predicatesemantic )* )?
                    int alt100=2;
                    int LA100_0 = input.LA(1);

                    if ( ((LA100_0>=118 && LA100_0<=119)||LA100_0==139) ) {
                        alt100=1;
                    }
                    switch (alt100) {
                        case 1 :
                            // parser/TCS.g:898:237: temp= tcs_predicatesemantic ( ( COMA ) temp= tcs_predicatesemantic )*
                            {
                            pushFollow(FOLLOW_tcs_predicatesemantic_in_tcs_foreachpredicatepropertyinit5273);
                            temp=tcs_predicatesemantic();

                            checkFollows();
                            state._fsp--;
                            if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "predicatesemantic", temp);
                            }
                            // parser/TCS.g:898:311: ( ( COMA ) temp= tcs_predicatesemantic )*
                            loop99:
                            do {
                                int alt99=2;
                                int LA99_0 = input.LA(1);

                                if ( (LA99_0==COMA) ) {
                                    alt99=1;
                                }


                                switch (alt99) {
                            	case 1 :
                            	    // parser/TCS.g:898:312: ( COMA ) temp= tcs_predicatesemantic
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	      _enterSepSeq();
                            	    }
                            	    // parser/TCS.g:898:329: ( COMA )
                            	    // parser/TCS.g:898:330: COMA
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	      _beforeSeqEl("E0DCF6CD7684F5301AFC11DF89D4E3828D1504C0");
                            	    }
                            	    match(input,COMA,FOLLOW_COMA_in_tcs_foreachpredicatepropertyinit5282); if (state.failed) return ret2;
                            	    if ( state.backtracking==0 ) {
                            	      _afterSeqEl();
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	      _exitSepSeq();
                            	    }
                            	    pushFollow(FOLLOW_tcs_predicatesemantic_in_tcs_foreachpredicatepropertyinit5290);
                            	    temp=tcs_predicatesemantic();

                            	    checkFollows();
                            	    state._fsp--;
                            	    if (state.failed) return ret2;
                            	    if ( state.backtracking==0 ) {
                            	      setProperty(ret, "predicatesemantic", temp);
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop99;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:898:542: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7684F5361AFC11DFB04FE3828D1504C0");
            }
            match(input,RPAREN,FOLLOW_RPAREN_in_tcs_foreachpredicatepropertyinit5315); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_foreachpredicatepropertyinit"


    // $ANTLR start "tcs_predicatesemantic"
    // parser/TCS.g:907:1: tcs_predicatesemantic returns [Object ret2] : ( ( ( 'when' EQ (temp= stringSymbol ) COMA ) | ) ( ( 'mode' EQ (temp= stringSymbol ) COMA ) | ) 'as' EQ (temp= identifierOrKeyword )? ) ;
    public final Object tcs_predicatesemantic() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","PredicateSemantic");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:912:3: ( ( ( ( 'when' EQ (temp= stringSymbol ) COMA ) | ) ( ( 'mode' EQ (temp= stringSymbol ) COMA ) | ) 'as' EQ (temp= identifierOrKeyword )? ) )
            // parser/TCS.g:913:3: ( ( ( 'when' EQ (temp= stringSymbol ) COMA ) | ) ( ( 'mode' EQ (temp= stringSymbol ) COMA ) | ) 'as' EQ (temp= identifierOrKeyword )? )
            {
            // parser/TCS.g:913:3: ( ( ( 'when' EQ (temp= stringSymbol ) COMA ) | ) ( ( 'mode' EQ (temp= stringSymbol ) COMA ) | ) 'as' EQ (temp= identifierOrKeyword )? )
            // parser/TCS.g:913:4: ( ( 'when' EQ (temp= stringSymbol ) COMA ) | ) ( ( 'mode' EQ (temp= stringSymbol ) COMA ) | ) 'as' EQ (temp= identifierOrKeyword )?
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7684F5441AFC11DFAEDEE3828D1504C0");
            }
            // parser/TCS.g:913:64: ( ( 'when' EQ (temp= stringSymbol ) COMA ) | )
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==139) ) {
                alt102=1;
            }
            else if ( ((LA102_0>=118 && LA102_0<=119)) ) {
                alt102=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 102, 0, input);

                throw nvae;
            }
            switch (alt102) {
                case 1 :
                    // parser/TCS.g:913:65: ( 'when' EQ (temp= stringSymbol ) COMA )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:913:81: ( 'when' EQ (temp= stringSymbol ) COMA )
                    // parser/TCS.g:913:82: 'when' EQ (temp= stringSymbol ) COMA
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7684F53D1AFC11DFAFDBE3828D1504C0");
                    }
                    match(input,139,FOLLOW_139_in_tcs_predicatesemantic5362); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7684F53E1AFC11DFB914E3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_predicatesemantic5366); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7684F5411AFC11DF812EE3828D1504C0");
                    }
                    // parser/TCS.g:913:301: (temp= stringSymbol )
                    // parser/TCS.g:913:303: temp= stringSymbol
                    {
                    pushFollow(FOLLOW_stringSymbol_in_tcs_predicatesemantic5374);
                    temp=stringSymbol();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "when", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7684F5421AFC11DF941BE3828D1504C0");
                    }
                    match(input,COMA,FOLLOW_COMA_in_tcs_predicatesemantic5381); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:913:470: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7684F54F1AFC11DFA069E3828D1504C0");
            }
            // parser/TCS.g:914:77: ( ( 'mode' EQ (temp= stringSymbol ) COMA ) | )
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==119) ) {
                alt103=1;
            }
            else if ( (LA103_0==118) ) {
                alt103=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;
            }
            switch (alt103) {
                case 1 :
                    // parser/TCS.g:914:78: ( 'mode' EQ (temp= stringSymbol ) COMA )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:914:94: ( 'mode' EQ (temp= stringSymbol ) COMA )
                    // parser/TCS.g:914:95: 'mode' EQ (temp= stringSymbol ) COMA
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7684F5481AFC11DFA964E3828D1504C0");
                    }
                    match(input,119,FOLLOW_119_in_tcs_predicatesemantic5404); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7684F5491AFC11DF8570E3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_predicatesemantic5408); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7684F54C1AFC11DF8F0FE3828D1504C0");
                    }
                    // parser/TCS.g:914:314: (temp= stringSymbol )
                    // parser/TCS.g:914:316: temp= stringSymbol
                    {
                    pushFollow(FOLLOW_stringSymbol_in_tcs_predicatesemantic5416);
                    temp=stringSymbol();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "mode", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD7684F54D1AFC11DF8D82E3828D1504C0");
                    }
                    match(input,COMA,FOLLOW_COMA_in_tcs_predicatesemantic5423); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:914:483: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7684F5501AFC11DF969DE3828D1504C0");
            }
            match(input,118,FOLLOW_118_in_tcs_predicatesemantic5440); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD768766301AFC11DFC406E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_predicatesemantic5444); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD768766351AFC11DF8879E3828D1504C0");
            }
            // parser/TCS.g:915:234: (temp= identifierOrKeyword )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==NAME||(LA104_0>=49 && LA104_0<=140)) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // parser/TCS.g:915:236: temp= identifierOrKeyword
                    {
                    pushFollow(FOLLOW_identifierOrKeyword_in_tcs_predicatesemantic5452);
                    temp=identifierOrKeyword();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setOclRef(ret, "as", null, temp, "OCL:self.foreachParent.injectorActionsBlockReference.parentTemplate.concreteSyntax.templates->select(t | "+"                                                                        if(t.oclIsTypeOf(TCS::ClassTemplate)) then "+"                                                                                t.oclAsType(TCS::ClassTemplate).metaReference.name = ?"+"                                                                                and(t.oclAsType(TCS::ClassTemplate).metaReference).allSupertypes()"+"                                                                                        ->prepend(t.oclAsType(TCS::ClassTemplate).metaReference)"+"                                                                                        ->includes(self.foreachParent.propertyReference.strucfeature.type)"+"                                                                                and ("+"                                                                                        if(not self.mode.oclIsUndefined()) then"+"                                                                                                t.oclAsType(TCS::ClassTemplate).mode = self.mode"+"                                                                                        else"+"                                                                                                t.oclAsType(TCS::ClassTemplate).mode = self.foreachParent.mode"+"                                                                                        endif"+"                                                                                )                                                                       "+"                                                                        else"+"                                                                                if(t.oclIsTypeOf(TCS::PrimitiveTemplate)) then"+"                                                                                        t.oclAsType(TCS::PrimitiveTemplate).templateName = ?"+"                                                                                else"+"                                                                                        false"+"                                                                                endif"+"                                                                        endif)"+"                                                                ");
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_predicatesemantic"


    // $ANTLR start "tcs_propertyarg"
    // parser/TCS.g:923:1: tcs_propertyarg returns [Object ret2] : (ret= tcs_referstoparg | ret= tcs_lookinparg | ret= tcs_createinparg | ret= tcs_asparg | ret= tcs_separatorparg | ret= tcs_disambiguateparg | ret= tcs_autocreateparg | ret= tcs_importcontextparg | ret= tcs_partialparg | ret= tcs_forcedlowerparg | ret= tcs_forcedupperparg | ret= tcs_createasparg | ret= tcs_queryparg | ret= tcs_filterparg | ret= tcs_modeparg | ret= tcs_partitionhandlingparg ) ;
    public final Object tcs_propertyarg() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        try {
            // parser/TCS.g:924:3: ( (ret= tcs_referstoparg | ret= tcs_lookinparg | ret= tcs_createinparg | ret= tcs_asparg | ret= tcs_separatorparg | ret= tcs_disambiguateparg | ret= tcs_autocreateparg | ret= tcs_importcontextparg | ret= tcs_partialparg | ret= tcs_forcedlowerparg | ret= tcs_forcedupperparg | ret= tcs_createasparg | ret= tcs_queryparg | ret= tcs_filterparg | ret= tcs_modeparg | ret= tcs_partitionhandlingparg ) )
            // parser/TCS.g:925:3: (ret= tcs_referstoparg | ret= tcs_lookinparg | ret= tcs_createinparg | ret= tcs_asparg | ret= tcs_separatorparg | ret= tcs_disambiguateparg | ret= tcs_autocreateparg | ret= tcs_importcontextparg | ret= tcs_partialparg | ret= tcs_forcedlowerparg | ret= tcs_forcedupperparg | ret= tcs_createasparg | ret= tcs_queryparg | ret= tcs_filterparg | ret= tcs_modeparg | ret= tcs_partitionhandlingparg )
            {
            // parser/TCS.g:925:3: (ret= tcs_referstoparg | ret= tcs_lookinparg | ret= tcs_createinparg | ret= tcs_asparg | ret= tcs_separatorparg | ret= tcs_disambiguateparg | ret= tcs_autocreateparg | ret= tcs_importcontextparg | ret= tcs_partialparg | ret= tcs_forcedlowerparg | ret= tcs_forcedupperparg | ret= tcs_createasparg | ret= tcs_queryparg | ret= tcs_filterparg | ret= tcs_modeparg | ret= tcs_partitionhandlingparg )
            int alt105=16;
            switch ( input.LA(1) ) {
            case 86:
                {
                alt105=1;
                }
                break;
            case 135:
                {
                alt105=2;
                }
                break;
            case 112:
                {
                alt105=3;
                }
                break;
            case 118:
                {
                alt105=4;
                }
                break;
            case 129:
                {
                alt105=5;
                }
                break;
            case 61:
                {
                alt105=6;
                }
                break;
            case 62:
                {
                alt105=7;
                }
                break;
            case 59:
                {
                alt105=8;
                }
                break;
            case 60:
                {
                alt105=9;
                }
                break;
            case 58:
                {
                alt105=10;
                }
                break;
            case 97:
                {
                alt105=11;
                }
                break;
            case 85:
                {
                alt105=12;
                }
                break;
            case 130:
                {
                alt105=13;
                }
                break;
            case 106:
                {
                alt105=14;
                }
                break;
            case 119:
                {
                alt105=15;
                }
                break;
            case 98:
                {
                alt105=16;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }

            switch (alt105) {
                case 1 :
                    // parser/TCS.g:925:4: ret= tcs_referstoparg
                    {
                    pushFollow(FOLLOW_tcs_referstoparg_in_tcs_propertyarg5494);
                    ret=tcs_referstoparg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 2 :
                    // parser/TCS.g:926:5: ret= tcs_lookinparg
                    {
                    pushFollow(FOLLOW_tcs_lookinparg_in_tcs_propertyarg5502);
                    ret=tcs_lookinparg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 3 :
                    // parser/TCS.g:927:5: ret= tcs_createinparg
                    {
                    pushFollow(FOLLOW_tcs_createinparg_in_tcs_propertyarg5510);
                    ret=tcs_createinparg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 4 :
                    // parser/TCS.g:928:5: ret= tcs_asparg
                    {
                    pushFollow(FOLLOW_tcs_asparg_in_tcs_propertyarg5518);
                    ret=tcs_asparg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 5 :
                    // parser/TCS.g:929:5: ret= tcs_separatorparg
                    {
                    pushFollow(FOLLOW_tcs_separatorparg_in_tcs_propertyarg5526);
                    ret=tcs_separatorparg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 6 :
                    // parser/TCS.g:930:5: ret= tcs_disambiguateparg
                    {
                    pushFollow(FOLLOW_tcs_disambiguateparg_in_tcs_propertyarg5534);
                    ret=tcs_disambiguateparg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 7 :
                    // parser/TCS.g:931:5: ret= tcs_autocreateparg
                    {
                    pushFollow(FOLLOW_tcs_autocreateparg_in_tcs_propertyarg5542);
                    ret=tcs_autocreateparg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 8 :
                    // parser/TCS.g:932:5: ret= tcs_importcontextparg
                    {
                    pushFollow(FOLLOW_tcs_importcontextparg_in_tcs_propertyarg5550);
                    ret=tcs_importcontextparg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 9 :
                    // parser/TCS.g:933:5: ret= tcs_partialparg
                    {
                    pushFollow(FOLLOW_tcs_partialparg_in_tcs_propertyarg5558);
                    ret=tcs_partialparg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 10 :
                    // parser/TCS.g:934:5: ret= tcs_forcedlowerparg
                    {
                    pushFollow(FOLLOW_tcs_forcedlowerparg_in_tcs_propertyarg5566);
                    ret=tcs_forcedlowerparg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 11 :
                    // parser/TCS.g:935:5: ret= tcs_forcedupperparg
                    {
                    pushFollow(FOLLOW_tcs_forcedupperparg_in_tcs_propertyarg5574);
                    ret=tcs_forcedupperparg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 12 :
                    // parser/TCS.g:936:5: ret= tcs_createasparg
                    {
                    pushFollow(FOLLOW_tcs_createasparg_in_tcs_propertyarg5582);
                    ret=tcs_createasparg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 13 :
                    // parser/TCS.g:937:5: ret= tcs_queryparg
                    {
                    pushFollow(FOLLOW_tcs_queryparg_in_tcs_propertyarg5590);
                    ret=tcs_queryparg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 14 :
                    // parser/TCS.g:938:5: ret= tcs_filterparg
                    {
                    pushFollow(FOLLOW_tcs_filterparg_in_tcs_propertyarg5598);
                    ret=tcs_filterparg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 15 :
                    // parser/TCS.g:939:5: ret= tcs_modeparg
                    {
                    pushFollow(FOLLOW_tcs_modeparg_in_tcs_propertyarg5606);
                    ret=tcs_modeparg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 16 :
                    // parser/TCS.g:940:5: ret= tcs_partitionhandlingparg
                    {
                    pushFollow(FOLLOW_tcs_partitionhandlingparg_in_tcs_propertyarg5614);
                    ret=tcs_partitionhandlingparg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              ret2=ret;
               
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_propertyarg"


    // $ANTLR start "tcs_referstoparg"
    // parser/TCS.g:947:1: tcs_referstoparg returns [Object ret2] : ( 'refersTo' EQ (temp= identifierOrKeyword ) ) ;
    public final Object tcs_referstoparg() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","RefersToPArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:952:3: ( ( 'refersTo' EQ (temp= identifierOrKeyword ) ) )
            // parser/TCS.g:953:3: ( 'refersTo' EQ (temp= identifierOrKeyword ) )
            {
            // parser/TCS.g:953:3: ( 'refersTo' EQ (temp= identifierOrKeyword ) )
            // parser/TCS.g:953:4: 'refersTo' EQ (temp= identifierOrKeyword )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7687663B1AFC11DF93F8E3828D1504C0");
            }
            match(input,86,FOLLOW_86_in_tcs_referstoparg5644); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7687663C1AFC11DFC856E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_referstoparg5648); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7687663F1AFC11DF91EAE3828D1504C0");
            }
            // parser/TCS.g:953:227: (temp= identifierOrKeyword )
            // parser/TCS.g:953:229: temp= identifierOrKeyword
            {
            pushFollow(FOLLOW_identifierOrKeyword_in_tcs_referstoparg5656);
            temp=identifierOrKeyword();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "propertyName", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_referstoparg"


    // $ANTLR start "tcs_lookinparg"
    // parser/TCS.g:961:1: tcs_lookinparg returns [Object ret2] : ( 'lookIn' EQ ( ( SHARP 'all' ) | ( (temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )* ) ) ) ) ;
    public final Object tcs_lookinparg() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","LookInPArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:966:3: ( ( 'lookIn' EQ ( ( SHARP 'all' ) | ( (temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )* ) ) ) ) )
            // parser/TCS.g:967:3: ( 'lookIn' EQ ( ( SHARP 'all' ) | ( (temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )* ) ) ) )
            {
            // parser/TCS.g:967:3: ( 'lookIn' EQ ( ( SHARP 'all' ) | ( (temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )* ) ) ) )
            // parser/TCS.g:967:4: 'lookIn' EQ ( ( SHARP 'all' ) | ( (temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )* ) ) )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7689B0201AFC11DFA0CAE3828D1504C0");
            }
            match(input,135,FOLLOW_135_in_tcs_lookinparg5699); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7689B0211AFC11DF80DFE3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_lookinparg5703); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD768C212C1AFC11DFC951E3828D1504C0");
            }
            // parser/TCS.g:967:226: ( ( SHARP 'all' ) | ( (temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )* ) ) )
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==SHARP) ) {
                alt107=1;
            }
            else if ( (LA107_0==NAME||(LA107_0>=49 && LA107_0<=140)) ) {
                alt107=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 107, 0, input);

                throw nvae;
            }
            switch (alt107) {
                case 1 :
                    // parser/TCS.g:967:227: ( SHARP 'all' )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:967:243: ( SHARP 'all' )
                    // parser/TCS.g:967:244: SHARP 'all'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD768C21221AFC11DFC621E3828D1504C0");
                    }
                    match(input,SHARP,FOLLOW_SHARP_in_tcs_lookinparg5714); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD768C21231AFC11DF83F6E3828D1504C0");
                    }
                    match(input,51,FOLLOW_51_in_tcs_lookinparg5718); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "propertyName", new String("#all"));
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:967:479: ( (temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )* ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    // parser/TCS.g:967:495: ( (temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )* ) )
                    // parser/TCS.g:967:496: (temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )* )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD768C212A1AFC11DF97BBE3828D1504C0");
                    }
                    // parser/TCS.g:967:555: (temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )* )
                    // parser/TCS.g:967:557: temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )*
                    {
                    pushFollow(FOLLOW_identifierOrKeyword_in_tcs_lookinparg5735);
                    temp=identifierOrKeyword();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "propertyName", temp);
                    }
                    // parser/TCS.g:967:624: ( ( POINT ) temp= identifierOrKeyword )*
                    loop106:
                    do {
                        int alt106=2;
                        int LA106_0 = input.LA(1);

                        if ( (LA106_0==POINT) ) {
                            alt106=1;
                        }


                        switch (alt106) {
                    	case 1 :
                    	    // parser/TCS.g:967:625: ( POINT ) temp= identifierOrKeyword
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	      _enterSepSeq();
                    	    }
                    	    // parser/TCS.g:967:642: ( POINT )
                    	    // parser/TCS.g:967:643: POINT
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	      _beforeSeqEl("E0DCF6CD768C21271AFC11DFB150E3828D1504C0");
                    	    }
                    	    match(input,POINT,FOLLOW_POINT_in_tcs_lookinparg5744); if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      _afterSeqEl();
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	      _exitSepSeq();
                    	    }
                    	    pushFollow(FOLLOW_identifierOrKeyword_in_tcs_lookinparg5752);
                    	    temp=identifierOrKeyword();

                    	    checkFollows();
                    	    state._fsp--;
                    	    if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      setProperty(ret, "propertyName", temp);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop106;
                        }
                    } while (true);


                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_lookinparg"


    // $ANTLR start "tcs_createinparg"
    // parser/TCS.g:976:1: tcs_createinparg returns [Object ret2] : ( 'createIn' EQ (temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )* ) ) ;
    public final Object tcs_createinparg() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","CreateInPArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:981:3: ( ( 'createIn' EQ (temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )* ) ) )
            // parser/TCS.g:982:3: ( 'createIn' EQ (temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )* ) )
            {
            // parser/TCS.g:982:3: ( 'createIn' EQ (temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )* ) )
            // parser/TCS.g:982:4: 'createIn' EQ (temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )* )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD768E92201AFC11DF8959E3828D1504C0");
            }
            match(input,112,FOLLOW_112_in_tcs_createinparg5805); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD768E92211AFC11DF9F72E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_createinparg5809); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD768E92271AFC11DFC04EE3828D1504C0");
            }
            // parser/TCS.g:982:227: (temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )* )
            // parser/TCS.g:982:229: temp= identifierOrKeyword ( ( POINT ) temp= identifierOrKeyword )*
            {
            pushFollow(FOLLOW_identifierOrKeyword_in_tcs_createinparg5817);
            temp=identifierOrKeyword();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "propertyName", temp);
            }
            // parser/TCS.g:982:296: ( ( POINT ) temp= identifierOrKeyword )*
            loop108:
            do {
                int alt108=2;
                int LA108_0 = input.LA(1);

                if ( (LA108_0==POINT) ) {
                    alt108=1;
                }


                switch (alt108) {
            	case 1 :
            	    // parser/TCS.g:982:297: ( POINT ) temp= identifierOrKeyword
            	    {
            	    if ( state.backtracking==0 ) {
            	      _enterSepSeq();
            	    }
            	    // parser/TCS.g:982:314: ( POINT )
            	    // parser/TCS.g:982:315: POINT
            	    {
            	    if ( state.backtracking==0 ) {
            	      _beforeSeqEl("E0DCF6CD768E92241AFC11DFC126E3828D1504C0");
            	    }
            	    match(input,POINT,FOLLOW_POINT_in_tcs_createinparg5826); if (state.failed) return ret2;
            	    if ( state.backtracking==0 ) {
            	      _afterSeqEl();
            	    }

            	    }

            	    if ( state.backtracking==0 ) {
            	      _exitSepSeq();
            	    }
            	    pushFollow(FOLLOW_identifierOrKeyword_in_tcs_createinparg5834);
            	    temp=identifierOrKeyword();

            	    checkFollows();
            	    state._fsp--;
            	    if (state.failed) return ret2;
            	    if ( state.backtracking==0 ) {
            	      setProperty(ret, "propertyName", temp);
            	    }

            	    }
            	    break;

            	default :
            	    break loop108;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_createinparg"


    // $ANTLR start "tcs_asparg"
    // parser/TCS.g:990:1: tcs_asparg returns [Object ret2] : ( 'as' EQ (temp= identifierOrKeyword ) ) ;
    public final Object tcs_asparg() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","AsPArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:995:3: ( ( 'as' EQ (temp= identifierOrKeyword ) ) )
            // parser/TCS.g:996:3: ( 'as' EQ (temp= identifierOrKeyword ) )
            {
            // parser/TCS.g:996:3: ( 'as' EQ (temp= identifierOrKeyword ) )
            // parser/TCS.g:996:4: 'as' EQ (temp= identifierOrKeyword )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD768E922B1AFC11DF9E98E3828D1504C0");
            }
            match(input,118,FOLLOW_118_in_tcs_asparg5880); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD768E922C1AFC11DF931EE3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_asparg5884); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD768E92311AFC11DFCA1EE3828D1504C0");
            }
            // parser/TCS.g:996:221: (temp= identifierOrKeyword )
            // parser/TCS.g:996:223: temp= identifierOrKeyword
            {
            pushFollow(FOLLOW_identifierOrKeyword_in_tcs_asparg5892);
            temp=identifierOrKeyword();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setOclRef(ret, "template", null, temp, "OCL:self.property.parentTemplate.concreteSyntax.templates->select(t | "+"                                                                        if(t.oclIsTypeOf(TCS::ClassTemplate)) then "+"                                                                                t.oclAsType(TCS::ClassTemplate).metaReference.name = ? "+"                                                                                and(self.property.propertyReference.strucfeature.type.allSupertypes()"+"                                                                                        ->prepend(self.property.propertyReference.strucfeature.type)"+"                                                                                        ->includes(t.oclAsType(TCS::ClassTemplate).metaReference))"+"                                                                                and ("+"                                                                                        if (not self.property.propertyArgs->select("+"                                                                                                        arg | arg.oclIsTypeOf(TCS::ModePArg))->isEmpty()"+"                                                                                                ) "+"                                                                                        then"+"                                                                                                t.oclAsType(TCS::ClassTemplate).mode = "+"                                                                                                        self.property.propertyArgs->select("+"                                                                                                                arg | arg.oclIsTypeOf(TCS::ModePArg))"+"                                                                                                                        .oclAsType(TCS::ModePArg)->asSequence()->at(1)"+"                                                                                                        .mode"+"                                                                                        else"+"                                                                                                t.oclAsType(TCS::ClassTemplate).mode.oclIsUndefined()"+"                                                                                        endif"+"                                                                                )"+"                                                                        else"+"                                                                                if(t.oclIsTypeOf(TCS::PrimitiveTemplate)) then"+"                                                                                        t.oclAsType(TCS::PrimitiveTemplate).templateName = ? "+"                                                                                else"+"                                                                                        false"+"                                                                                endif"+"                                                                        endif)"+"                                                                ");
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_asparg"


    // $ANTLR start "tcs_separatorparg"
    // parser/TCS.g:1004:1: tcs_separatorparg returns [Object ret2] : ( 'separator' EQ (temp= tcs_sequence ) ) ;
    public final Object tcs_separatorparg() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","SeparatorPArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1009:3: ( ( 'separator' EQ (temp= tcs_sequence ) ) )
            // parser/TCS.g:1010:3: ( 'separator' EQ (temp= tcs_sequence ) )
            {
            // parser/TCS.g:1010:3: ( 'separator' EQ (temp= tcs_sequence ) )
            // parser/TCS.g:1010:4: 'separator' EQ (temp= tcs_sequence )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7690DC101AFC11DF86FCE3828D1504C0");
            }
            match(input,129,FOLLOW_129_in_tcs_separatorparg5935); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7690DC111AFC11DF9FB9E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_separatorparg5939); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7690DC131AFC11DF874BE3828D1504C0");
            }
            // parser/TCS.g:1010:228: (temp= tcs_sequence )
            // parser/TCS.g:1010:230: temp= tcs_sequence
            {
            pushFollow(FOLLOW_tcs_sequence_in_tcs_separatorparg5947);
            temp=tcs_sequence();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "separatorSequence", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_separatorparg"


    // $ANTLR start "tcs_disambiguateparg"
    // parser/TCS.g:1018:1: tcs_disambiguateparg returns [Object ret2] : ( 'disambiguate' EQ (temp= stringSymbol ) ) ;
    public final Object tcs_disambiguateparg() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","DisambiguatePArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1023:3: ( ( 'disambiguate' EQ (temp= stringSymbol ) ) )
            // parser/TCS.g:1024:3: ( 'disambiguate' EQ (temp= stringSymbol ) )
            {
            // parser/TCS.g:1024:3: ( 'disambiguate' EQ (temp= stringSymbol ) )
            // parser/TCS.g:1024:4: 'disambiguate' EQ (temp= stringSymbol )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7690DC171AFC11DFC179E3828D1504C0");
            }
            match(input,61,FOLLOW_61_in_tcs_disambiguateparg5990); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7690DC181AFC11DF9C8CE3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_disambiguateparg5994); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7690DC1B1AFC11DFA2F7E3828D1504C0");
            }
            // parser/TCS.g:1024:231: (temp= stringSymbol )
            // parser/TCS.g:1024:233: temp= stringSymbol
            {
            pushFollow(FOLLOW_stringSymbol_in_tcs_disambiguateparg6002);
            temp=stringSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "disambiguation", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_disambiguateparg"


    // $ANTLR start "tcs_autocreateparg"
    // parser/TCS.g:1032:1: tcs_autocreateparg returns [Object ret2] : ( 'autoCreate' EQ (temp= tcs_autocreatekind ) ) ;
    public final Object tcs_autocreateparg() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","AutoCreatePArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1037:3: ( ( 'autoCreate' EQ (temp= tcs_autocreatekind ) ) )
            // parser/TCS.g:1038:3: ( 'autoCreate' EQ (temp= tcs_autocreatekind ) )
            {
            // parser/TCS.g:1038:3: ( 'autoCreate' EQ (temp= tcs_autocreatekind ) )
            // parser/TCS.g:1038:4: 'autoCreate' EQ (temp= tcs_autocreatekind )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7690DC1F1AFC11DF8F52E3828D1504C0");
            }
            match(input,62,FOLLOW_62_in_tcs_autocreateparg6045); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7690DC201AFC11DFA25DE3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_autocreateparg6049); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7690DC221AFC11DFBBB5E3828D1504C0");
            }
            // parser/TCS.g:1038:229: (temp= tcs_autocreatekind )
            // parser/TCS.g:1038:231: temp= tcs_autocreatekind
            {
            pushFollow(FOLLOW_tcs_autocreatekind_in_tcs_autocreateparg6057);
            temp=tcs_autocreatekind();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "value", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_autocreateparg"


    // $ANTLR start "tcs_autocreatekind"
    // parser/TCS.g:1046:1: tcs_autocreatekind returns [Object ret2] : ( ( 'always' ) | ( 'ifmissing' ) | ( 'never' ) ) ;
    public final Object tcs_autocreatekind() throws RecognitionException {

        Object ret2 = null;

        java.lang.Object ret=null;
        try {
            // parser/TCS.g:1047:3: ( ( ( 'always' ) | ( 'ifmissing' ) | ( 'never' ) ) )
            // parser/TCS.g:1048:3: ( ( 'always' ) | ( 'ifmissing' ) | ( 'never' ) )
            {
            // parser/TCS.g:1048:3: ( ( 'always' ) | ( 'ifmissing' ) | ( 'never' ) )
            int alt109=3;
            switch ( input.LA(1) ) {
            case 96:
                {
                alt109=1;
                }
                break;
            case 50:
                {
                alt109=2;
                }
                break;
            case 113:
                {
                alt109=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }

            switch (alt109) {
                case 1 :
                    // parser/TCS.g:1048:4: ( 'always' )
                    {
                    // parser/TCS.g:1048:4: ( 'always' )
                    // parser/TCS.g:1048:5: 'always'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76934D111AFC11DF99CCE3828D1504C0");
                    }
                    match(input,96,FOLLOW_96_in_tcs_autocreatekind6101); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      ret = createEnumLiteral(list("TCS","AutoCreateKind"), "always");
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1049:4: ( 'ifmissing' )
                    {
                    // parser/TCS.g:1049:4: ( 'ifmissing' )
                    // parser/TCS.g:1049:5: 'ifmissing'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76934D141AFC11DF87A3E3828D1504C0");
                    }
                    match(input,50,FOLLOW_50_in_tcs_autocreatekind6111); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      ret = createEnumLiteral(list("TCS","AutoCreateKind"), "ifmissing");
                    }

                    }
                    break;
                case 3 :
                    // parser/TCS.g:1050:4: ( 'never' )
                    {
                    // parser/TCS.g:1050:4: ( 'never' )
                    // parser/TCS.g:1050:5: 'never'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76934D171AFC11DF9052E3828D1504C0");
                    }
                    match(input,113,FOLLOW_113_in_tcs_autocreatekind6121); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      ret = createEnumLiteral(list("TCS","AutoCreateKind"), "never");
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

                ret2=ret;

            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_autocreatekind"


    // $ANTLR start "tcs_importcontextparg"
    // parser/TCS.g:1057:1: tcs_importcontextparg returns [Object ret2] : ( 'importContext' ) ;
    public final Object tcs_importcontextparg() throws RecognitionException {

        Object ret2 = null;

        List<String> metaType=list("TCS","ImportContextPArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1062:3: ( ( 'importContext' ) )
            // parser/TCS.g:1063:3: ( 'importContext' )
            {
            // parser/TCS.g:1063:3: ( 'importContext' )
            // parser/TCS.g:1063:4: 'importContext'
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76934D1B1AFC11DF9A5FE3828D1504C0");
            }
            match(input,59,FOLLOW_59_in_tcs_importcontextparg6152); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_importcontextparg"


    // $ANTLR start "tcs_partialparg"
    // parser/TCS.g:1071:1: tcs_partialparg returns [Object ret2] : ( 'partial' ) ;
    public final Object tcs_partialparg() throws RecognitionException {

        Object ret2 = null;

        List<String> metaType=list("TCS","PartialPArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1076:3: ( ( 'partial' ) )
            // parser/TCS.g:1077:3: ( 'partial' )
            {
            // parser/TCS.g:1077:3: ( 'partial' )
            // parser/TCS.g:1077:4: 'partial'
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76934D1F1AFC11DFCD82E3828D1504C0");
            }
            match(input,60,FOLLOW_60_in_tcs_partialparg6192); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_partialparg"


    // $ANTLR start "tcs_forcedlowerparg"
    // parser/TCS.g:1085:1: tcs_forcedlowerparg returns [Object ret2] : ( 'forcedLower' EQ (temp= integerSymbol ) ) ;
    public final Object tcs_forcedlowerparg() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","ForcedLowerPArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1090:3: ( ( 'forcedLower' EQ (temp= integerSymbol ) ) )
            // parser/TCS.g:1091:3: ( 'forcedLower' EQ (temp= integerSymbol ) )
            {
            // parser/TCS.g:1091:3: ( 'forcedLower' EQ (temp= integerSymbol ) )
            // parser/TCS.g:1091:4: 'forcedLower' EQ (temp= integerSymbol )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769597021AFC11DFC2C8E3828D1504C0");
            }
            match(input,58,FOLLOW_58_in_tcs_forcedlowerparg6232); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769597031AFC11DFB309E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_forcedlowerparg6236); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769597051AFC11DF81DFE3828D1504C0");
            }
            // parser/TCS.g:1091:230: (temp= integerSymbol )
            // parser/TCS.g:1091:232: temp= integerSymbol
            {
            pushFollow(FOLLOW_integerSymbol_in_tcs_forcedlowerparg6244);
            temp=integerSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "value", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_forcedlowerparg"


    // $ANTLR start "tcs_forcedupperparg"
    // parser/TCS.g:1099:1: tcs_forcedupperparg returns [Object ret2] : ( 'forcedUpper' EQ (temp= integerSymbol ) ) ;
    public final Object tcs_forcedupperparg() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","ForcedUpperPArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1104:3: ( ( 'forcedUpper' EQ (temp= integerSymbol ) ) )
            // parser/TCS.g:1105:3: ( 'forcedUpper' EQ (temp= integerSymbol ) )
            {
            // parser/TCS.g:1105:3: ( 'forcedUpper' EQ (temp= integerSymbol ) )
            // parser/TCS.g:1105:4: 'forcedUpper' EQ (temp= integerSymbol )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769808001AFC11DFB1BEE3828D1504C0");
            }
            match(input,97,FOLLOW_97_in_tcs_forcedupperparg6287); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769808011AFC11DFA7D5E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_forcedupperparg6291); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769808031AFC11DFBD50E3828D1504C0");
            }
            // parser/TCS.g:1105:230: (temp= integerSymbol )
            // parser/TCS.g:1105:232: temp= integerSymbol
            {
            pushFollow(FOLLOW_integerSymbol_in_tcs_forcedupperparg6299);
            temp=integerSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "value", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_forcedupperparg"


    // $ANTLR start "tcs_createasparg"
    // parser/TCS.g:1113:1: tcs_createasparg returns [Object ret2] : ( 'createAs' EQ (temp= identifierOrKeyword ( ( DLCOLON ) temp= identifierOrKeyword )* ) ) ;
    public final Object tcs_createasparg() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","CreateAsPArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1118:3: ( ( 'createAs' EQ (temp= identifierOrKeyword ( ( DLCOLON ) temp= identifierOrKeyword )* ) ) )
            // parser/TCS.g:1119:3: ( 'createAs' EQ (temp= identifierOrKeyword ( ( DLCOLON ) temp= identifierOrKeyword )* ) )
            {
            // parser/TCS.g:1119:3: ( 'createAs' EQ (temp= identifierOrKeyword ( ( DLCOLON ) temp= identifierOrKeyword )* ) )
            // parser/TCS.g:1119:4: 'createAs' EQ (temp= identifierOrKeyword ( ( DLCOLON ) temp= identifierOrKeyword )* )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769808071AFC11DF8629E3828D1504C0");
            }
            match(input,85,FOLLOW_85_in_tcs_createasparg6342); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769808081AFC11DFBCEEE3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_createasparg6346); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD7698080E1AFC11DFA0A0E3828D1504C0");
            }
            // parser/TCS.g:1119:227: (temp= identifierOrKeyword ( ( DLCOLON ) temp= identifierOrKeyword )* )
            // parser/TCS.g:1119:229: temp= identifierOrKeyword ( ( DLCOLON ) temp= identifierOrKeyword )*
            {
            pushFollow(FOLLOW_identifierOrKeyword_in_tcs_createasparg6354);
            temp=identifierOrKeyword();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "name", temp);
            }
            // parser/TCS.g:1119:288: ( ( DLCOLON ) temp= identifierOrKeyword )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( (LA110_0==DLCOLON) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // parser/TCS.g:1119:289: ( DLCOLON ) temp= identifierOrKeyword
            	    {
            	    if ( state.backtracking==0 ) {
            	      _enterSepSeq();
            	    }
            	    // parser/TCS.g:1119:306: ( DLCOLON )
            	    // parser/TCS.g:1119:307: DLCOLON
            	    {
            	    if ( state.backtracking==0 ) {
            	      _beforeSeqEl("E0DCF6CD7698080B1AFC11DF81EAE3828D1504C0");
            	    }
            	    match(input,DLCOLON,FOLLOW_DLCOLON_in_tcs_createasparg6363); if (state.failed) return ret2;
            	    if ( state.backtracking==0 ) {
            	      _afterSeqEl();
            	    }

            	    }

            	    if ( state.backtracking==0 ) {
            	      _exitSepSeq();
            	    }
            	    pushFollow(FOLLOW_identifierOrKeyword_in_tcs_createasparg6371);
            	    temp=identifierOrKeyword();

            	    checkFollows();
            	    state._fsp--;
            	    if (state.failed) return ret2;
            	    if ( state.backtracking==0 ) {
            	      setProperty(ret, "name", temp);
            	    }

            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_createasparg"


    // $ANTLR start "tcs_queryparg"
    // parser/TCS.g:1127:1: tcs_queryparg returns [Object ret2] : ( 'query' EQ (temp= stringSymbol ) ) ;
    public final Object tcs_queryparg() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","QueryPArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1132:3: ( ( 'query' EQ (temp= stringSymbol ) ) )
            // parser/TCS.g:1133:3: ( 'query' EQ (temp= stringSymbol ) )
            {
            // parser/TCS.g:1133:3: ( 'query' EQ (temp= stringSymbol ) )
            // parser/TCS.g:1133:4: 'query' EQ (temp= stringSymbol )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769A79001AFC11DF93B8E3828D1504C0");
            }
            match(input,130,FOLLOW_130_in_tcs_queryparg6417); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769A79011AFC11DFBD83E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_queryparg6421); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769A79041AFC11DFC041E3828D1504C0");
            }
            // parser/TCS.g:1133:224: (temp= stringSymbol )
            // parser/TCS.g:1133:226: temp= stringSymbol
            {
            pushFollow(FOLLOW_stringSymbol_in_tcs_queryparg6429);
            temp=stringSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "query", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_queryparg"


    // $ANTLR start "tcs_filterparg"
    // parser/TCS.g:1141:1: tcs_filterparg returns [Object ret2] : ( 'filter' EQ (temp= stringSymbol ) ( ( COMA 'invert' EQ (temp= stringSymbol ) ) | ) ) ;
    public final Object tcs_filterparg() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","FilterPArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1146:3: ( ( 'filter' EQ (temp= stringSymbol ) ( ( COMA 'invert' EQ (temp= stringSymbol ) ) | ) ) )
            // parser/TCS.g:1147:3: ( 'filter' EQ (temp= stringSymbol ) ( ( COMA 'invert' EQ (temp= stringSymbol ) ) | ) )
            {
            // parser/TCS.g:1147:3: ( 'filter' EQ (temp= stringSymbol ) ( ( COMA 'invert' EQ (temp= stringSymbol ) ) | ) )
            // parser/TCS.g:1147:4: 'filter' EQ (temp= stringSymbol ) ( ( COMA 'invert' EQ (temp= stringSymbol ) ) | )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769A79081AFC11DFC2FAE3828D1504C0");
            }
            match(input,106,FOLLOW_106_in_tcs_filterparg6472); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769A79091AFC11DFC8AFE3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_filterparg6476); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769A790C1AFC11DF88BCE3828D1504C0");
            }
            // parser/TCS.g:1147:225: (temp= stringSymbol )
            // parser/TCS.g:1147:227: temp= stringSymbol
            {
            pushFollow(FOLLOW_stringSymbol_in_tcs_filterparg6484);
            temp=stringSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "filter", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769A79171AFC11DF9637E3828D1504C0");
            }
            // parser/TCS.g:1147:357: ( ( COMA 'invert' EQ (temp= stringSymbol ) ) | )
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==COMA) ) {
                int LA111_1 = input.LA(2);

                if ( ((LA111_1>=58 && LA111_1<=62)||(LA111_1>=85 && LA111_1<=86)||(LA111_1>=97 && LA111_1<=98)||LA111_1==106||LA111_1==112||(LA111_1>=118 && LA111_1<=119)||(LA111_1>=129 && LA111_1<=130)||LA111_1==135) ) {
                    alt111=2;
                }
                else if ( (LA111_1==111) ) {
                    alt111=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret2;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 111, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA111_0==EOF||LA111_0==RCURLY) ) {
                alt111=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }
            switch (alt111) {
                case 1 :
                    // parser/TCS.g:1147:358: ( COMA 'invert' EQ (temp= stringSymbol ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:1147:374: ( COMA 'invert' EQ (temp= stringSymbol ) )
                    // parser/TCS.g:1147:375: COMA 'invert' EQ (temp= stringSymbol )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD769A79101AFC11DF8A2DE3828D1504C0");
                    }
                    match(input,COMA,FOLLOW_COMA_in_tcs_filterparg6497); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD769A79111AFC11DFC387E3828D1504C0");
                    }
                    match(input,111,FOLLOW_111_in_tcs_filterparg6501); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD769A79121AFC11DFA004E3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_filterparg6505); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD769A79151AFC11DF8FD0E3828D1504C0");
                    }
                    // parser/TCS.g:1147:677: (temp= stringSymbol )
                    // parser/TCS.g:1147:679: temp= stringSymbol
                    {
                    pushFollow(FOLLOW_stringSymbol_in_tcs_filterparg6513);
                    temp=stringSymbol();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "invert", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1147:767: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_filterparg"


    // $ANTLR start "tcs_modeparg"
    // parser/TCS.g:1156:1: tcs_modeparg returns [Object ret2] : ( 'mode' EQ (temp= identifierOrKeyword ) ) ;
    public final Object tcs_modeparg() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","ModePArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1161:3: ( ( 'mode' EQ (temp= identifierOrKeyword ) ) )
            // parser/TCS.g:1162:3: ( 'mode' EQ (temp= identifierOrKeyword ) )
            {
            // parser/TCS.g:1162:3: ( 'mode' EQ (temp= identifierOrKeyword ) )
            // parser/TCS.g:1162:4: 'mode' EQ (temp= identifierOrKeyword )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769A791B1AFC11DFC449E3828D1504C0");
            }
            match(input,119,FOLLOW_119_in_tcs_modeparg6569); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769A791C1AFC11DFAC65E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_modeparg6573); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769A791F1AFC11DF95DBE3828D1504C0");
            }
            // parser/TCS.g:1162:223: (temp= identifierOrKeyword )
            // parser/TCS.g:1162:225: temp= identifierOrKeyword
            {
            pushFollow(FOLLOW_identifierOrKeyword_in_tcs_modeparg6581);
            temp=identifierOrKeyword();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "mode", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_modeparg"


    // $ANTLR start "tcs_partitionhandlingparg"
    // parser/TCS.g:1170:1: tcs_partitionhandlingparg returns [Object ret2] : ( (temp= tcs_partitionhandling ) ) ;
    public final Object tcs_partitionhandlingparg() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","PartitionHandlingPArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1175:3: ( ( (temp= tcs_partitionhandling ) ) )
            // parser/TCS.g:1176:3: ( (temp= tcs_partitionhandling ) )
            {
            // parser/TCS.g:1176:3: ( (temp= tcs_partitionhandling ) )
            // parser/TCS.g:1176:4: (temp= tcs_partitionhandling )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769CC2F41AFC11DFA374E3828D1504C0");
            }
            // parser/TCS.g:1176:63: (temp= tcs_partitionhandling )
            // parser/TCS.g:1176:65: temp= tcs_partitionhandling
            {
            pushFollow(FOLLOW_tcs_partitionhandling_in_tcs_partitionhandlingparg6628);
            temp=tcs_partitionhandling();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "partitionHandling", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_partitionhandlingparg"


    // $ANTLR start "tcs_blockarg"
    // parser/TCS.g:1184:1: tcs_blockarg returns [Object ret2] : (ret= tcs_nbnlbarg | ret= tcs_indentincrbarg | ret= tcs_startnlbarg | ret= tcs_startnbnlbarg | ret= tcs_endnlbarg ) ;
    public final Object tcs_blockarg() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        try {
            // parser/TCS.g:1185:3: ( (ret= tcs_nbnlbarg | ret= tcs_indentincrbarg | ret= tcs_startnlbarg | ret= tcs_startnbnlbarg | ret= tcs_endnlbarg ) )
            // parser/TCS.g:1186:3: (ret= tcs_nbnlbarg | ret= tcs_indentincrbarg | ret= tcs_startnlbarg | ret= tcs_startnbnlbarg | ret= tcs_endnlbarg )
            {
            // parser/TCS.g:1186:3: (ret= tcs_nbnlbarg | ret= tcs_indentincrbarg | ret= tcs_startnlbarg | ret= tcs_startnbnlbarg | ret= tcs_endnlbarg )
            int alt112=5;
            switch ( input.LA(1) ) {
            case 92:
                {
                alt112=1;
                }
                break;
            case 75:
                {
                alt112=2;
                }
                break;
            case 73:
                {
                alt112=3;
                }
                break;
            case 82:
                {
                alt112=4;
                }
                break;
            case 84:
                {
                alt112=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 112, 0, input);

                throw nvae;
            }

            switch (alt112) {
                case 1 :
                    // parser/TCS.g:1186:4: ret= tcs_nbnlbarg
                    {
                    pushFollow(FOLLOW_tcs_nbnlbarg_in_tcs_blockarg6668);
                    ret=tcs_nbnlbarg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1187:5: ret= tcs_indentincrbarg
                    {
                    pushFollow(FOLLOW_tcs_indentincrbarg_in_tcs_blockarg6676);
                    ret=tcs_indentincrbarg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 3 :
                    // parser/TCS.g:1188:5: ret= tcs_startnlbarg
                    {
                    pushFollow(FOLLOW_tcs_startnlbarg_in_tcs_blockarg6684);
                    ret=tcs_startnlbarg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 4 :
                    // parser/TCS.g:1189:5: ret= tcs_startnbnlbarg
                    {
                    pushFollow(FOLLOW_tcs_startnbnlbarg_in_tcs_blockarg6692);
                    ret=tcs_startnbnlbarg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 5 :
                    // parser/TCS.g:1190:5: ret= tcs_endnlbarg
                    {
                    pushFollow(FOLLOW_tcs_endnlbarg_in_tcs_blockarg6700);
                    ret=tcs_endnlbarg();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              ret2=ret;
               
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_blockarg"


    // $ANTLR start "tcs_nbnlbarg"
    // parser/TCS.g:1197:1: tcs_nbnlbarg returns [Object ret2] : ( 'nbNL' EQ (temp= integerSymbol ) ) ;
    public final Object tcs_nbnlbarg() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","NbNLBArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1202:3: ( ( 'nbNL' EQ (temp= integerSymbol ) ) )
            // parser/TCS.g:1203:3: ( 'nbNL' EQ (temp= integerSymbol ) )
            {
            // parser/TCS.g:1203:3: ( 'nbNL' EQ (temp= integerSymbol ) )
            // parser/TCS.g:1203:4: 'nbNL' EQ (temp= integerSymbol )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769CC2FA1AFC11DF8162E3828D1504C0");
            }
            match(input,92,FOLLOW_92_in_tcs_nbnlbarg6730); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769CC2FB1AFC11DFA8A8E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_nbnlbarg6734); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769CC2FD1AFC11DFC82AE3828D1504C0");
            }
            // parser/TCS.g:1203:223: (temp= integerSymbol )
            // parser/TCS.g:1203:225: temp= integerSymbol
            {
            pushFollow(FOLLOW_integerSymbol_in_tcs_nbnlbarg6742);
            temp=integerSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "value", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_nbnlbarg"


    // $ANTLR start "tcs_indentincrbarg"
    // parser/TCS.g:1211:1: tcs_indentincrbarg returns [Object ret2] : ( 'indentIncr' EQ (temp= integerSymbol ) ) ;
    public final Object tcs_indentincrbarg() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","IndentIncrBArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1216:3: ( ( 'indentIncr' EQ (temp= integerSymbol ) ) )
            // parser/TCS.g:1217:3: ( 'indentIncr' EQ (temp= integerSymbol ) )
            {
            // parser/TCS.g:1217:3: ( 'indentIncr' EQ (temp= integerSymbol ) )
            // parser/TCS.g:1217:4: 'indentIncr' EQ (temp= integerSymbol )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769F33F31AFC11DFA9ACE3828D1504C0");
            }
            match(input,75,FOLLOW_75_in_tcs_indentincrbarg6785); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769F33F41AFC11DFA7B0E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_indentincrbarg6789); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769F33F61AFC11DFAABDE3828D1504C0");
            }
            // parser/TCS.g:1217:229: (temp= integerSymbol )
            // parser/TCS.g:1217:231: temp= integerSymbol
            {
            pushFollow(FOLLOW_integerSymbol_in_tcs_indentincrbarg6797);
            temp=integerSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "value", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_indentincrbarg"


    // $ANTLR start "tcs_startnlbarg"
    // parser/TCS.g:1225:1: tcs_startnlbarg returns [Object ret2] : ( 'startNL' EQ ( ( 'true' ) | ( 'false' ) ) ) ;
    public final Object tcs_startnlbarg() throws RecognitionException {

        Object ret2 = null;

        List<String> metaType=list("TCS","StartNLBArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1230:3: ( ( 'startNL' EQ ( ( 'true' ) | ( 'false' ) ) ) )
            // parser/TCS.g:1231:3: ( 'startNL' EQ ( ( 'true' ) | ( 'false' ) ) )
            {
            // parser/TCS.g:1231:3: ( 'startNL' EQ ( ( 'true' ) | ( 'false' ) ) )
            // parser/TCS.g:1231:4: 'startNL' EQ ( ( 'true' ) | ( 'false' ) )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769F33FA1AFC11DF99B2E3828D1504C0");
            }
            match(input,73,FOLLOW_73_in_tcs_startnlbarg6840); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769F33FB1AFC11DFBB81E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_startnlbarg6844); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD769F34031AFC11DFBC9FE3828D1504C0");
            }
            // parser/TCS.g:1231:227: ( ( 'true' ) | ( 'false' ) )
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==81) ) {
                alt113=1;
            }
            else if ( (LA113_0==117) ) {
                alt113=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 113, 0, input);

                throw nvae;
            }
            switch (alt113) {
                case 1 :
                    // parser/TCS.g:1231:228: ( 'true' )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:1231:244: ( 'true' )
                    // parser/TCS.g:1231:245: 'true'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD769F33FF1AFC11DFBDFAE3828D1504C0");
                    }
                    match(input,81,FOLLOW_81_in_tcs_startnlbarg6854); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "value", java.lang.Boolean.TRUE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1231:396: ( 'false' )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    // parser/TCS.g:1231:412: ( 'false' )
                    // parser/TCS.g:1231:413: 'false'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD769F34011AFC11DF86B4E3828D1504C0");
                    }
                    match(input,117,FOLLOW_117_in_tcs_startnlbarg6867); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "value", java.lang.Boolean.FALSE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_startnlbarg"


    // $ANTLR start "tcs_startnbnlbarg"
    // parser/TCS.g:1240:1: tcs_startnbnlbarg returns [Object ret2] : ( 'startNbNL' EQ (temp= integerSymbol ) ) ;
    public final Object tcs_startnbnlbarg() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","StartNbNLBArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1245:3: ( ( 'startNbNL' EQ (temp= integerSymbol ) ) )
            // parser/TCS.g:1246:3: ( 'startNbNL' EQ (temp= integerSymbol ) )
            {
            // parser/TCS.g:1246:3: ( 'startNbNL' EQ (temp= integerSymbol ) )
            // parser/TCS.g:1246:4: 'startNbNL' EQ (temp= integerSymbol )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A17DE01AFC11DF9A26E3828D1504C0");
            }
            match(input,82,FOLLOW_82_in_tcs_startnbnlbarg6914); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A17DE11AFC11DF88CCE3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_startnbnlbarg6918); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A17DE31AFC11DF9760E3828D1504C0");
            }
            // parser/TCS.g:1246:228: (temp= integerSymbol )
            // parser/TCS.g:1246:230: temp= integerSymbol
            {
            pushFollow(FOLLOW_integerSymbol_in_tcs_startnbnlbarg6926);
            temp=integerSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "value", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_startnbnlbarg"


    // $ANTLR start "tcs_endnlbarg"
    // parser/TCS.g:1254:1: tcs_endnlbarg returns [Object ret2] : ( 'endNL' EQ ( ( 'true' ) | ( 'false' ) ) ) ;
    public final Object tcs_endnlbarg() throws RecognitionException {

        Object ret2 = null;

        List<String> metaType=list("TCS","EndNLBArg");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1259:3: ( ( 'endNL' EQ ( ( 'true' ) | ( 'false' ) ) ) )
            // parser/TCS.g:1260:3: ( 'endNL' EQ ( ( 'true' ) | ( 'false' ) ) )
            {
            // parser/TCS.g:1260:3: ( 'endNL' EQ ( ( 'true' ) | ( 'false' ) ) )
            // parser/TCS.g:1260:4: 'endNL' EQ ( ( 'true' ) | ( 'false' ) )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A3EEE01AFC11DFC340E3828D1504C0");
            }
            match(input,84,FOLLOW_84_in_tcs_endnlbarg6969); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A3EEE11AFC11DFB3D4E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_endnlbarg6973); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A3EEE91AFC11DFB4B2E3828D1504C0");
            }
            // parser/TCS.g:1260:225: ( ( 'true' ) | ( 'false' ) )
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==81) ) {
                alt114=1;
            }
            else if ( (LA114_0==117) ) {
                alt114=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;
            }
            switch (alt114) {
                case 1 :
                    // parser/TCS.g:1260:226: ( 'true' )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:1260:242: ( 'true' )
                    // parser/TCS.g:1260:243: 'true'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76A3EEE51AFC11DF8CE1E3828D1504C0");
                    }
                    match(input,81,FOLLOW_81_in_tcs_endnlbarg6983); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "value", java.lang.Boolean.TRUE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1260:394: ( 'false' )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    // parser/TCS.g:1260:410: ( 'false' )
                    // parser/TCS.g:1260:411: 'false'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76A3EEE71AFC11DFC385E3828D1504C0");
                    }
                    match(input,117,FOLLOW_117_in_tcs_endnlbarg6996); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "value", java.lang.Boolean.FALSE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_endnlbarg"


    // $ANTLR start "tcs_symbol"
    // parser/TCS.g:1269:1: tcs_symbol returns [Object ret2] : ( (temp= identifier )? EQ (temp= stringSymbol ) ( ( COLON (temp= tcs_spacekind ( ( COMA ) temp= tcs_spacekind )* )? ) | ) SEMI ) ;
    public final Object tcs_symbol() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","Symbol");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, true) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1274:3: ( ( (temp= identifier )? EQ (temp= stringSymbol ) ( ( COLON (temp= tcs_spacekind ( ( COMA ) temp= tcs_spacekind )* )? ) | ) SEMI ) )
            // parser/TCS.g:1275:3: ( (temp= identifier )? EQ (temp= stringSymbol ) ( ( COLON (temp= tcs_spacekind ( ( COMA ) temp= tcs_spacekind )* )? ) | ) SEMI )
            {
            // parser/TCS.g:1275:3: ( (temp= identifier )? EQ (temp= stringSymbol ) ( ( COLON (temp= tcs_spacekind ( ( COMA ) temp= tcs_spacekind )* )? ) | ) SEMI )
            // parser/TCS.g:1275:4: (temp= identifier )? EQ (temp= stringSymbol ) ( ( COLON (temp= tcs_spacekind ( ( COMA ) temp= tcs_spacekind )* )? ) | ) SEMI
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A3EEEE1AFC11DF9352E3828D1504C0");
            }
            // parser/TCS.g:1275:63: (temp= identifier )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==NAME) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // parser/TCS.g:1275:65: temp= identifier
                    {
                    pushFollow(FOLLOW_identifier_in_tcs_symbol7047);
                    temp=identifier();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "name", temp);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A3EEEF1AFC11DF8311E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_symbol7056); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A3EEF21AFC11DFBB99E3828D1504C0");
            }
            // parser/TCS.g:1275:271: (temp= stringSymbol )
            // parser/TCS.g:1275:273: temp= stringSymbol
            {
            pushFollow(FOLLOW_stringSymbol_in_tcs_symbol7064);
            temp=stringSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "value", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A3EEFD1AFC11DF8EA7E3828D1504C0");
            }
            // parser/TCS.g:1275:402: ( ( COLON (temp= tcs_spacekind ( ( COMA ) temp= tcs_spacekind )* )? ) | )
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==COLON) ) {
                alt118=1;
            }
            else if ( (LA118_0==SEMI) ) {
                alt118=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 118, 0, input);

                throw nvae;
            }
            switch (alt118) {
                case 1 :
                    // parser/TCS.g:1275:403: ( COLON (temp= tcs_spacekind ( ( COMA ) temp= tcs_spacekind )* )? )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:1275:419: ( COLON (temp= tcs_spacekind ( ( COMA ) temp= tcs_spacekind )* )? )
                    // parser/TCS.g:1275:420: COLON (temp= tcs_spacekind ( ( COMA ) temp= tcs_spacekind )* )?
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76A3EEF61AFC11DFBB61E3828D1504C0");
                    }
                    match(input,COLON,FOLLOW_COLON_in_tcs_symbol7077); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76A3EEFB1AFC11DFC4CCE3828D1504C0");
                    }
                    // parser/TCS.g:1275:561: (temp= tcs_spacekind ( ( COMA ) temp= tcs_spacekind )* )?
                    int alt117=2;
                    int LA117_0 = input.LA(1);

                    if ( (LA117_0==53||LA117_0==55||LA117_0==99||LA117_0==104) ) {
                        alt117=1;
                    }
                    switch (alt117) {
                        case 1 :
                            // parser/TCS.g:1275:563: temp= tcs_spacekind ( ( COMA ) temp= tcs_spacekind )*
                            {
                            pushFollow(FOLLOW_tcs_spacekind_in_tcs_symbol7085);
                            temp=tcs_spacekind();

                            checkFollows();
                            state._fsp--;
                            if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              setProperty(ret, "spaces", temp);
                            }
                            // parser/TCS.g:1275:618: ( ( COMA ) temp= tcs_spacekind )*
                            loop116:
                            do {
                                int alt116=2;
                                int LA116_0 = input.LA(1);

                                if ( (LA116_0==COMA) ) {
                                    alt116=1;
                                }


                                switch (alt116) {
                            	case 1 :
                            	    // parser/TCS.g:1275:619: ( COMA ) temp= tcs_spacekind
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	      _enterSepSeq();
                            	    }
                            	    // parser/TCS.g:1275:636: ( COMA )
                            	    // parser/TCS.g:1275:637: COMA
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	      _beforeSeqEl("E0DCF6CD76A3EEF81AFC11DFC4E4E3828D1504C0");
                            	    }
                            	    match(input,COMA,FOLLOW_COMA_in_tcs_symbol7094); if (state.failed) return ret2;
                            	    if ( state.backtracking==0 ) {
                            	      _afterSeqEl();
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	      _exitSepSeq();
                            	    }
                            	    pushFollow(FOLLOW_tcs_spacekind_in_tcs_symbol7102);
                            	    temp=tcs_spacekind();

                            	    checkFollows();
                            	    state._fsp--;
                            	    if (state.failed) return ret2;
                            	    if ( state.backtracking==0 ) {
                            	      setProperty(ret, "spaces", temp);
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop116;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1275:830: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A3EEFE1AFC11DF85E1E3828D1504C0");
            }
            match(input,SEMI,FOLLOW_SEMI_in_tcs_symbol7127); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_symbol"


    // $ANTLR start "tcs_spacekind"
    // parser/TCS.g:1284:1: tcs_spacekind returns [Object ret2] : ( ( 'leftSpace' ) | ( 'leftNone' ) | ( 'rightSpace' ) | ( 'rightNone' ) ) ;
    public final Object tcs_spacekind() throws RecognitionException {

        Object ret2 = null;

        java.lang.Object ret=null;
        try {
            // parser/TCS.g:1285:3: ( ( ( 'leftSpace' ) | ( 'leftNone' ) | ( 'rightSpace' ) | ( 'rightNone' ) ) )
            // parser/TCS.g:1286:3: ( ( 'leftSpace' ) | ( 'leftNone' ) | ( 'rightSpace' ) | ( 'rightNone' ) )
            {
            // parser/TCS.g:1286:3: ( ( 'leftSpace' ) | ( 'leftNone' ) | ( 'rightSpace' ) | ( 'rightNone' ) )
            int alt119=4;
            switch ( input.LA(1) ) {
            case 53:
                {
                alt119=1;
                }
                break;
            case 55:
                {
                alt119=2;
                }
                break;
            case 99:
                {
                alt119=3;
                }
                break;
            case 104:
                {
                alt119=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 119, 0, input);

                throw nvae;
            }

            switch (alt119) {
                case 1 :
                    // parser/TCS.g:1286:4: ( 'leftSpace' )
                    {
                    // parser/TCS.g:1286:4: ( 'leftSpace' )
                    // parser/TCS.g:1286:5: 'leftSpace'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76A65FE31AFC11DFB61BE3828D1504C0");
                    }
                    match(input,53,FOLLOW_53_in_tcs_spacekind7169); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      ret = createEnumLiteral(list("TCS","SpaceKind"), "leftSpace");
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1287:4: ( 'leftNone' )
                    {
                    // parser/TCS.g:1287:4: ( 'leftNone' )
                    // parser/TCS.g:1287:5: 'leftNone'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76A65FE61AFC11DFCCAAE3828D1504C0");
                    }
                    match(input,55,FOLLOW_55_in_tcs_spacekind7179); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      ret = createEnumLiteral(list("TCS","SpaceKind"), "leftNone");
                    }

                    }
                    break;
                case 3 :
                    // parser/TCS.g:1288:4: ( 'rightSpace' )
                    {
                    // parser/TCS.g:1288:4: ( 'rightSpace' )
                    // parser/TCS.g:1288:5: 'rightSpace'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76A65FE91AFC11DFC44DE3828D1504C0");
                    }
                    match(input,99,FOLLOW_99_in_tcs_spacekind7189); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      ret = createEnumLiteral(list("TCS","SpaceKind"), "rightSpace");
                    }

                    }
                    break;
                case 4 :
                    // parser/TCS.g:1289:4: ( 'rightNone' )
                    {
                    // parser/TCS.g:1289:4: ( 'rightNone' )
                    // parser/TCS.g:1289:5: 'rightNone'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76A65FEC1AFC11DFBF80E3828D1504C0");
                    }
                    match(input,104,FOLLOW_104_in_tcs_spacekind7199); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      ret = createEnumLiteral(list("TCS","SpaceKind"), "rightNone");
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

                ret2=ret;

            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_spacekind"


    // $ANTLR start "tcs_keyword"
    // parser/TCS.g:1296:1: tcs_keyword returns [Object ret2] : ( (temp= identifier )? EQ (temp= stringSymbol ) SEMI ) ;
    public final Object tcs_keyword() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","Keyword");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, true) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1301:3: ( ( (temp= identifier )? EQ (temp= stringSymbol ) SEMI ) )
            // parser/TCS.g:1302:3: ( (temp= identifier )? EQ (temp= stringSymbol ) SEMI )
            {
            // parser/TCS.g:1302:3: ( (temp= identifier )? EQ (temp= stringSymbol ) SEMI )
            // parser/TCS.g:1302:4: (temp= identifier )? EQ (temp= stringSymbol ) SEMI
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A65FF11AFC11DF987EE3828D1504C0");
            }
            // parser/TCS.g:1302:63: (temp= identifier )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==NAME) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // parser/TCS.g:1302:65: temp= identifier
                    {
                    pushFollow(FOLLOW_identifier_in_tcs_keyword7234);
                    temp=identifier();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "name", temp);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A65FF21AFC11DFB241E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_keyword7243); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A65FF51AFC11DF94DBE3828D1504C0");
            }
            // parser/TCS.g:1302:271: (temp= stringSymbol )
            // parser/TCS.g:1302:273: temp= stringSymbol
            {
            pushFollow(FOLLOW_stringSymbol_in_tcs_keyword7251);
            temp=stringSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "value", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A65FF61AFC11DF8202E3828D1504C0");
            }
            match(input,SEMI,FOLLOW_SEMI_in_tcs_keyword7258); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_keyword"


    // $ANTLR start "tcs_operatorlist"
    // parser/TCS.g:1310:1: tcs_operatorlist returns [Object ret2] : ( 'operators' ( ( (temp= identifier ) ) | ) LCURLY ( ( (temp= tcs_priority (temp= tcs_priority )* )? ) ) RCURLY ) ;
    public final Object tcs_operatorlist() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","OperatorList");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, true) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1315:3: ( ( 'operators' ( ( (temp= identifier ) ) | ) LCURLY ( ( (temp= tcs_priority (temp= tcs_priority )* )? ) ) RCURLY ) )
            // parser/TCS.g:1316:3: ( 'operators' ( ( (temp= identifier ) ) | ) LCURLY ( ( (temp= tcs_priority (temp= tcs_priority )* )? ) ) RCURLY )
            {
            // parser/TCS.g:1316:3: ( 'operators' ( ( (temp= identifier ) ) | ) LCURLY ( ( (temp= tcs_priority (temp= tcs_priority )* )? ) ) RCURLY )
            // parser/TCS.g:1316:4: 'operators' ( ( (temp= identifier ) ) | ) LCURLY ( ( (temp= tcs_priority (temp= tcs_priority )* )? ) ) RCURLY
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A8A9D01AFC11DF88F1E3828D1504C0");
            }
            match(input,126,FOLLOW_126_in_tcs_operatorlist7299); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A8A9D71AFC11DFBB19E3828D1504C0");
            }
            // parser/TCS.g:1316:150: ( ( (temp= identifier ) ) | )
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==NAME) ) {
                alt121=1;
            }
            else if ( (LA121_0==LCURLY) ) {
                alt121=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }
            switch (alt121) {
                case 1 :
                    // parser/TCS.g:1316:151: ( (temp= identifier ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:1316:167: ( (temp= identifier ) )
                    // parser/TCS.g:1316:168: (temp= identifier )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76A8A9D51AFC11DFBEE5E3828D1504C0");
                    }
                    // parser/TCS.g:1316:227: (temp= identifier )
                    // parser/TCS.g:1316:229: temp= identifier
                    {
                    pushFollow(FOLLOW_identifier_in_tcs_operatorlist7312);
                    temp=identifier();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "name", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1316:313: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A8A9D81AFC11DF8DF9E3828D1504C0");
            }
            match(input,LCURLY,FOLLOW_LCURLY_in_tcs_operatorlist7332); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A8A9DC1AFC11DFCDA9E3828D1504C0");
            }
            // parser/TCS.g:1317:159: ( ( (temp= tcs_priority (temp= tcs_priority )* )? ) )
            // parser/TCS.g:1317:160: ( (temp= tcs_priority (temp= tcs_priority )* )? )
            {
            // parser/TCS.g:1317:160: ( (temp= tcs_priority (temp= tcs_priority )* )? )
            // parser/TCS.g:1317:161: (temp= tcs_priority (temp= tcs_priority )* )?
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A8A9DA1AFC11DF9344E3828D1504C0");
            }
            // parser/TCS.g:1317:220: (temp= tcs_priority (temp= tcs_priority )* )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==138) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // parser/TCS.g:1317:222: temp= tcs_priority (temp= tcs_priority )*
                    {
                    pushFollow(FOLLOW_tcs_priority_in_tcs_operatorlist7343);
                    temp=tcs_priority();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "priorities", temp);
                    }
                    // parser/TCS.g:1317:280: (temp= tcs_priority )*
                    loop122:
                    do {
                        int alt122=2;
                        int LA122_0 = input.LA(1);

                        if ( (LA122_0==138) ) {
                            alt122=1;
                        }


                        switch (alt122) {
                    	case 1 :
                    	    // parser/TCS.g:1317:282: temp= tcs_priority
                    	    {
                    	    pushFollow(FOLLOW_tcs_priority_in_tcs_operatorlist7351);
                    	    temp=tcs_priority();

                    	    checkFollows();
                    	    state._fsp--;
                    	    if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      setProperty(ret, "priorities", temp);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop122;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }


            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A8A9DD1AFC11DF89F7E3828D1504C0");
            }
            match(input,RCURLY,FOLLOW_RCURLY_in_tcs_operatorlist7366); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_operatorlist"


    // $ANTLR start "tcs_priority"
    // parser/TCS.g:1325:1: tcs_priority returns [Object ret2] : ( 'priority' (temp= integerSymbol ) ( () | ( COMA (temp= tcs_associativity ) ) ) LCURLY ( ( (temp= tcs_operator (temp= tcs_operator )* )? ) ) RCURLY ) ;
    public final Object tcs_priority() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","Priority");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1330:3: ( ( 'priority' (temp= integerSymbol ) ( () | ( COMA (temp= tcs_associativity ) ) ) LCURLY ( ( (temp= tcs_operator (temp= tcs_operator )* )? ) ) RCURLY ) )
            // parser/TCS.g:1331:3: ( 'priority' (temp= integerSymbol ) ( () | ( COMA (temp= tcs_associativity ) ) ) LCURLY ( ( (temp= tcs_operator (temp= tcs_operator )* )? ) ) RCURLY )
            {
            // parser/TCS.g:1331:3: ( 'priority' (temp= integerSymbol ) ( () | ( COMA (temp= tcs_associativity ) ) ) LCURLY ( ( (temp= tcs_operator (temp= tcs_operator )* )? ) ) RCURLY )
            // parser/TCS.g:1331:4: 'priority' (temp= integerSymbol ) ( () | ( COMA (temp= tcs_associativity ) ) ) LCURLY ( ( (temp= tcs_operator (temp= tcs_operator )* )? ) ) RCURLY
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A8A9E11AFC11DF8E51E3828D1504C0");
            }
            match(input,138,FOLLOW_138_in_tcs_priority7407); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A8A9E31AFC11DF9A02E3828D1504C0");
            }
            // parser/TCS.g:1331:148: (temp= integerSymbol )
            // parser/TCS.g:1331:150: temp= integerSymbol
            {
            pushFollow(FOLLOW_integerSymbol_in_tcs_priority7414);
            temp=integerSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "value", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A8A9ED1AFC11DF82C6E3828D1504C0");
            }
            // parser/TCS.g:1331:280: ( () | ( COMA (temp= tcs_associativity ) ) )
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==LCURLY) ) {
                alt124=1;
            }
            else if ( (LA124_0==COMA) ) {
                alt124=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 124, 0, input);

                throw nvae;
            }
            switch (alt124) {
                case 1 :
                    // parser/TCS.g:1331:281: ()
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:1331:297: ()
                    // parser/TCS.g:1331:298: 
                    {
                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "associativity", createEnumLiteral(list("TCS","Associativity"),"left"));
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1331:407: ( COMA (temp= tcs_associativity ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    // parser/TCS.g:1331:423: ( COMA (temp= tcs_associativity ) )
                    // parser/TCS.g:1331:424: COMA (temp= tcs_associativity )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76A8A9E91AFC11DFB9D1E3828D1504C0");
                    }
                    match(input,COMA,FOLLOW_COMA_in_tcs_priority7437); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76A8A9EB1AFC11DFA42AE3828D1504C0");
                    }
                    // parser/TCS.g:1331:564: (temp= tcs_associativity )
                    // parser/TCS.g:1331:566: temp= tcs_associativity
                    {
                    pushFollow(FOLLOW_tcs_associativity_in_tcs_priority7445);
                    temp=tcs_associativity();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "associativity", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "associativity", createEnumLiteral(list("TCS","Associativity"),"right"));
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A8A9EE1AFC11DF95F7E3828D1504C0");
            }
            match(input,LCURLY,FOLLOW_LCURLY_in_tcs_priority7459); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A8A9F21AFC11DFAD22E3828D1504C0");
            }
            // parser/TCS.g:1332:159: ( ( (temp= tcs_operator (temp= tcs_operator )* )? ) )
            // parser/TCS.g:1332:160: ( (temp= tcs_operator (temp= tcs_operator )* )? )
            {
            // parser/TCS.g:1332:160: ( (temp= tcs_operator (temp= tcs_operator )* )? )
            // parser/TCS.g:1332:161: (temp= tcs_operator (temp= tcs_operator )* )?
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76A8A9F01AFC11DFCD7AE3828D1504C0");
            }
            // parser/TCS.g:1332:220: (temp= tcs_operator (temp= tcs_operator )* )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==NAME||LA126_0==EQ||LA126_0==137) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // parser/TCS.g:1332:222: temp= tcs_operator (temp= tcs_operator )*
                    {
                    pushFollow(FOLLOW_tcs_operator_in_tcs_priority7470);
                    temp=tcs_operator();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "operators", temp);
                    }
                    // parser/TCS.g:1332:279: (temp= tcs_operator )*
                    loop125:
                    do {
                        int alt125=2;
                        int LA125_0 = input.LA(1);

                        if ( (LA125_0==NAME||LA125_0==EQ||LA125_0==137) ) {
                            alt125=1;
                        }


                        switch (alt125) {
                    	case 1 :
                    	    // parser/TCS.g:1332:281: temp= tcs_operator
                    	    {
                    	    pushFollow(FOLLOW_tcs_operator_in_tcs_priority7478);
                    	    temp=tcs_operator();

                    	    checkFollows();
                    	    state._fsp--;
                    	    if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      setProperty(ret, "operators", temp);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop125;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }


            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76AB1AD01AFC11DF8111E3828D1504C0");
            }
            match(input,RCURLY,FOLLOW_RCURLY_in_tcs_priority7493); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_priority"


    // $ANTLR start "tcs_operator"
    // parser/TCS.g:1340:1: tcs_operator returns [Object ret2] : ( ( ( 'postfix' ) | ) (temp= identifier )? EQ ( ( ( ( (temp= identifier ) ) | ( (temp= stringSymbol ) ) ) ) | ) COMA (temp= integerSymbol ) SEMI ) ;
    public final Object tcs_operator() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","Operator");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, true) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1345:3: ( ( ( ( 'postfix' ) | ) (temp= identifier )? EQ ( ( ( ( (temp= identifier ) ) | ( (temp= stringSymbol ) ) ) ) | ) COMA (temp= integerSymbol ) SEMI ) )
            // parser/TCS.g:1346:3: ( ( ( 'postfix' ) | ) (temp= identifier )? EQ ( ( ( ( (temp= identifier ) ) | ( (temp= stringSymbol ) ) ) ) | ) COMA (temp= integerSymbol ) SEMI )
            {
            // parser/TCS.g:1346:3: ( ( ( 'postfix' ) | ) (temp= identifier )? EQ ( ( ( ( (temp= identifier ) ) | ( (temp= stringSymbol ) ) ) ) | ) COMA (temp= integerSymbol ) SEMI )
            // parser/TCS.g:1346:4: ( ( 'postfix' ) | ) (temp= identifier )? EQ ( ( ( ( (temp= identifier ) ) | ( (temp= stringSymbol ) ) ) ) | ) COMA (temp= integerSymbol ) SEMI
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76AB1AD91AFC11DFBA02E3828D1504C0");
            }
            // parser/TCS.g:1346:64: ( ( 'postfix' ) | )
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==137) ) {
                alt127=1;
            }
            else if ( (LA127_0==NAME||LA127_0==EQ) ) {
                alt127=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 127, 0, input);

                throw nvae;
            }
            switch (alt127) {
                case 1 :
                    // parser/TCS.g:1346:65: ( 'postfix' )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:1346:81: ( 'postfix' )
                    // parser/TCS.g:1346:82: 'postfix'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76AB1AD71AFC11DFBD85E3828D1504C0");
                    }
                    match(input,137,FOLLOW_137_in_tcs_operator7540); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isPostfix", java.lang.Boolean.TRUE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1346:240: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isPostfix", java.lang.Boolean.FALSE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76AB1ADB1AFC11DFC2BEE3828D1504C0");
            }
            // parser/TCS.g:1347:76: (temp= identifier )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==NAME) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // parser/TCS.g:1347:78: temp= identifier
                    {
                    pushFollow(FOLLOW_identifier_in_tcs_operator7562);
                    temp=identifier();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "name", temp);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76AB1ADC1AFC11DFA859E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_operator7571); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76AD8BDA1AFC11DFB914E3828D1504C0");
            }
            // parser/TCS.g:1347:285: ( ( ( ( (temp= identifier ) ) | ( (temp= stringSymbol ) ) ) ) | )
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( ((LA130_0>=NAME && LA130_0<=STRING)) ) {
                alt130=1;
            }
            else if ( (LA130_0==COMA) ) {
                alt130=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;
            }
            switch (alt130) {
                case 1 :
                    // parser/TCS.g:1347:286: ( ( ( (temp= identifier ) ) | ( (temp= stringSymbol ) ) ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:1347:302: ( ( ( (temp= identifier ) ) | ( (temp= stringSymbol ) ) ) )
                    // parser/TCS.g:1347:303: ( ( (temp= identifier ) ) | ( (temp= stringSymbol ) ) )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76AD8BD81AFC11DF9A2DE3828D1504C0");
                    }
                    // parser/TCS.g:1347:362: ( ( (temp= identifier ) ) | ( (temp= stringSymbol ) ) )
                    int alt129=2;
                    int LA129_0 = input.LA(1);

                    if ( (LA129_0==NAME) ) {
                        alt129=1;
                    }
                    else if ( (LA129_0==STRING) ) {
                        alt129=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret2;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 129, 0, input);

                        throw nvae;
                    }
                    switch (alt129) {
                        case 1 :
                            // parser/TCS.g:1347:363: ( (temp= identifier ) )
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(0);
                            }
                            // parser/TCS.g:1347:379: ( (temp= identifier ) )
                            // parser/TCS.g:1347:380: (temp= identifier )
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD76AB1AE21AFC11DFA0C0E3828D1504C0");
                            }
                            // parser/TCS.g:1347:439: (temp= identifier )
                            // parser/TCS.g:1347:441: temp= identifier
                            {
                            pushFollow(FOLLOW_identifier_in_tcs_operator7590);
                            temp=identifier();

                            checkFollows();
                            state._fsp--;
                            if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              setRef(ret, "literal", list("TCS","Literal"), "name", temp, null, "never", null, false, null);
                            }

                            }

                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }

                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;
                        case 2 :
                            // parser/TCS.g:1348:4: ( (temp= stringSymbol ) )
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(1);
                            }
                            // parser/TCS.g:1348:20: ( (temp= stringSymbol ) )
                            // parser/TCS.g:1348:21: (temp= stringSymbol )
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD76AD8BD61AFC11DF8191E3828D1504C0");
                            }
                            // parser/TCS.g:1348:80: (temp= stringSymbol )
                            // parser/TCS.g:1348:82: temp= stringSymbol
                            {
                            pushFollow(FOLLOW_stringSymbol_in_tcs_operator7610);
                            temp=stringSymbol();

                            checkFollows();
                            state._fsp--;
                            if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              setRef(ret, "literal", list("TCS","Literal"), "value", temp, "#all", "ifmissing", list("TCS","Keyword"), false, null);
                            }

                            }

                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }

                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1348:287: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76AD8BDB1AFC11DF9653E3828D1504C0");
            }
            match(input,COMA,FOLLOW_COMA_in_tcs_operator7635); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76AD8BDD1AFC11DF942FE3828D1504C0");
            }
            // parser/TCS.g:1349:157: (temp= integerSymbol )
            // parser/TCS.g:1349:159: temp= integerSymbol
            {
            pushFollow(FOLLOW_integerSymbol_in_tcs_operator7643);
            temp=integerSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "arity", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76AD8BDE1AFC11DF95CBE3828D1504C0");
            }
            match(input,SEMI,FOLLOW_SEMI_in_tcs_operator7650); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_operator"


    // $ANTLR start "tcs_associativity"
    // parser/TCS.g:1357:1: tcs_associativity returns [Object ret2] : ( ( 'left' ) | ( 'right' ) ) ;
    public final Object tcs_associativity() throws RecognitionException {

        Object ret2 = null;

        java.lang.Object ret=null;
        try {
            // parser/TCS.g:1358:3: ( ( ( 'left' ) | ( 'right' ) ) )
            // parser/TCS.g:1359:3: ( ( 'left' ) | ( 'right' ) )
            {
            // parser/TCS.g:1359:3: ( ( 'left' ) | ( 'right' ) )
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==88) ) {
                alt131=1;
            }
            else if ( (LA131_0==91) ) {
                alt131=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 131, 0, input);

                throw nvae;
            }
            switch (alt131) {
                case 1 :
                    // parser/TCS.g:1359:4: ( 'left' )
                    {
                    // parser/TCS.g:1359:4: ( 'left' )
                    // parser/TCS.g:1359:5: 'left'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76B246C21AFC11DFCE7FE3828D1504C0");
                    }
                    match(input,88,FOLLOW_88_in_tcs_associativity7692); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      ret = createEnumLiteral(list("TCS","Associativity"), "left");
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1360:4: ( 'right' )
                    {
                    // parser/TCS.g:1360:4: ( 'right' )
                    // parser/TCS.g:1360:5: 'right'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76B246C51AFC11DFA07CE3828D1504C0");
                    }
                    match(input,91,FOLLOW_91_in_tcs_associativity7702); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      ret = createEnumLiteral(list("TCS","Associativity"), "right");
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

                ret2=ret;

            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_associativity"


    // $ANTLR start "tcs_expression"
    // parser/TCS.g:1367:1: tcs_expression returns [Object ret2] : (ret= tcs_andexp ) ;
    public final Object tcs_expression() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        try {
            // parser/TCS.g:1368:3: ( (ret= tcs_andexp ) )
            // parser/TCS.g:1369:3: (ret= tcs_andexp )
            {
            // parser/TCS.g:1369:3: (ret= tcs_andexp )
            // parser/TCS.g:1369:4: ret= tcs_andexp
            {
            pushFollow(FOLLOW_tcs_andexp_in_tcs_expression7730);
            ret=tcs_andexp();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;

            }

            if ( state.backtracking==0 ) {

              ret2=ret;
               
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_expression"


    // $ANTLR start "tcs_andexp"
    // parser/TCS.g:1376:1: tcs_andexp returns [Object ret2] : ( (temp= tcs_atomexp ( ( 'and' ) temp= tcs_atomexp )* )? ) ;
    public final Object tcs_andexp() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","AndExp");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1381:3: ( ( (temp= tcs_atomexp ( ( 'and' ) temp= tcs_atomexp )* )? ) )
            // parser/TCS.g:1382:3: ( (temp= tcs_atomexp ( ( 'and' ) temp= tcs_atomexp )* )? )
            {
            // parser/TCS.g:1382:3: ( (temp= tcs_atomexp ( ( 'and' ) temp= tcs_atomexp )* )? )
            // parser/TCS.g:1382:4: (temp= tcs_atomexp ( ( 'and' ) temp= tcs_atomexp )* )?
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76B490B61AFC11DFA3BFE3828D1504C0");
            }
            // parser/TCS.g:1382:63: (temp= tcs_atomexp ( ( 'and' ) temp= tcs_atomexp )* )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==NAME||LA133_0==RARROW||(LA133_0>=49 && LA133_0<=140)) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // parser/TCS.g:1382:65: temp= tcs_atomexp ( ( 'and' ) temp= tcs_atomexp )*
                    {
                    pushFollow(FOLLOW_tcs_atomexp_in_tcs_andexp7764);
                    temp=tcs_atomexp();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "expressions", temp);
                    }
                    // parser/TCS.g:1382:123: ( ( 'and' ) temp= tcs_atomexp )*
                    loop132:
                    do {
                        int alt132=2;
                        int LA132_0 = input.LA(1);

                        if ( (LA132_0==49) ) {
                            alt132=1;
                        }


                        switch (alt132) {
                    	case 1 :
                    	    // parser/TCS.g:1382:124: ( 'and' ) temp= tcs_atomexp
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	      _enterSepSeq();
                    	    }
                    	    // parser/TCS.g:1382:141: ( 'and' )
                    	    // parser/TCS.g:1382:142: 'and'
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	      _beforeSeqEl("E0DCF6CD76B490B31AFC11DFB6FDE3828D1504C0");
                    	    }
                    	    match(input,49,FOLLOW_49_in_tcs_andexp7772); if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      _afterSeqEl();
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	      _exitSepSeq();
                    	    }
                    	    pushFollow(FOLLOW_tcs_atomexp_in_tcs_andexp7779);
                    	    temp=tcs_atomexp();

                    	    checkFollows();
                    	    state._fsp--;
                    	    if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      setProperty(ret, "expressions", temp);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop132;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_andexp"


    // $ANTLR start "tcs_atomexp"
    // parser/TCS.g:1390:1: tcs_atomexp returns [Object ret2] : (ret= tcs_equalsexp | ret= tcs_booleanpropertyexp | ret= tcs_isdefinedexp | ret= tcs_oneexp | ret= tcs_instanceofexp ) ;
    public final Object tcs_atomexp() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        try {
            // parser/TCS.g:1391:3: ( (ret= tcs_equalsexp | ret= tcs_booleanpropertyexp | ret= tcs_isdefinedexp | ret= tcs_oneexp | ret= tcs_instanceofexp ) )
            // parser/TCS.g:1392:3: (ret= tcs_equalsexp | ret= tcs_booleanpropertyexp | ret= tcs_isdefinedexp | ret= tcs_oneexp | ret= tcs_instanceofexp )
            {
            // parser/TCS.g:1392:3: (ret= tcs_equalsexp | ret= tcs_booleanpropertyexp | ret= tcs_isdefinedexp | ret= tcs_oneexp | ret= tcs_instanceofexp )
            int alt134=5;
            alt134 = dfa134.predict(input);
            switch (alt134) {
                case 1 :
                    // parser/TCS.g:1392:4: ret= tcs_equalsexp
                    {
                    pushFollow(FOLLOW_tcs_equalsexp_in_tcs_atomexp7824);
                    ret=tcs_equalsexp();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1393:5: ret= tcs_booleanpropertyexp
                    {
                    pushFollow(FOLLOW_tcs_booleanpropertyexp_in_tcs_atomexp7832);
                    ret=tcs_booleanpropertyexp();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 3 :
                    // parser/TCS.g:1394:5: ret= tcs_isdefinedexp
                    {
                    pushFollow(FOLLOW_tcs_isdefinedexp_in_tcs_atomexp7840);
                    ret=tcs_isdefinedexp();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 4 :
                    // parser/TCS.g:1395:5: ret= tcs_oneexp
                    {
                    pushFollow(FOLLOW_tcs_oneexp_in_tcs_atomexp7848);
                    ret=tcs_oneexp();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 5 :
                    // parser/TCS.g:1396:5: ret= tcs_instanceofexp
                    {
                    pushFollow(FOLLOW_tcs_instanceofexp_in_tcs_atomexp7856);
                    ret=tcs_instanceofexp();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              ret2=ret;
               
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_atomexp"


    // $ANTLR start "tcs_equalsexp"
    // parser/TCS.g:1403:1: tcs_equalsexp returns [Object ret2] : ( (temp= tcs_propertyreference ) EQ (temp= tcs_value ) ) ;
    public final Object tcs_equalsexp() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","EqualsExp");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1408:3: ( ( (temp= tcs_propertyreference ) EQ (temp= tcs_value ) ) )
            // parser/TCS.g:1409:3: ( (temp= tcs_propertyreference ) EQ (temp= tcs_value ) )
            {
            // parser/TCS.g:1409:3: ( (temp= tcs_propertyreference ) EQ (temp= tcs_value ) )
            // parser/TCS.g:1409:4: (temp= tcs_propertyreference ) EQ (temp= tcs_value )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76B701B11AFC11DFAA88E3828D1504C0");
            }
            // parser/TCS.g:1409:63: (temp= tcs_propertyreference )
            // parser/TCS.g:1409:65: temp= tcs_propertyreference
            {
            pushFollow(FOLLOW_tcs_propertyreference_in_tcs_equalsexp7890);
            temp=tcs_propertyreference();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "propertyReference", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76B701B21AFC11DFA66CE3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_equalsexp7897); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76B701B41AFC11DFA1EDE3828D1504C0");
            }
            // parser/TCS.g:1409:293: (temp= tcs_value )
            // parser/TCS.g:1409:295: temp= tcs_value
            {
            pushFollow(FOLLOW_tcs_value_in_tcs_equalsexp7905);
            temp=tcs_value();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "value", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_equalsexp"


    // $ANTLR start "tcs_booleanpropertyexp"
    // parser/TCS.g:1417:1: tcs_booleanpropertyexp returns [Object ret2] : ( (temp= tcs_propertyreference ) ) ;
    public final Object tcs_booleanpropertyexp() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","BooleanPropertyExp");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1422:3: ( ( (temp= tcs_propertyreference ) ) )
            // parser/TCS.g:1423:3: ( (temp= tcs_propertyreference ) )
            {
            // parser/TCS.g:1423:3: ( (temp= tcs_propertyreference ) )
            // parser/TCS.g:1423:4: (temp= tcs_propertyreference )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76B701B91AFC11DFB973E3828D1504C0");
            }
            // parser/TCS.g:1423:63: (temp= tcs_propertyreference )
            // parser/TCS.g:1423:65: temp= tcs_propertyreference
            {
            pushFollow(FOLLOW_tcs_propertyreference_in_tcs_booleanpropertyexp7952);
            temp=tcs_propertyreference();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "propertyReference", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_booleanpropertyexp"


    // $ANTLR start "tcs_isdefinedexp"
    // parser/TCS.g:1431:1: tcs_isdefinedexp returns [Object ret2] : ( 'isDefined' LPAREN (temp= tcs_propertyreference ) RPAREN ) ;
    public final Object tcs_isdefinedexp() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","IsDefinedExp");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1436:3: ( ( 'isDefined' LPAREN (temp= tcs_propertyreference ) RPAREN ) )
            // parser/TCS.g:1437:3: ( 'isDefined' LPAREN (temp= tcs_propertyreference ) RPAREN )
            {
            // parser/TCS.g:1437:3: ( 'isDefined' LPAREN (temp= tcs_propertyreference ) RPAREN )
            // parser/TCS.g:1437:4: 'isDefined' LPAREN (temp= tcs_propertyreference ) RPAREN
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76B701BD1AFC11DF8890E3828D1504C0");
            }
            match(input,66,FOLLOW_66_in_tcs_isdefinedexp7995); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76B701BE1AFC11DF9129E3828D1504C0");
            }
            match(input,LPAREN,FOLLOW_LPAREN_in_tcs_isdefinedexp7999); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76B701C01AFC11DFA2A9E3828D1504C0");
            }
            // parser/TCS.g:1437:232: (temp= tcs_propertyreference )
            // parser/TCS.g:1437:234: temp= tcs_propertyreference
            {
            pushFollow(FOLLOW_tcs_propertyreference_in_tcs_isdefinedexp8007);
            temp=tcs_propertyreference();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "propertyReference", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76B701C11AFC11DFB190E3828D1504C0");
            }
            match(input,RPAREN,FOLLOW_RPAREN_in_tcs_isdefinedexp8014); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_isdefinedexp"


    // $ANTLR start "tcs_oneexp"
    // parser/TCS.g:1445:1: tcs_oneexp returns [Object ret2] : ( 'one' LPAREN (temp= tcs_propertyreference ) RPAREN ) ;
    public final Object tcs_oneexp() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","OneExp");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1450:3: ( ( 'one' LPAREN (temp= tcs_propertyreference ) RPAREN ) )
            // parser/TCS.g:1451:3: ( 'one' LPAREN (temp= tcs_propertyreference ) RPAREN )
            {
            // parser/TCS.g:1451:3: ( 'one' LPAREN (temp= tcs_propertyreference ) RPAREN )
            // parser/TCS.g:1451:4: 'one' LPAREN (temp= tcs_propertyreference ) RPAREN
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76B972B01AFC11DFB494E3828D1504C0");
            }
            match(input,77,FOLLOW_77_in_tcs_oneexp8055); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76B972B11AFC11DFBCE6E3828D1504C0");
            }
            match(input,LPAREN,FOLLOW_LPAREN_in_tcs_oneexp8059); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76B972B31AFC11DF99F8E3828D1504C0");
            }
            // parser/TCS.g:1451:226: (temp= tcs_propertyreference )
            // parser/TCS.g:1451:228: temp= tcs_propertyreference
            {
            pushFollow(FOLLOW_tcs_propertyreference_in_tcs_oneexp8067);
            temp=tcs_propertyreference();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "propertyReference", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76B972B41AFC11DF9012E3828D1504C0");
            }
            match(input,RPAREN,FOLLOW_RPAREN_in_tcs_oneexp8074); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_oneexp"


    // $ANTLR start "tcs_instanceofexp"
    // parser/TCS.g:1459:1: tcs_instanceofexp returns [Object ret2] : ( (temp= tcs_propertyreference ) 'instanceOf' (temp= identifier ( ( DLCOLON ) temp= identifier )* ) ) ;
    public final Object tcs_instanceofexp() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","InstanceOfExp");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1464:3: ( ( (temp= tcs_propertyreference ) 'instanceOf' (temp= identifier ( ( DLCOLON ) temp= identifier )* ) ) )
            // parser/TCS.g:1465:3: ( (temp= tcs_propertyreference ) 'instanceOf' (temp= identifier ( ( DLCOLON ) temp= identifier )* ) )
            {
            // parser/TCS.g:1465:3: ( (temp= tcs_propertyreference ) 'instanceOf' (temp= identifier ( ( DLCOLON ) temp= identifier )* ) )
            // parser/TCS.g:1465:4: (temp= tcs_propertyreference ) 'instanceOf' (temp= identifier ( ( DLCOLON ) temp= identifier )* )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76B972B91AFC11DF8D94E3828D1504C0");
            }
            // parser/TCS.g:1465:63: (temp= tcs_propertyreference )
            // parser/TCS.g:1465:65: temp= tcs_propertyreference
            {
            pushFollow(FOLLOW_tcs_propertyreference_in_tcs_instanceofexp8119);
            temp=tcs_propertyreference();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "propertyReference", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76B972BA1AFC11DF9B9DE3828D1504C0");
            }
            match(input,79,FOLLOW_79_in_tcs_instanceofexp8125); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76B972BF1AFC11DFAF55E3828D1504C0");
            }
            // parser/TCS.g:1465:301: (temp= identifier ( ( DLCOLON ) temp= identifier )* )
            // parser/TCS.g:1465:303: temp= identifier ( ( DLCOLON ) temp= identifier )*
            {
            pushFollow(FOLLOW_identifier_in_tcs_instanceofexp8132);
            temp=identifier();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "supertype", temp);
            }
            // parser/TCS.g:1465:358: ( ( DLCOLON ) temp= identifier )*
            loop135:
            do {
                int alt135=2;
                int LA135_0 = input.LA(1);

                if ( (LA135_0==DLCOLON) ) {
                    alt135=1;
                }


                switch (alt135) {
            	case 1 :
            	    // parser/TCS.g:1465:359: ( DLCOLON ) temp= identifier
            	    {
            	    if ( state.backtracking==0 ) {
            	      _enterSepSeq();
            	    }
            	    // parser/TCS.g:1465:376: ( DLCOLON )
            	    // parser/TCS.g:1465:377: DLCOLON
            	    {
            	    if ( state.backtracking==0 ) {
            	      _beforeSeqEl("E0DCF6CD76B972BC1AFC11DF829CE3828D1504C0");
            	    }
            	    match(input,DLCOLON,FOLLOW_DLCOLON_in_tcs_instanceofexp8141); if (state.failed) return ret2;
            	    if ( state.backtracking==0 ) {
            	      _afterSeqEl();
            	    }

            	    }

            	    if ( state.backtracking==0 ) {
            	      _exitSepSeq();
            	    }
            	    pushFollow(FOLLOW_identifier_in_tcs_instanceofexp8149);
            	    temp=identifier();

            	    checkFollows();
            	    state._fsp--;
            	    if (state.failed) return ret2;
            	    if ( state.backtracking==0 ) {
            	      setProperty(ret, "supertype", temp);
            	    }

            	    }
            	    break;

            	default :
            	    break loop135;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_instanceofexp"


    // $ANTLR start "tcs_value"
    // parser/TCS.g:1473:1: tcs_value returns [Object ret2] : (ret= tcs_stringval | ret= tcs_integerval | ret= tcs_negativeintegerval | ret= tcs_enumliteralval ) ;
    public final Object tcs_value() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        try {
            // parser/TCS.g:1474:3: ( (ret= tcs_stringval | ret= tcs_integerval | ret= tcs_negativeintegerval | ret= tcs_enumliteralval ) )
            // parser/TCS.g:1475:3: (ret= tcs_stringval | ret= tcs_integerval | ret= tcs_negativeintegerval | ret= tcs_enumliteralval )
            {
            // parser/TCS.g:1475:3: (ret= tcs_stringval | ret= tcs_integerval | ret= tcs_negativeintegerval | ret= tcs_enumliteralval )
            int alt136=4;
            switch ( input.LA(1) ) {
            case STRING:
                {
                alt136=1;
                }
                break;
            case INT:
                {
                alt136=2;
                }
                break;
            case MINUS:
                {
                alt136=3;
                }
                break;
            case SHARP:
                {
                alt136=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 136, 0, input);

                throw nvae;
            }

            switch (alt136) {
                case 1 :
                    // parser/TCS.g:1475:4: ret= tcs_stringval
                    {
                    pushFollow(FOLLOW_tcs_stringval_in_tcs_value8192);
                    ret=tcs_stringval();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1476:5: ret= tcs_integerval
                    {
                    pushFollow(FOLLOW_tcs_integerval_in_tcs_value8200);
                    ret=tcs_integerval();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 3 :
                    // parser/TCS.g:1477:5: ret= tcs_negativeintegerval
                    {
                    pushFollow(FOLLOW_tcs_negativeintegerval_in_tcs_value8208);
                    ret=tcs_negativeintegerval();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 4 :
                    // parser/TCS.g:1478:5: ret= tcs_enumliteralval
                    {
                    pushFollow(FOLLOW_tcs_enumliteralval_in_tcs_value8216);
                    ret=tcs_enumliteralval();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              ret2=ret;
               
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_value"


    // $ANTLR start "tcs_stringval"
    // parser/TCS.g:1485:1: tcs_stringval returns [Object ret2] : ( (temp= stringSymbol ) ) ;
    public final Object tcs_stringval() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","StringVal");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1490:3: ( ( (temp= stringSymbol ) ) )
            // parser/TCS.g:1491:3: ( (temp= stringSymbol ) )
            {
            // parser/TCS.g:1491:3: ( (temp= stringSymbol ) )
            // parser/TCS.g:1491:4: (temp= stringSymbol )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76BBBCA41AFC11DFB3A8E3828D1504C0");
            }
            // parser/TCS.g:1491:63: (temp= stringSymbol )
            // parser/TCS.g:1491:65: temp= stringSymbol
            {
            pushFollow(FOLLOW_stringSymbol_in_tcs_stringval8250);
            temp=stringSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "symbol", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_stringval"


    // $ANTLR start "tcs_integerval"
    // parser/TCS.g:1499:1: tcs_integerval returns [Object ret2] : ( (temp= integerSymbol ) ) ;
    public final Object tcs_integerval() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","IntegerVal");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1504:3: ( ( (temp= integerSymbol ) ) )
            // parser/TCS.g:1505:3: ( (temp= integerSymbol ) )
            {
            // parser/TCS.g:1505:3: ( (temp= integerSymbol ) )
            // parser/TCS.g:1505:4: (temp= integerSymbol )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76BE2DA11AFC11DFCBFBE3828D1504C0");
            }
            // parser/TCS.g:1505:63: (temp= integerSymbol )
            // parser/TCS.g:1505:65: temp= integerSymbol
            {
            pushFollow(FOLLOW_integerSymbol_in_tcs_integerval8297);
            temp=integerSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "symbol", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_integerval"


    // $ANTLR start "tcs_negativeintegerval"
    // parser/TCS.g:1513:1: tcs_negativeintegerval returns [Object ret2] : ( MINUS (temp= integerSymbol ) ) ;
    public final Object tcs_negativeintegerval() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","NegativeIntegerVal");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1518:3: ( ( MINUS (temp= integerSymbol ) ) )
            // parser/TCS.g:1519:3: ( MINUS (temp= integerSymbol ) )
            {
            // parser/TCS.g:1519:3: ( MINUS (temp= integerSymbol ) )
            // parser/TCS.g:1519:4: MINUS (temp= integerSymbol )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76BE2DA51AFC11DFB1E7E3828D1504C0");
            }
            match(input,MINUS,FOLLOW_MINUS_in_tcs_negativeintegerval8341); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76BE2DA71AFC11DFAABCE3828D1504C0");
            }
            // parser/TCS.g:1519:145: (temp= integerSymbol )
            // parser/TCS.g:1519:147: temp= integerSymbol
            {
            pushFollow(FOLLOW_integerSymbol_in_tcs_negativeintegerval8349);
            temp=integerSymbol();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "symbol", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_negativeintegerval"


    // $ANTLR start "tcs_enumliteralval"
    // parser/TCS.g:1527:1: tcs_enumliteralval returns [Object ret2] : ( SHARP (temp= identifierOrKeyword ) ) ;
    public final Object tcs_enumliteralval() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","EnumLiteralVal");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1532:3: ( ( SHARP (temp= identifierOrKeyword ) ) )
            // parser/TCS.g:1533:3: ( SHARP (temp= identifierOrKeyword ) )
            {
            // parser/TCS.g:1533:3: ( SHARP (temp= identifierOrKeyword ) )
            // parser/TCS.g:1533:4: SHARP (temp= identifierOrKeyword )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76BE2DAB1AFC11DFA075E3828D1504C0");
            }
            match(input,SHARP,FOLLOW_SHARP_in_tcs_enumliteralval8393); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76BE2DAE1AFC11DFC972E3828D1504C0");
            }
            // parser/TCS.g:1533:145: (temp= identifierOrKeyword )
            // parser/TCS.g:1533:147: temp= identifierOrKeyword
            {
            pushFollow(FOLLOW_identifierOrKeyword_in_tcs_enumliteralval8401);
            temp=identifierOrKeyword();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "name", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_enumliteralval"


    // $ANTLR start "tcs_token"
    // parser/TCS.g:1541:1: tcs_token returns [Object ret2] : ( ( ( 'omitted' ) | ) 'token' (temp= identifier )? COLON (temp= tcs_orpattern ) SEMI ) ;
    public final Object tcs_token() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","Token");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1546:3: ( ( ( ( 'omitted' ) | ) 'token' (temp= identifier )? COLON (temp= tcs_orpattern ) SEMI ) )
            // parser/TCS.g:1547:3: ( ( ( 'omitted' ) | ) 'token' (temp= identifier )? COLON (temp= tcs_orpattern ) SEMI )
            {
            // parser/TCS.g:1547:3: ( ( ( 'omitted' ) | ) 'token' (temp= identifier )? COLON (temp= tcs_orpattern ) SEMI )
            // parser/TCS.g:1547:4: ( ( 'omitted' ) | ) 'token' (temp= identifier )? COLON (temp= tcs_orpattern ) SEMI
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C077951AFC11DF8DDEE3828D1504C0");
            }
            // parser/TCS.g:1547:64: ( ( 'omitted' ) | )
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==140) ) {
                alt137=1;
            }
            else if ( (LA137_0==110) ) {
                alt137=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 137, 0, input);

                throw nvae;
            }
            switch (alt137) {
                case 1 :
                    // parser/TCS.g:1547:65: ( 'omitted' )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:1547:81: ( 'omitted' )
                    // parser/TCS.g:1547:82: 'omitted'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76C077931AFC11DF8C11E3828D1504C0");
                    }
                    match(input,140,FOLLOW_140_in_tcs_token8450); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isOmitted", java.lang.Boolean.TRUE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1547:240: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "isOmitted", java.lang.Boolean.FALSE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C077961AFC11DFCDCFE3828D1504C0");
            }
            match(input,110,FOLLOW_110_in_tcs_token8468); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C077981AFC11DFC8ADE3828D1504C0");
            }
            // parser/TCS.g:1548:158: (temp= identifier )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==NAME) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // parser/TCS.g:1548:160: temp= identifier
                    {
                    pushFollow(FOLLOW_identifier_in_tcs_token8475);
                    temp=identifier();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "name", temp);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C077991AFC11DF9DBFE3828D1504C0");
            }
            match(input,COLON,FOLLOW_COLON_in_tcs_token8484); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C0779B1AFC11DFA2E7E3828D1504C0");
            }
            // parser/TCS.g:1548:369: (temp= tcs_orpattern )
            // parser/TCS.g:1548:371: temp= tcs_orpattern
            {
            pushFollow(FOLLOW_tcs_orpattern_in_tcs_token8492);
            temp=tcs_orpattern();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "pattern", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C0779C1AFC11DFA47DE3828D1504C0");
            }
            match(input,SEMI,FOLLOW_SEMI_in_tcs_token8499); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_token"


    // $ANTLR start "tcs_orpattern"
    // parser/TCS.g:1556:1: tcs_orpattern returns [Object ret2] : ( (temp= tcs_simplepattern ( ( PIPE ) temp= tcs_simplepattern )* )? ) ;
    public final Object tcs_orpattern() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","OrPattern");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1561:3: ( ( (temp= tcs_simplepattern ( ( PIPE ) temp= tcs_simplepattern )* )? ) )
            // parser/TCS.g:1562:3: ( (temp= tcs_simplepattern ( ( PIPE ) temp= tcs_simplepattern )* )? )
            {
            // parser/TCS.g:1562:3: ( (temp= tcs_simplepattern ( ( PIPE ) temp= tcs_simplepattern )* )? )
            // parser/TCS.g:1562:4: (temp= tcs_simplepattern ( ( PIPE ) temp= tcs_simplepattern )* )?
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C077A41AFC11DF828AE3828D1504C0");
            }
            // parser/TCS.g:1562:63: (temp= tcs_simplepattern ( ( PIPE ) temp= tcs_simplepattern )* )?
            int alt140=2;
            switch ( input.LA(1) ) {
                case STRING:
                case LSQUARE:
                case PIPE:
                case 101:
                case 102:
                case 123:
                    {
                    alt140=1;
                    }
                    break;
                case SEMI:
                    {
                    int LA140_2 = input.LA(2);

                    if ( (synpred266_TCS()) ) {
                        alt140=1;
                    }
                    }
                    break;
                case COMA:
                    {
                    int LA140_3 = input.LA(2);

                    if ( (synpred266_TCS()) ) {
                        alt140=1;
                    }
                    }
                    break;
                case RPAREN:
                    {
                    int LA140_4 = input.LA(2);

                    if ( (synpred266_TCS()) ) {
                        alt140=1;
                    }
                    }
                    break;
                case EOF:
                    {
                    int LA140_5 = input.LA(2);

                    if ( (synpred266_TCS()) ) {
                        alt140=1;
                    }
                    }
                    break;
            }

            switch (alt140) {
                case 1 :
                    // parser/TCS.g:1562:65: temp= tcs_simplepattern ( ( PIPE ) temp= tcs_simplepattern )*
                    {
                    pushFollow(FOLLOW_tcs_simplepattern_in_tcs_orpattern8544);
                    temp=tcs_simplepattern();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "simplePatterns", temp);
                    }
                    // parser/TCS.g:1562:132: ( ( PIPE ) temp= tcs_simplepattern )*
                    loop139:
                    do {
                        int alt139=2;
                        int LA139_0 = input.LA(1);

                        if ( (LA139_0==PIPE) ) {
                            alt139=1;
                        }


                        switch (alt139) {
                    	case 1 :
                    	    // parser/TCS.g:1562:133: ( PIPE ) temp= tcs_simplepattern
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	      _enterSepSeq();
                    	    }
                    	    // parser/TCS.g:1562:150: ( PIPE )
                    	    // parser/TCS.g:1562:151: PIPE
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	      _beforeSeqEl("E0DCF6CD76C077A11AFC11DFBECBE3828D1504C0");
                    	    }
                    	    match(input,PIPE,FOLLOW_PIPE_in_tcs_orpattern8553); if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      _afterSeqEl();
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	      _exitSepSeq();
                    	    }
                    	    pushFollow(FOLLOW_tcs_simplepattern_in_tcs_orpattern8561);
                    	    temp=tcs_simplepattern();

                    	    checkFollows();
                    	    state._fsp--;
                    	    if (state.failed) return ret2;
                    	    if ( state.backtracking==0 ) {
                    	      setProperty(ret, "simplePatterns", temp);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop139;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_orpattern"


    // $ANTLR start "tcs_simplepattern"
    // parser/TCS.g:1570:1: tcs_simplepattern returns [Object ret2] : (ret= tcs_rulepattern | ret= tcs_stringpattern | ret= tcs_classpattern ) ;
    public final Object tcs_simplepattern() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        try {
            // parser/TCS.g:1571:3: ( (ret= tcs_rulepattern | ret= tcs_stringpattern | ret= tcs_classpattern ) )
            // parser/TCS.g:1572:3: (ret= tcs_rulepattern | ret= tcs_stringpattern | ret= tcs_classpattern )
            {
            // parser/TCS.g:1572:3: (ret= tcs_rulepattern | ret= tcs_stringpattern | ret= tcs_classpattern )
            int alt141=3;
            switch ( input.LA(1) ) {
            case 101:
            case 102:
            case 123:
                {
                alt141=1;
                }
                break;
            case EOF:
            case STRING:
            case RPAREN:
            case SEMI:
            case COMA:
            case PIPE:
                {
                alt141=2;
                }
                break;
            case LSQUARE:
                {
                alt141=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 141, 0, input);

                throw nvae;
            }

            switch (alt141) {
                case 1 :
                    // parser/TCS.g:1572:4: ret= tcs_rulepattern
                    {
                    pushFollow(FOLLOW_tcs_rulepattern_in_tcs_simplepattern8606);
                    ret=tcs_rulepattern();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1573:5: ret= tcs_stringpattern
                    {
                    pushFollow(FOLLOW_tcs_stringpattern_in_tcs_simplepattern8614);
                    ret=tcs_stringpattern();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 3 :
                    // parser/TCS.g:1574:5: ret= tcs_classpattern
                    {
                    pushFollow(FOLLOW_tcs_classpattern_in_tcs_simplepattern8622);
                    ret=tcs_classpattern();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              ret2=ret;
               
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_simplepattern"


    // $ANTLR start "tcs_rulepattern"
    // parser/TCS.g:1581:1: tcs_rulepattern returns [Object ret2] : ( (temp= tcs_rule ) ) ;
    public final Object tcs_rulepattern() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","RulePattern");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1586:3: ( ( (temp= tcs_rule ) ) )
            // parser/TCS.g:1587:3: ( (temp= tcs_rule ) )
            {
            // parser/TCS.g:1587:3: ( (temp= tcs_rule ) )
            // parser/TCS.g:1587:4: (temp= tcs_rule )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C2E8931AFC11DF962EE3828D1504C0");
            }
            // parser/TCS.g:1587:63: (temp= tcs_rule )
            // parser/TCS.g:1587:65: temp= tcs_rule
            {
            pushFollow(FOLLOW_tcs_rule_in_tcs_rulepattern8656);
            temp=tcs_rule();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "rule", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_rulepattern"


    // $ANTLR start "tcs_rule"
    // parser/TCS.g:1595:1: tcs_rule returns [Object ret2] : (ret= tcs_wordrule | ret= tcs_endoflinerule | ret= tcs_multilinerule ) ;
    public final Object tcs_rule() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        try {
            // parser/TCS.g:1596:3: ( (ret= tcs_wordrule | ret= tcs_endoflinerule | ret= tcs_multilinerule ) )
            // parser/TCS.g:1597:3: (ret= tcs_wordrule | ret= tcs_endoflinerule | ret= tcs_multilinerule )
            {
            // parser/TCS.g:1597:3: (ret= tcs_wordrule | ret= tcs_endoflinerule | ret= tcs_multilinerule )
            int alt142=3;
            switch ( input.LA(1) ) {
            case 102:
                {
                alt142=1;
                }
                break;
            case 123:
                {
                alt142=2;
                }
                break;
            case 101:
                {
                alt142=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 142, 0, input);

                throw nvae;
            }

            switch (alt142) {
                case 1 :
                    // parser/TCS.g:1597:4: ret= tcs_wordrule
                    {
                    pushFollow(FOLLOW_tcs_wordrule_in_tcs_rule8696);
                    ret=tcs_wordrule();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1598:5: ret= tcs_endoflinerule
                    {
                    pushFollow(FOLLOW_tcs_endoflinerule_in_tcs_rule8704);
                    ret=tcs_endoflinerule();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 3 :
                    // parser/TCS.g:1599:5: ret= tcs_multilinerule
                    {
                    pushFollow(FOLLOW_tcs_multilinerule_in_tcs_rule8712);
                    ret=tcs_multilinerule();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              ret2=ret;
               
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_rule"


    // $ANTLR start "tcs_wordrule"
    // parser/TCS.g:1606:1: tcs_wordrule returns [Object ret2] : ( 'word' LPAREN 'start' EQ (temp= tcs_orpattern ) COMA 'part' EQ (temp= tcs_orpattern ) ( ( COMA 'end' EQ (temp= tcs_orpattern ) ) | ) RPAREN ) ;
    public final Object tcs_wordrule() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","WordRule");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1611:3: ( ( 'word' LPAREN 'start' EQ (temp= tcs_orpattern ) COMA 'part' EQ (temp= tcs_orpattern ) ( ( COMA 'end' EQ (temp= tcs_orpattern ) ) | ) RPAREN ) )
            // parser/TCS.g:1612:3: ( 'word' LPAREN 'start' EQ (temp= tcs_orpattern ) COMA 'part' EQ (temp= tcs_orpattern ) ( ( COMA 'end' EQ (temp= tcs_orpattern ) ) | ) RPAREN )
            {
            // parser/TCS.g:1612:3: ( 'word' LPAREN 'start' EQ (temp= tcs_orpattern ) COMA 'part' EQ (temp= tcs_orpattern ) ( ( COMA 'end' EQ (temp= tcs_orpattern ) ) | ) RPAREN )
            // parser/TCS.g:1612:4: 'word' LPAREN 'start' EQ (temp= tcs_orpattern ) COMA 'part' EQ (temp= tcs_orpattern ) ( ( COMA 'end' EQ (temp= tcs_orpattern ) ) | ) RPAREN
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C2E8991AFC11DFBD44E3828D1504C0");
            }
            match(input,102,FOLLOW_102_in_tcs_wordrule8742); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C2E89A1AFC11DFB108E3828D1504C0");
            }
            match(input,LPAREN,FOLLOW_LPAREN_in_tcs_wordrule8746); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C2E89B1AFC11DFC50FE3828D1504C0");
            }
            match(input,90,FOLLOW_90_in_tcs_wordrule8750); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C2E89C1AFC11DFA067E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_wordrule8754); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C2E89E1AFC11DFB99FE3828D1504C0");
            }
            // parser/TCS.g:1612:388: (temp= tcs_orpattern )
            // parser/TCS.g:1612:390: temp= tcs_orpattern
            {
            pushFollow(FOLLOW_tcs_orpattern_in_tcs_wordrule8762);
            temp=tcs_orpattern();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "start", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C2E89F1AFC11DF8522E3828D1504C0");
            }
            match(input,COMA,FOLLOW_COMA_in_tcs_wordrule8769); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C2E8A01AFC11DFCB27E3828D1504C0");
            }
            match(input,65,FOLLOW_65_in_tcs_wordrule8773); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C2E8A11AFC11DFA70AE3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_wordrule8777); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C2E8A31AFC11DFB535E3828D1504C0");
            }
            // parser/TCS.g:1612:760: (temp= tcs_orpattern )
            // parser/TCS.g:1612:762: temp= tcs_orpattern
            {
            pushFollow(FOLLOW_tcs_orpattern_in_tcs_wordrule8785);
            temp=tcs_orpattern();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "part", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C559971AFC11DFB877E3828D1504C0");
            }
            // parser/TCS.g:1612:891: ( ( COMA 'end' EQ (temp= tcs_orpattern ) ) | )
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==COMA) ) {
                alt143=1;
            }
            else if ( (LA143_0==RPAREN) ) {
                alt143=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 143, 0, input);

                throw nvae;
            }
            switch (alt143) {
                case 1 :
                    // parser/TCS.g:1612:892: ( COMA 'end' EQ (temp= tcs_orpattern ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:1612:908: ( COMA 'end' EQ (temp= tcs_orpattern ) )
                    // parser/TCS.g:1612:909: COMA 'end' EQ (temp= tcs_orpattern )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76C559911AFC11DF9AEEE3828D1504C0");
                    }
                    match(input,COMA,FOLLOW_COMA_in_tcs_wordrule8798); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76C559921AFC11DF903BE3828D1504C0");
                    }
                    match(input,69,FOLLOW_69_in_tcs_wordrule8802); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76C559931AFC11DFCCD5E3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_wordrule8806); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76C559951AFC11DFA0EFE3828D1504C0");
                    }
                    // parser/TCS.g:1612:1208: (temp= tcs_orpattern )
                    // parser/TCS.g:1612:1210: temp= tcs_orpattern
                    {
                    pushFollow(FOLLOW_tcs_orpattern_in_tcs_wordrule8814);
                    temp=tcs_orpattern();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "end", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1612:1296: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C559981AFC11DFCEC0E3828D1504C0");
            }
            match(input,RPAREN,FOLLOW_RPAREN_in_tcs_wordrule8834); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_wordrule"


    // $ANTLR start "tcs_endoflinerule"
    // parser/TCS.g:1621:1: tcs_endoflinerule returns [Object ret2] : ( 'endOfLine' LPAREN 'start' EQ ( ( 'drop' ) | ) (temp= tcs_stringpattern ) RPAREN ) ;
    public final Object tcs_endoflinerule() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","EndOfLineRule");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1626:3: ( ( 'endOfLine' LPAREN 'start' EQ ( ( 'drop' ) | ) (temp= tcs_stringpattern ) RPAREN ) )
            // parser/TCS.g:1627:3: ( 'endOfLine' LPAREN 'start' EQ ( ( 'drop' ) | ) (temp= tcs_stringpattern ) RPAREN )
            {
            // parser/TCS.g:1627:3: ( 'endOfLine' LPAREN 'start' EQ ( ( 'drop' ) | ) (temp= tcs_stringpattern ) RPAREN )
            // parser/TCS.g:1627:4: 'endOfLine' LPAREN 'start' EQ ( ( 'drop' ) | ) (temp= tcs_stringpattern ) RPAREN
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C5599C1AFC11DF9F4DE3828D1504C0");
            }
            match(input,123,FOLLOW_123_in_tcs_endoflinerule8875); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C5599D1AFC11DFC8EEE3828D1504C0");
            }
            match(input,LPAREN,FOLLOW_LPAREN_in_tcs_endoflinerule8879); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C5599E1AFC11DFA3E0E3828D1504C0");
            }
            match(input,90,FOLLOW_90_in_tcs_endoflinerule8883); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C5599F1AFC11DFB311E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_endoflinerule8887); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C559A51AFC11DF8528E3828D1504C0");
            }
            // parser/TCS.g:1627:394: ( ( 'drop' ) | )
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==83) ) {
                alt144=1;
            }
            else if ( (LA144_0==EOF||LA144_0==STRING||LA144_0==RPAREN||LA144_0==SEMI||LA144_0==COMA||LA144_0==PIPE) ) {
                alt144=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 144, 0, input);

                throw nvae;
            }
            switch (alt144) {
                case 1 :
                    // parser/TCS.g:1627:395: ( 'drop' )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:1627:411: ( 'drop' )
                    // parser/TCS.g:1627:412: 'drop'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76C559A31AFC11DFB30DE3828D1504C0");
                    }
                    match(input,83,FOLLOW_83_in_tcs_endoflinerule8897); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "dropStart", java.lang.Boolean.TRUE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1627:567: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "dropStart", java.lang.Boolean.FALSE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C559A71AFC11DF9CA4E3828D1504C0");
            }
            // parser/TCS.g:1628:76: (temp= tcs_stringpattern )
            // parser/TCS.g:1628:78: temp= tcs_stringpattern
            {
            pushFollow(FOLLOW_tcs_stringpattern_in_tcs_endoflinerule8919);
            temp=tcs_stringpattern();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "start", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C559A81AFC11DF95E0E3828D1504C0");
            }
            match(input,RPAREN,FOLLOW_RPAREN_in_tcs_endoflinerule8926); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_endoflinerule"


    // $ANTLR start "tcs_multilinerule"
    // parser/TCS.g:1636:1: tcs_multilinerule returns [Object ret2] : ( 'multiLine' LPAREN 'start' EQ ( ( 'drop' ) | ) (temp= tcs_stringpattern ) COMA 'end' EQ ( ( 'drop' ) | ) (temp= tcs_stringpattern ) ( ( COMA 'esc' EQ (temp= tcs_stringpattern ) ( ( COMA LPAREN (temp= tcs_mapping ( ( COMA ) temp= tcs_mapping )* )? RPAREN ) | ) ) | ) RPAREN ) ;
    public final Object tcs_multilinerule() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","MultiLineRule");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1641:3: ( ( 'multiLine' LPAREN 'start' EQ ( ( 'drop' ) | ) (temp= tcs_stringpattern ) COMA 'end' EQ ( ( 'drop' ) | ) (temp= tcs_stringpattern ) ( ( COMA 'esc' EQ (temp= tcs_stringpattern ) ( ( COMA LPAREN (temp= tcs_mapping ( ( COMA ) temp= tcs_mapping )* )? RPAREN ) | ) ) | ) RPAREN ) )
            // parser/TCS.g:1642:3: ( 'multiLine' LPAREN 'start' EQ ( ( 'drop' ) | ) (temp= tcs_stringpattern ) COMA 'end' EQ ( ( 'drop' ) | ) (temp= tcs_stringpattern ) ( ( COMA 'esc' EQ (temp= tcs_stringpattern ) ( ( COMA LPAREN (temp= tcs_mapping ( ( COMA ) temp= tcs_mapping )* )? RPAREN ) | ) ) | ) RPAREN )
            {
            // parser/TCS.g:1642:3: ( 'multiLine' LPAREN 'start' EQ ( ( 'drop' ) | ) (temp= tcs_stringpattern ) COMA 'end' EQ ( ( 'drop' ) | ) (temp= tcs_stringpattern ) ( ( COMA 'esc' EQ (temp= tcs_stringpattern ) ( ( COMA LPAREN (temp= tcs_mapping ( ( COMA ) temp= tcs_mapping )* )? RPAREN ) | ) ) | ) RPAREN )
            // parser/TCS.g:1642:4: 'multiLine' LPAREN 'start' EQ ( ( 'drop' ) | ) (temp= tcs_stringpattern ) COMA 'end' EQ ( ( 'drop' ) | ) (temp= tcs_stringpattern ) ( ( COMA 'esc' EQ (temp= tcs_stringpattern ) ( ( COMA LPAREN (temp= tcs_mapping ( ( COMA ) temp= tcs_mapping )* )? RPAREN ) | ) ) | ) RPAREN
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C7A3801AFC11DFB6EDE3828D1504C0");
            }
            match(input,101,FOLLOW_101_in_tcs_multilinerule8967); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C7A3811AFC11DFB923E3828D1504C0");
            }
            match(input,LPAREN,FOLLOW_LPAREN_in_tcs_multilinerule8971); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C7A3821AFC11DF9210E3828D1504C0");
            }
            match(input,90,FOLLOW_90_in_tcs_multilinerule8975); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C7A3831AFC11DFC541E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_multilinerule8979); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C7A3891AFC11DFB9A4E3828D1504C0");
            }
            // parser/TCS.g:1642:394: ( ( 'drop' ) | )
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==83) ) {
                alt145=1;
            }
            else if ( (LA145_0==EOF||LA145_0==STRING||LA145_0==RPAREN||LA145_0==SEMI||LA145_0==COMA||LA145_0==PIPE) ) {
                alt145=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 145, 0, input);

                throw nvae;
            }
            switch (alt145) {
                case 1 :
                    // parser/TCS.g:1642:395: ( 'drop' )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:1642:411: ( 'drop' )
                    // parser/TCS.g:1642:412: 'drop'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76C7A3871AFC11DFB3F5E3828D1504C0");
                    }
                    match(input,83,FOLLOW_83_in_tcs_multilinerule8989); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "dropStart", java.lang.Boolean.TRUE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1642:567: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "dropStart", java.lang.Boolean.FALSE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C7A38B1AFC11DF8051E3828D1504C0");
            }
            // parser/TCS.g:1643:76: (temp= tcs_stringpattern )
            // parser/TCS.g:1643:78: temp= tcs_stringpattern
            {
            pushFollow(FOLLOW_tcs_stringpattern_in_tcs_multilinerule9011);
            temp=tcs_stringpattern();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "start", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C7A38C1AFC11DFB7A6E3828D1504C0");
            }
            match(input,COMA,FOLLOW_COMA_in_tcs_multilinerule9018); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C7A38D1AFC11DFCCDEE3828D1504C0");
            }
            match(input,69,FOLLOW_69_in_tcs_multilinerule9022); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C7A38E1AFC11DFCEE2E3828D1504C0");
            }
            match(input,EQ,FOLLOW_EQ_in_tcs_multilinerule9026); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C7A3941AFC11DFCFFCE3828D1504C0");
            }
            // parser/TCS.g:1643:452: ( ( 'drop' ) | )
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==83) ) {
                alt146=1;
            }
            else if ( (LA146_0==EOF||LA146_0==STRING||LA146_0==RPAREN||LA146_0==SEMI||LA146_0==COMA||LA146_0==PIPE) ) {
                alt146=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 146, 0, input);

                throw nvae;
            }
            switch (alt146) {
                case 1 :
                    // parser/TCS.g:1643:453: ( 'drop' )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:1643:469: ( 'drop' )
                    // parser/TCS.g:1643:470: 'drop'
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76C7A3921AFC11DF9011E3828D1504C0");
                    }
                    match(input,83,FOLLOW_83_in_tcs_multilinerule9036); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      setProperty(ret, "dropEnd", java.lang.Boolean.TRUE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1643:623: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "dropEnd", java.lang.Boolean.FALSE);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76C7A3961AFC11DFBC50E3828D1504C0");
            }
            // parser/TCS.g:1644:76: (temp= tcs_stringpattern )
            // parser/TCS.g:1644:78: temp= tcs_stringpattern
            {
            pushFollow(FOLLOW_tcs_stringpattern_in_tcs_multilinerule9058);
            temp=tcs_stringpattern();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "end", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76CA14851AFC11DF84BCE3828D1504C0");
            }
            // parser/TCS.g:1644:210: ( ( COMA 'esc' EQ (temp= tcs_stringpattern ) ( ( COMA LPAREN (temp= tcs_mapping ( ( COMA ) temp= tcs_mapping )* )? RPAREN ) | ) ) | )
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==COMA) ) {
                alt150=1;
            }
            else if ( (LA150_0==RPAREN) ) {
                alt150=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 150, 0, input);

                throw nvae;
            }
            switch (alt150) {
                case 1 :
                    // parser/TCS.g:1644:211: ( COMA 'esc' EQ (temp= tcs_stringpattern ) ( ( COMA LPAREN (temp= tcs_mapping ( ( COMA ) temp= tcs_mapping )* )? RPAREN ) | ) )
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(0);
                    }
                    // parser/TCS.g:1644:227: ( COMA 'esc' EQ (temp= tcs_stringpattern ) ( ( COMA LPAREN (temp= tcs_mapping ( ( COMA ) temp= tcs_mapping )* )? RPAREN ) | ) )
                    // parser/TCS.g:1644:228: COMA 'esc' EQ (temp= tcs_stringpattern ) ( ( COMA LPAREN (temp= tcs_mapping ( ( COMA ) temp= tcs_mapping )* )? RPAREN ) | )
                    {
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76C7A39A1AFC11DFBC68E3828D1504C0");
                    }
                    match(input,COMA,FOLLOW_COMA_in_tcs_multilinerule9071); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76C7A39B1AFC11DFC7A8E3828D1504C0");
                    }
                    match(input,103,FOLLOW_103_in_tcs_multilinerule9075); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76C7A39C1AFC11DF8DB0E3828D1504C0");
                    }
                    match(input,EQ,FOLLOW_EQ_in_tcs_multilinerule9079); if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76C7A39E1AFC11DFB236E3828D1504C0");
                    }
                    // parser/TCS.g:1644:527: (temp= tcs_stringpattern )
                    // parser/TCS.g:1644:529: temp= tcs_stringpattern
                    {
                    pushFollow(FOLLOW_tcs_stringpattern_in_tcs_multilinerule9087);
                    temp=tcs_stringpattern();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "esc", temp);
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }
                    if ( state.backtracking==0 ) {
                      _beforeSeqEl("E0DCF6CD76CA14831AFC11DFA3BDE3828D1504C0");
                    }
                    // parser/TCS.g:1644:661: ( ( COMA LPAREN (temp= tcs_mapping ( ( COMA ) temp= tcs_mapping )* )? RPAREN ) | )
                    int alt149=2;
                    int LA149_0 = input.LA(1);

                    if ( (LA149_0==COMA) ) {
                        alt149=1;
                    }
                    else if ( (LA149_0==RPAREN) ) {
                        alt149=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret2;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 149, 0, input);

                        throw nvae;
                    }
                    switch (alt149) {
                        case 1 :
                            // parser/TCS.g:1644:662: ( COMA LPAREN (temp= tcs_mapping ( ( COMA ) temp= tcs_mapping )* )? RPAREN )
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(0);
                            }
                            // parser/TCS.g:1644:678: ( COMA LPAREN (temp= tcs_mapping ( ( COMA ) temp= tcs_mapping )* )? RPAREN )
                            // parser/TCS.g:1644:679: COMA LPAREN (temp= tcs_mapping ( ( COMA ) temp= tcs_mapping )* )? RPAREN
                            {
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD76C7A3A21AFC11DF8017E3828D1504C0");
                            }
                            match(input,COMA,FOLLOW_COMA_in_tcs_multilinerule9100); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD76C7A3A31AFC11DF8400E3828D1504C0");
                            }
                            match(input,LPAREN,FOLLOW_LPAREN_in_tcs_multilinerule9105); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD76CA14801AFC11DFB932E3828D1504C0");
                            }
                            // parser/TCS.g:1644:902: (temp= tcs_mapping ( ( COMA ) temp= tcs_mapping )* )?
                            int alt148=2;
                            int LA148_0 = input.LA(1);

                            if ( (LA148_0==NAME||LA148_0==POINT||LA148_0==67||LA148_0==94) ) {
                                alt148=1;
                            }
                            switch (alt148) {
                                case 1 :
                                    // parser/TCS.g:1644:904: temp= tcs_mapping ( ( COMA ) temp= tcs_mapping )*
                                    {
                                    pushFollow(FOLLOW_tcs_mapping_in_tcs_multilinerule9113);
                                    temp=tcs_mapping();

                                    checkFollows();
                                    state._fsp--;
                                    if (state.failed) return ret2;
                                    if ( state.backtracking==0 ) {
                                      setProperty(ret, "escMappings", temp);
                                    }
                                    // parser/TCS.g:1644:962: ( ( COMA ) temp= tcs_mapping )*
                                    loop147:
                                    do {
                                        int alt147=2;
                                        int LA147_0 = input.LA(1);

                                        if ( (LA147_0==COMA) ) {
                                            alt147=1;
                                        }


                                        switch (alt147) {
                                    	case 1 :
                                    	    // parser/TCS.g:1644:963: ( COMA ) temp= tcs_mapping
                                    	    {
                                    	    if ( state.backtracking==0 ) {
                                    	      _enterSepSeq();
                                    	    }
                                    	    // parser/TCS.g:1644:980: ( COMA )
                                    	    // parser/TCS.g:1644:981: COMA
                                    	    {
                                    	    if ( state.backtracking==0 ) {
                                    	      _beforeSeqEl("E0DCF6CD76C7A3A51AFC11DF90D0E3828D1504C0");
                                    	    }
                                    	    match(input,COMA,FOLLOW_COMA_in_tcs_multilinerule9122); if (state.failed) return ret2;
                                    	    if ( state.backtracking==0 ) {
                                    	      _afterSeqEl();
                                    	    }

                                    	    }

                                    	    if ( state.backtracking==0 ) {
                                    	      _exitSepSeq();
                                    	    }
                                    	    pushFollow(FOLLOW_tcs_mapping_in_tcs_multilinerule9130);
                                    	    temp=tcs_mapping();

                                    	    checkFollows();
                                    	    state._fsp--;
                                    	    if (state.failed) return ret2;
                                    	    if ( state.backtracking==0 ) {
                                    	      setProperty(ret, "escMappings", temp);
                                    	    }

                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop147;
                                        }
                                    } while (true);


                                    }
                                    break;

                            }

                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }
                            if ( state.backtracking==0 ) {
                              _beforeSeqEl("E0DCF6CD76CA14811AFC11DFCC0BE3828D1504C0");
                            }
                            match(input,RPAREN,FOLLOW_RPAREN_in_tcs_multilinerule9142); if (state.failed) return ret2;
                            if ( state.backtracking==0 ) {
                              _afterSeqEl();
                            }

                            }

                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;
                        case 2 :
                            // parser/TCS.g:1644:1260: 
                            {
                            if ( state.backtracking==0 ) {
                              _enterAlt(1);
                            }
                            if ( state.backtracking==0 ) {
                              _exitAlt();
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      _afterSeqEl();
                    }

                    }

                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1645:35: 
                    {
                    if ( state.backtracking==0 ) {
                      _enterAlt(1);
                    }
                    if ( state.backtracking==0 ) {
                      _exitAlt();
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76CA14861AFC11DFC68FE3828D1504C0");
            }
            match(input,RPAREN,FOLLOW_RPAREN_in_tcs_multilinerule9173); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_multilinerule"


    // $ANTLR start "tcs_mapping"
    // parser/TCS.g:1654:1: tcs_mapping returns [Object ret2] : (ret= tcs_simplemapping | ret= tcs_wildcardmapping | ret= tcs_octalmapping | ret= tcs_hexadecimalmapping ) ;
    public final Object tcs_mapping() throws RecognitionException {

        Object ret2 = null;

        Object ret = null;


        try {
            // parser/TCS.g:1655:3: ( (ret= tcs_simplemapping | ret= tcs_wildcardmapping | ret= tcs_octalmapping | ret= tcs_hexadecimalmapping ) )
            // parser/TCS.g:1656:3: (ret= tcs_simplemapping | ret= tcs_wildcardmapping | ret= tcs_octalmapping | ret= tcs_hexadecimalmapping )
            {
            // parser/TCS.g:1656:3: (ret= tcs_simplemapping | ret= tcs_wildcardmapping | ret= tcs_octalmapping | ret= tcs_hexadecimalmapping )
            int alt151=4;
            switch ( input.LA(1) ) {
            case NAME:
                {
                alt151=1;
                }
                break;
            case POINT:
                {
                alt151=2;
                }
                break;
            case 67:
                {
                alt151=3;
                }
                break;
            case 94:
                {
                alt151=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ret2;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;
            }

            switch (alt151) {
                case 1 :
                    // parser/TCS.g:1656:4: ret= tcs_simplemapping
                    {
                    pushFollow(FOLLOW_tcs_simplemapping_in_tcs_mapping9211);
                    ret=tcs_simplemapping();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 2 :
                    // parser/TCS.g:1657:5: ret= tcs_wildcardmapping
                    {
                    pushFollow(FOLLOW_tcs_wildcardmapping_in_tcs_mapping9219);
                    ret=tcs_wildcardmapping();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 3 :
                    // parser/TCS.g:1658:5: ret= tcs_octalmapping
                    {
                    pushFollow(FOLLOW_tcs_octalmapping_in_tcs_mapping9227);
                    ret=tcs_octalmapping();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;
                case 4 :
                    // parser/TCS.g:1659:5: ret= tcs_hexadecimalmapping
                    {
                    pushFollow(FOLLOW_tcs_hexadecimalmapping_in_tcs_mapping9235);
                    ret=tcs_hexadecimalmapping();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              ret2=ret;
               
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ret2;
    }
    // $ANTLR end "tcs_mapping"


    // $ANTLR start "tcs_simplemapping"
    // parser/TCS.g:1666:1: tcs_simplemapping returns [Object ret2] : ( (temp= identifier ) RARROW (temp= identifier ) ) ;
    public final Object tcs_simplemapping() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","SimpleMapping");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1671:3: ( ( (temp= identifier ) RARROW (temp= identifier ) ) )
            // parser/TCS.g:1672:3: ( (temp= identifier ) RARROW (temp= identifier ) )
            {
            // parser/TCS.g:1672:3: ( (temp= identifier ) RARROW (temp= identifier ) )
            // parser/TCS.g:1672:4: (temp= identifier ) RARROW (temp= identifier )
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76CA148D1AFC11DFA182E3828D1504C0");
            }
            // parser/TCS.g:1672:63: (temp= identifier )
            // parser/TCS.g:1672:65: temp= identifier
            {
            pushFollow(FOLLOW_identifier_in_tcs_simplemapping9269);
            temp=identifier();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "key", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76CA148E1AFC11DF9B5BE3828D1504C0");
            }
            match(input,RARROW,FOLLOW_RARROW_in_tcs_simplemapping9276); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76CA14901AFC11DF8F7EE3828D1504C0");
            }
            // parser/TCS.g:1672:272: (temp= identifier )
            // parser/TCS.g:1672:274: temp= identifier
            {
            pushFollow(FOLLOW_identifier_in_tcs_simplemapping9284);
            temp=identifier();

            checkFollows();
            state._fsp--;
            if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              setProperty(ret, "value", temp);
            }

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_simplemapping"


    // $ANTLR start "tcs_wildcardmapping"
    // parser/TCS.g:1680:1: tcs_wildcardmapping returns [Object ret2] : ( POINT RARROW POINT ) ;
    public final Object tcs_wildcardmapping() throws RecognitionException {

        Object ret2 = null;

        List<String> metaType=list("TCS","WildcardMapping");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1685:3: ( ( POINT RARROW POINT ) )
            // parser/TCS.g:1686:3: ( POINT RARROW POINT )
            {
            // parser/TCS.g:1686:3: ( POINT RARROW POINT )
            // parser/TCS.g:1686:4: POINT RARROW POINT
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76CC5E721AFC11DFC5B2E3828D1504C0");
            }
            match(input,POINT,FOLLOW_POINT_in_tcs_wildcardmapping9328); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76CC5E731AFC11DF85D0E3828D1504C0");
            }
            match(input,RARROW,FOLLOW_RARROW_in_tcs_wildcardmapping9333); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76CC5E741AFC11DF97A3E3828D1504C0");
            }
            match(input,POINT,FOLLOW_POINT_in_tcs_wildcardmapping9338); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_wildcardmapping"


    // $ANTLR start "tcs_octalmapping"
    // parser/TCS.g:1694:1: tcs_octalmapping returns [Object ret2] : ( 'octal' ) ;
    public final Object tcs_octalmapping() throws RecognitionException {

        Object ret2 = null;

        List<String> metaType=list("TCS","OctalMapping");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1699:3: ( ( 'octal' ) )
            // parser/TCS.g:1700:3: ( 'octal' )
            {
            // parser/TCS.g:1700:3: ( 'octal' )
            // parser/TCS.g:1700:4: 'octal'
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76CC5E781AFC11DFCAE3E3828D1504C0");
            }
            match(input,67,FOLLOW_67_in_tcs_octalmapping9379); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_octalmapping"


    // $ANTLR start "tcs_hexadecimalmapping"
    // parser/TCS.g:1708:1: tcs_hexadecimalmapping returns [Object ret2] : ( 'hex' ) ;
    public final Object tcs_hexadecimalmapping() throws RecognitionException {

        Object ret2 = null;

        List<String> metaType=list("TCS","HexadecimalMapping");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1713:3: ( ( 'hex' ) )
            // parser/TCS.g:1714:3: ( 'hex' )
            {
            // parser/TCS.g:1714:3: ( 'hex' )
            // parser/TCS.g:1714:4: 'hex'
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76CECF701AFC11DFA751E3828D1504C0");
            }
            match(input,94,FOLLOW_94_in_tcs_hexadecimalmapping9419); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_hexadecimalmapping"


    // $ANTLR start "tcs_stringpattern"
    // parser/TCS.g:1722:1: tcs_stringpattern returns [Object ret2] : ( (temp= stringSymbol )? ) ;
    public final Object tcs_stringpattern() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","StringPattern");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1727:3: ( ( (temp= stringSymbol )? ) )
            // parser/TCS.g:1728:3: ( (temp= stringSymbol )? )
            {
            // parser/TCS.g:1728:3: ( (temp= stringSymbol )? )
            // parser/TCS.g:1728:4: (temp= stringSymbol )?
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76CECF761AFC11DF8096E3828D1504C0");
            }
            // parser/TCS.g:1728:63: (temp= stringSymbol )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==STRING) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // parser/TCS.g:1728:65: temp= stringSymbol
                    {
                    pushFollow(FOLLOW_stringSymbol_in_tcs_stringpattern9463);
                    temp=stringSymbol();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "name", temp);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_stringpattern"


    // $ANTLR start "tcs_classpattern"
    // parser/TCS.g:1736:1: tcs_classpattern returns [Object ret2] : ( LSQUARE (temp= identifier )? RSQUARE ) ;
    public final Object tcs_classpattern() throws RecognitionException {

        Object ret2 = null;

        Object temp = null;


        List<String> metaType=list("TCS","ClassPattern");
        onEnterTemplateRule(metaType);
        IModelElementProxy ret=(getBacktrackingLevel()==0) ? createModelElementProxy(metaType, false, false) : null;
        org.antlr.runtime.Token firstToken=input.LT(1);

        try {
            // parser/TCS.g:1741:3: ( ( LSQUARE (temp= identifier )? RSQUARE ) )
            // parser/TCS.g:1742:3: ( LSQUARE (temp= identifier )? RSQUARE )
            {
            // parser/TCS.g:1742:3: ( LSQUARE (temp= identifier )? RSQUARE )
            // parser/TCS.g:1742:4: LSQUARE (temp= identifier )? RSQUARE
            {
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76CECF7A1AFC11DF90BEE3828D1504C0");
            }
            match(input,LSQUARE,FOLLOW_LSQUARE_in_tcs_classpattern9509); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76CECF7C1AFC11DF91E9E3828D1504C0");
            }
            // parser/TCS.g:1742:147: (temp= identifier )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==NAME) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // parser/TCS.g:1742:149: temp= identifier
                    {
                    pushFollow(FOLLOW_identifier_in_tcs_classpattern9517);
                    temp=identifier();

                    checkFollows();
                    state._fsp--;
                    if (state.failed) return ret2;
                    if ( state.backtracking==0 ) {
                      setProperty(ret, "name", temp);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }
            if ( state.backtracking==0 ) {
              _beforeSeqEl("E0DCF6CD76CECF7D1AFC11DF8E2EE3828D1504C0");
            }
            match(input,RSQUARE,FOLLOW_RSQUARE_in_tcs_classpattern9526); if (state.failed) return ret2;
            if ( state.backtracking==0 ) {
              _afterSeqEl();
            }

            }

            if ( state.backtracking==0 ) {

              ret2 = commitCreation(ret, firstToken, false);

               
            }

            }

        }
        catch (Exception e) {
            handleExceptionInTemplateRule(e, firstToken, ret);
        }
        finally {
            onExitTemplateRule(metaType);
        }
        return ret2;
    }
    // $ANTLR end "tcs_classpattern"

    // $ANTLR start synpred95_TCS
    public final void synpred95_TCS_fragment() throws RecognitionException {   
        // parser/TCS.g:376:36: ( DLCOLON )
        // parser/TCS.g:376:37: DLCOLON
        {
        match(input,DLCOLON,FOLLOW_DLCOLON_in_synpred95_TCS1109); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred95_TCS

    // $ANTLR start synpred122_TCS
    public final void synpred122_TCS_fragment() throws RecognitionException {   
        Object temp = null;


        // parser/TCS.g:506:159: (temp= textblockdefinition_textblockdefinition )
        // parser/TCS.g:506:159: temp= textblockdefinition_textblockdefinition
        {
        pushFollow(FOLLOW_textblockdefinition_textblockdefinition_in_synpred122_TCS2047);
        temp=textblockdefinition_textblockdefinition();

        checkFollows();
        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred122_TCS

    // $ANTLR start synpred127_TCS
    public final void synpred127_TCS_fragment() throws RecognitionException {   
        Object temp = null;


        // parser/TCS.g:522:78: (temp= textblockdefinition_textblockdefinition )
        // parser/TCS.g:522:78: temp= textblockdefinition_textblockdefinition
        {
        pushFollow(FOLLOW_textblockdefinition_textblockdefinition_in_synpred127_TCS2207);
        temp=textblockdefinition_textblockdefinition();

        checkFollows();
        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred127_TCS

    // $ANTLR start synpred146_TCS
    public final void synpred146_TCS_fragment() throws RecognitionException {   
        Object temp = null;


        // parser/TCS.g:568:78: (temp= textblockdefinition_textblockdefinition )
        // parser/TCS.g:568:78: temp= textblockdefinition_textblockdefinition
        {
        pushFollow(FOLLOW_textblockdefinition_textblockdefinition_in_synpred146_TCS2922);
        temp=textblockdefinition_textblockdefinition();

        checkFollows();
        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred146_TCS

    // $ANTLR start synpred163_TCS
    public final void synpred163_TCS_fragment() throws RecognitionException {   
        Object temp = null;


        // parser/TCS.g:619:78: (temp= textblockdefinition_textblockdefinition )
        // parser/TCS.g:619:78: temp= textblockdefinition_textblockdefinition
        {
        pushFollow(FOLLOW_textblockdefinition_textblockdefinition_in_synpred163_TCS3610);
        temp=textblockdefinition_textblockdefinition();

        checkFollows();
        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred163_TCS

    // $ANTLR start synpred166_TCS
    public final void synpred166_TCS_fragment() throws RecognitionException {   
        Object temp = null;


        // parser/TCS.g:661:130: (temp= tcs_sequenceelement )
        // parser/TCS.g:661:130: temp= tcs_sequenceelement
        {
        pushFollow(FOLLOW_tcs_sequenceelement_in_synpred166_TCS3842);
        temp=tcs_sequenceelement();

        checkFollows();
        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred166_TCS

    // $ANTLR start synpred167_TCS
    public final void synpred167_TCS_fragment() throws RecognitionException {   
        Object temp = null;


        // parser/TCS.g:661:65: (temp= tcs_sequenceelement (temp= tcs_sequenceelement )* )
        // parser/TCS.g:661:65: temp= tcs_sequenceelement (temp= tcs_sequenceelement )*
        {
        pushFollow(FOLLOW_tcs_sequenceelement_in_synpred167_TCS3834);
        temp=tcs_sequenceelement();

        checkFollows();
        state._fsp--;
        if (state.failed) return ;
        // parser/TCS.g:661:128: (temp= tcs_sequenceelement )*
        loop173:
        do {
            int alt173=2;
            int LA173_0 = input.LA(1);

            if ( ((LA173_0>=NAME && LA173_0<=STRING)||LA173_0==LPAREN||LA173_0==RARROW||LA173_0==LT||LA173_0==LSQUARE||LA173_0==DLSQUARE||(LA173_0>=DOLLAR && LA173_0<=DLCURLY)||(LA173_0>=49 && LA173_0<=140)) ) {
                alt173=1;
            }


            switch (alt173) {
        	case 1 :
        	    // parser/TCS.g:661:130: temp= tcs_sequenceelement
        	    {
        	    pushFollow(FOLLOW_tcs_sequenceelement_in_synpred167_TCS3842);
        	    temp=tcs_sequenceelement();

        	    checkFollows();
        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop173;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred167_TCS

    // $ANTLR start synpred168_TCS
    public final void synpred168_TCS_fragment() throws RecognitionException {   
        Object ret = null;


        // parser/TCS.g:671:4: (ret= tcs_sequence__impl )
        // parser/TCS.g:671:4: ret= tcs_sequence__impl
        {
        pushFollow(FOLLOW_tcs_sequence__impl_in_synpred168_TCS3887);
        ret=tcs_sequence__impl();

        checkFollows();
        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred168_TCS

    // $ANTLR start synpred177_TCS
    public final void synpred177_TCS_fragment() throws RecognitionException {   
        Object temp = null;


        // parser/TCS.g:714:3648: (temp= identifierOrKeyword )
        // parser/TCS.g:714:3648: temp= identifierOrKeyword
        {
        pushFollow(FOLLOW_identifierOrKeyword_in_synpred177_TCS4091);
        temp=identifierOrKeyword();

        checkFollows();
        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred177_TCS

    // $ANTLR start synpred184_TCS
    public final void synpred184_TCS_fragment() throws RecognitionException {   
        Object temp = null;


        // parser/TCS.g:773:148: (temp= tcs_expression )
        // parser/TCS.g:773:148: temp= tcs_expression
        {
        pushFollow(FOLLOW_tcs_expression_in_synpred184_TCS4443);
        temp=tcs_expression();

        checkFollows();
        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred184_TCS

    // $ANTLR start synpred187_TCS
    public final void synpred187_TCS_fragment() throws RecognitionException {   
        Object temp = null;


        // parser/TCS.g:788:150: (temp= tcs_sequenceinalternative ( ( PIPE ) temp= tcs_sequenceinalternative )* )
        // parser/TCS.g:788:150: temp= tcs_sequenceinalternative ( ( PIPE ) temp= tcs_sequenceinalternative )*
        {
        pushFollow(FOLLOW_tcs_sequenceinalternative_in_synpred187_TCS4554);
        temp=tcs_sequenceinalternative();

        checkFollows();
        state._fsp--;
        if (state.failed) return ;
        // parser/TCS.g:788:220: ( ( PIPE ) temp= tcs_sequenceinalternative )*
        loop180:
        do {
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==PIPE) ) {
                alt180=1;
            }


            switch (alt180) {
        	case 1 :
        	    // parser/TCS.g:788:221: ( PIPE ) temp= tcs_sequenceinalternative
        	    {
        	    // parser/TCS.g:788:238: ( PIPE )
        	    // parser/TCS.g:788:239: PIPE
        	    {
        	    if ( state.backtracking==0 ) {
        	      _beforeSeqEl("E0DCF6CD76790E521AFC11DFC6F5E3828D1504C0");
        	    }
        	    match(input,PIPE,FOLLOW_PIPE_in_synpred187_TCS4563); if (state.failed) return ;

        	    }

        	    pushFollow(FOLLOW_tcs_sequenceinalternative_in_synpred187_TCS4571);
        	    temp=tcs_sequenceinalternative();

        	    checkFollows();
        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop180;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred187_TCS

    // $ANTLR start synpred190_TCS
    public final void synpred190_TCS_fragment() throws RecognitionException {   
        Object temp = null;


        // parser/TCS.g:804:143: (temp= tcs_sequenceelement )
        // parser/TCS.g:804:143: temp= tcs_sequenceelement
        {
        pushFollow(FOLLOW_tcs_sequenceelement_in_synpred190_TCS4707);
        temp=tcs_sequenceelement();

        checkFollows();
        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred190_TCS

    // $ANTLR start synpred191_TCS
    public final void synpred191_TCS_fragment() throws RecognitionException {   
        Object temp = null;


        // parser/TCS.g:804:78: (temp= tcs_sequenceelement (temp= tcs_sequenceelement )* )
        // parser/TCS.g:804:78: temp= tcs_sequenceelement (temp= tcs_sequenceelement )*
        {
        pushFollow(FOLLOW_tcs_sequenceelement_in_synpred191_TCS4699);
        temp=tcs_sequenceelement();

        checkFollows();
        state._fsp--;
        if (state.failed) return ;
        // parser/TCS.g:804:141: (temp= tcs_sequenceelement )*
        loop181:
        do {
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( ((LA181_0>=NAME && LA181_0<=STRING)||LA181_0==LPAREN||LA181_0==RARROW||LA181_0==LT||LA181_0==LSQUARE||LA181_0==DLSQUARE||(LA181_0>=DOLLAR && LA181_0<=DLCURLY)||(LA181_0>=49 && LA181_0<=140)) ) {
                alt181=1;
            }


            switch (alt181) {
        	case 1 :
        	    // parser/TCS.g:804:143: temp= tcs_sequenceelement
        	    {
        	    pushFollow(FOLLOW_tcs_sequenceelement_in_synpred191_TCS4707);
        	    temp=tcs_sequenceelement();

        	    checkFollows();
        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop181;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred191_TCS

    // $ANTLR start synpred199_TCS
    public final void synpred199_TCS_fragment() throws RecognitionException {   
        Object temp = null;


        // parser/TCS.g:897:375: ( ( COMA 'mode' EQ (temp= stringSymbol ) ) )
        // parser/TCS.g:897:375: ( COMA 'mode' EQ (temp= stringSymbol ) )
        {
        if ( state.backtracking==0 ) {
          _enterAlt(0);
        }
        // parser/TCS.g:897:391: ( COMA 'mode' EQ (temp= stringSymbol ) )
        // parser/TCS.g:897:392: COMA 'mode' EQ (temp= stringSymbol )
        {
        if ( state.backtracking==0 ) {
          _beforeSeqEl("E0DCF6CD7682AB611AFC11DFA19EE3828D1504C0");
        }
        match(input,COMA,FOLLOW_COMA_in_synpred199_TCS5223); if (state.failed) return ;
        match(input,119,FOLLOW_119_in_synpred199_TCS5227); if (state.failed) return ;
        match(input,EQ,FOLLOW_EQ_in_synpred199_TCS5231); if (state.failed) return ;
        // parser/TCS.g:897:692: (temp= stringSymbol )
        // parser/TCS.g:897:694: temp= stringSymbol
        {
        pushFollow(FOLLOW_stringSymbol_in_synpred199_TCS5239);
        temp=stringSymbol();

        checkFollows();
        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred199_TCS

    // $ANTLR start synpred266_TCS
    public final void synpred266_TCS_fragment() throws RecognitionException {   
        Object temp = null;


        // parser/TCS.g:1562:65: (temp= tcs_simplepattern ( ( PIPE ) temp= tcs_simplepattern )* )
        // parser/TCS.g:1562:65: temp= tcs_simplepattern ( ( PIPE ) temp= tcs_simplepattern )*
        {
        pushFollow(FOLLOW_tcs_simplepattern_in_synpred266_TCS8544);
        temp=tcs_simplepattern();

        checkFollows();
        state._fsp--;
        if (state.failed) return ;
        // parser/TCS.g:1562:132: ( ( PIPE ) temp= tcs_simplepattern )*
        loop193:
        do {
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( (LA193_0==PIPE) ) {
                alt193=1;
            }


            switch (alt193) {
        	case 1 :
        	    // parser/TCS.g:1562:133: ( PIPE ) temp= tcs_simplepattern
        	    {
        	    // parser/TCS.g:1562:150: ( PIPE )
        	    // parser/TCS.g:1562:151: PIPE
        	    {
        	    if ( state.backtracking==0 ) {
        	      _beforeSeqEl("E0DCF6CD76C077A11AFC11DFBECBE3828D1504C0");
        	    }
        	    match(input,PIPE,FOLLOW_PIPE_in_synpred266_TCS8553); if (state.failed) return ;

        	    }

        	    pushFollow(FOLLOW_tcs_simplepattern_in_synpred266_TCS8561);
        	    temp=tcs_simplepattern();

        	    checkFollows();
        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop193;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred266_TCS

    // Delegated rules

    public final boolean synpred184_TCS() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred184_TCS_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred190_TCS() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred190_TCS_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_TCS() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_TCS_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred167_TCS() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred167_TCS_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred187_TCS() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred187_TCS_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_TCS() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_TCS_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_TCS() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_TCS_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred146_TCS() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_TCS_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred177_TCS() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred177_TCS_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred266_TCS() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred266_TCS_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred199_TCS() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred199_TCS_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred163_TCS() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_TCS_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred191_TCS() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred191_TCS_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_TCS() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_TCS_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_TCS() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_TCS_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA29 dfa29 = new DFA29(this);
    protected DFA34 dfa34 = new DFA34(this);
    protected DFA53 dfa53 = new DFA53(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA134 dfa134 = new DFA134(this);
    static final String DFA29_eotS =
        "\20\uffff";
    static final String DFA29_eofS =
        "\1\15\17\uffff";
    static final String DFA29_minS =
        "\1\15\15\0\2\uffff";
    static final String DFA29_maxS =
        "\1\u008c\15\0\2\uffff";
    static final String DFA29_acceptS =
        "\16\uffff\1\1\1\2";
    static final String DFA29_specialS =
        "\1\uffff\1\14\1\1\1\5\1\2\1\12\1\13\1\6\1\11\1\4\1\0\1\10\1\7\1"+
        "\3\2\uffff}>";
    static final String[] DFA29_transitionS = {
            "\1\14\53\uffff\1\5\5\uffff\1\3\1\6\11\uffff\1\1\16\uffff\1"+
            "\2\3\uffff\1\7\20\uffff\1\12\13\uffff\1\13\3\uffff\1\10\4\uffff"+
            "\1\4\10\uffff\1\11",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA29_eot = DFA.unpackEncodedString(DFA29_eotS);
    static final short[] DFA29_eof = DFA.unpackEncodedString(DFA29_eofS);
    static final char[] DFA29_min = DFA.unpackEncodedStringToUnsignedChars(DFA29_minS);
    static final char[] DFA29_max = DFA.unpackEncodedStringToUnsignedChars(DFA29_maxS);
    static final short[] DFA29_accept = DFA.unpackEncodedString(DFA29_acceptS);
    static final short[] DFA29_special = DFA.unpackEncodedString(DFA29_specialS);
    static final short[][] DFA29_transition;

    static {
        int numStates = DFA29_transitionS.length;
        DFA29_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA29_transition[i] = DFA.unpackEncodedString(DFA29_transitionS[i]);
        }
    }

    class DFA29 extends DFA {

        public DFA29(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 29;
            this.eot = DFA29_eot;
            this.eof = DFA29_eof;
            this.min = DFA29_min;
            this.max = DFA29_max;
            this.accept = DFA29_accept;
            this.special = DFA29_special;
            this.transition = DFA29_transition;
        }
        public String getDescription() {
            return "506:157: (temp= textblockdefinition_textblockdefinition )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {

                    case 0 : 
                        int LA29_10 = input.LA(1);

                         
                        int index29_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index29_10);
                        if ( s>=0 ) return s;
                        break;

                    case 1 : 
                        int LA29_2 = input.LA(1);

                         
                        int index29_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index29_2);
                        if ( s>=0 ) return s;
                        break;

                    case 2 : 
                        int LA29_4 = input.LA(1);

                         
                        int index29_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index29_4);
                        if ( s>=0 ) return s;
                        break;

                    case 3 : 
                        int LA29_13 = input.LA(1);

                         
                        int index29_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index29_13);
                        if ( s>=0 ) return s;
                        break;

                    case 4 : 
                        int LA29_9 = input.LA(1);

                         
                        int index29_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index29_9);
                        if ( s>=0 ) return s;
                        break;

                    case 5 : 
                        int LA29_3 = input.LA(1);

                         
                        int index29_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index29_3);
                        if ( s>=0 ) return s;
                        break;

                    case 6 : 
                        int LA29_7 = input.LA(1);

                         
                        int index29_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index29_7);
                        if ( s>=0 ) return s;
                        break;

                    case 7 : 
                        int LA29_12 = input.LA(1);

                         
                        int index29_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index29_12);
                        if ( s>=0 ) return s;
                        break;

                    case 8 : 
                        int LA29_11 = input.LA(1);

                         
                        int index29_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index29_11);
                        if ( s>=0 ) return s;
                        break;

                    case 9 : 
                        int LA29_8 = input.LA(1);

                         
                        int index29_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index29_8);
                        if ( s>=0 ) return s;
                        break;

                    case 10 : 
                        int LA29_5 = input.LA(1);

                         
                        int index29_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index29_5);
                        if ( s>=0 ) return s;
                        break;

                    case 11 : 
                        int LA29_6 = input.LA(1);

                         
                        int index29_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index29_6);
                        if ( s>=0 ) return s;
                        break;

                    case 12 : 
                        int LA29_1 = input.LA(1);

                         
                        int index29_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index29_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 29, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA34_eotS =
        "\20\uffff";
    static final String DFA34_eofS =
        "\1\15\17\uffff";
    static final String DFA34_minS =
        "\1\15\15\0\2\uffff";
    static final String DFA34_maxS =
        "\1\u008c\15\0\2\uffff";
    static final String DFA34_acceptS =
        "\16\uffff\1\1\1\2";
    static final String DFA34_specialS =
        "\1\uffff\1\14\1\1\1\5\1\2\1\12\1\13\1\6\1\11\1\3\1\0\1\10\1\7\1"+
        "\4\2\uffff}>";
    static final String[] DFA34_transitionS = {
            "\1\14\53\uffff\1\5\5\uffff\1\3\1\6\11\uffff\1\1\16\uffff\1"+
            "\2\3\uffff\1\7\20\uffff\1\12\13\uffff\1\13\3\uffff\1\10\4\uffff"+
            "\1\4\10\uffff\1\11",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA34_eot = DFA.unpackEncodedString(DFA34_eotS);
    static final short[] DFA34_eof = DFA.unpackEncodedString(DFA34_eofS);
    static final char[] DFA34_min = DFA.unpackEncodedStringToUnsignedChars(DFA34_minS);
    static final char[] DFA34_max = DFA.unpackEncodedStringToUnsignedChars(DFA34_maxS);
    static final short[] DFA34_accept = DFA.unpackEncodedString(DFA34_acceptS);
    static final short[] DFA34_special = DFA.unpackEncodedString(DFA34_specialS);
    static final short[][] DFA34_transition;

    static {
        int numStates = DFA34_transitionS.length;
        DFA34_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA34_transition[i] = DFA.unpackEncodedString(DFA34_transitionS[i]);
        }
    }

    class DFA34 extends DFA {

        public DFA34(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 34;
            this.eot = DFA34_eot;
            this.eof = DFA34_eof;
            this.min = DFA34_min;
            this.max = DFA34_max;
            this.accept = DFA34_accept;
            this.special = DFA34_special;
            this.transition = DFA34_transition;
        }
        public String getDescription() {
            return "522:76: (temp= textblockdefinition_textblockdefinition )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {

                    case 0 : 
                        int LA34_10 = input.LA(1);

                         
                        int index34_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index34_10);
                        if ( s>=0 ) return s;
                        break;

                    case 1 : 
                        int LA34_2 = input.LA(1);

                         
                        int index34_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index34_2);
                        if ( s>=0 ) return s;
                        break;

                    case 2 : 
                        int LA34_4 = input.LA(1);

                         
                        int index34_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index34_4);
                        if ( s>=0 ) return s;
                        break;

                    case 3 : 
                        int LA34_9 = input.LA(1);

                         
                        int index34_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index34_9);
                        if ( s>=0 ) return s;
                        break;

                    case 4 : 
                        int LA34_13 = input.LA(1);

                         
                        int index34_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index34_13);
                        if ( s>=0 ) return s;
                        break;

                    case 5 : 
                        int LA34_3 = input.LA(1);

                         
                        int index34_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index34_3);
                        if ( s>=0 ) return s;
                        break;

                    case 6 : 
                        int LA34_7 = input.LA(1);

                         
                        int index34_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index34_7);
                        if ( s>=0 ) return s;
                        break;

                    case 7 : 
                        int LA34_12 = input.LA(1);

                         
                        int index34_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index34_12);
                        if ( s>=0 ) return s;
                        break;

                    case 8 : 
                        int LA34_11 = input.LA(1);

                         
                        int index34_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index34_11);
                        if ( s>=0 ) return s;
                        break;

                    case 9 : 
                        int LA34_8 = input.LA(1);

                         
                        int index34_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index34_8);
                        if ( s>=0 ) return s;
                        break;

                    case 10 : 
                        int LA34_5 = input.LA(1);

                         
                        int index34_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index34_5);
                        if ( s>=0 ) return s;
                        break;

                    case 11 : 
                        int LA34_6 = input.LA(1);

                         
                        int index34_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index34_6);
                        if ( s>=0 ) return s;
                        break;

                    case 12 : 
                        int LA34_1 = input.LA(1);

                         
                        int index34_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index34_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 34, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA53_eotS =
        "\20\uffff";
    static final String DFA53_eofS =
        "\1\15\17\uffff";
    static final String DFA53_minS =
        "\1\15\15\0\2\uffff";
    static final String DFA53_maxS =
        "\1\u008c\15\0\2\uffff";
    static final String DFA53_acceptS =
        "\16\uffff\1\1\1\2";
    static final String DFA53_specialS =
        "\1\uffff\1\14\1\1\1\4\1\2\1\11\1\12\1\5\1\10\1\3\1\0\1\7\1\6\1"+
        "\13\2\uffff}>";
    static final String[] DFA53_transitionS = {
            "\1\14\53\uffff\1\5\5\uffff\1\3\1\6\11\uffff\1\1\16\uffff\1"+
            "\2\3\uffff\1\7\20\uffff\1\12\13\uffff\1\13\3\uffff\1\10\4\uffff"+
            "\1\4\10\uffff\1\11",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA53_eot = DFA.unpackEncodedString(DFA53_eotS);
    static final short[] DFA53_eof = DFA.unpackEncodedString(DFA53_eofS);
    static final char[] DFA53_min = DFA.unpackEncodedStringToUnsignedChars(DFA53_minS);
    static final char[] DFA53_max = DFA.unpackEncodedStringToUnsignedChars(DFA53_maxS);
    static final short[] DFA53_accept = DFA.unpackEncodedString(DFA53_acceptS);
    static final short[] DFA53_special = DFA.unpackEncodedString(DFA53_specialS);
    static final short[][] DFA53_transition;

    static {
        int numStates = DFA53_transitionS.length;
        DFA53_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA53_transition[i] = DFA.unpackEncodedString(DFA53_transitionS[i]);
        }
    }

    class DFA53 extends DFA {

        public DFA53(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 53;
            this.eot = DFA53_eot;
            this.eof = DFA53_eof;
            this.min = DFA53_min;
            this.max = DFA53_max;
            this.accept = DFA53_accept;
            this.special = DFA53_special;
            this.transition = DFA53_transition;
        }
        public String getDescription() {
            return "568:76: (temp= textblockdefinition_textblockdefinition )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {

                    case 0 : 
                        int LA53_10 = input.LA(1);

                         
                        int index53_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index53_10);
                        if ( s>=0 ) return s;
                        break;

                    case 1 : 
                        int LA53_2 = input.LA(1);

                         
                        int index53_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index53_2);
                        if ( s>=0 ) return s;
                        break;

                    case 2 : 
                        int LA53_4 = input.LA(1);

                         
                        int index53_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index53_4);
                        if ( s>=0 ) return s;
                        break;

                    case 3 : 
                        int LA53_9 = input.LA(1);

                         
                        int index53_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index53_9);
                        if ( s>=0 ) return s;
                        break;

                    case 4 : 
                        int LA53_3 = input.LA(1);

                         
                        int index53_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index53_3);
                        if ( s>=0 ) return s;
                        break;

                    case 5 : 
                        int LA53_7 = input.LA(1);

                         
                        int index53_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index53_7);
                        if ( s>=0 ) return s;
                        break;

                    case 6 : 
                        int LA53_12 = input.LA(1);

                         
                        int index53_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index53_12);
                        if ( s>=0 ) return s;
                        break;

                    case 7 : 
                        int LA53_11 = input.LA(1);

                         
                        int index53_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index53_11);
                        if ( s>=0 ) return s;
                        break;

                    case 8 : 
                        int LA53_8 = input.LA(1);

                         
                        int index53_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index53_8);
                        if ( s>=0 ) return s;
                        break;

                    case 9 : 
                        int LA53_5 = input.LA(1);

                         
                        int index53_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index53_5);
                        if ( s>=0 ) return s;
                        break;

                    case 10 : 
                        int LA53_6 = input.LA(1);

                         
                        int index53_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index53_6);
                        if ( s>=0 ) return s;
                        break;

                    case 11 : 
                        int LA53_13 = input.LA(1);

                         
                        int index53_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index53_13);
                        if ( s>=0 ) return s;
                        break;

                    case 12 : 
                        int LA53_1 = input.LA(1);

                         
                        int index53_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index53_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 53, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA69_eotS =
        "\20\uffff";
    static final String DFA69_eofS =
        "\1\15\17\uffff";
    static final String DFA69_minS =
        "\1\15\15\0\2\uffff";
    static final String DFA69_maxS =
        "\1\u008c\15\0\2\uffff";
    static final String DFA69_acceptS =
        "\16\uffff\1\1\1\2";
    static final String DFA69_specialS =
        "\1\uffff\1\14\1\2\1\5\1\3\1\12\1\13\1\6\1\11\1\4\1\1\1\10\1\7\1"+
        "\0\2\uffff}>";
    static final String[] DFA69_transitionS = {
            "\1\14\53\uffff\1\5\5\uffff\1\3\1\6\11\uffff\1\1\16\uffff\1"+
            "\2\3\uffff\1\7\20\uffff\1\12\13\uffff\1\13\3\uffff\1\10\4\uffff"+
            "\1\4\10\uffff\1\11",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA69_eot = DFA.unpackEncodedString(DFA69_eotS);
    static final short[] DFA69_eof = DFA.unpackEncodedString(DFA69_eofS);
    static final char[] DFA69_min = DFA.unpackEncodedStringToUnsignedChars(DFA69_minS);
    static final char[] DFA69_max = DFA.unpackEncodedStringToUnsignedChars(DFA69_maxS);
    static final short[] DFA69_accept = DFA.unpackEncodedString(DFA69_acceptS);
    static final short[] DFA69_special = DFA.unpackEncodedString(DFA69_specialS);
    static final short[][] DFA69_transition;

    static {
        int numStates = DFA69_transitionS.length;
        DFA69_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA69_transition[i] = DFA.unpackEncodedString(DFA69_transitionS[i]);
        }
    }

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = DFA69_eot;
            this.eof = DFA69_eof;
            this.min = DFA69_min;
            this.max = DFA69_max;
            this.accept = DFA69_accept;
            this.special = DFA69_special;
            this.transition = DFA69_transition;
        }
        public String getDescription() {
            return "619:76: (temp= textblockdefinition_textblockdefinition )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {

                    case 0 : 
                        int LA69_13 = input.LA(1);

                         
                        int index69_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index69_13);
                        if ( s>=0 ) return s;
                        break;

                    case 1 : 
                        int LA69_10 = input.LA(1);

                         
                        int index69_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index69_10);
                        if ( s>=0 ) return s;
                        break;

                    case 2 : 
                        int LA69_2 = input.LA(1);

                         
                        int index69_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index69_2);
                        if ( s>=0 ) return s;
                        break;

                    case 3 : 
                        int LA69_4 = input.LA(1);

                         
                        int index69_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index69_4);
                        if ( s>=0 ) return s;
                        break;

                    case 4 : 
                        int LA69_9 = input.LA(1);

                         
                        int index69_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index69_9);
                        if ( s>=0 ) return s;
                        break;

                    case 5 : 
                        int LA69_3 = input.LA(1);

                         
                        int index69_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index69_3);
                        if ( s>=0 ) return s;
                        break;

                    case 6 : 
                        int LA69_7 = input.LA(1);

                         
                        int index69_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index69_7);
                        if ( s>=0 ) return s;
                        break;

                    case 7 : 
                        int LA69_12 = input.LA(1);

                         
                        int index69_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index69_12);
                        if ( s>=0 ) return s;
                        break;

                    case 8 : 
                        int LA69_11 = input.LA(1);

                         
                        int index69_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index69_11);
                        if ( s>=0 ) return s;
                        break;

                    case 9 : 
                        int LA69_8 = input.LA(1);

                         
                        int index69_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index69_8);
                        if ( s>=0 ) return s;
                        break;

                    case 10 : 
                        int LA69_5 = input.LA(1);

                         
                        int index69_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index69_5);
                        if ( s>=0 ) return s;
                        break;

                    case 11 : 
                        int LA69_6 = input.LA(1);

                         
                        int index69_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index69_6);
                        if ( s>=0 ) return s;
                        break;

                    case 12 : 
                        int LA69_1 = input.LA(1);

                         
                        int index69_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_TCS()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index69_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA74_eotS =
        "\157\uffff";
    static final String DFA74_eofS =
        "\1\154\156\uffff";
    static final String DFA74_minS =
        "\1\4\154\0\2\uffff";
    static final String DFA74_maxS =
        "\1\u008c\154\0\2\uffff";
    static final String DFA74_acceptS =
        "\155\uffff\1\1\1\2";
    static final String DFA74_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
        "\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30"+
        "\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45"+
        "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62"+
        "\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77"+
        "\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112"+
        "\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125"+
        "\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140"+
        "\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153"+
        "\2\uffff}>";
    static final String[] DFA74_transitionS = {
            "\1\2\1\1\3\uffff\1\142\1\151\2\uffff\1\153\1\147\1\137\1\146"+
            "\1\152\1\uffff\1\140\1\uffff\1\141\1\150\1\uffff\1\143\3\uffff"+
            "\1\144\1\145\23\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13"+
            "\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27"+
            "\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43"+
            "\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57"+
            "\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73"+
            "\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106"+
            "\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120"+
            "\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132"+
            "\1\133\1\134\1\135\1\136",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA74_eot = DFA.unpackEncodedString(DFA74_eotS);
    static final short[] DFA74_eof = DFA.unpackEncodedString(DFA74_eofS);
    static final char[] DFA74_min = DFA.unpackEncodedStringToUnsignedChars(DFA74_minS);
    static final char[] DFA74_max = DFA.unpackEncodedStringToUnsignedChars(DFA74_maxS);
    static final short[] DFA74_accept = DFA.unpackEncodedString(DFA74_acceptS);
    static final short[] DFA74_special = DFA.unpackEncodedString(DFA74_specialS);
    static final short[][] DFA74_transition;

    static {
        int numStates = DFA74_transitionS.length;
        DFA74_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA74_transition[i] = DFA.unpackEncodedString(DFA74_transitionS[i]);
        }
    }

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = DFA74_eot;
            this.eof = DFA74_eof;
            this.min = DFA74_min;
            this.max = DFA74_max;
            this.accept = DFA74_accept;
            this.special = DFA74_special;
            this.transition = DFA74_transition;
        }
        public String getDescription() {
            return "671:3: (ret= tcs_sequence__impl | (ret= tcs_sequenceinalternative ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {

                    case 0 : 
                        int LA74_1 = input.LA(1);

                         
                        int index74_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_1);
                        if ( s>=0 ) return s;
                        break;

                    case 1 : 
                        int LA74_2 = input.LA(1);

                         
                        int index74_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_2);
                        if ( s>=0 ) return s;
                        break;

                    case 2 : 
                        int LA74_3 = input.LA(1);

                         
                        int index74_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_3);
                        if ( s>=0 ) return s;
                        break;

                    case 3 : 
                        int LA74_4 = input.LA(1);

                         
                        int index74_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_4);
                        if ( s>=0 ) return s;
                        break;

                    case 4 : 
                        int LA74_5 = input.LA(1);

                         
                        int index74_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_5);
                        if ( s>=0 ) return s;
                        break;

                    case 5 : 
                        int LA74_6 = input.LA(1);

                         
                        int index74_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_6);
                        if ( s>=0 ) return s;
                        break;

                    case 6 : 
                        int LA74_7 = input.LA(1);

                         
                        int index74_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_7);
                        if ( s>=0 ) return s;
                        break;

                    case 7 : 
                        int LA74_8 = input.LA(1);

                         
                        int index74_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_8);
                        if ( s>=0 ) return s;
                        break;

                    case 8 : 
                        int LA74_9 = input.LA(1);

                         
                        int index74_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_9);
                        if ( s>=0 ) return s;
                        break;

                    case 9 : 
                        int LA74_10 = input.LA(1);

                         
                        int index74_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_10);
                        if ( s>=0 ) return s;
                        break;

                    case 10 : 
                        int LA74_11 = input.LA(1);

                         
                        int index74_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_11);
                        if ( s>=0 ) return s;
                        break;

                    case 11 : 
                        int LA74_12 = input.LA(1);

                         
                        int index74_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_12);
                        if ( s>=0 ) return s;
                        break;

                    case 12 : 
                        int LA74_13 = input.LA(1);

                         
                        int index74_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_13);
                        if ( s>=0 ) return s;
                        break;

                    case 13 : 
                        int LA74_14 = input.LA(1);

                         
                        int index74_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_14);
                        if ( s>=0 ) return s;
                        break;

                    case 14 : 
                        int LA74_15 = input.LA(1);

                         
                        int index74_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_15);
                        if ( s>=0 ) return s;
                        break;

                    case 15 : 
                        int LA74_16 = input.LA(1);

                         
                        int index74_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_16);
                        if ( s>=0 ) return s;
                        break;

                    case 16 : 
                        int LA74_17 = input.LA(1);

                         
                        int index74_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_17);
                        if ( s>=0 ) return s;
                        break;

                    case 17 : 
                        int LA74_18 = input.LA(1);

                         
                        int index74_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_18);
                        if ( s>=0 ) return s;
                        break;

                    case 18 : 
                        int LA74_19 = input.LA(1);

                         
                        int index74_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_19);
                        if ( s>=0 ) return s;
                        break;

                    case 19 : 
                        int LA74_20 = input.LA(1);

                         
                        int index74_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_20);
                        if ( s>=0 ) return s;
                        break;

                    case 20 : 
                        int LA74_21 = input.LA(1);

                         
                        int index74_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_21);
                        if ( s>=0 ) return s;
                        break;

                    case 21 : 
                        int LA74_22 = input.LA(1);

                         
                        int index74_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_22);
                        if ( s>=0 ) return s;
                        break;

                    case 22 : 
                        int LA74_23 = input.LA(1);

                         
                        int index74_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_23);
                        if ( s>=0 ) return s;
                        break;

                    case 23 : 
                        int LA74_24 = input.LA(1);

                         
                        int index74_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_24);
                        if ( s>=0 ) return s;
                        break;

                    case 24 : 
                        int LA74_25 = input.LA(1);

                         
                        int index74_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_25);
                        if ( s>=0 ) return s;
                        break;

                    case 25 : 
                        int LA74_26 = input.LA(1);

                         
                        int index74_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_26);
                        if ( s>=0 ) return s;
                        break;

                    case 26 : 
                        int LA74_27 = input.LA(1);

                         
                        int index74_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_27);
                        if ( s>=0 ) return s;
                        break;

                    case 27 : 
                        int LA74_28 = input.LA(1);

                         
                        int index74_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_28);
                        if ( s>=0 ) return s;
                        break;

                    case 28 : 
                        int LA74_29 = input.LA(1);

                         
                        int index74_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_29);
                        if ( s>=0 ) return s;
                        break;

                    case 29 : 
                        int LA74_30 = input.LA(1);

                         
                        int index74_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_30);
                        if ( s>=0 ) return s;
                        break;

                    case 30 : 
                        int LA74_31 = input.LA(1);

                         
                        int index74_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_31);
                        if ( s>=0 ) return s;
                        break;

                    case 31 : 
                        int LA74_32 = input.LA(1);

                         
                        int index74_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_32);
                        if ( s>=0 ) return s;
                        break;

                    case 32 : 
                        int LA74_33 = input.LA(1);

                         
                        int index74_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_33);
                        if ( s>=0 ) return s;
                        break;

                    case 33 : 
                        int LA74_34 = input.LA(1);

                         
                        int index74_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_34);
                        if ( s>=0 ) return s;
                        break;

                    case 34 : 
                        int LA74_35 = input.LA(1);

                         
                        int index74_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_35);
                        if ( s>=0 ) return s;
                        break;

                    case 35 : 
                        int LA74_36 = input.LA(1);

                         
                        int index74_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_36);
                        if ( s>=0 ) return s;
                        break;

                    case 36 : 
                        int LA74_37 = input.LA(1);

                         
                        int index74_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_37);
                        if ( s>=0 ) return s;
                        break;

                    case 37 : 
                        int LA74_38 = input.LA(1);

                         
                        int index74_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_38);
                        if ( s>=0 ) return s;
                        break;

                    case 38 : 
                        int LA74_39 = input.LA(1);

                         
                        int index74_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_39);
                        if ( s>=0 ) return s;
                        break;

                    case 39 : 
                        int LA74_40 = input.LA(1);

                         
                        int index74_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_40);
                        if ( s>=0 ) return s;
                        break;

                    case 40 : 
                        int LA74_41 = input.LA(1);

                         
                        int index74_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_41);
                        if ( s>=0 ) return s;
                        break;

                    case 41 : 
                        int LA74_42 = input.LA(1);

                         
                        int index74_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_42);
                        if ( s>=0 ) return s;
                        break;

                    case 42 : 
                        int LA74_43 = input.LA(1);

                         
                        int index74_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_43);
                        if ( s>=0 ) return s;
                        break;

                    case 43 : 
                        int LA74_44 = input.LA(1);

                         
                        int index74_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_44);
                        if ( s>=0 ) return s;
                        break;

                    case 44 : 
                        int LA74_45 = input.LA(1);

                         
                        int index74_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_45);
                        if ( s>=0 ) return s;
                        break;

                    case 45 : 
                        int LA74_46 = input.LA(1);

                         
                        int index74_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_46);
                        if ( s>=0 ) return s;
                        break;

                    case 46 : 
                        int LA74_47 = input.LA(1);

                         
                        int index74_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_47);
                        if ( s>=0 ) return s;
                        break;

                    case 47 : 
                        int LA74_48 = input.LA(1);

                         
                        int index74_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_48);
                        if ( s>=0 ) return s;
                        break;

                    case 48 : 
                        int LA74_49 = input.LA(1);

                         
                        int index74_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_49);
                        if ( s>=0 ) return s;
                        break;

                    case 49 : 
                        int LA74_50 = input.LA(1);

                         
                        int index74_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_50);
                        if ( s>=0 ) return s;
                        break;

                    case 50 : 
                        int LA74_51 = input.LA(1);

                         
                        int index74_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_51);
                        if ( s>=0 ) return s;
                        break;

                    case 51 : 
                        int LA74_52 = input.LA(1);

                         
                        int index74_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_52);
                        if ( s>=0 ) return s;
                        break;

                    case 52 : 
                        int LA74_53 = input.LA(1);

                         
                        int index74_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_53);
                        if ( s>=0 ) return s;
                        break;

                    case 53 : 
                        int LA74_54 = input.LA(1);

                         
                        int index74_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_54);
                        if ( s>=0 ) return s;
                        break;

                    case 54 : 
                        int LA74_55 = input.LA(1);

                         
                        int index74_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_55);
                        if ( s>=0 ) return s;
                        break;

                    case 55 : 
                        int LA74_56 = input.LA(1);

                         
                        int index74_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_56);
                        if ( s>=0 ) return s;
                        break;

                    case 56 : 
                        int LA74_57 = input.LA(1);

                         
                        int index74_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_57);
                        if ( s>=0 ) return s;
                        break;

                    case 57 : 
                        int LA74_58 = input.LA(1);

                         
                        int index74_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_58);
                        if ( s>=0 ) return s;
                        break;

                    case 58 : 
                        int LA74_59 = input.LA(1);

                         
                        int index74_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_59);
                        if ( s>=0 ) return s;
                        break;

                    case 59 : 
                        int LA74_60 = input.LA(1);

                         
                        int index74_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_60);
                        if ( s>=0 ) return s;
                        break;

                    case 60 : 
                        int LA74_61 = input.LA(1);

                         
                        int index74_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_61);
                        if ( s>=0 ) return s;
                        break;

                    case 61 : 
                        int LA74_62 = input.LA(1);

                         
                        int index74_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_62);
                        if ( s>=0 ) return s;
                        break;

                    case 62 : 
                        int LA74_63 = input.LA(1);

                         
                        int index74_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_63);
                        if ( s>=0 ) return s;
                        break;

                    case 63 : 
                        int LA74_64 = input.LA(1);

                         
                        int index74_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_64);
                        if ( s>=0 ) return s;
                        break;

                    case 64 : 
                        int LA74_65 = input.LA(1);

                         
                        int index74_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_65);
                        if ( s>=0 ) return s;
                        break;

                    case 65 : 
                        int LA74_66 = input.LA(1);

                         
                        int index74_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_66);
                        if ( s>=0 ) return s;
                        break;

                    case 66 : 
                        int LA74_67 = input.LA(1);

                         
                        int index74_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_67);
                        if ( s>=0 ) return s;
                        break;

                    case 67 : 
                        int LA74_68 = input.LA(1);

                         
                        int index74_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_68);
                        if ( s>=0 ) return s;
                        break;

                    case 68 : 
                        int LA74_69 = input.LA(1);

                         
                        int index74_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_69);
                        if ( s>=0 ) return s;
                        break;

                    case 69 : 
                        int LA74_70 = input.LA(1);

                         
                        int index74_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_70);
                        if ( s>=0 ) return s;
                        break;

                    case 70 : 
                        int LA74_71 = input.LA(1);

                         
                        int index74_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_71);
                        if ( s>=0 ) return s;
                        break;

                    case 71 : 
                        int LA74_72 = input.LA(1);

                         
                        int index74_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_72);
                        if ( s>=0 ) return s;
                        break;

                    case 72 : 
                        int LA74_73 = input.LA(1);

                         
                        int index74_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_73);
                        if ( s>=0 ) return s;
                        break;

                    case 73 : 
                        int LA74_74 = input.LA(1);

                         
                        int index74_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_74);
                        if ( s>=0 ) return s;
                        break;

                    case 74 : 
                        int LA74_75 = input.LA(1);

                         
                        int index74_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_75);
                        if ( s>=0 ) return s;
                        break;

                    case 75 : 
                        int LA74_76 = input.LA(1);

                         
                        int index74_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_76);
                        if ( s>=0 ) return s;
                        break;

                    case 76 : 
                        int LA74_77 = input.LA(1);

                         
                        int index74_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_77);
                        if ( s>=0 ) return s;
                        break;

                    case 77 : 
                        int LA74_78 = input.LA(1);

                         
                        int index74_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_78);
                        if ( s>=0 ) return s;
                        break;

                    case 78 : 
                        int LA74_79 = input.LA(1);

                         
                        int index74_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_79);
                        if ( s>=0 ) return s;
                        break;

                    case 79 : 
                        int LA74_80 = input.LA(1);

                         
                        int index74_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_80);
                        if ( s>=0 ) return s;
                        break;

                    case 80 : 
                        int LA74_81 = input.LA(1);

                         
                        int index74_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_81);
                        if ( s>=0 ) return s;
                        break;

                    case 81 : 
                        int LA74_82 = input.LA(1);

                         
                        int index74_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_82);
                        if ( s>=0 ) return s;
                        break;

                    case 82 : 
                        int LA74_83 = input.LA(1);

                         
                        int index74_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_83);
                        if ( s>=0 ) return s;
                        break;

                    case 83 : 
                        int LA74_84 = input.LA(1);

                         
                        int index74_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_84);
                        if ( s>=0 ) return s;
                        break;

                    case 84 : 
                        int LA74_85 = input.LA(1);

                         
                        int index74_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_85);
                        if ( s>=0 ) return s;
                        break;

                    case 85 : 
                        int LA74_86 = input.LA(1);

                         
                        int index74_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_86);
                        if ( s>=0 ) return s;
                        break;

                    case 86 : 
                        int LA74_87 = input.LA(1);

                         
                        int index74_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_87);
                        if ( s>=0 ) return s;
                        break;

                    case 87 : 
                        int LA74_88 = input.LA(1);

                         
                        int index74_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_88);
                        if ( s>=0 ) return s;
                        break;

                    case 88 : 
                        int LA74_89 = input.LA(1);

                         
                        int index74_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_89);
                        if ( s>=0 ) return s;
                        break;

                    case 89 : 
                        int LA74_90 = input.LA(1);

                         
                        int index74_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_90);
                        if ( s>=0 ) return s;
                        break;

                    case 90 : 
                        int LA74_91 = input.LA(1);

                         
                        int index74_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_91);
                        if ( s>=0 ) return s;
                        break;

                    case 91 : 
                        int LA74_92 = input.LA(1);

                         
                        int index74_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_92);
                        if ( s>=0 ) return s;
                        break;

                    case 92 : 
                        int LA74_93 = input.LA(1);

                         
                        int index74_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_93);
                        if ( s>=0 ) return s;
                        break;

                    case 93 : 
                        int LA74_94 = input.LA(1);

                         
                        int index74_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_94);
                        if ( s>=0 ) return s;
                        break;

                    case 94 : 
                        int LA74_95 = input.LA(1);

                         
                        int index74_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_95);
                        if ( s>=0 ) return s;
                        break;

                    case 95 : 
                        int LA74_96 = input.LA(1);

                         
                        int index74_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_96);
                        if ( s>=0 ) return s;
                        break;

                    case 96 : 
                        int LA74_97 = input.LA(1);

                         
                        int index74_97 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_97);
                        if ( s>=0 ) return s;
                        break;

                    case 97 : 
                        int LA74_98 = input.LA(1);

                         
                        int index74_98 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_98);
                        if ( s>=0 ) return s;
                        break;

                    case 98 : 
                        int LA74_99 = input.LA(1);

                         
                        int index74_99 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_99);
                        if ( s>=0 ) return s;
                        break;

                    case 99 : 
                        int LA74_100 = input.LA(1);

                         
                        int index74_100 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_100);
                        if ( s>=0 ) return s;
                        break;

                    case 100 : 
                        int LA74_101 = input.LA(1);

                         
                        int index74_101 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_101);
                        if ( s>=0 ) return s;
                        break;

                    case 101 : 
                        int LA74_102 = input.LA(1);

                         
                        int index74_102 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_102);
                        if ( s>=0 ) return s;
                        break;

                    case 102 : 
                        int LA74_103 = input.LA(1);

                         
                        int index74_103 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_103);
                        if ( s>=0 ) return s;
                        break;

                    case 103 : 
                        int LA74_104 = input.LA(1);

                         
                        int index74_104 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_104);
                        if ( s>=0 ) return s;
                        break;

                    case 104 : 
                        int LA74_105 = input.LA(1);

                         
                        int index74_105 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_105);
                        if ( s>=0 ) return s;
                        break;

                    case 105 : 
                        int LA74_106 = input.LA(1);

                         
                        int index74_106 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_106);
                        if ( s>=0 ) return s;
                        break;

                    case 106 : 
                        int LA74_107 = input.LA(1);

                         
                        int index74_107 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_107);
                        if ( s>=0 ) return s;
                        break;

                    case 107 : 
                        int LA74_108 = input.LA(1);

                         
                        int index74_108 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_TCS()) ) {s = 109;}

                        else if ( (true) ) {s = 110;}

                         
                        input.seek(index74_108);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA76_eotS =
        "\140\uffff";
    static final String DFA76_eofS =
        "\1\136\137\uffff";
    static final String DFA76_minS =
        "\1\4\135\0\2\uffff";
    static final String DFA76_maxS =
        "\1\u008c\135\0\2\uffff";
    static final String DFA76_acceptS =
        "\136\uffff\1\2\1\1";
    static final String DFA76_specialS =
        "\1\uffff\1\57\1\101\1\56\1\134\1\55\1\114\1\53\1\133\1\54\1\23"+
        "\1\105\1\35\1\103\1\52\1\110\1\40\1\112\1\24\1\30\1\111\1\27\1\107"+
        "\1\25\1\102\1\26\1\106\1\122\1\42\1\117\1\41\1\124\1\64\1\126\1"+
        "\45\1\6\1\127\1\33\1\125\1\51\1\120\1\31\1\123\1\16\1\7\1\75\1\10"+
        "\1\62\1\14\1\100\1\12\1\113\1\121\1\22\1\77\1\2\1\63\1\21\1\76\1"+
        "\37\1\116\1\71\1\15\1\60\1\0\1\74\1\17\1\34\1\104\1\36\1\73\1\5"+
        "\1\61\1\4\1\72\1\43\1\115\1\44\1\1\1\66\1\20\1\65\1\3\1\47\1\131"+
        "\1\50\1\132\1\13\1\70\1\11\1\67\1\46\1\130\1\32\2\uffff}>";
    static final String[] DFA76_transitionS = {
            "\1\1\1\136\3\uffff\11\136\1\uffff\1\136\1\uffff\6\136\1\uffff"+
            "\2\136\1\uffff\1\136\21\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1"+
            "\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1"+
            "\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1"+
            "\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1"+
            "\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1"+
            "\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1"+
            "\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1"+
            "\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1"+
            "\130\1\131\1\132\1\133\1\134\1\135",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA76_eot = DFA.unpackEncodedString(DFA76_eotS);
    static final short[] DFA76_eof = DFA.unpackEncodedString(DFA76_eofS);
    static final char[] DFA76_min = DFA.unpackEncodedStringToUnsignedChars(DFA76_minS);
    static final char[] DFA76_max = DFA.unpackEncodedStringToUnsignedChars(DFA76_maxS);
    static final short[] DFA76_accept = DFA.unpackEncodedString(DFA76_acceptS);
    static final short[] DFA76_special = DFA.unpackEncodedString(DFA76_specialS);
    static final short[][] DFA76_transition;

    static {
        int numStates = DFA76_transitionS.length;
        DFA76_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA76_transition[i] = DFA.unpackEncodedString(DFA76_transitionS[i]);
        }
    }

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = DFA76_eot;
            this.eof = DFA76_eof;
            this.min = DFA76_min;
            this.max = DFA76_max;
            this.accept = DFA76_accept;
            this.special = DFA76_special;
            this.transition = DFA76_transition;
        }
        public String getDescription() {
            return "714:3646: (temp= identifierOrKeyword )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {

                    case 0 : 
                        int LA76_64 = input.LA(1);

                         
                        int index76_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_64);
                        if ( s>=0 ) return s;
                        break;

                    case 1 : 
                        int LA76_78 = input.LA(1);

                         
                        int index76_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_78);
                        if ( s>=0 ) return s;
                        break;

                    case 2 : 
                        int LA76_55 = input.LA(1);

                         
                        int index76_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_55);
                        if ( s>=0 ) return s;
                        break;

                    case 3 : 
                        int LA76_82 = input.LA(1);

                         
                        int index76_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_82);
                        if ( s>=0 ) return s;
                        break;

                    case 4 : 
                        int LA76_73 = input.LA(1);

                         
                        int index76_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_73);
                        if ( s>=0 ) return s;
                        break;

                    case 5 : 
                        int LA76_71 = input.LA(1);

                         
                        int index76_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_71);
                        if ( s>=0 ) return s;
                        break;

                    case 6 : 
                        int LA76_35 = input.LA(1);

                         
                        int index76_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_35);
                        if ( s>=0 ) return s;
                        break;

                    case 7 : 
                        int LA76_44 = input.LA(1);

                         
                        int index76_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_44);
                        if ( s>=0 ) return s;
                        break;

                    case 8 : 
                        int LA76_46 = input.LA(1);

                         
                        int index76_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_46);
                        if ( s>=0 ) return s;
                        break;

                    case 9 : 
                        int LA76_89 = input.LA(1);

                         
                        int index76_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_89);
                        if ( s>=0 ) return s;
                        break;

                    case 10 : 
                        int LA76_50 = input.LA(1);

                         
                        int index76_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_50);
                        if ( s>=0 ) return s;
                        break;

                    case 11 : 
                        int LA76_87 = input.LA(1);

                         
                        int index76_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_87);
                        if ( s>=0 ) return s;
                        break;

                    case 12 : 
                        int LA76_48 = input.LA(1);

                         
                        int index76_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_48);
                        if ( s>=0 ) return s;
                        break;

                    case 13 : 
                        int LA76_62 = input.LA(1);

                         
                        int index76_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_62);
                        if ( s>=0 ) return s;
                        break;

                    case 14 : 
                        int LA76_43 = input.LA(1);

                         
                        int index76_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_43);
                        if ( s>=0 ) return s;
                        break;

                    case 15 : 
                        int LA76_66 = input.LA(1);

                         
                        int index76_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_66);
                        if ( s>=0 ) return s;
                        break;

                    case 16 : 
                        int LA76_80 = input.LA(1);

                         
                        int index76_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_80);
                        if ( s>=0 ) return s;
                        break;

                    case 17 : 
                        int LA76_57 = input.LA(1);

                         
                        int index76_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_57);
                        if ( s>=0 ) return s;
                        break;

                    case 18 : 
                        int LA76_53 = input.LA(1);

                         
                        int index76_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_53);
                        if ( s>=0 ) return s;
                        break;

                    case 19 : 
                        int LA76_10 = input.LA(1);

                         
                        int index76_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_10);
                        if ( s>=0 ) return s;
                        break;

                    case 20 : 
                        int LA76_18 = input.LA(1);

                         
                        int index76_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_18);
                        if ( s>=0 ) return s;
                        break;

                    case 21 : 
                        int LA76_23 = input.LA(1);

                         
                        int index76_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_23);
                        if ( s>=0 ) return s;
                        break;

                    case 22 : 
                        int LA76_25 = input.LA(1);

                         
                        int index76_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_25);
                        if ( s>=0 ) return s;
                        break;

                    case 23 : 
                        int LA76_21 = input.LA(1);

                         
                        int index76_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_21);
                        if ( s>=0 ) return s;
                        break;

                    case 24 : 
                        int LA76_19 = input.LA(1);

                         
                        int index76_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_19);
                        if ( s>=0 ) return s;
                        break;

                    case 25 : 
                        int LA76_41 = input.LA(1);

                         
                        int index76_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_41);
                        if ( s>=0 ) return s;
                        break;

                    case 26 : 
                        int LA76_93 = input.LA(1);

                         
                        int index76_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_93);
                        if ( s>=0 ) return s;
                        break;

                    case 27 : 
                        int LA76_37 = input.LA(1);

                         
                        int index76_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_37);
                        if ( s>=0 ) return s;
                        break;

                    case 28 : 
                        int LA76_67 = input.LA(1);

                         
                        int index76_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_67);
                        if ( s>=0 ) return s;
                        break;

                    case 29 : 
                        int LA76_12 = input.LA(1);

                         
                        int index76_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_12);
                        if ( s>=0 ) return s;
                        break;

                    case 30 : 
                        int LA76_69 = input.LA(1);

                         
                        int index76_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_69);
                        if ( s>=0 ) return s;
                        break;

                    case 31 : 
                        int LA76_59 = input.LA(1);

                         
                        int index76_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_59);
                        if ( s>=0 ) return s;
                        break;

                    case 32 : 
                        int LA76_16 = input.LA(1);

                         
                        int index76_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_16);
                        if ( s>=0 ) return s;
                        break;

                    case 33 : 
                        int LA76_30 = input.LA(1);

                         
                        int index76_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_30);
                        if ( s>=0 ) return s;
                        break;

                    case 34 : 
                        int LA76_28 = input.LA(1);

                         
                        int index76_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_28);
                        if ( s>=0 ) return s;
                        break;

                    case 35 : 
                        int LA76_75 = input.LA(1);

                         
                        int index76_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_75);
                        if ( s>=0 ) return s;
                        break;

                    case 36 : 
                        int LA76_77 = input.LA(1);

                         
                        int index76_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_77);
                        if ( s>=0 ) return s;
                        break;

                    case 37 : 
                        int LA76_34 = input.LA(1);

                         
                        int index76_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_34);
                        if ( s>=0 ) return s;
                        break;

                    case 38 : 
                        int LA76_91 = input.LA(1);

                         
                        int index76_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_91);
                        if ( s>=0 ) return s;
                        break;

                    case 39 : 
                        int LA76_83 = input.LA(1);

                         
                        int index76_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_83);
                        if ( s>=0 ) return s;
                        break;

                    case 40 : 
                        int LA76_85 = input.LA(1);

                         
                        int index76_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_85);
                        if ( s>=0 ) return s;
                        break;

                    case 41 : 
                        int LA76_39 = input.LA(1);

                         
                        int index76_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_39);
                        if ( s>=0 ) return s;
                        break;

                    case 42 : 
                        int LA76_14 = input.LA(1);

                         
                        int index76_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_14);
                        if ( s>=0 ) return s;
                        break;

                    case 43 : 
                        int LA76_7 = input.LA(1);

                         
                        int index76_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_7);
                        if ( s>=0 ) return s;
                        break;

                    case 44 : 
                        int LA76_9 = input.LA(1);

                         
                        int index76_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_9);
                        if ( s>=0 ) return s;
                        break;

                    case 45 : 
                        int LA76_5 = input.LA(1);

                         
                        int index76_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_5);
                        if ( s>=0 ) return s;
                        break;

                    case 46 : 
                        int LA76_3 = input.LA(1);

                         
                        int index76_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_3);
                        if ( s>=0 ) return s;
                        break;

                    case 47 : 
                        int LA76_1 = input.LA(1);

                         
                        int index76_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_1);
                        if ( s>=0 ) return s;
                        break;

                    case 48 : 
                        int LA76_63 = input.LA(1);

                         
                        int index76_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_63);
                        if ( s>=0 ) return s;
                        break;

                    case 49 : 
                        int LA76_72 = input.LA(1);

                         
                        int index76_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_72);
                        if ( s>=0 ) return s;
                        break;

                    case 50 : 
                        int LA76_47 = input.LA(1);

                         
                        int index76_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_47);
                        if ( s>=0 ) return s;
                        break;

                    case 51 : 
                        int LA76_56 = input.LA(1);

                         
                        int index76_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_56);
                        if ( s>=0 ) return s;
                        break;

                    case 52 : 
                        int LA76_32 = input.LA(1);

                         
                        int index76_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_32);
                        if ( s>=0 ) return s;
                        break;

                    case 53 : 
                        int LA76_81 = input.LA(1);

                         
                        int index76_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_81);
                        if ( s>=0 ) return s;
                        break;

                    case 54 : 
                        int LA76_79 = input.LA(1);

                         
                        int index76_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_79);
                        if ( s>=0 ) return s;
                        break;

                    case 55 : 
                        int LA76_90 = input.LA(1);

                         
                        int index76_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_90);
                        if ( s>=0 ) return s;
                        break;

                    case 56 : 
                        int LA76_88 = input.LA(1);

                         
                        int index76_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_88);
                        if ( s>=0 ) return s;
                        break;

                    case 57 : 
                        int LA76_61 = input.LA(1);

                         
                        int index76_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_61);
                        if ( s>=0 ) return s;
                        break;

                    case 58 : 
                        int LA76_74 = input.LA(1);

                         
                        int index76_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_74);
                        if ( s>=0 ) return s;
                        break;

                    case 59 : 
                        int LA76_70 = input.LA(1);

                         
                        int index76_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_70);
                        if ( s>=0 ) return s;
                        break;

                    case 60 : 
                        int LA76_65 = input.LA(1);

                         
                        int index76_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_65);
                        if ( s>=0 ) return s;
                        break;

                    case 61 : 
                        int LA76_45 = input.LA(1);

                         
                        int index76_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_45);
                        if ( s>=0 ) return s;
                        break;

                    case 62 : 
                        int LA76_58 = input.LA(1);

                         
                        int index76_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_58);
                        if ( s>=0 ) return s;
                        break;

                    case 63 : 
                        int LA76_54 = input.LA(1);

                         
                        int index76_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_54);
                        if ( s>=0 ) return s;
                        break;

                    case 64 : 
                        int LA76_49 = input.LA(1);

                         
                        int index76_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_49);
                        if ( s>=0 ) return s;
                        break;

                    case 65 : 
                        int LA76_2 = input.LA(1);

                         
                        int index76_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_2);
                        if ( s>=0 ) return s;
                        break;

                    case 66 : 
                        int LA76_24 = input.LA(1);

                         
                        int index76_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_24);
                        if ( s>=0 ) return s;
                        break;

                    case 67 : 
                        int LA76_13 = input.LA(1);

                         
                        int index76_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_13);
                        if ( s>=0 ) return s;
                        break;

                    case 68 : 
                        int LA76_68 = input.LA(1);

                         
                        int index76_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_68);
                        if ( s>=0 ) return s;
                        break;

                    case 69 : 
                        int LA76_11 = input.LA(1);

                         
                        int index76_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_11);
                        if ( s>=0 ) return s;
                        break;

                    case 70 : 
                        int LA76_26 = input.LA(1);

                         
                        int index76_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_26);
                        if ( s>=0 ) return s;
                        break;

                    case 71 : 
                        int LA76_22 = input.LA(1);

                         
                        int index76_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_22);
                        if ( s>=0 ) return s;
                        break;

                    case 72 : 
                        int LA76_15 = input.LA(1);

                         
                        int index76_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_15);
                        if ( s>=0 ) return s;
                        break;

                    case 73 : 
                        int LA76_20 = input.LA(1);

                         
                        int index76_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_20);
                        if ( s>=0 ) return s;
                        break;

                    case 74 : 
                        int LA76_17 = input.LA(1);

                         
                        int index76_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_17);
                        if ( s>=0 ) return s;
                        break;

                    case 75 : 
                        int LA76_51 = input.LA(1);

                         
                        int index76_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_51);
                        if ( s>=0 ) return s;
                        break;

                    case 76 : 
                        int LA76_6 = input.LA(1);

                         
                        int index76_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_6);
                        if ( s>=0 ) return s;
                        break;

                    case 77 : 
                        int LA76_76 = input.LA(1);

                         
                        int index76_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_76);
                        if ( s>=0 ) return s;
                        break;

                    case 78 : 
                        int LA76_60 = input.LA(1);

                         
                        int index76_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_60);
                        if ( s>=0 ) return s;
                        break;

                    case 79 : 
                        int LA76_29 = input.LA(1);

                         
                        int index76_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_29);
                        if ( s>=0 ) return s;
                        break;

                    case 80 : 
                        int LA76_40 = input.LA(1);

                         
                        int index76_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_40);
                        if ( s>=0 ) return s;
                        break;

                    case 81 : 
                        int LA76_52 = input.LA(1);

                         
                        int index76_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_52);
                        if ( s>=0 ) return s;
                        break;

                    case 82 : 
                        int LA76_27 = input.LA(1);

                         
                        int index76_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_27);
                        if ( s>=0 ) return s;
                        break;

                    case 83 : 
                        int LA76_42 = input.LA(1);

                         
                        int index76_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_42);
                        if ( s>=0 ) return s;
                        break;

                    case 84 : 
                        int LA76_31 = input.LA(1);

                         
                        int index76_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_31);
                        if ( s>=0 ) return s;
                        break;

                    case 85 : 
                        int LA76_38 = input.LA(1);

                         
                        int index76_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_38);
                        if ( s>=0 ) return s;
                        break;

                    case 86 : 
                        int LA76_33 = input.LA(1);

                         
                        int index76_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_33);
                        if ( s>=0 ) return s;
                        break;

                    case 87 : 
                        int LA76_36 = input.LA(1);

                         
                        int index76_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_36);
                        if ( s>=0 ) return s;
                        break;

                    case 88 : 
                        int LA76_92 = input.LA(1);

                         
                        int index76_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_92);
                        if ( s>=0 ) return s;
                        break;

                    case 89 : 
                        int LA76_84 = input.LA(1);

                         
                        int index76_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_84);
                        if ( s>=0 ) return s;
                        break;

                    case 90 : 
                        int LA76_86 = input.LA(1);

                         
                        int index76_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_86);
                        if ( s>=0 ) return s;
                        break;

                    case 91 : 
                        int LA76_8 = input.LA(1);

                         
                        int index76_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_8);
                        if ( s>=0 ) return s;
                        break;

                    case 92 : 
                        int LA76_4 = input.LA(1);

                         
                        int index76_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_TCS()) ) {s = 95;}

                        else if ( (true) ) {s = 94;}

                         
                        input.seek(index76_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA94_eotS =
        "\u00c1\uffff";
    static final String DFA94_eofS =
        "\u00c1\uffff";
    static final String DFA94_minS =
        "\1\4\135\13\3\4\135\13\3\uffff";
    static final String DFA94_maxS =
        "\1\u008c\135\37\1\u008c\2\u0087\135\37\3\uffff";
    static final String DFA94_acceptS =
        "\u00be\uffff\1\2\1\1\1\3";
    static final String DFA94_specialS =
        "\u00c1\uffff}>";
    static final String[] DFA94_transitionS = {
            "\1\1\12\uffff\1\136\41\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1"+
            "\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1"+
            "\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1"+
            "\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1"+
            "\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1"+
            "\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1"+
            "\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1"+
            "\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1"+
            "\130\1\131\1\132\1\133\1\134\1\135",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\141\6\uffff\1\140\23\uffff\1\137\21\uffff\1\142\1\143\1"+
            "\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153\1\154\1\155\1"+
            "\156\1\157\1\160\1\161\1\162\1\163\1\164\1\165\1\166\1\167\1"+
            "\170\1\171\1\172\1\173\1\174\1\175\1\176\1\177\1\u0080\1\u0081"+
            "\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1\u0089"+
            "\1\u008a\1\u008b\1\u008c\1\u008d\1\u008e\1\u008f\1\u0090\1\u0091"+
            "\1\u0092\1\u0093\1\u0094\1\u0095\1\u0096\1\u0097\1\u0098\1\u0099"+
            "\1\u009a\1\u009b\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a0\1\u00a1"+
            "\1\u00a2\1\u00a3\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9"+
            "\1\u00aa\1\u00ab\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\u00b0\1\u00b1"+
            "\1\u00b2\1\u00b3\1\u00b4\1\u00b5\1\u00b6\1\u00b7\1\u00b8\1\u00b9"+
            "\1\u00ba\1\u00bb\1\u00bc\1\u00bd",
            "\1\u00bf\61\uffff\1\u00c0\120\uffff\1\u00be",
            "\1\u00bf\61\uffff\1\u00c0\120\uffff\1\u00be",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "\1\140\23\uffff\1\137",
            "",
            "",
            ""
    };

    static final short[] DFA94_eot = DFA.unpackEncodedString(DFA94_eotS);
    static final short[] DFA94_eof = DFA.unpackEncodedString(DFA94_eofS);
    static final char[] DFA94_min = DFA.unpackEncodedStringToUnsignedChars(DFA94_minS);
    static final char[] DFA94_max = DFA.unpackEncodedStringToUnsignedChars(DFA94_maxS);
    static final short[] DFA94_accept = DFA.unpackEncodedString(DFA94_acceptS);
    static final short[] DFA94_special = DFA.unpackEncodedString(DFA94_specialS);
    static final short[][] DFA94_transition;

    static {
        int numStates = DFA94_transitionS.length;
        DFA94_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA94_transition[i] = DFA.unpackEncodedString(DFA94_transitionS[i]);
        }
    }

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = DFA94_eot;
            this.eof = DFA94_eof;
            this.min = DFA94_min;
            this.max = DFA94_max;
            this.accept = DFA94_accept;
            this.special = DFA94_special;
            this.transition = DFA94_transition;
        }
        public String getDescription() {
            return "851:3: (ret= tcs_primitivepropertyinit | ret= tcs_lookuppropertyinit | ret= tcs_foreachpredicatepropertyinit )";
        }
    }
    static final String DFA134_eotS =
        "\u00c2\uffff";
    static final String DFA134_eofS =
        "\1\uffff\136\141\5\uffff\136\141";
    static final String DFA134_minS =
        "\1\4\22\13\1\11\12\13\1\11\77\13\1\4\5\uffff\1\13\1\4\35\13\1\4"+
        "\75\13\1\4";
    static final String DFA134_maxS =
        "\1\u008c\135\117\1\u008c\5\uffff\1\117\1\u008c\134\117";
    static final String DFA134_acceptS =
        "\137\uffff\1\5\1\1\1\2\1\3\1\4\136\uffff";
    static final String DFA134_specialS =
        "\u00c2\uffff}>";
    static final String[] DFA134_transitionS = {
            "\1\1\12\uffff\1\136\41\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1"+
            "\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1"+
            "\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1"+
            "\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1"+
            "\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1"+
            "\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1"+
            "\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1"+
            "\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1"+
            "\130\1\131\1\132\1\133\1\134\1\135",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\142\1\uffff\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff"+
            "\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\143\1\uffff\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff"+
            "\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\144\6\uffff\1\140\13\uffff\1\141\31\uffff\1\145\1\146\1"+
            "\147\1\150\1\151\1\152\1\153\1\154\1\155\1\156\1\157\1\160\1"+
            "\161\1\162\1\163\1\164\1\165\1\166\1\167\1\170\1\171\1\172\1"+
            "\173\1\174\1\175\1\176\1\177\1\u0080\1\u0081\1\u0082\1\u0083"+
            "\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1\u0089\1\u008a\1\u008b"+
            "\1\u008c\1\u008d\1\u008e\1\u008f\1\u0090\1\u0091\1\u0092\1\u0093"+
            "\1\u0094\1\u0095\1\u0096\1\u0097\1\u0098\1\u0099\1\u009a\1\u009b"+
            "\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a3"+
            "\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ab"+
            "\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\u00b0\1\u00b1\1\u00b2\1\u00b3"+
            "\1\u00b4\1\u00b5\1\u00b6\1\u00b7\1\u00b8\1\u00b9\1\u00ba\1\u00bb"+
            "\1\u00bc\1\u00bd\1\u00be\1\u00bf\1\u00c0",
            "",
            "",
            "",
            "",
            "",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\141\6\uffff\1\140\3\uffff\1\141\7\uffff\1\141\31\uffff"+
            "\36\141\1\u00c1\75\141",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\137\6\uffff\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff"+
            "\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\140\13\uffff\1\141\31\uffff\1\141\35\uffff\1\137",
            "\1\137\6\uffff\1\141\13\uffff\1\141\31\uffff\1\141\35\uffff"+
            "\1\141"
    };

    static final short[] DFA134_eot = DFA.unpackEncodedString(DFA134_eotS);
    static final short[] DFA134_eof = DFA.unpackEncodedString(DFA134_eofS);
    static final char[] DFA134_min = DFA.unpackEncodedStringToUnsignedChars(DFA134_minS);
    static final char[] DFA134_max = DFA.unpackEncodedStringToUnsignedChars(DFA134_maxS);
    static final short[] DFA134_accept = DFA.unpackEncodedString(DFA134_acceptS);
    static final short[] DFA134_special = DFA.unpackEncodedString(DFA134_specialS);
    static final short[][] DFA134_transition;

    static {
        int numStates = DFA134_transitionS.length;
        DFA134_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA134_transition[i] = DFA.unpackEncodedString(DFA134_transitionS[i]);
        }
    }

    class DFA134 extends DFA {

        public DFA134(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 134;
            this.eot = DFA134_eot;
            this.eof = DFA134_eof;
            this.min = DFA134_min;
            this.max = DFA134_max;
            this.accept = DFA134_accept;
            this.special = DFA134_special;
            this.transition = DFA134_transition;
        }
        public String getDescription() {
            return "1392:3: (ret= tcs_equalsexp | ret= tcs_booleanpropertyexp | ret= tcs_isdefinedexp | ret= tcs_oneexp | ret= tcs_instanceofexp )";
        }
    }
 

    public static final BitSet FOLLOW_NAME_in_identifier69 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_identifierOrKeyword100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_identifierOrKeyword108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_identifierOrKeyword116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_identifierOrKeyword124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_identifierOrKeyword132 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_identifierOrKeyword140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_identifierOrKeyword148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_identifierOrKeyword156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_56_in_identifierOrKeyword164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_identifierOrKeyword172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_identifierOrKeyword180 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_identifierOrKeyword188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_60_in_identifierOrKeyword196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_identifierOrKeyword204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_identifierOrKeyword212 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_identifierOrKeyword220 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_identifierOrKeyword228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_identifierOrKeyword236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_identifierOrKeyword244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_identifierOrKeyword252 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_identifierOrKeyword260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_identifierOrKeyword268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_identifierOrKeyword276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_identifierOrKeyword284 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_identifierOrKeyword292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_identifierOrKeyword300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_74_in_identifierOrKeyword308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_identifierOrKeyword316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_identifierOrKeyword324 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_identifierOrKeyword332 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_identifierOrKeyword340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_79_in_identifierOrKeyword348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_identifierOrKeyword356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_identifierOrKeyword364 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_identifierOrKeyword372 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_identifierOrKeyword380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_identifierOrKeyword388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_identifierOrKeyword396 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_identifierOrKeyword404 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_87_in_identifierOrKeyword412 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_identifierOrKeyword420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_identifierOrKeyword428 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_identifierOrKeyword436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_91_in_identifierOrKeyword444 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_identifierOrKeyword452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_93_in_identifierOrKeyword460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_94_in_identifierOrKeyword468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_95_in_identifierOrKeyword476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_96_in_identifierOrKeyword484 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_97_in_identifierOrKeyword492 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_98_in_identifierOrKeyword500 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_99_in_identifierOrKeyword508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_100_in_identifierOrKeyword516 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_101_in_identifierOrKeyword524 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_102_in_identifierOrKeyword532 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_103_in_identifierOrKeyword540 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_104_in_identifierOrKeyword548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_105_in_identifierOrKeyword556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_106_in_identifierOrKeyword564 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_107_in_identifierOrKeyword572 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_108_in_identifierOrKeyword580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_109_in_identifierOrKeyword588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_110_in_identifierOrKeyword596 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_111_in_identifierOrKeyword604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_112_in_identifierOrKeyword612 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_identifierOrKeyword620 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_114_in_identifierOrKeyword628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_115_in_identifierOrKeyword636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_116_in_identifierOrKeyword644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_117_in_identifierOrKeyword652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_118_in_identifierOrKeyword660 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_119_in_identifierOrKeyword668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_120_in_identifierOrKeyword676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_121_in_identifierOrKeyword684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_122_in_identifierOrKeyword692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_123_in_identifierOrKeyword700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_124_in_identifierOrKeyword708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_125_in_identifierOrKeyword716 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_126_in_identifierOrKeyword724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_127_in_identifierOrKeyword732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_128_in_identifierOrKeyword740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_129_in_identifierOrKeyword748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_130_in_identifierOrKeyword756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_131_in_identifierOrKeyword764 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_132_in_identifierOrKeyword772 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_133_in_identifierOrKeyword780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_134_in_identifierOrKeyword788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_135_in_identifierOrKeyword796 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_136_in_identifierOrKeyword804 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_137_in_identifierOrKeyword812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_138_in_identifierOrKeyword820 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_139_in_identifierOrKeyword828 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_140_in_identifierOrKeyword836 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_stringSymbol867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INT_in_integerSymbol898 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FLOAT_in_floatSymbol929 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_model_namespace_in_model_classifier969 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_DLCOLON_in_model_classifier976 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_identifier_in_model_classifier984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_model_classifier1003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_model_generalizableelement_in_primary_model_namespace1049 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_primary_model_namespace1058 = new BitSet(new long[]{0x0000000000000210L});
    public static final BitSet FOLLOW_model_namespace_in_primary_model_namespace1064 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_RPAREN_in_primary_model_namespace1068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_model_namespace_in_dblcolon_priority_01106 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_DLCOLON_in_dblcolon_priority_01115 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_model_modelelement_in_dblcolon_priority_01123 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_dblcolon_priority_0_in_model_namespace1155 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_model_generalizableelement1188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_model_modelelement1236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_concretesyntax_in_main1306 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_main1309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_134_in_tcs_concretesyntax1340 = new BitSet(new long[]{0x0000000000001210L,0x0000000400000000L});
    public static final BitSet FOLLOW_identifier_in_tcs_concretesyntax1347 = new BitSet(new long[]{0x0000000000001200L,0x0000000400000000L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_concretesyntax1362 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_76_in_tcs_concretesyntax1366 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_concretesyntax1370 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_integerSymbol_in_tcs_concretesyntax1378 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_concretesyntax1385 = new BitSet(new long[]{0x0000000000001000L,0x0000000400000000L});
    public static final BitSet FOLLOW_tcs_partitionhandling_in_tcs_concretesyntax1412 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_LCURLY_in_tcs_concretesyntax1432 = new BitSet(new long[]{0x8200000000002000L,0x4400400022000401L,0x0000000000001008L});
    public static final BitSet FOLLOW_tcs_template_in_tcs_concretesyntax1443 = new BitSet(new long[]{0x8200000000002000L,0x4400400022000401L,0x0000000000001008L});
    public static final BitSet FOLLOW_tcs_template_in_tcs_concretesyntax1451 = new BitSet(new long[]{0x8200000000002000L,0x4400400022000401L,0x0000000000001008L});
    public static final BitSet FOLLOW_64_in_tcs_concretesyntax1468 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_LCURLY_in_tcs_concretesyntax1472 = new BitSet(new long[]{0x0000000000002810L});
    public static final BitSet FOLLOW_tcs_keyword_in_tcs_concretesyntax1483 = new BitSet(new long[]{0x0000000000002810L});
    public static final BitSet FOLLOW_tcs_keyword_in_tcs_concretesyntax1491 = new BitSet(new long[]{0x0000000000002810L});
    public static final BitSet FOLLOW_RCURLY_in_tcs_concretesyntax1506 = new BitSet(new long[]{0x0000000000002000L,0x4400400020000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_93_in_tcs_concretesyntax1529 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_LCURLY_in_tcs_concretesyntax1533 = new BitSet(new long[]{0x0000000000002810L});
    public static final BitSet FOLLOW_tcs_symbol_in_tcs_concretesyntax1544 = new BitSet(new long[]{0x0000000000002810L});
    public static final BitSet FOLLOW_tcs_symbol_in_tcs_concretesyntax1552 = new BitSet(new long[]{0x0000000000002810L});
    public static final BitSet FOLLOW_RCURLY_in_tcs_concretesyntax1567 = new BitSet(new long[]{0x0000000000002000L,0x4400400000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_tcs_operatorlist_in_tcs_concretesyntax1588 = new BitSet(new long[]{0x0000000000002000L,0x4400400000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_tcs_operatorlist_in_tcs_concretesyntax1596 = new BitSet(new long[]{0x0000000000002000L,0x4400400000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_tcs_token_in_tcs_concretesyntax1611 = new BitSet(new long[]{0x0000000000002000L,0x0400400000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_tcs_token_in_tcs_concretesyntax1619 = new BitSet(new long[]{0x0000000000002000L,0x0400400000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_122_in_tcs_concretesyntax1636 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_concretesyntax1640 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_concretesyntax1648 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_SEMI_in_tcs_concretesyntax1655 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_RCURLY_in_tcs_concretesyntax1676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_model_classifier_in_reference1721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RARROW_in_reference1737 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_identifier_in_reference1745 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_DLCOLON_in_reference1754 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_identifier_in_reference1762 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_tcs_contexttemplate_in_tcs_template1803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_primitivetemplate_in_tcs_template1811 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_enumerationtemplate_in_tcs_template1819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_functiontemplate_in_tcs_template1827 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_classtemplate_in_tcs_contexttemplate1854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_operatortemplate_in_tcs_contexttemplate1862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_tcs_primitivetemplate1892 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_identifier_in_tcs_primitivetemplate1899 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_120_in_tcs_primitivetemplate1905 = new BitSet(new long[]{0x0000000000008210L});
    public static final BitSet FOLLOW_reference_in_tcs_primitivetemplate1908 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000080L});
    public static final BitSet FOLLOW_71_in_tcs_primitivetemplate1918 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_95_in_tcs_primitivetemplate1936 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_identifier_in_tcs_primitivetemplate1943 = new BitSet(new long[]{0x0000000000010000L,0x0000000000800000L});
    public static final BitSet FOLLOW_87_in_tcs_primitivetemplate1955 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_COLON_in_tcs_primitivetemplate1974 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_125_in_tcs_primitivetemplate1978 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_primitivetemplate1982 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_primitivetemplate1990 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_COMA_in_tcs_primitivetemplate2003 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_68_in_tcs_primitivetemplate2007 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_primitivetemplate2011 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_primitivetemplate2019 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_SEMI_in_tcs_primitivetemplate2039 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_textblockdefinition_textblockdefinition_in_tcs_primitivetemplate2047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_131_in_tcs_enumerationtemplate2092 = new BitSet(new long[]{0x0000000000008210L});
    public static final BitSet FOLLOW_reference_in_tcs_enumerationtemplate2095 = new BitSet(new long[]{0x0000000000014000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_128_in_tcs_enumerationtemplate2105 = new BitSet(new long[]{0x0000000000014000L});
    public static final BitSet FOLLOW_COLON_in_tcs_enumerationtemplate2133 = new BitSet(new long[]{0x0000000000044000L});
    public static final BitSet FOLLOW_tcs_enumliteralmapping_in_tcs_enumerationtemplate2144 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_COMA_in_tcs_enumerationtemplate2153 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_tcs_enumliteralmapping_in_tcs_enumerationtemplate2161 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_SEMI_in_tcs_enumerationtemplate2176 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_SEMI_in_tcs_enumerationtemplate2193 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_textblockdefinition_textblockdefinition_in_tcs_enumerationtemplate2207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_enumliteralval_in_tcs_enumliteralmapping2256 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_enumliteralmapping2263 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_tcs_literalref_in_tcs_enumliteralmapping2271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_74_in_tcs_classtemplate2314 = new BitSet(new long[]{0x0000000000008210L});
    public static final BitSet FOLLOW_reference_in_tcs_classtemplate2317 = new BitSet(new long[]{0x0100000000054200L,0x9004201400014040L,0x0000000000000010L});
    public static final BitSet FOLLOW_114_in_tcs_classtemplate2327 = new BitSet(new long[]{0x0000000000014000L,0x0000000400000000L});
    public static final BitSet FOLLOW_SHARP_in_tcs_classtemplate2347 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_identifier_in_tcs_classtemplate2355 = new BitSet(new long[]{0x0100000000014200L,0x9000201400014040L,0x0000000000000010L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_classtemplate2381 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_61_in_tcs_classtemplate2385 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_classtemplate2389 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_classtemplate2397 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_classtemplate2404 = new BitSet(new long[]{0x0100000000014200L,0x9000201400014040L,0x0000000000000010L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_classtemplate2428 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_52_in_tcs_classtemplate2432 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_classtemplate2436 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_classtemplate2444 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_classtemplate2451 = new BitSet(new long[]{0x0100000000014200L,0x9000201400014040L,0x0000000000000010L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_classtemplate2475 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_115_in_tcs_classtemplate2479 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_classtemplate2483 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_classtemplate2491 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_classtemplate2498 = new BitSet(new long[]{0x0100000000014000L,0x9000201400014040L,0x0000000000000010L});
    public static final BitSet FOLLOW_56_in_tcs_classtemplate2521 = new BitSet(new long[]{0x0000000000014000L,0x9000201400014040L,0x0000000000000010L});
    public static final BitSet FOLLOW_100_in_tcs_classtemplate2545 = new BitSet(new long[]{0x0000000000014000L,0x9000200400014040L,0x0000000000000010L});
    public static final BitSet FOLLOW_109_in_tcs_classtemplate2575 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_124_in_tcs_classtemplate2593 = new BitSet(new long[]{0x0000000000014000L,0x8000000400014040L,0x0000000000000010L});
    public static final BitSet FOLLOW_127_in_tcs_classtemplate2617 = new BitSet(new long[]{0x0000000000014200L,0x0000000400014040L,0x0000000000000010L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_classtemplate2627 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_identifier_in_tcs_classtemplate2635 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_classtemplate2642 = new BitSet(new long[]{0x0000000000014000L,0x0000000400014040L,0x0000000000000010L});
    public static final BitSet FOLLOW_80_in_tcs_classtemplate2680 = new BitSet(new long[]{0x0000000000014200L,0x0000000400004040L,0x0000000000000010L});
    public static final BitSet FOLLOW_tcs_contexttags_in_tcs_classtemplate2693 = new BitSet(new long[]{0x0000000000014000L,0x0000000400004040L,0x0000000000000010L});
    public static final BitSet FOLLOW_70_in_tcs_classtemplate2733 = new BitSet(new long[]{0x0000000000014000L,0x0000000400004000L,0x0000000000000010L});
    public static final BitSet FOLLOW_78_in_tcs_classtemplate2757 = new BitSet(new long[]{0x0000000000014000L,0x0000000400000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_132_in_tcs_classtemplate2781 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_COLON_in_tcs_classtemplate2788 = new BitSet(new long[]{0xFFFE000031288230L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequence_in_tcs_classtemplate2799 = new BitSet(new long[]{0x0000000000014000L,0x0000000400000000L});
    public static final BitSet FOLLOW_tcs_partitionhandling_in_tcs_classtemplate2841 = new BitSet(new long[]{0x0000000000014000L});
    public static final BitSet FOLLOW_COLON_in_tcs_classtemplate2870 = new BitSet(new long[]{0xFFFE000031288230L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequence_in_tcs_classtemplate2881 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_SEMI_in_tcs_classtemplate2891 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_SEMI_in_tcs_classtemplate2908 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_textblockdefinition_textblockdefinition_in_tcs_classtemplate2922 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_98_in_tcs_partitionhandling2967 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_LCURLY_in_tcs_partitionhandling2971 = new BitSet(new long[]{0x0000000000002000L,0x0010100000000000L,0x0000000000000021L});
    public static final BitSet FOLLOW_108_in_tcs_partitionhandling2984 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_partitionhandling2988 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_identifier_in_tcs_partitionhandling2996 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_COMA_in_tcs_partitionhandling3003 = new BitSet(new long[]{0x0000000000002000L,0x0010000000000000L,0x0000000000000021L});
    public static final BitSet FOLLOW_128_in_tcs_partitionhandling3026 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_COMA_in_tcs_partitionhandling3030 = new BitSet(new long[]{0x0000000000002000L,0x0010000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_133_in_tcs_partitionhandling3055 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_partitionhandling3059 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_identifier_in_tcs_partitionhandling3067 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_COMA_in_tcs_partitionhandling3074 = new BitSet(new long[]{0x0000000000002000L,0x0010000000000000L});
    public static final BitSet FOLLOW_116_in_tcs_partitionhandling3097 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_partitionhandling3101 = new BitSet(new long[]{0x0008000000000000L,0x0200000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_tcs_partitioncontentenum_in_tcs_partitionhandling3109 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_COMA_in_tcs_partitionhandling3116 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_RCURLY_in_tcs_partitionhandling3137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_tcs_partitioncontentenum3179 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_136_in_tcs_partitioncontentenum3189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_121_in_tcs_partitioncontentenum3199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_tcs_operatortemplate3230 = new BitSet(new long[]{0x0000000000008210L});
    public static final BitSet FOLLOW_reference_in_tcs_operatortemplate3233 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_operatortemplate3238 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_126_in_tcs_operatortemplate3242 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_operatortemplate3246 = new BitSet(new long[]{0x0000000000020010L});
    public static final BitSet FOLLOW_identifier_in_tcs_operatortemplate3254 = new BitSet(new long[]{0x0000000000020010L});
    public static final BitSet FOLLOW_identifier_in_tcs_operatortemplate3262 = new BitSet(new long[]{0x0000000000020010L});
    public static final BitSet FOLLOW_COMA_in_tcs_operatortemplate3274 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_105_in_tcs_operatortemplate3278 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_operatortemplate3282 = new BitSet(new long[]{0xFFFE000000008010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_propertyreference_in_tcs_operatortemplate3290 = new BitSet(new long[]{0x0000000000020400L});
    public static final BitSet FOLLOW_COMA_in_tcs_operatortemplate3303 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_107_in_tcs_operatortemplate3307 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_operatortemplate3311 = new BitSet(new long[]{0xFFFE000000008010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_propertyreference_in_tcs_operatortemplate3319 = new BitSet(new long[]{0x0000000000020400L});
    public static final BitSet FOLLOW_COMA_in_tcs_operatortemplate3345 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_tcs_operatortemplate3349 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_operatortemplate3353 = new BitSet(new long[]{0xFFFE000000008010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_propertyreference_in_tcs_operatortemplate3361 = new BitSet(new long[]{0x0000000000020400L});
    public static final BitSet FOLLOW_COMA_in_tcs_operatortemplate3387 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_61_in_tcs_operatortemplate3391 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_operatortemplate3395 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_operatortemplate3403 = new BitSet(new long[]{0x0000000000020400L});
    public static final BitSet FOLLOW_COMA_in_tcs_operatortemplate3429 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_52_in_tcs_operatortemplate3433 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_operatortemplate3437 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_operatortemplate3445 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_operatortemplate3465 = new BitSet(new long[]{0x0000000000014000L,0x0004000000010000L});
    public static final BitSet FOLLOW_114_in_tcs_operatortemplate3475 = new BitSet(new long[]{0x0000000000014000L});
    public static final BitSet FOLLOW_80_in_tcs_operatortemplate3494 = new BitSet(new long[]{0x0000000000014200L});
    public static final BitSet FOLLOW_tcs_contexttags_in_tcs_operatortemplate3507 = new BitSet(new long[]{0x0000000000014000L});
    public static final BitSet FOLLOW_COLON_in_tcs_operatortemplate3558 = new BitSet(new long[]{0xFFFE000031288230L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequence_in_tcs_operatortemplate3569 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_SEMI_in_tcs_operatortemplate3579 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_SEMI_in_tcs_operatortemplate3596 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_textblockdefinition_textblockdefinition_in_tcs_operatortemplate3610 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_tcs_functiontemplate3655 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_identifier_in_tcs_functiontemplate3662 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_functiontemplate3669 = new BitSet(new long[]{0x0000000000008210L});
    public static final BitSet FOLLOW_reference_in_tcs_functiontemplate3673 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_functiontemplate3678 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_COLON_in_tcs_functiontemplate3686 = new BitSet(new long[]{0xFFFE000031288230L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequence_in_tcs_functiontemplate3697 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_SEMI_in_tcs_functiontemplate3707 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_contexttags3752 = new BitSet(new long[]{0x0000000000000410L});
    public static final BitSet FOLLOW_identifier_in_tcs_contexttags3760 = new BitSet(new long[]{0x0000000000020400L});
    public static final BitSet FOLLOW_COMA_in_tcs_contexttags3769 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_identifier_in_tcs_contexttags3777 = new BitSet(new long[]{0x0000000000020400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_contexttags3789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_sequenceelement_in_tcs_sequence__impl3834 = new BitSet(new long[]{0xFFFE000031288232L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequenceelement_in_tcs_sequence__impl3842 = new BitSet(new long[]{0xFFFE000031288232L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequence__impl_in_tcs_sequence3887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_sequenceinalternative_in_tcs_sequence3892 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_literalref_in_tcs_sequenceelement3921 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_property_in_tcs_sequenceelement3929 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_customseparator_in_tcs_sequenceelement3937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_block_in_tcs_sequenceelement3945 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_conditionalelement_in_tcs_sequenceelement3953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_alternative_in_tcs_sequenceelement3961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_functioncall_in_tcs_sequenceelement3969 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_injectoractionsblock_in_tcs_sequenceelement3977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_literalref4011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierOrKeyword_in_tcs_propertyreference4067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RARROW_in_tcs_propertyreference4083 = new BitSet(new long[]{0xFFFE000000000012L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_identifierOrKeyword_in_tcs_propertyreference4091 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_propertyreference_in_tcs_property4146 = new BitSet(new long[]{0x0000000000001002L});
    public static final BitSet FOLLOW_LCURLY_in_tcs_property4159 = new BitSet(new long[]{0x7C00000000002000L,0x00C1040600600000L,0x0000000000000086L});
    public static final BitSet FOLLOW_tcs_propertyarg_in_tcs_property4167 = new BitSet(new long[]{0x0000000000022000L});
    public static final BitSet FOLLOW_COMA_in_tcs_property4176 = new BitSet(new long[]{0x7C00000000000000L,0x00C1040600600000L,0x0000000000000086L});
    public static final BitSet FOLLOW_tcs_propertyarg_in_tcs_property4184 = new BitSet(new long[]{0x0000000000022000L});
    public static final BitSet FOLLOW_RCURLY_in_tcs_property4196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LT_in_tcs_customseparator4254 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_identifier_in_tcs_customseparator4262 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_GT_in_tcs_customseparator4269 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LSQUARE_in_tcs_block4314 = new BitSet(new long[]{0xFFFE000031288230L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequence_in_tcs_block4322 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_RSQUARE_in_tcs_block4329 = new BitSet(new long[]{0x0000000000001002L});
    public static final BitSet FOLLOW_LCURLY_in_tcs_block4340 = new BitSet(new long[]{0x0000000000002000L,0x0000000010140A00L});
    public static final BitSet FOLLOW_tcs_blockarg_in_tcs_block4348 = new BitSet(new long[]{0x0000000000022000L});
    public static final BitSet FOLLOW_COMA_in_tcs_block4357 = new BitSet(new long[]{0x0000000000000000L,0x0000000010140A00L});
    public static final BitSet FOLLOW_tcs_blockarg_in_tcs_block4365 = new BitSet(new long[]{0x0000000000022000L});
    public static final BitSet FOLLOW_RCURLY_in_tcs_block4377 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_conditionalelement4435 = new BitSet(new long[]{0xFFFE000000808010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_expression_in_tcs_conditionalelement4443 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_QMARK_in_tcs_conditionalelement4452 = new BitSet(new long[]{0xFFFE000031288230L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequence_in_tcs_conditionalelement4460 = new BitSet(new long[]{0x0000000000010400L});
    public static final BitSet FOLLOW_COLON_in_tcs_conditionalelement4473 = new BitSet(new long[]{0xFFFE000031288230L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequence_in_tcs_conditionalelement4481 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_conditionalelement4501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DLSQUARE_in_tcs_alternative4546 = new BitSet(new long[]{0xFFFE000037288230L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequenceinalternative_in_tcs_alternative4554 = new BitSet(new long[]{0x0000000006000000L});
    public static final BitSet FOLLOW_PIPE_in_tcs_alternative4563 = new BitSet(new long[]{0xFFFE000037288230L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequenceinalternative_in_tcs_alternative4571 = new BitSet(new long[]{0x0000000006000000L});
    public static final BitSet FOLLOW_DRSQUARE_in_tcs_alternative4583 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_STAR_in_tcs_alternative4594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_tcs_sequenceinalternative4659 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_sequenceinalternative4663 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_sequenceinalternative4671 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_sequenceinalternative4678 = new BitSet(new long[]{0xFFFE000031288232L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequenceelement_in_tcs_sequenceinalternative4699 = new BitSet(new long[]{0xFFFE000031288232L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequenceelement_in_tcs_sequenceinalternative4707 = new BitSet(new long[]{0xFFFE000031288232L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_DOLLAR_in_tcs_functioncall4756 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_identifier_in_tcs_functioncall4764 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DLCURLY_in_tcs_injectoractionsblock4811 = new BitSet(new long[]{0xFFFE000040008010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_injectoraction_in_tcs_injectoractionsblock4819 = new BitSet(new long[]{0x0000000040020000L});
    public static final BitSet FOLLOW_COMA_in_tcs_injectoractionsblock4828 = new BitSet(new long[]{0xFFFE000000008010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_injectoraction_in_tcs_injectoractionsblock4836 = new BitSet(new long[]{0x0000000040020000L});
    public static final BitSet FOLLOW_DRCURLY_in_tcs_injectoractionsblock4848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_propertyinit_in_tcs_injectoraction4889 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_primitivepropertyinit_in_tcs_propertyinit4916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_lookuppropertyinit_in_tcs_propertyinit4924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_foreachpredicatepropertyinit_in_tcs_propertyinit4932 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_propertyreference_in_tcs_primitivepropertyinit4966 = new BitSet(new long[]{0x0000000080000800L});
    public static final BitSet FOLLOW_LARROW_in_tcs_primitivepropertyinit4979 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_EQ_in_tcs_primitivepropertyinit4994 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_identifier_in_tcs_primitivepropertyinit5009 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_propertyreference_in_tcs_lookuppropertyinit5056 = new BitSet(new long[]{0x0000000080000800L});
    public static final BitSet FOLLOW_LARROW_in_tcs_lookuppropertyinit5069 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_EQ_in_tcs_lookuppropertyinit5084 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_135_in_tcs_lookuppropertyinit5095 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_lookuppropertyinit5099 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_lookuppropertyinit5107 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_lookuppropertyinit5114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_propertyreference_in_tcs_foreachpredicatepropertyinit5159 = new BitSet(new long[]{0x0000000080000800L});
    public static final BitSet FOLLOW_LARROW_in_tcs_foreachpredicatepropertyinit5172 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_EQ_in_tcs_foreachpredicatepropertyinit5187 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_tcs_foreachpredicatepropertyinit5198 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_foreachpredicatepropertyinit5202 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_foreachpredicatepropertyinit5210 = new BitSet(new long[]{0x0000000000020400L});
    public static final BitSet FOLLOW_COMA_in_tcs_foreachpredicatepropertyinit5223 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_119_in_tcs_foreachpredicatepropertyinit5227 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_foreachpredicatepropertyinit5231 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_foreachpredicatepropertyinit5239 = new BitSet(new long[]{0x0000000000020400L});
    public static final BitSet FOLLOW_COMA_in_tcs_foreachpredicatepropertyinit5265 = new BitSet(new long[]{0x0000000000000400L,0x00C0000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_tcs_predicatesemantic_in_tcs_foreachpredicatepropertyinit5273 = new BitSet(new long[]{0x0000000000020400L});
    public static final BitSet FOLLOW_COMA_in_tcs_foreachpredicatepropertyinit5282 = new BitSet(new long[]{0x0000000000000000L,0x00C0000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_tcs_predicatesemantic_in_tcs_foreachpredicatepropertyinit5290 = new BitSet(new long[]{0x0000000000020400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_foreachpredicatepropertyinit5315 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_139_in_tcs_predicatesemantic5362 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_predicatesemantic5366 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_predicatesemantic5374 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_COMA_in_tcs_predicatesemantic5381 = new BitSet(new long[]{0x0000000000000000L,0x00C0000000000000L});
    public static final BitSet FOLLOW_119_in_tcs_predicatesemantic5404 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_predicatesemantic5408 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_predicatesemantic5416 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_COMA_in_tcs_predicatesemantic5423 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_118_in_tcs_predicatesemantic5440 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_predicatesemantic5444 = new BitSet(new long[]{0xFFFE000000000012L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_identifierOrKeyword_in_tcs_predicatesemantic5452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_referstoparg_in_tcs_propertyarg5494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_lookinparg_in_tcs_propertyarg5502 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_createinparg_in_tcs_propertyarg5510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_asparg_in_tcs_propertyarg5518 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_separatorparg_in_tcs_propertyarg5526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_disambiguateparg_in_tcs_propertyarg5534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_autocreateparg_in_tcs_propertyarg5542 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_importcontextparg_in_tcs_propertyarg5550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_partialparg_in_tcs_propertyarg5558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_forcedlowerparg_in_tcs_propertyarg5566 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_forcedupperparg_in_tcs_propertyarg5574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_createasparg_in_tcs_propertyarg5582 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_queryparg_in_tcs_propertyarg5590 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_filterparg_in_tcs_propertyarg5598 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_modeparg_in_tcs_propertyarg5606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_partitionhandlingparg_in_tcs_propertyarg5614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_tcs_referstoparg5644 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_referstoparg5648 = new BitSet(new long[]{0xFFFE000000000010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_identifierOrKeyword_in_tcs_referstoparg5656 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_135_in_tcs_lookinparg5699 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_lookinparg5703 = new BitSet(new long[]{0xFFFE000000040010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_SHARP_in_tcs_lookinparg5714 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_tcs_lookinparg5718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierOrKeyword_in_tcs_lookinparg5735 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_POINT_in_tcs_lookinparg5744 = new BitSet(new long[]{0xFFFE000000000010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_identifierOrKeyword_in_tcs_lookinparg5752 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_112_in_tcs_createinparg5805 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_createinparg5809 = new BitSet(new long[]{0xFFFE000000000010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_identifierOrKeyword_in_tcs_createinparg5817 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_POINT_in_tcs_createinparg5826 = new BitSet(new long[]{0xFFFE000000000010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_identifierOrKeyword_in_tcs_createinparg5834 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_118_in_tcs_asparg5880 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_asparg5884 = new BitSet(new long[]{0xFFFE000000000010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_identifierOrKeyword_in_tcs_asparg5892 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_129_in_tcs_separatorparg5935 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_separatorparg5939 = new BitSet(new long[]{0xFFFE000031288230L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequence_in_tcs_separatorparg5947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_tcs_disambiguateparg5990 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_disambiguateparg5994 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_disambiguateparg6002 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_tcs_autocreateparg6045 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_autocreateparg6049 = new BitSet(new long[]{0x0004000000000000L,0x0002000100000000L});
    public static final BitSet FOLLOW_tcs_autocreatekind_in_tcs_autocreateparg6057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_96_in_tcs_autocreatekind6101 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_tcs_autocreatekind6111 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_tcs_autocreatekind6121 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_tcs_importcontextparg6152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_60_in_tcs_partialparg6192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_tcs_forcedlowerparg6232 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_forcedlowerparg6236 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_integerSymbol_in_tcs_forcedlowerparg6244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_97_in_tcs_forcedupperparg6287 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_forcedupperparg6291 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_integerSymbol_in_tcs_forcedupperparg6299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_tcs_createasparg6342 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_createasparg6346 = new BitSet(new long[]{0xFFFE000000000010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_identifierOrKeyword_in_tcs_createasparg6354 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_DLCOLON_in_tcs_createasparg6363 = new BitSet(new long[]{0xFFFE000000000010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_identifierOrKeyword_in_tcs_createasparg6371 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_130_in_tcs_queryparg6417 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_queryparg6421 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_queryparg6429 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_106_in_tcs_filterparg6472 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_filterparg6476 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_filterparg6484 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_COMA_in_tcs_filterparg6497 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_111_in_tcs_filterparg6501 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_filterparg6505 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_filterparg6513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_119_in_tcs_modeparg6569 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_modeparg6573 = new BitSet(new long[]{0xFFFE000000000010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_identifierOrKeyword_in_tcs_modeparg6581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_partitionhandling_in_tcs_partitionhandlingparg6628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_nbnlbarg_in_tcs_blockarg6668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_indentincrbarg_in_tcs_blockarg6676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_startnlbarg_in_tcs_blockarg6684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_startnbnlbarg_in_tcs_blockarg6692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_endnlbarg_in_tcs_blockarg6700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_tcs_nbnlbarg6730 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_nbnlbarg6734 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_integerSymbol_in_tcs_nbnlbarg6742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_tcs_indentincrbarg6785 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_indentincrbarg6789 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_integerSymbol_in_tcs_indentincrbarg6797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_tcs_startnlbarg6840 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_startnlbarg6844 = new BitSet(new long[]{0x0000000000000000L,0x0020000000020000L});
    public static final BitSet FOLLOW_81_in_tcs_startnlbarg6854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_117_in_tcs_startnlbarg6867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_tcs_startnbnlbarg6914 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_startnbnlbarg6918 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_integerSymbol_in_tcs_startnbnlbarg6926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_tcs_endnlbarg6969 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_endnlbarg6973 = new BitSet(new long[]{0x0000000000000000L,0x0020000000020000L});
    public static final BitSet FOLLOW_81_in_tcs_endnlbarg6983 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_117_in_tcs_endnlbarg6996 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_tcs_symbol7047 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_symbol7056 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_symbol7064 = new BitSet(new long[]{0x0000000000014000L});
    public static final BitSet FOLLOW_COLON_in_tcs_symbol7077 = new BitSet(new long[]{0x00A0000000004000L,0x0000010800000000L});
    public static final BitSet FOLLOW_tcs_spacekind_in_tcs_symbol7085 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_COMA_in_tcs_symbol7094 = new BitSet(new long[]{0x00A0000000000000L,0x0000010800000000L});
    public static final BitSet FOLLOW_tcs_spacekind_in_tcs_symbol7102 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_SEMI_in_tcs_symbol7127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_tcs_spacekind7169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_tcs_spacekind7179 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_99_in_tcs_spacekind7189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_104_in_tcs_spacekind7199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_tcs_keyword7234 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_keyword7243 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_keyword7251 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_SEMI_in_tcs_keyword7258 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_126_in_tcs_operatorlist7299 = new BitSet(new long[]{0x0000000000001010L});
    public static final BitSet FOLLOW_identifier_in_tcs_operatorlist7312 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_LCURLY_in_tcs_operatorlist7332 = new BitSet(new long[]{0x0000000000002000L,0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_tcs_priority_in_tcs_operatorlist7343 = new BitSet(new long[]{0x0000000000002000L,0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_tcs_priority_in_tcs_operatorlist7351 = new BitSet(new long[]{0x0000000000002000L,0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_RCURLY_in_tcs_operatorlist7366 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_138_in_tcs_priority7407 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_integerSymbol_in_tcs_priority7414 = new BitSet(new long[]{0x0000000000021000L});
    public static final BitSet FOLLOW_COMA_in_tcs_priority7437 = new BitSet(new long[]{0x0000000000000000L,0x0000000009000000L});
    public static final BitSet FOLLOW_tcs_associativity_in_tcs_priority7445 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_LCURLY_in_tcs_priority7459 = new BitSet(new long[]{0x0000000000002810L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_tcs_operator_in_tcs_priority7470 = new BitSet(new long[]{0x0000000000002810L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_tcs_operator_in_tcs_priority7478 = new BitSet(new long[]{0x0000000000002810L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_RCURLY_in_tcs_priority7493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_137_in_tcs_operator7540 = new BitSet(new long[]{0x0000000000000810L});
    public static final BitSet FOLLOW_identifier_in_tcs_operator7562 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_operator7571 = new BitSet(new long[]{0x0000000000020030L});
    public static final BitSet FOLLOW_identifier_in_tcs_operator7590 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_operator7610 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_COMA_in_tcs_operator7635 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_integerSymbol_in_tcs_operator7643 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_SEMI_in_tcs_operator7650 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_tcs_associativity7692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_91_in_tcs_associativity7702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_andexp_in_tcs_expression7730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_atomexp_in_tcs_andexp7764 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_49_in_tcs_andexp7772 = new BitSet(new long[]{0xFFFE000000008010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_atomexp_in_tcs_andexp7779 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_tcs_equalsexp_in_tcs_atomexp7824 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_booleanpropertyexp_in_tcs_atomexp7832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_isdefinedexp_in_tcs_atomexp7840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_oneexp_in_tcs_atomexp7848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_instanceofexp_in_tcs_atomexp7856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_propertyreference_in_tcs_equalsexp7890 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_equalsexp7897 = new BitSet(new long[]{0x0000000200040060L});
    public static final BitSet FOLLOW_tcs_value_in_tcs_equalsexp7905 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_propertyreference_in_tcs_booleanpropertyexp7952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_tcs_isdefinedexp7995 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_isdefinedexp7999 = new BitSet(new long[]{0xFFFE000000008010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_propertyreference_in_tcs_isdefinedexp8007 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_isdefinedexp8014 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_tcs_oneexp8055 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_oneexp8059 = new BitSet(new long[]{0xFFFE000000008010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_propertyreference_in_tcs_oneexp8067 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_oneexp8074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_propertyreference_in_tcs_instanceofexp8119 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_tcs_instanceofexp8125 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_identifier_in_tcs_instanceofexp8132 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_DLCOLON_in_tcs_instanceofexp8141 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_identifier_in_tcs_instanceofexp8149 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_tcs_stringval_in_tcs_value8192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_integerval_in_tcs_value8200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_negativeintegerval_in_tcs_value8208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_enumliteralval_in_tcs_value8216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_stringval8250 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_integerSymbol_in_tcs_integerval8297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MINUS_in_tcs_negativeintegerval8341 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_integerSymbol_in_tcs_negativeintegerval8349 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SHARP_in_tcs_enumliteralval8393 = new BitSet(new long[]{0xFFFE000000000010L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_identifierOrKeyword_in_tcs_enumliteralval8401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_140_in_tcs_token8450 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_110_in_tcs_token8468 = new BitSet(new long[]{0x0000000000010010L});
    public static final BitSet FOLLOW_identifier_in_tcs_token8475 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_COLON_in_tcs_token8484 = new BitSet(new long[]{0x0000000000204020L,0x0800006000000000L});
    public static final BitSet FOLLOW_tcs_orpattern_in_tcs_token8492 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_SEMI_in_tcs_token8499 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_simplepattern_in_tcs_orpattern8544 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_PIPE_in_tcs_orpattern8553 = new BitSet(new long[]{0x0000000000200020L,0x0800006000000000L});
    public static final BitSet FOLLOW_tcs_simplepattern_in_tcs_orpattern8561 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_tcs_rulepattern_in_tcs_simplepattern8606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_stringpattern_in_tcs_simplepattern8614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_classpattern_in_tcs_simplepattern8622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_rule_in_tcs_rulepattern8656 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_wordrule_in_tcs_rule8696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_endoflinerule_in_tcs_rule8704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_multilinerule_in_tcs_rule8712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_102_in_tcs_wordrule8742 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_wordrule8746 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_90_in_tcs_wordrule8750 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_wordrule8754 = new BitSet(new long[]{0x0000000000220020L,0x0800006000000000L});
    public static final BitSet FOLLOW_tcs_orpattern_in_tcs_wordrule8762 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_COMA_in_tcs_wordrule8769 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_tcs_wordrule8773 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_wordrule8777 = new BitSet(new long[]{0x0000000000220420L,0x0800006000000000L});
    public static final BitSet FOLLOW_tcs_orpattern_in_tcs_wordrule8785 = new BitSet(new long[]{0x0000000000020400L});
    public static final BitSet FOLLOW_COMA_in_tcs_wordrule8798 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_69_in_tcs_wordrule8802 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_wordrule8806 = new BitSet(new long[]{0x0000000000200420L,0x0800006000000000L});
    public static final BitSet FOLLOW_tcs_orpattern_in_tcs_wordrule8814 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_wordrule8834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_123_in_tcs_endoflinerule8875 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_endoflinerule8879 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_90_in_tcs_endoflinerule8883 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_endoflinerule8887 = new BitSet(new long[]{0x0000000000000420L,0x0000000000080000L});
    public static final BitSet FOLLOW_83_in_tcs_endoflinerule8897 = new BitSet(new long[]{0x0000000000000420L});
    public static final BitSet FOLLOW_tcs_stringpattern_in_tcs_endoflinerule8919 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_endoflinerule8926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_101_in_tcs_multilinerule8967 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_multilinerule8971 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_90_in_tcs_multilinerule8975 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_multilinerule8979 = new BitSet(new long[]{0x0000000000020020L,0x0000000000080000L});
    public static final BitSet FOLLOW_83_in_tcs_multilinerule8989 = new BitSet(new long[]{0x0000000000020020L});
    public static final BitSet FOLLOW_tcs_stringpattern_in_tcs_multilinerule9011 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_COMA_in_tcs_multilinerule9018 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_69_in_tcs_multilinerule9022 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_multilinerule9026 = new BitSet(new long[]{0x0000000000020420L,0x0000000000080000L});
    public static final BitSet FOLLOW_83_in_tcs_multilinerule9036 = new BitSet(new long[]{0x0000000000020420L});
    public static final BitSet FOLLOW_tcs_stringpattern_in_tcs_multilinerule9058 = new BitSet(new long[]{0x0000000000020400L});
    public static final BitSet FOLLOW_COMA_in_tcs_multilinerule9071 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_103_in_tcs_multilinerule9075 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_tcs_multilinerule9079 = new BitSet(new long[]{0x0000000000020420L});
    public static final BitSet FOLLOW_tcs_stringpattern_in_tcs_multilinerule9087 = new BitSet(new long[]{0x0000000000020400L});
    public static final BitSet FOLLOW_COMA_in_tcs_multilinerule9100 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_LPAREN_in_tcs_multilinerule9105 = new BitSet(new long[]{0x0000000100000410L,0x0000000040000008L});
    public static final BitSet FOLLOW_tcs_mapping_in_tcs_multilinerule9113 = new BitSet(new long[]{0x0000000000020400L});
    public static final BitSet FOLLOW_COMA_in_tcs_multilinerule9122 = new BitSet(new long[]{0x0000000100000010L,0x0000000040000008L});
    public static final BitSet FOLLOW_tcs_mapping_in_tcs_multilinerule9130 = new BitSet(new long[]{0x0000000000020400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_multilinerule9142 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_RPAREN_in_tcs_multilinerule9173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_simplemapping_in_tcs_mapping9211 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_wildcardmapping_in_tcs_mapping9219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_octalmapping_in_tcs_mapping9227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_hexadecimalmapping_in_tcs_mapping9235 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_tcs_simplemapping9269 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_RARROW_in_tcs_simplemapping9276 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_identifier_in_tcs_simplemapping9284 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_POINT_in_tcs_wildcardmapping9328 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_RARROW_in_tcs_wildcardmapping9333 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_POINT_in_tcs_wildcardmapping9338 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_tcs_octalmapping9379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_94_in_tcs_hexadecimalmapping9419 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringSymbol_in_tcs_stringpattern9463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LSQUARE_in_tcs_classpattern9509 = new BitSet(new long[]{0x0000000000400010L});
    public static final BitSet FOLLOW_identifier_in_tcs_classpattern9517 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_RSQUARE_in_tcs_classpattern9526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DLCOLON_in_synpred95_TCS1109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_textblockdefinition_textblockdefinition_in_synpred122_TCS2047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_textblockdefinition_textblockdefinition_in_synpred127_TCS2207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_textblockdefinition_textblockdefinition_in_synpred146_TCS2922 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_textblockdefinition_textblockdefinition_in_synpred163_TCS3610 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_sequenceelement_in_synpred166_TCS3842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_sequenceelement_in_synpred167_TCS3834 = new BitSet(new long[]{0xFFFE000031288232L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequenceelement_in_synpred167_TCS3842 = new BitSet(new long[]{0xFFFE000031288232L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequence__impl_in_synpred168_TCS3887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierOrKeyword_in_synpred177_TCS4091 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_expression_in_synpred184_TCS4443 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_sequenceinalternative_in_synpred187_TCS4554 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_PIPE_in_synpred187_TCS4563 = new BitSet(new long[]{0xFFFE000033288230L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequenceinalternative_in_synpred187_TCS4571 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_tcs_sequenceelement_in_synpred190_TCS4707 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_sequenceelement_in_synpred191_TCS4699 = new BitSet(new long[]{0xFFFE000031288232L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_tcs_sequenceelement_in_synpred191_TCS4707 = new BitSet(new long[]{0xFFFE000031288232L,0xFFFFFFFFFFFFFFFFL,0x0000000000001FFFL});
    public static final BitSet FOLLOW_COMA_in_synpred199_TCS5223 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_119_in_synpred199_TCS5227 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EQ_in_synpred199_TCS5231 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_stringSymbol_in_synpred199_TCS5239 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tcs_simplepattern_in_synpred266_TCS8544 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_PIPE_in_synpred266_TCS8553 = new BitSet(new long[]{0x0000000000200020L,0x0800006000000000L});
    public static final BitSet FOLLOW_tcs_simplepattern_in_synpred266_TCS8561 = new BitSet(new long[]{0x0000000002000002L});

}