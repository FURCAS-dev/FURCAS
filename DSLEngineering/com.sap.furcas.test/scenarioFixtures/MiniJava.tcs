/**
 * A simple Java-like language with classes, attributes and methods.
 * 
 */       
syntax MiniJava {

        primitiveTemplate identifier for EString default using NAME:
                value = "unescapeString(%token%)";
                
        primitiveTemplate packageName for EString using PACKAGE_NAME:
                value = "%token%";


		template Package :
			name{as=packageName}
			-- a package owns compilation units. However, we do not represent this in the concrete syntax
        ;

        template CompilationUnit main:
                "package" package_ ";" -- FIXME: how to prevent the re-creation if such a package does already exist? 
                imports
                containedClass
        ;
        
        template ClassImport :
                "import" importedClass{	referenceBy="OCL:self.name",
                						lookupScope="OCL:MiniJava::ClassDeclaration.allInstances()"} ";"
        ;
        
        template ClassDeclaration :
                visibility "class" name "{"
                        members
                "}"
        ;
        
        template TypedElement abstract;
        template NamedElement abstract;
        template MemberDeclaration abstract;
        
        template FieldDeclaration :
                visibility  
                [[ "void" | type {	referenceBy="OCL:self.name",
                					lookupScope="OCL:self.owningClass.compilationUnit.imports.importedClass"} ]]
                name
                ";"                
        ;
        
        template MethodDeclaration :
                visibility  
                [[ "void" | type {	referenceBy="OCL:self.name",
                					lookupScope="OCL:self.owningClass.compilationUnit.imports.importedClass"} ]]
                name "(" parameters{separator=","} ")"
                "{"
                        body
                "}"
        ;
        
        template Parameter :
                type {	referenceBy="OCL:self.name",
                		lookupScope="OCL:self.owningDeclaration.owningClass.compilationUnit.imports.importedClass"}
                name
        ;
        
        template Statement :
                "do" [[ "foo" | "bar" ]] ";" -- we just have this nonsense syntax for now...
        ;
        
        enumerationTemplate Visibility auto;

        symbols {
                lsquare         = "[";
                rsquare         = "]"   : rightSpace;
                excl            = "!";
                coma            = ","   : leftNone, rightSpace;
                lparen          = "(";
                rparen          = ")"   : leftNone, rightSpace;
                lcurly          = "{"   : leftSpace;
                rcurly          = "}"   : leftNone, rightSpace;
                semi            = ";"   : leftNone, rightSpace;
        }

               
        omitted token COMMENT                : endOfLine(start = "//");
        omitted token MULTI_LINE_COMMENT     : multiLine(start = "/*", end = "*/");
        
        
lexer = "
%options testLiterals = false;


NL
        :       (       '\\r' '\\n'
                |       '\\n' '\\r'     //Improbable
                |       '\\r'
                |       '\\n'
                )
        {newline();$channel=HIDDEN;}
        ;

WS
        :       (       ' '
                |       '\\t'
                ){$channel=HIDDEN;}
        ;

%protected
DIGIT
        :       '0'..'9'
        ;

%protected
ALPHA
        :       'a'..'z'
        |       'A'..'Z'
        |       '_'
        //For Unicode compatibility (from 0000 to 00ff)
        |       '\\u00C0' .. '\\u00D6'
        |       '\\u00D8' .. '\\u00F6'
        |       '\\u00F8' .. '\\u00FF'
        ;

%protected
SNAME
        :       (ALPHA) (ALPHA | DIGIT)*
;

BOOL    :       'true' | 'false'        ;

NAME
        :       (
                        SNAME
                |       '\\''!
                        (       
                //      ESC     |
                        '\\n' {newline();}
                        |       ~('\\\\'|'\\\''|'\\n')
                        )*
                        '\\''!
                )
        ;

PACKAGE_NAME :
        SNAME ('.' SNAME)*
	;

protected
INT
 : (DIGIT)+
 ;

%protected
FLOAT
        :       DIGIT+ '.' DIGIT*
        ;

STRING
        :       '\"'!
                (       
                //ESC   |               
                        '\\n' {newline();}
                |       ~('\\\\'|'\"'|'\\n')
                )*
                '\"'!
        ;

        "; 

}