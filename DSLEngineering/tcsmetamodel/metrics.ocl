-- Number of classes:


Mof::Model::Class.allInstances()->select(c |
  (c.container->notEmpty() and c.container.name='TCS') or
  (c.container.container->notEmpty() and c.container.container.name='TCS') or
  (c.container.container.container->notEmpty() and c.container.container.container.name='TCS'))->size()

87



-- Number of methods:

Mof::Model::Class.allInstances()->select(c |
  (c.container->notEmpty() and c.container.name='TCS') or
  (c.container.container->notEmpty() and c.container.container.name='TCS') or
  (c.container.container.container->notEmpty() and c.container.container.container.name='TCS')).contents->select(m |
		m.oclIsKindOf(Mof::Model::Operation))->size()


Constraints:

Mof::Model::Class.allInstances()->select(c |
  (c.container->notEmpty() and c.container.name='TCS') or
  (c.container.container->notEmpty() and c.container.container.name='TCS') or
  (c.container.container.container->notEmpty() and c.container.container.container.name='TCS')).contents->select(m |
		m.oclIsKindOf(Mof::Model::Constraint))->select(
			oc | oc.oclAsType(Mof::Model::Constraint).language='OCL'->size()


Number of property inits:

textblocks::PropertyInit.allInstances()->select

"Formatted" metamodel statistics:

Sequence{'Number of classes', Mof::Model::Class.allInstances()->select(c |
  (c.container->notEmpty() and c.container.name='TCS') or
  (c.container.container->notEmpty() and c.container.container.name='TCS') or
  (c.container.container.container->notEmpty() and c.container.container.container.name='TCS'))->size(),
         'Number of methods', Mof::Model::Class.allInstances()->select(c |
  (c.container->notEmpty() and c.container.name='TCS') or
  (c.container.container->notEmpty() and c.container.container.name='TCS') or
  (c.container.container.container->notEmpty() and c.container.container.container.name='TCS')).contents->select(m | m.oclIsKindOf(Mof::Model::Operation))->size(),
         'Number of OCL constraints/invariants', Mof::Model::Class.allInstances()->select(c |
  (c.container->notEmpty() and c.container.name='TCS') or
  (c.container.container->notEmpty() and c.container.container.name='TCS') or
  (c.container.container.container->notEmpty() and c.container.container.container.name='TCS')).contents->select(m | m.oclIsKindOf(Mof::Model::Constraint))->select(
		oc | oc.oclAsType(Mof::Model::Constraint).language='OCL')->size()}


