syntax AsParg {

	template test::expression::ExpressionContainer main
		:	"{" 
				-- the as argument doesn't really make sense here
				-- without a query argument. however, query has it's own test
				expression{ as = identifierOrKeyword } 
			"}"
	;
	
	template test::expression::IntegerExpression
		:	value
	;
	
	
	
	---------------------- BELOW IS A MINIMAL SYNTAX -------------------------------
		
	primitiveTemplate identifier for PrimitiveTypes::String default using NAME:
		value = "unescapeString(%token%)";

	primitiveTemplate identifierOrKeyword for PrimitiveTypes::String using NAME orKeyword:
		value = "unescapeString(%token%)";

	primitiveTemplate stringSymbol for PrimitiveTypes::String using STRING:
		value = "unescapeString(%token%)",
		serializer="'\\\"' + %value%.toCString() + '\\\"'";

	primitiveTemplate integerSymbol for PrimitiveTypes::Integer default using INT:
		value = "Integer.valueOf(%token%)";

	primitiveTemplate floatSymbol for PrimitiveTypes::Double default using FLOAT:
		value = "Double.valueOf(%token%)";

	token COMMENT	: endOfLine(start = "--");
	
}
