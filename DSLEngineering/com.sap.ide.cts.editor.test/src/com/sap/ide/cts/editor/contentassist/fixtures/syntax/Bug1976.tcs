syntax Bug1976 {

	template Model::Package main 
  	: $annotation
  	  "package" name "{"
  	  contents{mode=classes}
  	  contents{mode=associations}
  	  "}"
  	;
  
  template Model::ModelElement #classes abstract;
  template Model::Namespace #classes abstract;
  template Model::GeneralizableElement #classes abstract;
  template Model::Classifier #classes abstract;
  template Model::Class #classes
  	: $annotation
  	  $visibility
  	  (isAbstract?"abstract") "class" name ";"
  	;
  
  template Model::ModelElement #associations abstract;
  template Model::Namespace #associations abstract;
  template Model::GeneralizableElement #associations abstract;
  template Model::Classifier #associations abstract;
  template Model::Association #associations
  	: $annotation
  	  $visibility
  	  "association" name "{"
  	    contents{mode=associationEnds, forcedLower=2, forcedUpper=2, separator=";"} ";"
  	  "}"
  	;

  template Model::ModelElement #associationEnds abstract;
  template Model::TypedElement #associationEnds abstract;
  template Model::AssociationEnd #associationEnds
  	: $annotation
  	  
  	;
  	 
  function visibility(GeneralizableElement)
  	: [[ -- empty means the "public" default
  	       --{{ visibility = 'com.sap.tc.moin.repository.mmi.model.VisibilityKindEnum.PUBLIC_VIS' }}
  	     | "public"
  	       --{{ visibility = 'com.sap.tc.moin.repository.mmi.model.VisibilityKindEnum.PUBLIC_VIS' }}
  	     | "protected"
  	       --{{ visibility = 'com.sap.tc.moin.repository.mmi.model.VisibilityKindEnum.PROTECTED_VIS' }}
  	     | "private"
  	       --{{ visibility = 'com.sap.tc.moin.repository.mmi.model.VisibilityKindEnum.PRIVATE_VIS' }}
  	  ]]
  	;
  
  function annotation(ModelElement)
  	: (isDefined(annotation) ? "/**" annotation "*/")
  	;

	
	
	---------------------- BELOW IS A MINIMAL SYNTAX -------------------------------
		
	primitiveTemplate identifier for PrimitiveTypes::String default using NAME:
		value = "unescapeString(%token%)";

	primitiveTemplate identifierOrKeyword for PrimitiveTypes::String using NAME orKeyword:
		value = "unescapeString(%token%)";

	primitiveTemplate stringSymbol for PrimitiveTypes::String using STRING:
		value = "unescapeString(%token%)",
		serializer="'\\\"' + %value%.toCString() + '\\\"'";

	primitiveTemplate integerSymbol for PrimitiveTypes::Integer default using INT:
		value = "Integer.valueOf(%token%)";

	primitiveTemplate floatSymbol for PrimitiveTypes::Double default using FLOAT:
		value = "Double.valueOf(%token%)";

	token COMMENT	: endOfLine(start = "--");
	
}
