/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package com.sap.furcas.metamodel.FURCAS.textblocks.provider;

import com.sap.furcas.metamodel.FURCAS.textblocks.util.TextblocksAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class TextblocksItemProviderAdapterFactory extends TextblocksAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
        /**
         * This keeps track of the root adapter factory that delegates to this adapter factory.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        protected ComposedAdapterFactory parentAdapterFactory;

        /**
         * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        protected IChangeNotifier changeNotifier = new ChangeNotifier();

        /**
         * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        protected Collection<Object> supportedTypes = new ArrayList<Object>();

        /**
         * This constructs an instance.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        public TextblocksItemProviderAdapterFactory() {
                supportedTypes.add(IEditingDomainItemProvider.class);
                supportedTypes.add(IStructuredItemContentProvider.class);
                supportedTypes.add(ITreeItemContentProvider.class);
                supportedTypes.add(IItemLabelProvider.class);
                supportedTypes.add(IItemPropertySource.class);
        }

        /**
         * This keeps track of the one adapter used for all {@link com.sap.furcas.metamodel.FURCAS.textblocks.TextBlock} instances.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        protected TextBlockItemProvider textBlockItemProvider;

        /**
         * This creates an adapter for a {@link com.sap.furcas.metamodel.FURCAS.textblocks.TextBlock}.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        @Override
        public Adapter createTextBlockAdapter() {
                if (textBlockItemProvider == null) {
                        textBlockItemProvider = new TextBlockItemProvider(this);
                }

                return textBlockItemProvider;
        }

        /**
         * This keeps track of the one adapter used for all {@link com.sap.furcas.metamodel.FURCAS.textblocks.AbstractToken} instances.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        protected AbstractTokenItemProvider abstractTokenItemProvider;

        /**
         * This creates an adapter for a {@link com.sap.furcas.metamodel.FURCAS.textblocks.AbstractToken}.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        @Override
        public Adapter createAbstractTokenAdapter() {
                if (abstractTokenItemProvider == null) {
                        abstractTokenItemProvider = new AbstractTokenItemProvider(this);
                }

                return abstractTokenItemProvider;
        }

        /**
         * This keeps track of the one adapter used for all {@link com.sap.furcas.metamodel.FURCAS.textblocks.OmittedToken} instances.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        protected OmittedTokenItemProvider omittedTokenItemProvider;

        /**
         * This creates an adapter for a {@link com.sap.furcas.metamodel.FURCAS.textblocks.OmittedToken}.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        @Override
        public Adapter createOmittedTokenAdapter() {
                if (omittedTokenItemProvider == null) {
                        omittedTokenItemProvider = new OmittedTokenItemProvider(this);
                }

                return omittedTokenItemProvider;
        }

        /**
         * This keeps track of the one adapter used for all {@link com.sap.furcas.metamodel.FURCAS.textblocks.LexedToken} instances.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        protected LexedTokenItemProvider lexedTokenItemProvider;

        /**
         * This creates an adapter for a {@link com.sap.furcas.metamodel.FURCAS.textblocks.LexedToken}.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        @Override
        public Adapter createLexedTokenAdapter() {
                if (lexedTokenItemProvider == null) {
                        lexedTokenItemProvider = new LexedTokenItemProvider(this);
                }

                return lexedTokenItemProvider;
        }

        /**
         * This keeps track of the one adapter used for all {@link com.sap.furcas.metamodel.FURCAS.textblocks.UnlexedToken} instances.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        protected UnlexedTokenItemProvider unlexedTokenItemProvider;

        /**
         * This creates an adapter for a {@link com.sap.furcas.metamodel.FURCAS.textblocks.UnlexedToken}.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        @Override
        public Adapter createUnlexedTokenAdapter() {
                if (unlexedTokenItemProvider == null) {
                        unlexedTokenItemProvider = new UnlexedTokenItemProvider(this);
                }

                return unlexedTokenItemProvider;
        }

        /**
         * This keeps track of the one adapter used for all {@link com.sap.furcas.metamodel.FURCAS.textblocks.ForEachContext} instances.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        protected ForEachContextItemProvider forEachContextItemProvider;

        /**
         * This creates an adapter for a {@link com.sap.furcas.metamodel.FURCAS.textblocks.ForEachContext}.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        @Override
        public Adapter createForEachContextAdapter() {
                if (forEachContextItemProvider == null) {
                        forEachContextItemProvider = new ForEachContextItemProvider(this);
                }

                return forEachContextItemProvider;
        }

        /**
         * This keeps track of the one adapter used for all {@link com.sap.furcas.metamodel.FURCAS.textblocks.Eostoken} instances.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        protected EostokenItemProvider eostokenItemProvider;

        /**
         * This creates an adapter for a {@link com.sap.furcas.metamodel.FURCAS.textblocks.Eostoken}.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        @Override
        public Adapter createEostokenAdapter() {
                if (eostokenItemProvider == null) {
                        eostokenItemProvider = new EostokenItemProvider(this);
                }

                return eostokenItemProvider;
        }

        /**
         * This keeps track of the one adapter used for all {@link com.sap.furcas.metamodel.FURCAS.textblocks.Bostoken} instances.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        protected BostokenItemProvider bostokenItemProvider;

        /**
         * This creates an adapter for a {@link com.sap.furcas.metamodel.FURCAS.textblocks.Bostoken}.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        @Override
        public Adapter createBostokenAdapter() {
                if (bostokenItemProvider == null) {
                        bostokenItemProvider = new BostokenItemProvider(this);
                }

                return bostokenItemProvider;
        }

        /**
         * This returns the root adapter factory that contains this factory.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        public ComposeableAdapterFactory getRootAdapterFactory() {
                return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
        }

        /**
         * This sets the composed adapter factory that contains this factory.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
                this.parentAdapterFactory = parentAdapterFactory;
        }

        /**
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        @Override
        public boolean isFactoryForType(Object type) {
                return supportedTypes.contains(type) || super.isFactoryForType(type);
        }

        /**
         * This implementation substitutes the factory itself as the key for the adapter.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        @Override
        public Adapter adapt(Notifier notifier, Object type) {
                return super.adapt(notifier, this);
        }

        /**
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        @Override
        public Object adapt(Object object, Object type) {
                if (isFactoryForType(type)) {
                        Object adapter = super.adapt(object, type);
                        if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
                                return adapter;
                        }
                }

                return null;
        }

        /**
         * This adds a listener.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        public void addListener(INotifyChangedListener notifyChangedListener) {
                changeNotifier.addListener(notifyChangedListener);
        }

        /**
         * This removes a listener.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        public void removeListener(INotifyChangedListener notifyChangedListener) {
                changeNotifier.removeListener(notifyChangedListener);
        }

        /**
         * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        public void fireNotifyChanged(Notification notification) {
                changeNotifier.fireNotifyChanged(notification);

                if (parentAdapterFactory != null) {
                        parentAdapterFactory.fireNotifyChanged(notification);
                }
        }

        /**
         * This disposes all of the item providers created by this factory. 
         * <!-- begin-user-doc -->
         * <!-- end-user-doc -->
         * @generated
         */
        public void dispose() {
                if (textBlockItemProvider != null) textBlockItemProvider.dispose();
                if (abstractTokenItemProvider != null) abstractTokenItemProvider.dispose();
                if (omittedTokenItemProvider != null) omittedTokenItemProvider.dispose();
                if (lexedTokenItemProvider != null) lexedTokenItemProvider.dispose();
                if (unlexedTokenItemProvider != null) unlexedTokenItemProvider.dispose();
                if (forEachContextItemProvider != null) forEachContextItemProvider.dispose();
                if (eostokenItemProvider != null) eostokenItemProvider.dispose();
                if (bostokenItemProvider != null) bostokenItemProvider.dispose();
        }

}
