package com.sap.furcas.ide.projectwizard.test;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;

import org.junit.BeforeClass;
import org.junit.Test;

import com.sap.furcas.ide.projectwizard.util.ProjectInfo;
import com.sap.furcas.ide.projectwizard.util.SourceCodeFactory;
import com.sap.furcas.parsergenerator.TCSSyntaxContainerBean;
import com.sap.furcas.runtime.parser.ParserFacade;
import com.sap.furcas.runtime.parser.testbase.GeneratedParserBasedTest;
import com.sap.furcas.runtime.parser.testbase.GeneratedParserTestConfiguration;
import com.sap.furcas.runtime.parser.testbase.ParsingHelper;

/**
 * Simple Test for the .tcs file generated by the projectwizard, using the ForcedLower property arg.
 */
public class ProjectWizardTCSTest extends GeneratedParserBasedTest {

    private static final String LANGUAGE = "Mydsl";
    private static final File[] METAMODELS = { new File("../com.sap.furcas.ide.projectwizard.test.metamodel/model/Mydsl.ecore") };

    private static ParsingHelper parsingHelper;

    @BeforeClass
    public static void setupParser() throws Exception {
        GeneratedParserTestConfiguration testConfig = new GeneratedParserTestConfiguration(LANGUAGE, getTCS(), METAMODELS);
        TCSSyntaxContainerBean syntaxBean = parseSyntax(testConfig);
        ParserFacade facade = generateParserForLanguage(syntaxBean, testConfig, new ClassLookupImpl());
        parsingHelper = new ParsingHelper(facade);
    }

    /**
     * Tests references are set, this protects against bugs relating to naming of classes.
     * 
     * @throws Exception
     */
    @Test
    public void testForcedLower() throws Exception {
        // Expect no errors
        String sample = "ExampleClass";
        parsingHelper.parseString(sample, 0);

    }

    public static File getTCS() {
        File TCS = new File("../com.sap.furcas.ide.projectwizard.test/generationTemp/generated/Mydsl.tcs");
        SourceCodeFactory scf = new SourceCodeFactory();
        ProjectInfo pi = new ProjectInfo();
        pi.setLanguageName("Mydsl");
        pi.setClassName("ExampleClass");
        String newContent = scf.createSampleTCS(pi);
        try {
            InputStream newStream = new ByteArrayInputStream(newContent.getBytes("UTF-8"));
            scf.writeToFile(newStream, TCS);
            newStream.close();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        return TCS;
    }

}
