/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml;

/**
 * A template parameter substitution relates the actual parameter(s) to a formal template parameter as part of a template binding.
 * This interface is not intended to be implemented by clients.
 */
public interface TemplateParameterSubstitution extends uml.Element {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.TemplateParameterSubstitution> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.TemplateParameterSubstitution>("498691BB37B65130F0F211DDA279000E35A783E4", "sap.com/moin/mm/euml", "uml", "TemplateParameterSubstitution"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // references
    public uml.TemplateBinding getTemplatebinding() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setTemplatebinding(uml.TemplateBinding newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public uml.TemplateParameter getFormal() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setFormal(uml.TemplateParameter newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.ParameterableElement> getActual() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.ParameterableElement> getOwnedActual() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>ownedElement</code> reference.
         * @return  the descriptor for the <code>ownedElement</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,java.util.Collection<uml.Element>> OWNED_ELEMENT( ) {
            return uml.Element.DESCRIPTORS.OWNED_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>owner</code> reference.
         * @return  the descriptor for the <code>owner</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,uml.Element> OWNER( ) {
            return uml.Element.DESCRIPTORS.OWNER( );
        }
        /**
         * Returns the descriptor for the <code>ownedComment</code> reference.
         * @return  the descriptor for the <code>ownedComment</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,java.util.Collection<uml.Comment>> OWNED_COMMENT( ) {
            return uml.Element.DESCRIPTORS.OWNED_COMMENT( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateParameterSubstitution,uml.TemplateBinding> __templatebinding;
        /**
         * Returns the descriptor for the <code>templatebinding</code> reference.
         * @return  the descriptor for the <code>templatebinding</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateParameterSubstitution,uml.TemplateBinding> TEMPLATEBINDING( ) {
            if ( __templatebinding == null ) {
                __templatebinding = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateParameterSubstitution,uml.TemplateBinding>( "498691F85C149EB0F0F211DDA41F000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "TemplateParameterSubstitution", "templatebinding" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __templatebinding;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateParameterSubstitution,uml.TemplateParameter> __formal;
        /**
         * Returns the descriptor for the <code>formal</code> reference.
         * @return  the descriptor for the <code>formal</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateParameterSubstitution,uml.TemplateParameter> FORMAL( ) {
            if ( __formal == null ) {
                __formal = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateParameterSubstitution,uml.TemplateParameter>( "498693F188EAA0A3F0F311DDA005000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "TemplateParameterSubstitution", "formal" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __formal;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateParameterSubstitution,java.util.Collection<uml.ParameterableElement>> __actual;
        /**
         * Returns the descriptor for the <code>actual</code> reference.
         * @return  the descriptor for the <code>actual</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateParameterSubstitution,java.util.Collection<uml.ParameterableElement>> ACTUAL( ) {
            if ( __actual == null ) {
                __actual = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateParameterSubstitution,java.util.Collection<uml.ParameterableElement>>( "498694159E327913F0F311DDC76F000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "TemplateParameterSubstitution", "actual" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __actual;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateParameterSubstitution,java.util.Collection<uml.ParameterableElement>> __ownedActual;
        /**
         * Returns the descriptor for the <code>ownedActual</code> reference.
         * @return  the descriptor for the <code>ownedActual</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateParameterSubstitution,java.util.Collection<uml.ParameterableElement>> OWNED_ACTUAL( ) {
            if ( __ownedActual == null ) {
                __ownedActual = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateParameterSubstitution,java.util.Collection<uml.ParameterableElement>>( "49869452C2BBA723F0F311DD9478000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "TemplateParameterSubstitution", "ownedActual" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __ownedActual;
        }
    }
}    