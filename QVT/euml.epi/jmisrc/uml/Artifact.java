/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml;

/**
 * An artifact is the specification of a physical piece of information that is used or produced by a software development process, or by deployment and operation of a system. Examples of artifacts include model files, source files, scripts, and binary executable files, a table in a database system, a development deliverable, or a word-processing document, a mail message.

 * An artifact is the source of a deployment to a node.
 * This interface is not intended to be implemented by clients.
 */
public interface Artifact extends uml.Classifier,uml.DeployedArtifact {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.Artifact> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.Artifact>("4986C4A992F4F240F11011DD9303000E35A783E4", "sap.com/moin/mm/euml", "uml", "Artifact"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public java.lang.String getFileName() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setFileName(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public java.util.Collection<uml.Artifact> getNestedArtifact() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.Manifestation> getManifestation() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<uml.Property> getOwnedAttribute() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<uml.Operation> getOwnedOperation() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,java.util.Collection<java.lang.String>> NAME( ) {
            return uml.NamedElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,uml.VisibilityKind> VISIBILITY( ) {
            return uml.NamedElement.DESCRIPTORS.VISIBILITY( );
        }
        /**
         * Returns the descriptor for the <code>qualifiedName</code> attribute.
         * @return  the descriptor for the <code>qualifiedName</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,java.lang.String> QUALIFIED_NAME( ) {
            return uml.NamedElement.DESCRIPTORS.QUALIFIED_NAME( );
        }
        /**
         * Returns the descriptor for the <code>isLeaf</code> attribute.
         * @return  the descriptor for the <code>isLeaf</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.RedefinableElement,java.lang.Boolean> IS_LEAF( ) {
            return uml.RedefinableElement.DESCRIPTORS.IS_LEAF( );
        }
        /**
         * Returns the descriptor for the <code>isAbstract</code> attribute.
         * @return  the descriptor for the <code>isAbstract</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Classifier,java.lang.Boolean> IS_ABSTRACT( ) {
            return uml.Classifier.DESCRIPTORS.IS_ABSTRACT( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Artifact,java.lang.String> __fileName;
        /**
         * Returns the descriptor for the <code>fileName</code> attribute.
         * @return  the descriptor for the <code>fileName</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Artifact,java.lang.String> FILE_NAME( ) {
            if ( __fileName == null ) {
                __fileName = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Artifact,java.lang.String>( "4986C4FBC3E5C910F11011DDAD2B000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Artifact", "fileName" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __fileName;
        }
        /**
         * Returns the descriptor for the <code>ownedElement</code> reference.
         * @return  the descriptor for the <code>ownedElement</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,java.util.Collection<uml.Element>> OWNED_ELEMENT( ) {
            return uml.Element.DESCRIPTORS.OWNED_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>owner</code> reference.
         * @return  the descriptor for the <code>owner</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,uml.Element> OWNER( ) {
            return uml.Element.DESCRIPTORS.OWNER( );
        }
        /**
         * Returns the descriptor for the <code>ownedComment</code> reference.
         * @return  the descriptor for the <code>ownedComment</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,java.util.Collection<uml.Comment>> OWNED_COMMENT( ) {
            return uml.Element.DESCRIPTORS.OWNED_COMMENT( );
        }
        /**
         * Returns the descriptor for the <code>clientDependency</code> reference.
         * @return  the descriptor for the <code>clientDependency</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,java.util.Collection<uml.Dependency>> CLIENT_DEPENDENCY( ) {
            return uml.NamedElement.DESCRIPTORS.CLIENT_DEPENDENCY( );
        }
        /**
         * Returns the descriptor for the <code>namespace</code> reference.
         * @return  the descriptor for the <code>namespace</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,uml.Namespace> NAMESPACE( ) {
            return uml.NamedElement.DESCRIPTORS.NAMESPACE( );
        }
        /**
         * Returns the descriptor for the <code>nameExpression</code> reference.
         * @return  the descriptor for the <code>nameExpression</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,uml.StringExpression> NAME_EXPRESSION( ) {
            return uml.NamedElement.DESCRIPTORS.NAME_EXPRESSION( );
        }
        /**
         * Returns the descriptor for the <code>ownedMember</code> reference.
         * @return  the descriptor for the <code>ownedMember</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.NamedElement>> OWNED_MEMBER( ) {
            return uml.Namespace.DESCRIPTORS.OWNED_MEMBER( );
        }
        /**
         * Returns the descriptor for the <code>member</code> reference.
         * @return  the descriptor for the <code>member</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.NamedElement>> MEMBER( ) {
            return uml.Namespace.DESCRIPTORS.MEMBER( );
        }
        /**
         * Returns the descriptor for the <code>importedMember</code> reference.
         * @return  the descriptor for the <code>importedMember</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.PackageableElement>> IMPORTED_MEMBER( ) {
            return uml.Namespace.DESCRIPTORS.IMPORTED_MEMBER( );
        }
        /**
         * Returns the descriptor for the <code>elementImport</code> reference.
         * @return  the descriptor for the <code>elementImport</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.ElementImport>> ELEMENT_IMPORT( ) {
            return uml.Namespace.DESCRIPTORS.ELEMENT_IMPORT( );
        }
        /**
         * Returns the descriptor for the <code>packageImport</code> reference.
         * @return  the descriptor for the <code>packageImport</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.PackageImport>> PACKAGE_IMPORT( ) {
            return uml.Namespace.DESCRIPTORS.PACKAGE_IMPORT( );
        }
        /**
         * Returns the descriptor for the <code>ownedRule</code> reference.
         * @return  the descriptor for the <code>ownedRule</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.Contraint>> OWNED_RULE( ) {
            return uml.Namespace.DESCRIPTORS.OWNED_RULE( );
        }
        /**
         * Returns the descriptor for the <code>redefinedElement</code> reference.
         * @return  the descriptor for the <code>redefinedElement</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.RedefinableElement,java.util.Collection<uml.RedefinableElement>> REDEFINED_ELEMENT( ) {
            return uml.RedefinableElement.DESCRIPTORS.REDEFINED_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>redefinitionContext</code> reference.
         * @return  the descriptor for the <code>redefinitionContext</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.RedefinableElement,java.util.Collection<uml.Classifier>> REDEFINITION_CONTEXT( ) {
            return uml.RedefinableElement.DESCRIPTORS.REDEFINITION_CONTEXT( );
        }
        /**
         * Returns the descriptor for the <code>templateparameter</code> reference.
         * @return  the descriptor for the <code>templateparameter</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ParameterableElement,uml.TemplateParameter> TEMPLATEPARAMETER( ) {
            return uml.ParameterableElement.DESCRIPTORS.TEMPLATEPARAMETER( );
        }
        /**
         * Returns the descriptor for the <code>owningtemplateparameter</code> reference.
         * @return  the descriptor for the <code>owningtemplateparameter</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ParameterableElement,uml.TemplateParameter> OWNINGTEMPLATEPARAMETER( ) {
            return uml.ParameterableElement.DESCRIPTORS.OWNINGTEMPLATEPARAMETER( );
        }
        /**
         * Returns the descriptor for the <code>umlpackage</code> reference.
         * @return  the descriptor for the <code>umlpackage</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Type,uml.Package> UMLPACKAGE( ) {
            return uml.Type.DESCRIPTORS.UMLPACKAGE( );
        }
        /**
         * Returns the descriptor for the <code>templatebinding</code> reference.
         * @return  the descriptor for the <code>templatebinding</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateableElement,java.util.Collection<uml.TemplateBinding>> TEMPLATEBINDING( ) {
            return uml.TemplateableElement.DESCRIPTORS.TEMPLATEBINDING( );
        }
        /**
         * Returns the descriptor for the <code>ownedtemplatesignature</code> reference.
         * @return  the descriptor for the <code>ownedtemplatesignature</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateableElement,java.util.Collection<uml.TemplateSignature>> OWNEDTEMPLATESIGNATURE( ) {
            return uml.TemplateableElement.DESCRIPTORS.OWNEDTEMPLATESIGNATURE( );
        }
        /**
         * Returns the descriptor for the <code>inheritedMember</code> reference.
         * @return  the descriptor for the <code>inheritedMember</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.NamedElement>> INHERITED_MEMBER( ) {
            return uml.Classifier.DESCRIPTORS.INHERITED_MEMBER( );
        }
        /**
         * Returns the descriptor for the <code>redefinedClassifier</code> reference.
         * @return  the descriptor for the <code>redefinedClassifier</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Classifier>> REDEFINED_CLASSIFIER( ) {
            return uml.Classifier.DESCRIPTORS.REDEFINED_CLASSIFIER( );
        }
        /**
         * Returns the descriptor for the <code>general</code> reference.
         * @return  the descriptor for the <code>general</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Classifier>> GENERAL( ) {
            return uml.Classifier.DESCRIPTORS.GENERAL( );
        }
        /**
         * Returns the descriptor for the <code>attribute</code> reference.
         * @return  the descriptor for the <code>attribute</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Property>> ATTRIBUTE( ) {
            return uml.Classifier.DESCRIPTORS.ATTRIBUTE( );
        }
        /**
         * Returns the descriptor for the <code>generalization</code> reference.
         * @return  the descriptor for the <code>generalization</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Generalization>> GENERALIZATION( ) {
            return uml.Classifier.DESCRIPTORS.GENERALIZATION( );
        }
        /**
         * Returns the descriptor for the <code>powertypeExtent</code> reference.
         * @return  the descriptor for the <code>powertypeExtent</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.GeneralizationSet>> POWERTYPE_EXTENT( ) {
            return uml.Classifier.DESCRIPTORS.POWERTYPE_EXTENT( );
        }
        /**
         * Returns the descriptor for the <code>feature</code> reference.
         * @return  the descriptor for the <code>feature</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Feature>> FEATURE( ) {
            return uml.Classifier.DESCRIPTORS.FEATURE( );
        }
        /**
         * Returns the descriptor for the <code>substitution</code> reference.
         * @return  the descriptor for the <code>substitution</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Substitution>> SUBSTITUTION( ) {
            return uml.Classifier.DESCRIPTORS.SUBSTITUTION( );
        }
        /**
         * Returns the descriptor for the <code>collaborationUse</code> reference.
         * @return  the descriptor for the <code>collaborationUse</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.CollaborationUse>> COLLABORATION_USE( ) {
            return uml.Classifier.DESCRIPTORS.COLLABORATION_USE( );
        }
        /**
         * Returns the descriptor for the <code>representation</code> reference.
         * @return  the descriptor for the <code>representation</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,uml.CollaborationUse> REPRESENTATION( ) {
            return uml.Classifier.DESCRIPTORS.REPRESENTATION( );
        }
        /**
         * Returns the descriptor for the <code>ownedUseCase</code> reference.
         * @return  the descriptor for the <code>ownedUseCase</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.UseCase>> OWNED_USE_CASE( ) {
            return uml.Classifier.DESCRIPTORS.OWNED_USE_CASE( );
        }
        /**
         * Returns the descriptor for the <code>useCase</code> reference.
         * @return  the descriptor for the <code>useCase</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.UseCase>> USE_CASE( ) {
            return uml.Classifier.DESCRIPTORS.USE_CASE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Artifact,java.util.Collection<uml.Artifact>> __nestedArtifact;
        /**
         * Returns the descriptor for the <code>nestedArtifact</code> reference.
         * @return  the descriptor for the <code>nestedArtifact</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Artifact,java.util.Collection<uml.Artifact>> NESTED_ARTIFACT( ) {
            if ( __nestedArtifact == null ) {
                __nestedArtifact = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Artifact,java.util.Collection<uml.Artifact>>( "4986C51ED8C25C93F11011DDA32D000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Artifact", "nestedArtifact" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __nestedArtifact;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Artifact,java.util.Collection<uml.Manifestation>> __manifestation;
        /**
         * Returns the descriptor for the <code>manifestation</code> reference.
         * @return  the descriptor for the <code>manifestation</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Artifact,java.util.Collection<uml.Manifestation>> MANIFESTATION( ) {
            if ( __manifestation == null ) {
                __manifestation = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Artifact,java.util.Collection<uml.Manifestation>>( "4986C558FB2E4FF0F11011DD9908000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Artifact", "manifestation" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __manifestation;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Artifact,java.util.List<uml.Property>> __ownedAttribute;
        /**
         * Returns the descriptor for the <code>ownedAttribute</code> reference.
         * @return  the descriptor for the <code>ownedAttribute</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Artifact,java.util.List<uml.Property>> OWNED_ATTRIBUTE( ) {
            if ( __ownedAttribute == null ) {
                __ownedAttribute = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Artifact,java.util.List<uml.Property>>( "4986C5760D067D10F11111DDAC44000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Artifact", "ownedAttribute" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __ownedAttribute;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Artifact,java.util.List<uml.Operation>> __ownedOperation;
        /**
         * Returns the descriptor for the <code>ownedOperation</code> reference.
         * @return  the descriptor for the <code>ownedOperation</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Artifact,java.util.List<uml.Operation>> OWNED_OPERATION( ) {
            if ( __ownedOperation == null ) {
                __ownedOperation = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Artifact,java.util.List<uml.Operation>>( "4986C5BA35874B23F11111DDAD4D000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Artifact", "ownedOperation" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __ownedOperation;
        }
    }
}    