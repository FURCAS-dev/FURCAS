/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml;

/**
 * A template signature bundles the set of formal template parameters for a templated element.
 * This interface is not intended to be implemented by clients.
 */
public interface TemplateSignature extends uml.Element {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.TemplateSignature> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.TemplateSignature>("498690837DBA2A40F0F111DD94BD000E35A783E4", "sap.com/moin/mm/euml", "uml", "TemplateSignature"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // references
    public uml.TemplateableElement getTemplate() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setTemplate(uml.TemplateableElement newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<uml.TemplateParameter> getParameter() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<uml.TemplateParameter> getOwnedParameter() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>ownedElement</code> reference.
         * @return  the descriptor for the <code>ownedElement</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,java.util.Collection<uml.Element>> OWNED_ELEMENT( ) {
            return uml.Element.DESCRIPTORS.OWNED_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>owner</code> reference.
         * @return  the descriptor for the <code>owner</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,uml.Element> OWNER( ) {
            return uml.Element.DESCRIPTORS.OWNER( );
        }
        /**
         * Returns the descriptor for the <code>ownedComment</code> reference.
         * @return  the descriptor for the <code>ownedComment</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,java.util.Collection<uml.Comment>> OWNED_COMMENT( ) {
            return uml.Element.DESCRIPTORS.OWNED_COMMENT( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateSignature,uml.TemplateableElement> __template;
        /**
         * Returns the descriptor for the <code>template</code> reference.
         * @return  the descriptor for the <code>template</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateSignature,uml.TemplateableElement> TEMPLATE( ) {
            if ( __template == null ) {
                __template = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateSignature,uml.TemplateableElement>( "49869125DE20D0A0F0F111DD8897000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "TemplateSignature", "template" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __template;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateSignature,java.util.List<uml.TemplateParameter>> __parameter;
        /**
         * Returns the descriptor for the <code>parameter</code> reference.
         * @return  the descriptor for the <code>parameter</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateSignature,java.util.List<uml.TemplateParameter>> PARAMETER( ) {
            if ( __parameter == null ) {
                __parameter = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateSignature,java.util.List<uml.TemplateParameter>>( "498692619A62C8E3F0F211DDB55A000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "TemplateSignature", "parameter" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __parameter;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateSignature,java.util.List<uml.TemplateParameter>> __ownedParameter;
        /**
         * Returns the descriptor for the <code>ownedParameter</code> reference.
         * @return  the descriptor for the <code>ownedParameter</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateSignature,java.util.List<uml.TemplateParameter>> OWNED_PARAMETER( ) {
            if ( __ownedParameter == null ) {
                __ownedParameter = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateSignature,java.util.List<uml.TemplateParameter>>( "49869279A8EED842F0F211DDA3F0000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "TemplateSignature", "ownedParameter" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __ownedParameter;
        }
    }
}    