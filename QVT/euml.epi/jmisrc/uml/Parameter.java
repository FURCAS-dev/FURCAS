/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml;

/**
 * A parameter is a specification of an argument used to pass information into or out of an invocation of a behavioral feature.

 * Parameters are allowed to be treated as connectable elements.

 * Parameters have support for streaming, exceptions, and parameter sets.
 * This interface is not intended to be implemented by clients.
 */
public interface Parameter extends uml.ConnectableElement,uml.MultiplicityElment {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.Parameter> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.Parameter>("4986988E48F7E6D0F0F611DDBC09000E35A783E4", "sap.com/moin/mm/euml", "uml", "Parameter"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public uml.ParameterDirectionKind getDirection() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setDirection(uml.ParameterDirectionKind newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.lang.String getUmldefault() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setUmldefault(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.lang.String getNewAttribute() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setNewAttribute(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isException() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setException(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isStream() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setStream(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public uml.ParameterEffectKind getEffect() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setEffect(uml.ParameterEffectKind newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public java.util.Collection<uml.ParameterSet> getParameterset() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public uml.Operation getOperation() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setOperation(uml.Operation newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public uml.ValueSpecification getDefaultValue() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setDefaultValue(uml.ValueSpecification newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,java.util.Collection<java.lang.String>> NAME( ) {
            return uml.NamedElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,uml.VisibilityKind> VISIBILITY( ) {
            return uml.NamedElement.DESCRIPTORS.VISIBILITY( );
        }
        /**
         * Returns the descriptor for the <code>qualifiedName</code> attribute.
         * @return  the descriptor for the <code>qualifiedName</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,java.lang.String> QUALIFIED_NAME( ) {
            return uml.NamedElement.DESCRIPTORS.QUALIFIED_NAME( );
        }
        /**
         * Returns the descriptor for the <code>isOrdered</code> attribute.
         * @return  the descriptor for the <code>isOrdered</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.MultiplicityElment,java.lang.Boolean> IS_ORDERED( ) {
            return uml.MultiplicityElment.DESCRIPTORS.IS_ORDERED( );
        }
        /**
         * Returns the descriptor for the <code>isUnique</code> attribute.
         * @return  the descriptor for the <code>isUnique</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.MultiplicityElment,java.lang.Boolean> IS_UNIQUE( ) {
            return uml.MultiplicityElment.DESCRIPTORS.IS_UNIQUE( );
        }
        /**
         * Returns the descriptor for the <code>upper</code> attribute.
         * @return  the descriptor for the <code>upper</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.MultiplicityElment,java.lang.Integer> UPPER( ) {
            return uml.MultiplicityElment.DESCRIPTORS.UPPER( );
        }
        /**
         * Returns the descriptor for the <code>lower</code> attribute.
         * @return  the descriptor for the <code>lower</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.MultiplicityElment,java.lang.Integer> LOWER( ) {
            return uml.MultiplicityElment.DESCRIPTORS.LOWER( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,uml.ParameterDirectionKind> __direction;
        /**
         * Returns the descriptor for the <code>direction</code> attribute.
         * @return  the descriptor for the <code>direction</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,uml.ParameterDirectionKind> DIRECTION( ) {
            if ( __direction == null ) {
                __direction = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,uml.ParameterDirectionKind>( "49869A6A64768460F0F711DD9E81000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Parameter", "direction" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __direction;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,java.lang.String> __umldefault;
        /**
         * Returns the descriptor for the <code>umldefault</code> attribute.
         * @return  the descriptor for the <code>umldefault</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,java.lang.String> UMLDEFAULT( ) {
            if ( __umldefault == null ) {
                __umldefault = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,java.lang.String>( "49869A7A6DF19480F0F711DD86A9000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Parameter", "umldefault" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __umldefault;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,java.lang.String> __newAttribute;
        /**
         * Returns the descriptor for the <code>newAttribute</code> attribute.
         * @return  the descriptor for the <code>newAttribute</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,java.lang.String> NEW_ATTRIBUTE( ) {
            if ( __newAttribute == null ) {
                __newAttribute = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,java.lang.String>( "49869A9D82A59160F0F711DDCC33000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Parameter", "newAttribute" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __newAttribute;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,java.lang.Boolean> __isException;
        /**
         * Returns the descriptor for the <code>isException</code> attribute.
         * @return  the descriptor for the <code>isException</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,java.lang.Boolean> IS_EXCEPTION( ) {
            if ( __isException == null ) {
                __isException = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,java.lang.Boolean>( "49869ACD9F65A510F0F711DD92AA000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Parameter", "isException" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isException;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,java.lang.Boolean> __isStream;
        /**
         * Returns the descriptor for the <code>isStream</code> attribute.
         * @return  the descriptor for the <code>isStream</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,java.lang.Boolean> IS_STREAM( ) {
            if ( __isStream == null ) {
                __isStream = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,java.lang.Boolean>( "49869AE5ADFD9B50F0F711DD8575000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Parameter", "isStream" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isStream;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,uml.ParameterEffectKind> __effect;
        /**
         * Returns the descriptor for the <code>effect</code> attribute.
         * @return  the descriptor for the <code>effect</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,uml.ParameterEffectKind> EFFECT( ) {
            if ( __effect == null ) {
                __effect = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Parameter,uml.ParameterEffectKind>( "49869AF6B81D4FE0F0F711DDC0D8000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Parameter", "effect" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __effect;
        }
        /**
         * Returns the descriptor for the <code>ownedElement</code> reference.
         * @return  the descriptor for the <code>ownedElement</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,java.util.Collection<uml.Element>> OWNED_ELEMENT( ) {
            return uml.Element.DESCRIPTORS.OWNED_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>owner</code> reference.
         * @return  the descriptor for the <code>owner</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,uml.Element> OWNER( ) {
            return uml.Element.DESCRIPTORS.OWNER( );
        }
        /**
         * Returns the descriptor for the <code>ownedComment</code> reference.
         * @return  the descriptor for the <code>ownedComment</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,java.util.Collection<uml.Comment>> OWNED_COMMENT( ) {
            return uml.Element.DESCRIPTORS.OWNED_COMMENT( );
        }
        /**
         * Returns the descriptor for the <code>clientDependency</code> reference.
         * @return  the descriptor for the <code>clientDependency</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,java.util.Collection<uml.Dependency>> CLIENT_DEPENDENCY( ) {
            return uml.NamedElement.DESCRIPTORS.CLIENT_DEPENDENCY( );
        }
        /**
         * Returns the descriptor for the <code>namespace</code> reference.
         * @return  the descriptor for the <code>namespace</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,uml.Namespace> NAMESPACE( ) {
            return uml.NamedElement.DESCRIPTORS.NAMESPACE( );
        }
        /**
         * Returns the descriptor for the <code>nameExpression</code> reference.
         * @return  the descriptor for the <code>nameExpression</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,uml.StringExpression> NAME_EXPRESSION( ) {
            return uml.NamedElement.DESCRIPTORS.NAME_EXPRESSION( );
        }
        /**
         * Returns the descriptor for the <code>type</code> reference.
         * @return  the descriptor for the <code>type</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TypedElement,uml.Type> TYPE( ) {
            return uml.TypedElement.DESCRIPTORS.TYPE( );
        }
        /**
         * Returns the descriptor for the <code>templateparameter</code> reference.
         * @return  the descriptor for the <code>templateparameter</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ParameterableElement,uml.TemplateParameter> TEMPLATEPARAMETER( ) {
            return uml.ParameterableElement.DESCRIPTORS.TEMPLATEPARAMETER( );
        }
        /**
         * Returns the descriptor for the <code>owningtemplateparameter</code> reference.
         * @return  the descriptor for the <code>owningtemplateparameter</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ParameterableElement,uml.TemplateParameter> OWNINGTEMPLATEPARAMETER( ) {
            return uml.ParameterableElement.DESCRIPTORS.OWNINGTEMPLATEPARAMETER( );
        }
        /**
         * Returns the descriptor for the <code>end</code> reference.
         * @return  the descriptor for the <code>end</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ConnectableElement,java.util.List<uml.ConnectionEnd>> END( ) {
            return uml.ConnectableElement.DESCRIPTORS.END( );
        }
        /**
         * Returns the descriptor for the <code>upperValue</code> reference.
         * @return  the descriptor for the <code>upperValue</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.MultiplicityElment,uml.ValueSpecification> UPPER_VALUE( ) {
            return uml.MultiplicityElment.DESCRIPTORS.UPPER_VALUE( );
        }
        /**
         * Returns the descriptor for the <code>lowerValue</code> reference.
         * @return  the descriptor for the <code>lowerValue</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.MultiplicityElment,uml.ValueSpecification> LOWER_VALUE( ) {
            return uml.MultiplicityElment.DESCRIPTORS.LOWER_VALUE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Parameter,java.util.Collection<uml.ParameterSet>> __parameterset;
        /**
         * Returns the descriptor for the <code>parameterset</code> reference.
         * @return  the descriptor for the <code>parameterset</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Parameter,java.util.Collection<uml.ParameterSet>> PARAMETERSET( ) {
            if ( __parameterset == null ) {
                __parameterset = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Parameter,java.util.Collection<uml.ParameterSet>>( "498699D209D5FC73F0F711DDBE45000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Parameter", "parameterset" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __parameterset;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Parameter,uml.Operation> __operation;
        /**
         * Returns the descriptor for the <code>operation</code> reference.
         * @return  the descriptor for the <code>operation</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Parameter,uml.Operation> OPERATION( ) {
            if ( __operation == null ) {
                __operation = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Parameter,uml.Operation>( "49869A565858B5E3F0F711DD9D3F000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Parameter", "operation" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __operation;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Parameter,uml.ValueSpecification> __defaultValue;
        /**
         * Returns the descriptor for the <code>defaultValue</code> reference.
         * @return  the descriptor for the <code>defaultValue</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Parameter,uml.ValueSpecification> DEFAULT_VALUE( ) {
            if ( __defaultValue == null ) {
                __defaultValue = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Parameter,uml.ValueSpecification>( "49869AAC8C0FFFB3F0F711DDB376000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Parameter", "defaultValue" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __defaultValue;
        }
    }
}    