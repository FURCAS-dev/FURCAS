/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml;

/**
 * A property is a structural feature of a classifier that characterizes instances of the classifier. A property related by ownedAttribute to a classifier (other than an association) represents an attribute and might also represent an association end. It relates an instance of the class to a value or set of values of the type of the attribute. A property related by memberEnd or its specializations to an association represents an end of the association. The type of the property is the type of the end of the association.
 * A property represents a set of instances that are owned by a containing classifier instance.
 * A property has the capability of being a deployment target in a deployment relationship. This enables modeling the deployment to hierarchical nodes that have properties functioning as internal parts.
 * Property represents a declared state of one or more instances in terms of a named relationship to a value or values. When a property is an attribute of a classifier, the value or values are related to the instance of the classifier by being held in slots of the instance. When a property is an association end, the value or values are related to the instance or instances at the other end(s) of the association. The range of valid values represented by the property can be controlled by setting the property's type.
 * Property specializes ParameterableElement to specify that a property can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template.
 * This interface is not intended to be implemented by clients.
 */
public interface Property extends uml.StucturalFeature,uml.ConnectableElement,uml.DeploymentTarget,uml.TemplateableElement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.Property> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.Property>("49868A70DED417E0F0ED11DDBAB6000E35A783E4", "sap.com/moin/mm/euml", "uml", "Property"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public boolean isDerived() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setDerived(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isDerivedUnion() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setDerivedUnion(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.lang.String getUmldefault() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setUmldefault(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public uml.AggregationKind getAggregation() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAggregation(uml.AggregationKind newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isComposite() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setComposite(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public uml.Association getOwingassociation() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setOwingassociation(uml.Association newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public uml.UmlClass getUmlclass() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setUmlclass(uml.UmlClass newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public uml.DataType getDatatype() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setDatatype(uml.DataType newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.Property> getRedefinedProperty() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public uml.Property getOpposite() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setOpposite(uml.Property newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.Property> getSubsettedProperty() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<uml.Property> getQualifier() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public uml.Property getAssociationend() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAssociationend(uml.Property newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public uml.ValueSpecification getDefaultValue() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setDefaultValue(uml.ValueSpecification newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,java.util.Collection<java.lang.String>> NAME( ) {
            return uml.NamedElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,uml.VisibilityKind> VISIBILITY( ) {
            return uml.NamedElement.DESCRIPTORS.VISIBILITY( );
        }
        /**
         * Returns the descriptor for the <code>qualifiedName</code> attribute.
         * @return  the descriptor for the <code>qualifiedName</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,java.lang.String> QUALIFIED_NAME( ) {
            return uml.NamedElement.DESCRIPTORS.QUALIFIED_NAME( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Property,java.lang.Boolean> __isDerived;
        /**
         * Returns the descriptor for the <code>isDerived</code> attribute.
         * @return  the descriptor for the <code>isDerived</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Property,java.lang.Boolean> IS_DERIVED( ) {
            if ( __isDerived == null ) {
                __isDerived = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Property,java.lang.Boolean>( "4986BC4A9560B460F10B11DD983E000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Property", "isDerived" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isDerived;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Property,java.lang.Boolean> __isDerivedUnion;
        /**
         * Returns the descriptor for the <code>isDerivedUnion</code> attribute.
         * @return  the descriptor for the <code>isDerivedUnion</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Property,java.lang.Boolean> IS_DERIVED_UNION( ) {
            if ( __isDerivedUnion == null ) {
                __isDerivedUnion = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Property,java.lang.Boolean>( "4986BC569C6FF4A0F10B11DD850A000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Property", "isDerivedUnion" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isDerivedUnion;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Property,java.lang.String> __umldefault;
        /**
         * Returns the descriptor for the <code>umldefault</code> attribute.
         * @return  the descriptor for the <code>umldefault</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Property,java.lang.String> UMLDEFAULT( ) {
            if ( __umldefault == null ) {
                __umldefault = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Property,java.lang.String>( "4986BC62A3A53370F10B11DD953F000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Property", "umldefault" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __umldefault;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Property,uml.AggregationKind> __aggregation;
        /**
         * Returns the descriptor for the <code>aggregation</code> attribute.
         * @return  the descriptor for the <code>aggregation</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Property,uml.AggregationKind> AGGREGATION( ) {
            if ( __aggregation == null ) {
                __aggregation = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Property,uml.AggregationKind>( "4986BC79B174F7B0F10B11DD8A82000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Property", "aggregation" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __aggregation;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Property,java.lang.Boolean> __isComposite;
        /**
         * Returns the descriptor for the <code>isComposite</code> attribute.
         * @return  the descriptor for the <code>isComposite</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Property,java.lang.Boolean> IS_COMPOSITE( ) {
            if ( __isComposite == null ) {
                __isComposite = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Property,java.lang.Boolean>( "4986BC83B77475A0F10B11DD9015000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Property", "isComposite" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isComposite;
        }
        /**
         * Returns the descriptor for the <code>ownedElement</code> reference.
         * @return  the descriptor for the <code>ownedElement</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,java.util.Collection<uml.Element>> OWNED_ELEMENT( ) {
            return uml.Element.DESCRIPTORS.OWNED_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>owner</code> reference.
         * @return  the descriptor for the <code>owner</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,uml.Element> OWNER( ) {
            return uml.Element.DESCRIPTORS.OWNER( );
        }
        /**
         * Returns the descriptor for the <code>ownedComment</code> reference.
         * @return  the descriptor for the <code>ownedComment</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,java.util.Collection<uml.Comment>> OWNED_COMMENT( ) {
            return uml.Element.DESCRIPTORS.OWNED_COMMENT( );
        }
        /**
         * Returns the descriptor for the <code>clientDependency</code> reference.
         * @return  the descriptor for the <code>clientDependency</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,java.util.Collection<uml.Dependency>> CLIENT_DEPENDENCY( ) {
            return uml.NamedElement.DESCRIPTORS.CLIENT_DEPENDENCY( );
        }
        /**
         * Returns the descriptor for the <code>namespace</code> reference.
         * @return  the descriptor for the <code>namespace</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,uml.Namespace> NAMESPACE( ) {
            return uml.NamedElement.DESCRIPTORS.NAMESPACE( );
        }
        /**
         * Returns the descriptor for the <code>nameExpression</code> reference.
         * @return  the descriptor for the <code>nameExpression</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,uml.StringExpression> NAME_EXPRESSION( ) {
            return uml.NamedElement.DESCRIPTORS.NAME_EXPRESSION( );
        }
        /**
         * Returns the descriptor for the <code>type</code> reference.
         * @return  the descriptor for the <code>type</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TypedElement,uml.Type> TYPE( ) {
            return uml.TypedElement.DESCRIPTORS.TYPE( );
        }
        /**
         * Returns the descriptor for the <code>templateparameter</code> reference.
         * @return  the descriptor for the <code>templateparameter</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ParameterableElement,uml.TemplateParameter> TEMPLATEPARAMETER( ) {
            return uml.ParameterableElement.DESCRIPTORS.TEMPLATEPARAMETER( );
        }
        /**
         * Returns the descriptor for the <code>owningtemplateparameter</code> reference.
         * @return  the descriptor for the <code>owningtemplateparameter</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ParameterableElement,uml.TemplateParameter> OWNINGTEMPLATEPARAMETER( ) {
            return uml.ParameterableElement.DESCRIPTORS.OWNINGTEMPLATEPARAMETER( );
        }
        /**
         * Returns the descriptor for the <code>end</code> reference.
         * @return  the descriptor for the <code>end</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ConnectableElement,java.util.List<uml.ConnectionEnd>> END( ) {
            return uml.ConnectableElement.DESCRIPTORS.END( );
        }
        /**
         * Returns the descriptor for the <code>deployment</code> reference.
         * @return  the descriptor for the <code>deployment</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.DeploymentTarget,java.util.Collection<uml.Deployment>> DEPLOYMENT( ) {
            return uml.DeploymentTarget.DESCRIPTORS.DEPLOYMENT( );
        }
        /**
         * Returns the descriptor for the <code>deployedElement</code> reference.
         * @return  the descriptor for the <code>deployedElement</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.DeploymentTarget,java.util.Collection<uml.PackageableElement>> DEPLOYED_ELEMENT( ) {
            return uml.DeploymentTarget.DESCRIPTORS.DEPLOYED_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>templatebinding</code> reference.
         * @return  the descriptor for the <code>templatebinding</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateableElement,java.util.Collection<uml.TemplateBinding>> TEMPLATEBINDING( ) {
            return uml.TemplateableElement.DESCRIPTORS.TEMPLATEBINDING( );
        }
        /**
         * Returns the descriptor for the <code>ownedtemplatesignature</code> reference.
         * @return  the descriptor for the <code>ownedtemplatesignature</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateableElement,java.util.Collection<uml.TemplateSignature>> OWNEDTEMPLATESIGNATURE( ) {
            return uml.TemplateableElement.DESCRIPTORS.OWNEDTEMPLATESIGNATURE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.Association> __owingassociation;
        /**
         * Returns the descriptor for the <code>owingassociation</code> reference.
         * @return  the descriptor for the <code>owingassociation</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.Association> OWINGASSOCIATION( ) {
            if ( __owingassociation == null ) {
                __owingassociation = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.Association>( "49868AD41A571420F0EE11DDA78F000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Property", "owingassociation" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __owingassociation;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.UmlClass> __umlclass;
        /**
         * Returns the descriptor for the <code>umlclass</code> reference.
         * @return  the descriptor for the <code>umlclass</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.UmlClass> UMLCLASS( ) {
            if ( __umlclass == null ) {
                __umlclass = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.UmlClass>( "4986BC1374809123F10B11DD9855000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Property", "umlclass" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __umlclass;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.DataType> __datatype;
        /**
         * Returns the descriptor for the <code>datatype</code> reference.
         * @return  the descriptor for the <code>datatype</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.DataType> DATATYPE( ) {
            if ( __datatype == null ) {
                __datatype = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.DataType>( "4986BC3588F1B8A0F10B11DDA2E7000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Property", "datatype" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __datatype;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,java.util.Collection<uml.Property>> __redefinedProperty;
        /**
         * Returns the descriptor for the <code>redefinedProperty</code> reference.
         * @return  the descriptor for the <code>redefinedProperty</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,java.util.Collection<uml.Property>> REDEFINED_PROPERTY( ) {
            if ( __redefinedProperty == null ) {
                __redefinedProperty = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,java.util.Collection<uml.Property>>( "4986BC94C1C154B3F10B11DD8F7A000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Property", "redefinedProperty" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __redefinedProperty;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.Property> __opposite;
        /**
         * Returns the descriptor for the <code>opposite</code> reference.
         * @return  the descriptor for the <code>opposite</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.Property> OPPOSITE( ) {
            if ( __opposite == null ) {
                __opposite = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.Property>( "4986BCC5DEB103E0F10B11DD8F32000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Property", "opposite" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __opposite;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,java.util.Collection<uml.Property>> __subsettedProperty;
        /**
         * Returns the descriptor for the <code>subsettedProperty</code> reference.
         * @return  the descriptor for the <code>subsettedProperty</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,java.util.Collection<uml.Property>> SUBSETTED_PROPERTY( ) {
            if ( __subsettedProperty == null ) {
                __subsettedProperty = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,java.util.Collection<uml.Property>>( "4986BCDBEBCDF2E2F10B11DDC650000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Property", "subsettedProperty" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __subsettedProperty;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,java.util.List<uml.Property>> __qualifier;
        /**
         * Returns the descriptor for the <code>qualifier</code> reference.
         * @return  the descriptor for the <code>qualifier</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,java.util.List<uml.Property>> QUALIFIER( ) {
            if ( __qualifier == null ) {
                __qualifier = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,java.util.List<uml.Property>>( "4986BD2E1D9C7F80F10C11DD9F8D000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Property", "qualifier" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __qualifier;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.Property> __associationend;
        /**
         * Returns the descriptor for the <code>associationend</code> reference.
         * @return  the descriptor for the <code>associationend</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.Property> ASSOCIATIONEND( ) {
            if ( __associationend == null ) {
                __associationend = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.Property>( "4986BD9A5DB6DE30F10C11DDC4E3000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Property", "associationend" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __associationend;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.ValueSpecification> __defaultValue;
        /**
         * Returns the descriptor for the <code>defaultValue</code> reference.
         * @return  the descriptor for the <code>defaultValue</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.ValueSpecification> DEFAULT_VALUE( ) {
            if ( __defaultValue == null ) {
                __defaultValue = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Property,uml.ValueSpecification>( "4986EEB8A4AC2083F12911DDA90B000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Property", "defaultValue" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __defaultValue;
        }
    }
}    