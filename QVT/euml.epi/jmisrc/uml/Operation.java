/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml;

/**
 * An operation is a behavioral feature of a classifier that specifies the name, type, parameters, and constraints for invoking an associated behavior.
 * An operation may invoke both the execution of method behaviors as well as other behavioral responses.
 * Operation specializes TemplateableElement in order to support specification of template operations and bound operations. Operation specializes ParameterableElement to specify that an operation can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template.
 * This interface is not intended to be implemented by clients.
 */
public interface Operation extends uml.BehavioralFeature,uml.ParameterableElement,uml.TemplateableElement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.Operation> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.Operation>("4986997FD8370B50F0F611DDBCF9000E35A783E4", "sap.com/moin/mm/euml", "uml", "Operation"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public boolean isQuery() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setQuery(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isOrdered() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setOrdered(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isUnique() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setUnique(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.lang.Integer getLower() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setLower(java.lang.Integer newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.lang.Integer getUpper() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setUpper(java.lang.Integer newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public uml.Interface getUmlinterface() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setUmlinterface(uml.Interface newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public uml.UmlClass getUmlclass() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setUmlclass(uml.UmlClass newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.Contraint> getPrecondition() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.Contraint> getPostcondition() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.Operation> getRedifinedOperation() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public uml.Contraint getBodyCondition() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setBodyCondition(uml.Contraint newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public uml.Type getType() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setType(uml.Type newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public uml.DataType getDatatype() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setDatatype(uml.DataType newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,java.util.Collection<java.lang.String>> NAME( ) {
            return uml.NamedElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,uml.VisibilityKind> VISIBILITY( ) {
            return uml.NamedElement.DESCRIPTORS.VISIBILITY( );
        }
        /**
         * Returns the descriptor for the <code>qualifiedName</code> attribute.
         * @return  the descriptor for the <code>qualifiedName</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,java.lang.String> QUALIFIED_NAME( ) {
            return uml.NamedElement.DESCRIPTORS.QUALIFIED_NAME( );
        }
        /**
         * Returns the descriptor for the <code>isLeaf</code> attribute.
         * @return  the descriptor for the <code>isLeaf</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.RedefinableElement,java.lang.Boolean> IS_LEAF( ) {
            return uml.RedefinableElement.DESCRIPTORS.IS_LEAF( );
        }
        /**
         * Returns the descriptor for the <code>isStatic</code> attribute.
         * @return  the descriptor for the <code>isStatic</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Feature,java.lang.Boolean> IS_STATIC( ) {
            return uml.Feature.DESCRIPTORS.IS_STATIC( );
        }
        /**
         * Returns the descriptor for the <code>isAbstract</code> attribute.
         * @return  the descriptor for the <code>isAbstract</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.BehavioralFeature,java.util.List<java.lang.Boolean>> IS_ABSTRACT( ) {
            return uml.BehavioralFeature.DESCRIPTORS.IS_ABSTRACT( );
        }
        /**
         * Returns the descriptor for the <code>concurrency</code> attribute.
         * @return  the descriptor for the <code>concurrency</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.BehavioralFeature,uml.CallConcurrencyKind> CONCURRENCY( ) {
            return uml.BehavioralFeature.DESCRIPTORS.CONCURRENCY( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Operation,java.lang.Boolean> __isQuery;
        /**
         * Returns the descriptor for the <code>isQuery</code> attribute.
         * @return  the descriptor for the <code>isQuery</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Operation,java.lang.Boolean> IS_QUERY( ) {
            if ( __isQuery == null ) {
                __isQuery = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Operation,java.lang.Boolean>( "4986CA2ADA6C34A0F11311DDCCE5000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Operation", "isQuery" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isQuery;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Operation,java.lang.Boolean> __isOrdered;
        /**
         * Returns the descriptor for the <code>isOrdered</code> attribute.
         * @return  the descriptor for the <code>isOrdered</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Operation,java.lang.Boolean> IS_ORDERED( ) {
            if ( __isOrdered == null ) {
                __isOrdered = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Operation,java.lang.Boolean>( "4986CA32DF5E3A30F11311DDB7E8000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Operation", "isOrdered" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isOrdered;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Operation,java.lang.Boolean> __isUnique;
        /**
         * Returns the descriptor for the <code>isUnique</code> attribute.
         * @return  the descriptor for the <code>isUnique</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Operation,java.lang.Boolean> IS_UNIQUE( ) {
            if ( __isUnique == null ) {
                __isUnique = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Operation,java.lang.Boolean>( "4986CA3CE5058600F11311DDCD2E000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Operation", "isUnique" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isUnique;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Operation,java.lang.Integer> __lower;
        /**
         * Returns the descriptor for the <code>lower</code> attribute.
         * @return  the descriptor for the <code>lower</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Operation,java.lang.Integer> LOWER( ) {
            if ( __lower == null ) {
                __lower = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Operation,java.lang.Integer>( "4986CA90172518D0F11411DD9E3C000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Operation", "lower" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __lower;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Operation,java.lang.Integer> __upper;
        /**
         * Returns the descriptor for the <code>upper</code> attribute.
         * @return  the descriptor for the <code>upper</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Operation,java.lang.Integer> UPPER( ) {
            if ( __upper == null ) {
                __upper = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Operation,java.lang.Integer>( "4986CAA020B0F1D0F11411DD8572000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Operation", "upper" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __upper;
        }
        /**
         * Returns the descriptor for the <code>ownedElement</code> reference.
         * @return  the descriptor for the <code>ownedElement</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,java.util.Collection<uml.Element>> OWNED_ELEMENT( ) {
            return uml.Element.DESCRIPTORS.OWNED_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>owner</code> reference.
         * @return  the descriptor for the <code>owner</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,uml.Element> OWNER( ) {
            return uml.Element.DESCRIPTORS.OWNER( );
        }
        /**
         * Returns the descriptor for the <code>ownedComment</code> reference.
         * @return  the descriptor for the <code>ownedComment</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,java.util.Collection<uml.Comment>> OWNED_COMMENT( ) {
            return uml.Element.DESCRIPTORS.OWNED_COMMENT( );
        }
        /**
         * Returns the descriptor for the <code>clientDependency</code> reference.
         * @return  the descriptor for the <code>clientDependency</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,java.util.Collection<uml.Dependency>> CLIENT_DEPENDENCY( ) {
            return uml.NamedElement.DESCRIPTORS.CLIENT_DEPENDENCY( );
        }
        /**
         * Returns the descriptor for the <code>namespace</code> reference.
         * @return  the descriptor for the <code>namespace</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,uml.Namespace> NAMESPACE( ) {
            return uml.NamedElement.DESCRIPTORS.NAMESPACE( );
        }
        /**
         * Returns the descriptor for the <code>nameExpression</code> reference.
         * @return  the descriptor for the <code>nameExpression</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,uml.StringExpression> NAME_EXPRESSION( ) {
            return uml.NamedElement.DESCRIPTORS.NAME_EXPRESSION( );
        }
        /**
         * Returns the descriptor for the <code>ownedMember</code> reference.
         * @return  the descriptor for the <code>ownedMember</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.NamedElement>> OWNED_MEMBER( ) {
            return uml.Namespace.DESCRIPTORS.OWNED_MEMBER( );
        }
        /**
         * Returns the descriptor for the <code>member</code> reference.
         * @return  the descriptor for the <code>member</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.NamedElement>> MEMBER( ) {
            return uml.Namespace.DESCRIPTORS.MEMBER( );
        }
        /**
         * Returns the descriptor for the <code>importedMember</code> reference.
         * @return  the descriptor for the <code>importedMember</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.PackageableElement>> IMPORTED_MEMBER( ) {
            return uml.Namespace.DESCRIPTORS.IMPORTED_MEMBER( );
        }
        /**
         * Returns the descriptor for the <code>elementImport</code> reference.
         * @return  the descriptor for the <code>elementImport</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.ElementImport>> ELEMENT_IMPORT( ) {
            return uml.Namespace.DESCRIPTORS.ELEMENT_IMPORT( );
        }
        /**
         * Returns the descriptor for the <code>packageImport</code> reference.
         * @return  the descriptor for the <code>packageImport</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.PackageImport>> PACKAGE_IMPORT( ) {
            return uml.Namespace.DESCRIPTORS.PACKAGE_IMPORT( );
        }
        /**
         * Returns the descriptor for the <code>ownedRule</code> reference.
         * @return  the descriptor for the <code>ownedRule</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.Contraint>> OWNED_RULE( ) {
            return uml.Namespace.DESCRIPTORS.OWNED_RULE( );
        }
        /**
         * Returns the descriptor for the <code>redefinedElement</code> reference.
         * @return  the descriptor for the <code>redefinedElement</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.RedefinableElement,java.util.Collection<uml.RedefinableElement>> REDEFINED_ELEMENT( ) {
            return uml.RedefinableElement.DESCRIPTORS.REDEFINED_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>redefinitionContext</code> reference.
         * @return  the descriptor for the <code>redefinitionContext</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.RedefinableElement,java.util.Collection<uml.Classifier>> REDEFINITION_CONTEXT( ) {
            return uml.RedefinableElement.DESCRIPTORS.REDEFINITION_CONTEXT( );
        }
        /**
         * Returns the descriptor for the <code>featuringclassifier</code> reference.
         * @return  the descriptor for the <code>featuringclassifier</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Feature,java.util.Collection<uml.Classifier>> FEATURINGCLASSIFIER( ) {
            return uml.Feature.DESCRIPTORS.FEATURINGCLASSIFIER( );
        }
        /**
         * Returns the descriptor for the <code>ownedParameter</code> reference.
         * @return  the descriptor for the <code>ownedParameter</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.BehavioralFeature,java.util.Collection<uml.Parameter>> OWNED_PARAMETER( ) {
            return uml.BehavioralFeature.DESCRIPTORS.OWNED_PARAMETER( );
        }
        /**
         * Returns the descriptor for the <code>method</code> reference.
         * @return  the descriptor for the <code>method</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.BehavioralFeature,java.util.Collection<uml.Behavior>> METHOD( ) {
            return uml.BehavioralFeature.DESCRIPTORS.METHOD( );
        }
        /**
         * Returns the descriptor for the <code>raisedException</code> reference.
         * @return  the descriptor for the <code>raisedException</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.BehavioralFeature,java.util.Collection<uml.Type>> RAISED_EXCEPTION( ) {
            return uml.BehavioralFeature.DESCRIPTORS.RAISED_EXCEPTION( );
        }
        /**
         * Returns the descriptor for the <code>ownedParameterSet</code> reference.
         * @return  the descriptor for the <code>ownedParameterSet</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.BehavioralFeature,java.util.Collection<uml.ParameterSet>> OWNED_PARAMETER_SET( ) {
            return uml.BehavioralFeature.DESCRIPTORS.OWNED_PARAMETER_SET( );
        }
        /**
         * Returns the descriptor for the <code>templateparameter</code> reference.
         * @return  the descriptor for the <code>templateparameter</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ParameterableElement,uml.TemplateParameter> TEMPLATEPARAMETER( ) {
            return uml.ParameterableElement.DESCRIPTORS.TEMPLATEPARAMETER( );
        }
        /**
         * Returns the descriptor for the <code>owningtemplateparameter</code> reference.
         * @return  the descriptor for the <code>owningtemplateparameter</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ParameterableElement,uml.TemplateParameter> OWNINGTEMPLATEPARAMETER( ) {
            return uml.ParameterableElement.DESCRIPTORS.OWNINGTEMPLATEPARAMETER( );
        }
        /**
         * Returns the descriptor for the <code>templatebinding</code> reference.
         * @return  the descriptor for the <code>templatebinding</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateableElement,java.util.Collection<uml.TemplateBinding>> TEMPLATEBINDING( ) {
            return uml.TemplateableElement.DESCRIPTORS.TEMPLATEBINDING( );
        }
        /**
         * Returns the descriptor for the <code>ownedtemplatesignature</code> reference.
         * @return  the descriptor for the <code>ownedtemplatesignature</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateableElement,java.util.Collection<uml.TemplateSignature>> OWNEDTEMPLATESIGNATURE( ) {
            return uml.TemplateableElement.DESCRIPTORS.OWNEDTEMPLATESIGNATURE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,uml.Interface> __umlinterface;
        /**
         * Returns the descriptor for the <code>umlinterface</code> reference.
         * @return  the descriptor for the <code>umlinterface</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,uml.Interface> UMLINTERFACE( ) {
            if ( __umlinterface == null ) {
                __umlinterface = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,uml.Interface>( "4986C91F3B369B53F11311DD841B000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Operation", "umlinterface" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __umlinterface;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,uml.UmlClass> __umlclass;
        /**
         * Returns the descriptor for the <code>umlclass</code> reference.
         * @return  the descriptor for the <code>umlclass</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,uml.UmlClass> UMLCLASS( ) {
            if ( __umlclass == null ) {
                __umlclass = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,uml.UmlClass>( "4986C9BD99AFC993F11311DDBC42000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Operation", "umlclass" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __umlclass;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,java.util.Collection<uml.Contraint>> __precondition;
        /**
         * Returns the descriptor for the <code>precondition</code> reference.
         * @return  the descriptor for the <code>precondition</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,java.util.Collection<uml.Contraint>> PRECONDITION( ) {
            if ( __precondition == null ) {
                __precondition = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,java.util.Collection<uml.Contraint>>( "4986CAE348BCDE03F11411DDC949000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Operation", "precondition" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __precondition;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,java.util.Collection<uml.Contraint>> __postcondition;
        /**
         * Returns the descriptor for the <code>postcondition</code> reference.
         * @return  the descriptor for the <code>postcondition</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,java.util.Collection<uml.Contraint>> POSTCONDITION( ) {
            if ( __postcondition == null ) {
                __postcondition = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,java.util.Collection<uml.Contraint>>( "4986CAFB5708B013F11411DDCEB0000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Operation", "postcondition" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __postcondition;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,java.util.Collection<uml.Operation>> __redifinedOperation;
        /**
         * Returns the descriptor for the <code>redifinedOperation</code> reference.
         * @return  the descriptor for the <code>redifinedOperation</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,java.util.Collection<uml.Operation>> REDIFINED_OPERATION( ) {
            if ( __redifinedOperation == null ) {
                __redifinedOperation = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,java.util.Collection<uml.Operation>>( "4986CB1E6C0B6933F11411DDC7F5000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Operation", "redifinedOperation" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __redifinedOperation;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,uml.Contraint> __bodyCondition;
        /**
         * Returns the descriptor for the <code>bodyCondition</code> reference.
         * @return  the descriptor for the <code>bodyCondition</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,uml.Contraint> BODY_CONDITION( ) {
            if ( __bodyCondition == null ) {
                __bodyCondition = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,uml.Contraint>( "4986CB3A7C7909D3F11411DDB0F8000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Operation", "bodyCondition" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __bodyCondition;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,uml.Type> __type;
        /**
         * Returns the descriptor for the <code>type</code> reference.
         * @return  the descriptor for the <code>type</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,uml.Type> TYPE( ) {
            if ( __type == null ) {
                __type = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,uml.Type>( "4986CB6D9B40D463F11411DD8946000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Operation", "type" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __type;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,uml.DataType> __datatype;
        /**
         * Returns the descriptor for the <code>datatype</code> reference.
         * @return  the descriptor for the <code>datatype</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,uml.DataType> DATATYPE( ) {
            if ( __datatype == null ) {
                __datatype = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Operation,uml.DataType>( "4986CC6830DED4E0F11511DDB98A000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Operation", "datatype" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __datatype;
        }
    }
}    