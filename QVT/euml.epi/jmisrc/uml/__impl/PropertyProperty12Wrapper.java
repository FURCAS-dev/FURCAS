/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public class PropertyProperty12Wrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<uml.PropertyProperty12> implements uml.PropertyProperty12,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The PropertyProperty12 wrapper
     */
    public PropertyProperty12Wrapper(com.sap.tc.moin.repository.core.CoreConnection conn, uml.__impl.PropertyProperty12Impl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private uml.__impl.PropertyProperty12Impl getCastWrappedObject() {
        return (uml.__impl.PropertyProperty12Impl) getWrappedObject();
    }

    public uml.PropertyProperty12 unwrap() {
        return (uml.PropertyProperty12) getWrappedObject();
    }
    
    public boolean exists(uml.Property _AssociationEnd, uml.Property _Qualifier) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AssociationEnd), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Qualifier));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AssociationEnd), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Qualifier)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public uml.Property getAssociationEnd(uml.Property _Qualifier) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (uml.Property) wrapResult(getCastWrappedObject().getAssociationEnd(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Qualifier)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (uml.Property) wrapResult(getCastWrappedObject().getAssociationEnd(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Qualifier))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.List getQualifier(uml.Property _AssociationEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.List) wrapResult(getCastWrappedObject().getQualifier(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AssociationEnd)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.List) wrapResult(getCastWrappedObject().getQualifier(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AssociationEnd))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(uml.Property _AssociationEnd, uml.Property _Qualifier) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AssociationEnd), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Qualifier));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AssociationEnd), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Qualifier)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(uml.Property _AssociationEnd, uml.Property _Qualifier) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AssociationEnd), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Qualifier));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AssociationEnd), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Qualifier)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<uml.PropertyProperty12> get___JmiInterface() {
        return uml.PropertyProperty12.class;
    }

    protected String metaObjectToString() {
        return "uml.PropertyProperty12 (Java Type)\numl.Property_Property12 (MOF Type)"; //$NON-NLS-1$
    }    
}