/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public class ClassifierNamedElementWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<uml.ClassifierNamedElement> implements uml.ClassifierNamedElement,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ClassifierNamedElement wrapper
     */
    public ClassifierNamedElementWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, uml.__impl.ClassifierNamedElementImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private uml.__impl.ClassifierNamedElementImpl getCastWrappedObject() {
        return (uml.__impl.ClassifierNamedElementImpl) getWrappedObject();
    }

    public uml.ClassifierNamedElement unwrap() {
        return (uml.ClassifierNamedElement) getWrappedObject();
    }
    
    public boolean exists(uml.Classifier _Classifier, uml.NamedElement _InheritedMember) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Classifier), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _InheritedMember));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Classifier), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _InheritedMember)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public uml.Classifier getClassifier(uml.NamedElement _InheritedMember) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (uml.Classifier) wrapResult(getCastWrappedObject().getClassifier(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _InheritedMember)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (uml.Classifier) wrapResult(getCastWrappedObject().getClassifier(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _InheritedMember))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getInheritedMember(uml.Classifier _Classifier) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getInheritedMember(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Classifier)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getInheritedMember(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Classifier))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<uml.ClassifierNamedElement> get___JmiInterface() {
        return uml.ClassifierNamedElement.class;
    }

    protected String metaObjectToString() {
        return "uml.ClassifierNamedElement (Java Type)\numl.Classifier_NamedElement (MOF Type)"; //$NON-NLS-1$
    }    
}