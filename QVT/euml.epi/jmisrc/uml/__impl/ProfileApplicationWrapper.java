/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public class ProfileApplicationWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefObjectWrapperImpl<uml.__impl.ProfileApplicationImpl> implements uml.ProfileApplication,com.sap.tc.moin.repository.Partitionable {


    static {
    }

    public ProfileApplicationWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, uml.__impl.ProfileApplicationImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    @SuppressWarnings("unused")
    private uml.__impl.ProfileApplicationImpl getCastWrappedObject() {
        return (uml.__impl.ProfileApplicationImpl) getWrappedObject();
    }
    
    public uml.__impl.ProfileApplicationImpl unwrap() {
        return (uml.__impl.ProfileApplicationImpl) getWrappedObject();
    }
        
    // methods for attributes
     
    // methods for references
    public uml.Package getApplyingPackage() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (uml.Package) wrapResult(getCastWrappedObject().getApplyingPackage(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (uml.Package) wrapResult(getCastWrappedObject().getApplyingPackage(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

    public void setApplyingPackage(uml.Package newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    getCastWrappedObject().setApplyingPackage(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) newValue));
                }       
            }
            else {
                assertConnectionAlive();
                attachConnectionIfRequired();
                getCastWrappedObject().setApplyingPackage(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) newValue));
            } 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

   
    // methods for modeled operations
    
    // methods for internal modeled operations

    // reflective methods
    

    // get the JMI interface
    @SuppressWarnings("unchecked")
    public java.lang.Class<uml.ProfileApplication> get___JmiInterface() {
        return uml.ProfileApplication.class;
    }

    // to String
    protected String metaObjectToString() {
        return "uml.ProfileApplication (Java Type)\numl.ProfileApplication (MOF Type)"; //$NON-NLS-1$
    }    
}