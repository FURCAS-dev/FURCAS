/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public class RedefinableElementClassifierWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<uml.RedefinableElementClassifier> implements uml.RedefinableElementClassifier,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The RedefinableElementClassifier wrapper
     */
    public RedefinableElementClassifierWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, uml.__impl.RedefinableElementClassifierImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private uml.__impl.RedefinableElementClassifierImpl getCastWrappedObject() {
        return (uml.__impl.RedefinableElementClassifierImpl) getWrappedObject();
    }

    public uml.RedefinableElementClassifier unwrap() {
        return (uml.RedefinableElementClassifier) getWrappedObject();
    }
    
    public boolean exists(uml.RedefinableElement _Redefinableelement, uml.Classifier _RedefinitionContext) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Redefinableelement), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _RedefinitionContext));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Redefinableelement), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _RedefinitionContext)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public uml.RedefinableElement getRedefinableelement(uml.Classifier _RedefinitionContext) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (uml.RedefinableElement) wrapResult(getCastWrappedObject().getRedefinableelement(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _RedefinitionContext)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (uml.RedefinableElement) wrapResult(getCastWrappedObject().getRedefinableelement(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _RedefinitionContext))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getRedefinitionContext(uml.RedefinableElement _Redefinableelement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getRedefinitionContext(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Redefinableelement)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getRedefinitionContext(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Redefinableelement))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<uml.RedefinableElementClassifier> get___JmiInterface() {
        return uml.RedefinableElementClassifier.class;
    }

    protected String metaObjectToString() {
        return "uml.RedefinableElementClassifier (Java Type)\numl.RedefinableElement_Classifier (MOF Type)"; //$NON-NLS-1$
    }    
}