/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public final class NamedElementDependencyImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationImpl
{
    // default constructor
    public NamedElementDependencyImpl() {
        super();
    }

    // specific constructor
    public NamedElementDependencyImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Client, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ClientDependency) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return exists(get___CurrentConnection(), _Client, _ClientDependency);
    }
    public boolean exists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Client, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ClientDependency) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return ___existsMultN( connection, _Client, _ClientDependency, "498680B6124F51D2F0E811DDC027000E35A783E4"); //$NON-NLS-1$
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getClient(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ClientDependency) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getClient(get___CurrentConnection(), _ClientDependency);
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getClient(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ClientDependency) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject>) ___queryElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _ClientDependency, get___EndAndMetaObject( 1 ) );
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getClientDependency(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Client) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getClientDependency(get___CurrentConnection(), _Client);
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getClientDependency(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Client) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject>) ___getElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _Client, get___EndAndMetaObject( 0 ) );
    }
    public boolean add(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Client, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ClientDependency) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_Client, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_ClientDependency);
    }
    public boolean add(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Client, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ClientDependency) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Client, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_ClientDependency);
    }
    public boolean remove(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Client, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ClientDependency) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_Client, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_ClientDependency);
    }
    public boolean remove(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Client, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ClientDependency) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Client, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_ClientDependency);
    }
    public boolean refLinkExists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefObject firstEnd, com.sap.tc.moin.repository.mmi.reflect.RefObject secondEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        if ( firstEnd == null || secondEnd == null ) { return false; }
        checkTypesForRefLinkExists( connection, firstEnd, secondEnd );
        return exists( connection, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) firstEnd, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) secondEnd );
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<uml.NamedElementDependency> get___JmiInterface() {
        return uml.NamedElementDependency.class;
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<uml.NamedElementDependency> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new uml.__impl.NamedElementDependencyWrapper(conn, this, synchronize);
    }
}