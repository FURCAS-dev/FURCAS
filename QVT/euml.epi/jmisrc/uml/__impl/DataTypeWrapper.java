/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public class DataTypeWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefObjectWrapperImpl<uml.__impl.DataTypeImpl> implements uml.DataType,com.sap.tc.moin.repository.Partitionable {


    static {
    }

    public DataTypeWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, uml.__impl.DataTypeImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    @SuppressWarnings("unused")
    private uml.__impl.DataTypeImpl getCastWrappedObject() {
        return (uml.__impl.DataTypeImpl) getWrappedObject();
    }
    
    public uml.__impl.DataTypeImpl unwrap() {
        return (uml.__impl.DataTypeImpl) getWrappedObject();
    }
        
    // methods for attributes
     
    // methods for references
    public java.util.List<uml.Operation> getOwnedOperation() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.List<uml.Operation>) wrapResult(getCastWrappedObject().getOwnedOperation(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.List<uml.Operation>) wrapResult(getCastWrappedObject().getOwnedOperation(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }



   
    // methods for modeled operations
    
    // methods for internal modeled operations

    // reflective methods
    

    // get the JMI interface
    @SuppressWarnings("unchecked")
    public java.lang.Class<uml.DataType> get___JmiInterface() {
        return uml.DataType.class;
    }

    // to String
    protected String metaObjectToString() {
        return "uml.DataType (Java Type)\numl.DataType (MOF Type)"; //$NON-NLS-1$
    }    
}