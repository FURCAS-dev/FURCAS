/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public class PackageProfileApplicationWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<uml.PackageProfileApplication> implements uml.PackageProfileApplication,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The PackageProfileApplication wrapper
     */
    public PackageProfileApplicationWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, uml.__impl.PackageProfileApplicationImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private uml.__impl.PackageProfileApplicationImpl getCastWrappedObject() {
        return (uml.__impl.PackageProfileApplicationImpl) getWrappedObject();
    }

    public uml.PackageProfileApplication unwrap() {
        return (uml.PackageProfileApplication) getWrappedObject();
    }
    
    public boolean exists(uml.Package _ApplyingPackage, uml.ProfileApplication _ProfileApplication) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ApplyingPackage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ProfileApplication));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ApplyingPackage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ProfileApplication)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public uml.Package getApplyingPackage(uml.ProfileApplication _ProfileApplication) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (uml.Package) wrapResult(getCastWrappedObject().getApplyingPackage(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ProfileApplication)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (uml.Package) wrapResult(getCastWrappedObject().getApplyingPackage(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ProfileApplication))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getProfileApplication(uml.Package _ApplyingPackage) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getProfileApplication(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ApplyingPackage)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getProfileApplication(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ApplyingPackage))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(uml.Package _ApplyingPackage, uml.ProfileApplication _ProfileApplication) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ApplyingPackage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ProfileApplication));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ApplyingPackage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ProfileApplication)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(uml.Package _ApplyingPackage, uml.ProfileApplication _ProfileApplication) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ApplyingPackage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ProfileApplication));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ApplyingPackage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ProfileApplication)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<uml.PackageProfileApplication> get___JmiInterface() {
        return uml.PackageProfileApplication.class;
    }

    protected String metaObjectToString() {
        return "uml.PackageProfileApplication (Java Type)\numl.Package_ProfileApplication (MOF Type)"; //$NON-NLS-1$
    }    
}