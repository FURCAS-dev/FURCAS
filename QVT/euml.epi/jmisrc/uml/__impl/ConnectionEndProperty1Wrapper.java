/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public class ConnectionEndProperty1Wrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<uml.ConnectionEndProperty1> implements uml.ConnectionEndProperty1,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ConnectionEndProperty1 wrapper
     */
    public ConnectionEndProperty1Wrapper(com.sap.tc.moin.repository.core.CoreConnection conn, uml.__impl.ConnectionEndProperty1Impl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private uml.__impl.ConnectionEndProperty1Impl getCastWrappedObject() {
        return (uml.__impl.ConnectionEndProperty1Impl) getWrappedObject();
    }

    public uml.ConnectionEndProperty1 unwrap() {
        return (uml.ConnectionEndProperty1) getWrappedObject();
    }
    
    public boolean exists(uml.ConnectionEnd _Connectionend, uml.Property _PartWithPort) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Connectionend), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PartWithPort));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Connectionend), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PartWithPort)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public uml.ConnectionEnd getConnectionend(uml.Property _PartWithPort) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (uml.ConnectionEnd) wrapResult(getCastWrappedObject().getConnectionend(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PartWithPort)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (uml.ConnectionEnd) wrapResult(getCastWrappedObject().getConnectionend(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PartWithPort))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public uml.Property getPartWithPort(uml.ConnectionEnd _Connectionend) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (uml.Property) wrapResult(getCastWrappedObject().getPartWithPort(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Connectionend)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (uml.Property) wrapResult(getCastWrappedObject().getPartWithPort(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Connectionend))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(uml.ConnectionEnd _Connectionend, uml.Property _PartWithPort) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Connectionend), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PartWithPort));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Connectionend), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PartWithPort)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(uml.ConnectionEnd _Connectionend, uml.Property _PartWithPort) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Connectionend), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PartWithPort));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Connectionend), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PartWithPort)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<uml.ConnectionEndProperty1> get___JmiInterface() {
        return uml.ConnectionEndProperty1.class;
    }

    protected String metaObjectToString() {
        return "uml.ConnectionEndProperty1 (Java Type)\numl.ConnectionEnd_Property1 (MOF Type)"; //$NON-NLS-1$
    }    
}