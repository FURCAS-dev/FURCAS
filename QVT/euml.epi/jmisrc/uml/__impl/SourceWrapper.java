/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public class SourceWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<uml.Source> implements uml.Source,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The Source wrapper
     */
    public SourceWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, uml.__impl.SourceImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private uml.__impl.SourceImpl getCastWrappedObject() {
        return (uml.__impl.SourceImpl) getWrappedObject();
    }

    public uml.Source unwrap() {
        return (uml.Source) getWrappedObject();
    }
    
    public boolean exists(uml.DirectedRelationship _Directedrelationship, uml.Element _Source) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Directedrelationship), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Source));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Directedrelationship), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Source)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public uml.DirectedRelationship getDirectedrelationship(uml.Element _Source) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (uml.DirectedRelationship) wrapResult(getCastWrappedObject().getDirectedrelationship(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Source)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (uml.DirectedRelationship) wrapResult(getCastWrappedObject().getDirectedrelationship(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Source))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getSource(uml.DirectedRelationship _Directedrelationship) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getSource(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Directedrelationship)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getSource(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Directedrelationship))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(uml.DirectedRelationship _Directedrelationship, uml.Element _Source) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Directedrelationship), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Source));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Directedrelationship), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Source)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(uml.DirectedRelationship _Directedrelationship, uml.Element _Source) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Directedrelationship), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Source));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Directedrelationship), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Source)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<uml.Source> get___JmiInterface() {
        return uml.Source.class;
    }

    protected String metaObjectToString() {
        return "uml.Source (Java Type)\numl.source (MOF Type)"; //$NON-NLS-1$
    }    
}