/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public final class OpaqueExpressionParameterImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationImpl
{
    // default constructor
    public OpaqueExpressionParameterImpl() {
        super();
    }

    // specific constructor
    public OpaqueExpressionParameterImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Opaqueexpression, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Result) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return exists(get___CurrentConnection(), _Opaqueexpression, _Result);
    }
    public boolean exists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Opaqueexpression, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Result) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return ___existsMult1( connection, _Opaqueexpression, _Result, "498698C368AE0900F0F611DD9802000E35A783E4"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefBaseObject getOpaqueexpression(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Result) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getOpaqueexpression(get___CurrentConnection(), _Result);
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefBaseObject getOpaqueexpression(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Result) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        com.sap.tc.moin.repository.core.EndAndMetaObject endAndMetaObject = get___EndAndMetaObject( 1 );
        return (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) ___queryElementAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _Result, endAndMetaObject );
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefBaseObject getResult(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Opaqueexpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getResult(get___CurrentConnection(), _Opaqueexpression);
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefBaseObject getResult(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Opaqueexpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) ___getElementAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _Opaqueexpression, "498698C368AE0900F0F611DD9802000E35A783E4"); //$NON-NLS-1$
    }
    public boolean refLinkExists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefObject firstEnd, com.sap.tc.moin.repository.mmi.reflect.RefObject secondEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        if ( firstEnd == null || secondEnd == null ) { return false; }
        checkTypesForRefLinkExists( connection, firstEnd, secondEnd );
        return exists( connection, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) firstEnd, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) secondEnd );
    }

    public java.lang.Class<uml.OpaqueExpressionParameter> get___JmiInterface() {
        return uml.OpaqueExpressionParameter.class;
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<uml.OpaqueExpressionParameter> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new uml.__impl.OpaqueExpressionParameterWrapper(conn, this, synchronize);
    }
}