/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public class PowertypeExtentWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<uml.PowertypeExtent> implements uml.PowertypeExtent,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The PowertypeExtent wrapper
     */
    public PowertypeExtentWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, uml.__impl.PowertypeExtentImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private uml.__impl.PowertypeExtentImpl getCastWrappedObject() {
        return (uml.__impl.PowertypeExtentImpl) getWrappedObject();
    }

    public uml.PowertypeExtent unwrap() {
        return (uml.PowertypeExtent) getWrappedObject();
    }
    
    public boolean exists(uml.Classifier _Powertype, uml.GeneralizationSet _PowertypeExtent) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Powertype), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PowertypeExtent));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Powertype), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PowertypeExtent)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public uml.Classifier getPowertype(uml.GeneralizationSet _PowertypeExtent) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (uml.Classifier) wrapResult(getCastWrappedObject().getPowertype(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PowertypeExtent)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (uml.Classifier) wrapResult(getCastWrappedObject().getPowertype(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PowertypeExtent))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getPowertypeExtent(uml.Classifier _Powertype) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getPowertypeExtent(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Powertype)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getPowertypeExtent(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Powertype))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(uml.Classifier _Powertype, uml.GeneralizationSet _PowertypeExtent) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Powertype), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PowertypeExtent));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Powertype), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PowertypeExtent)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(uml.Classifier _Powertype, uml.GeneralizationSet _PowertypeExtent) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Powertype), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PowertypeExtent));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Powertype), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _PowertypeExtent)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<uml.PowertypeExtent> get___JmiInterface() {
        return uml.PowertypeExtent.class;
    }

    protected String metaObjectToString() {
        return "uml.PowertypeExtent (Java Type)\numl.powertypeExtent (MOF Type)"; //$NON-NLS-1$
    }    
}