/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public class ConnectionEndConnectableElementWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<uml.ConnectionEndConnectableElement> implements uml.ConnectionEndConnectableElement,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ConnectionEndConnectableElement wrapper
     */
    public ConnectionEndConnectableElementWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, uml.__impl.ConnectionEndConnectableElementImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private uml.__impl.ConnectionEndConnectableElementImpl getCastWrappedObject() {
        return (uml.__impl.ConnectionEndConnectableElementImpl) getWrappedObject();
    }

    public uml.ConnectionEndConnectableElement unwrap() {
        return (uml.ConnectionEndConnectableElement) getWrappedObject();
    }
    
    public boolean exists(uml.ConnectionEnd _Connectionend, uml.ConnectableElement _Role) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Connectionend), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Role));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Connectionend), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Role)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public uml.ConnectionEnd getConnectionend(uml.ConnectableElement _Role) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (uml.ConnectionEnd) wrapResult(getCastWrappedObject().getConnectionend(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Role)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (uml.ConnectionEnd) wrapResult(getCastWrappedObject().getConnectionend(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Role))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public uml.ConnectableElement getRole(uml.ConnectionEnd _Connectionend) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (uml.ConnectableElement) wrapResult(getCastWrappedObject().getRole(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Connectionend)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (uml.ConnectableElement) wrapResult(getCastWrappedObject().getRole(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Connectionend))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(uml.ConnectionEnd _Connectionend, uml.ConnectableElement _Role) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Connectionend), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Role));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Connectionend), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Role)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(uml.ConnectionEnd _Connectionend, uml.ConnectableElement _Role) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Connectionend), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Role));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Connectionend), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Role)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<uml.ConnectionEndConnectableElement> get___JmiInterface() {
        return uml.ConnectionEndConnectableElement.class;
    }

    protected String metaObjectToString() {
        return "uml.ConnectionEndConnectableElement (Java Type)\numl.ConnectionEnd_ConnectableElement (MOF Type)"; //$NON-NLS-1$
    }    
}