/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public class TemplateParameterParameterableElement1Wrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<uml.TemplateParameterParameterableElement1> implements uml.TemplateParameterParameterableElement1,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The TemplateParameterParameterableElement1 wrapper
     */
    public TemplateParameterParameterableElement1Wrapper(com.sap.tc.moin.repository.core.CoreConnection conn, uml.__impl.TemplateParameterParameterableElement1Impl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private uml.__impl.TemplateParameterParameterableElement1Impl getCastWrappedObject() {
        return (uml.__impl.TemplateParameterParameterableElement1Impl) getWrappedObject();
    }

    public uml.TemplateParameterParameterableElement1 unwrap() {
        return (uml.TemplateParameterParameterableElement1) getWrappedObject();
    }
    
    public boolean exists(uml.TemplateParameter _OwningTemplateParameter, uml.ParameterableElement _OwnedParameterElement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OwningTemplateParameter), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OwnedParameterElement));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OwningTemplateParameter), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OwnedParameterElement)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public uml.TemplateParameter getOwningTemplateParameter(uml.ParameterableElement _OwnedParameterElement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (uml.TemplateParameter) wrapResult(getCastWrappedObject().getOwningTemplateParameter(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OwnedParameterElement)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (uml.TemplateParameter) wrapResult(getCastWrappedObject().getOwningTemplateParameter(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OwnedParameterElement))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public uml.ParameterableElement getOwnedParameterElement(uml.TemplateParameter _OwningTemplateParameter) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (uml.ParameterableElement) wrapResult(getCastWrappedObject().getOwnedParameterElement(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OwningTemplateParameter)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (uml.ParameterableElement) wrapResult(getCastWrappedObject().getOwnedParameterElement(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OwningTemplateParameter))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(uml.TemplateParameter _OwningTemplateParameter, uml.ParameterableElement _OwnedParameterElement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OwningTemplateParameter), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OwnedParameterElement));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OwningTemplateParameter), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OwnedParameterElement)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(uml.TemplateParameter _OwningTemplateParameter, uml.ParameterableElement _OwnedParameterElement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OwningTemplateParameter), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OwnedParameterElement));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OwningTemplateParameter), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OwnedParameterElement)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<uml.TemplateParameterParameterableElement1> get___JmiInterface() {
        return uml.TemplateParameterParameterableElement1.class;
    }

    protected String metaObjectToString() {
        return "uml.TemplateParameterParameterableElement1 (Java Type)\numl.TemplateParameter_ParameterableElement1 (MOF Type)"; //$NON-NLS-1$
    }    
}