/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public class DeploymentTargetPackageableElementWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<uml.DeploymentTargetPackageableElement> implements uml.DeploymentTargetPackageableElement,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The DeploymentTargetPackageableElement wrapper
     */
    public DeploymentTargetPackageableElementWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, uml.__impl.DeploymentTargetPackageableElementImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private uml.__impl.DeploymentTargetPackageableElementImpl getCastWrappedObject() {
        return (uml.__impl.DeploymentTargetPackageableElementImpl) getWrappedObject();
    }

    public uml.DeploymentTargetPackageableElement unwrap() {
        return (uml.DeploymentTargetPackageableElement) getWrappedObject();
    }
    
    public boolean exists(uml.DeploymentTarget _Deploymenttarget, uml.PackageableElement _DeployedElement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Deploymenttarget), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DeployedElement));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Deploymenttarget), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DeployedElement)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public uml.DeploymentTarget getDeploymenttarget(uml.PackageableElement _DeployedElement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (uml.DeploymentTarget) wrapResult(getCastWrappedObject().getDeploymenttarget(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DeployedElement)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (uml.DeploymentTarget) wrapResult(getCastWrappedObject().getDeploymenttarget(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DeployedElement))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getDeployedElement(uml.DeploymentTarget _Deploymenttarget) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getDeployedElement(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Deploymenttarget)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getDeployedElement(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Deploymenttarget))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<uml.DeploymentTargetPackageableElement> get___JmiInterface() {
        return uml.DeploymentTargetPackageableElement.class;
    }

    protected String metaObjectToString() {
        return "uml.DeploymentTargetPackageableElement (Java Type)\numl.DeploymentTarget_PackageableElement (MOF Type)"; //$NON-NLS-1$
    }    
}