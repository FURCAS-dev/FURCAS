/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public class PropertyAssociationWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<uml.PropertyAssociation> implements uml.PropertyAssociation,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The PropertyAssociation wrapper
     */
    public PropertyAssociationWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, uml.__impl.PropertyAssociationImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private uml.__impl.PropertyAssociationImpl getCastWrappedObject() {
        return (uml.__impl.PropertyAssociationImpl) getWrappedObject();
    }

    public uml.PropertyAssociation unwrap() {
        return (uml.PropertyAssociation) getWrappedObject();
    }
    
    public boolean exists(uml.Property _Property, uml.Association _Association) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Association));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Association)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public uml.Property getProperty(uml.Association _Association) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (uml.Property) wrapResult(getCastWrappedObject().getProperty(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Association)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (uml.Property) wrapResult(getCastWrappedObject().getProperty(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Association))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public uml.Association getAssociation(uml.Property _Property) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (uml.Association) wrapResult(getCastWrappedObject().getAssociation(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (uml.Association) wrapResult(getCastWrappedObject().getAssociation(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(uml.Property _Property, uml.Association _Association) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Association));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Association)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(uml.Property _Property, uml.Association _Association) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Association));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Property), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Association)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<uml.PropertyAssociation> get___JmiInterface() {
        return uml.PropertyAssociation.class;
    }

    protected String metaObjectToString() {
        return "uml.PropertyAssociation (Java Type)\numl.Property_Association (MOF Type)"; //$NON-NLS-1$
    }    
}