/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public final class AssociationTypeImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationImpl
{
    // default constructor
    public AssociationTypeImpl() {
        super();
    }

    // specific constructor
    public AssociationTypeImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Association, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _EndType) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return exists(get___CurrentConnection(), _Association, _EndType);
    }
    public boolean exists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Association, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _EndType) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return ___existsMultN( connection, _Association, _EndType, "49868B3151B4F7C2F0EE11DDAA4D000E35A783E4"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefBaseObject getAssociation(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _EndType) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getAssociation(get___CurrentConnection(), _EndType);
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefBaseObject getAssociation(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _EndType) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        com.sap.tc.moin.repository.core.EndAndMetaObject endAndMetaObject = get___EndAndMetaObject( 1 );
        return (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) ___queryElementAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _EndType, endAndMetaObject );
    }
    public java.util.List<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getEndType(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Association) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getEndType(get___CurrentConnection(), _Association);
    }
    public java.util.List<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getEndType(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Association) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.List<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject>) ___getElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _Association, get___EndAndMetaObject( 0 ) );
    }
    public boolean refLinkExists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefObject firstEnd, com.sap.tc.moin.repository.mmi.reflect.RefObject secondEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        if ( firstEnd == null || secondEnd == null ) { return false; }
        checkTypesForRefLinkExists( connection, firstEnd, secondEnd );
        return exists( connection, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) firstEnd, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) secondEnd );
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<uml.AssociationType> get___JmiInterface() {
        return uml.AssociationType.class;
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<uml.AssociationType> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new uml.__impl.AssociationTypeWrapper(conn, this, synchronize);
    }
}