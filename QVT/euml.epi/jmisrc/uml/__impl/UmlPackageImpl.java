/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public final class UmlPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;
    
    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(216);
        FEATURE_IDS.put("Comment", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("Element", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("Package", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("PackageableElement", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("Namespace", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("TemplateableElement", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("Type", Integer.valueOf(6)); //$NON-NLS-1$
        FEATURE_IDS.put("PackageMerge", Integer.valueOf(7)); //$NON-NLS-1$
        FEATURE_IDS.put("ProfileApplication", Integer.valueOf(8)); //$NON-NLS-1$
        FEATURE_IDS.put("NamedElement", Integer.valueOf(9)); //$NON-NLS-1$
        FEATURE_IDS.put("ParameterableElement", Integer.valueOf(10)); //$NON-NLS-1$
        FEATURE_IDS.put("Dependency", Integer.valueOf(11)); //$NON-NLS-1$
        FEATURE_IDS.put("StringExpression", Integer.valueOf(12)); //$NON-NLS-1$
        FEATURE_IDS.put("DirectedRelationship", Integer.valueOf(13)); //$NON-NLS-1$
        FEATURE_IDS.put("Relationship", Integer.valueOf(14)); //$NON-NLS-1$
        FEATURE_IDS.put("ElementImport", Integer.valueOf(15)); //$NON-NLS-1$
        FEATURE_IDS.put("PackageImport", Integer.valueOf(16)); //$NON-NLS-1$
        FEATURE_IDS.put("Contraint", Integer.valueOf(17)); //$NON-NLS-1$
        FEATURE_IDS.put("ValueSpecification", Integer.valueOf(18)); //$NON-NLS-1$
        FEATURE_IDS.put("TypedElement", Integer.valueOf(19)); //$NON-NLS-1$
        FEATURE_IDS.put("Association", Integer.valueOf(20)); //$NON-NLS-1$
        FEATURE_IDS.put("Classifier", Integer.valueOf(21)); //$NON-NLS-1$
        FEATURE_IDS.put("Property", Integer.valueOf(22)); //$NON-NLS-1$
        FEATURE_IDS.put("RedefinableElement", Integer.valueOf(23)); //$NON-NLS-1$
        FEATURE_IDS.put("Generalization", Integer.valueOf(24)); //$NON-NLS-1$
        FEATURE_IDS.put("GeneralizationSet", Integer.valueOf(25)); //$NON-NLS-1$
        FEATURE_IDS.put("Feature", Integer.valueOf(26)); //$NON-NLS-1$
        FEATURE_IDS.put("Substitution", Integer.valueOf(27)); //$NON-NLS-1$
        FEATURE_IDS.put("CollaborationUse", Integer.valueOf(28)); //$NON-NLS-1$
        FEATURE_IDS.put("UseCase", Integer.valueOf(29)); //$NON-NLS-1$
        FEATURE_IDS.put("TemplateBinding", Integer.valueOf(30)); //$NON-NLS-1$
        FEATURE_IDS.put("TemplateSignature", Integer.valueOf(31)); //$NON-NLS-1$
        FEATURE_IDS.put("TemplateParameterSubstitution", Integer.valueOf(32)); //$NON-NLS-1$
        FEATURE_IDS.put("TemplateParameter", Integer.valueOf(33)); //$NON-NLS-1$
        FEATURE_IDS.put("Realization", Integer.valueOf(34)); //$NON-NLS-1$
        FEATURE_IDS.put("Abstraction", Integer.valueOf(35)); //$NON-NLS-1$
        FEATURE_IDS.put("OpaqueExpression", Integer.valueOf(36)); //$NON-NLS-1$
        FEATURE_IDS.put("Parameter", Integer.valueOf(37)); //$NON-NLS-1$
        FEATURE_IDS.put("Behavior", Integer.valueOf(38)); //$NON-NLS-1$
        FEATURE_IDS.put("ConnectableElement", Integer.valueOf(39)); //$NON-NLS-1$
        FEATURE_IDS.put("MultiplicityElment", Integer.valueOf(40)); //$NON-NLS-1$
        FEATURE_IDS.put("ParameterSet", Integer.valueOf(41)); //$NON-NLS-1$
        FEATURE_IDS.put("Operation", Integer.valueOf(42)); //$NON-NLS-1$
        FEATURE_IDS.put("ConnectionEnd", Integer.valueOf(43)); //$NON-NLS-1$
        FEATURE_IDS.put("ConnectableElementTemplateParameter", Integer.valueOf(44)); //$NON-NLS-1$
        FEATURE_IDS.put("StucturalFeature", Integer.valueOf(45)); //$NON-NLS-1$
        FEATURE_IDS.put("DeploymentTarget", Integer.valueOf(46)); //$NON-NLS-1$
        FEATURE_IDS.put("UmlClass", Integer.valueOf(47)); //$NON-NLS-1$
        FEATURE_IDS.put("DataType", Integer.valueOf(48)); //$NON-NLS-1$
        FEATURE_IDS.put("Deployment", Integer.valueOf(49)); //$NON-NLS-1$
        FEATURE_IDS.put("DeployedArtifact", Integer.valueOf(50)); //$NON-NLS-1$
        FEATURE_IDS.put("DeploymentSpecification", Integer.valueOf(51)); //$NON-NLS-1$
        FEATURE_IDS.put("Artifact", Integer.valueOf(52)); //$NON-NLS-1$
        FEATURE_IDS.put("Manifestation", Integer.valueOf(53)); //$NON-NLS-1$
        FEATURE_IDS.put("BehavioralFeature", Integer.valueOf(54)); //$NON-NLS-1$
        FEATURE_IDS.put("Interface", Integer.valueOf(55)); //$NON-NLS-1$
        FEATURE_IDS.put("BehavioredClassifier", Integer.valueOf(56)); //$NON-NLS-1$
        FEATURE_IDS.put("Comment_Element", Integer.valueOf(57)); //$NON-NLS-1$
        FEATURE_IDS.put("Element_Element", Integer.valueOf(58)); //$NON-NLS-1$
        FEATURE_IDS.put("Package_Type", Integer.valueOf(59)); //$NON-NLS-1$
        FEATURE_IDS.put("PackageMerge_Package", Integer.valueOf(60)); //$NON-NLS-1$
        FEATURE_IDS.put("PackageMerge_Package1", Integer.valueOf(61)); //$NON-NLS-1$
        FEATURE_IDS.put("Package_PackageableElement", Integer.valueOf(62)); //$NON-NLS-1$
        FEATURE_IDS.put("Package_Package", Integer.valueOf(63)); //$NON-NLS-1$
        FEATURE_IDS.put("Package_ProfileApplication", Integer.valueOf(64)); //$NON-NLS-1$
        FEATURE_IDS.put("NamedElement_Dependency", Integer.valueOf(65)); //$NON-NLS-1$
        FEATURE_IDS.put("NamedElement_Namespace", Integer.valueOf(66)); //$NON-NLS-1$
        FEATURE_IDS.put("NamedElement_StringExpression", Integer.valueOf(67)); //$NON-NLS-1$
        FEATURE_IDS.put("Dependency_NamedElement", Integer.valueOf(68)); //$NON-NLS-1$
        FEATURE_IDS.put("target", Integer.valueOf(69)); //$NON-NLS-1$
        FEATURE_IDS.put("source", Integer.valueOf(70)); //$NON-NLS-1$
        FEATURE_IDS.put("Relationship_Element", Integer.valueOf(71)); //$NON-NLS-1$
        FEATURE_IDS.put("Namespace_NamedElement", Integer.valueOf(72)); //$NON-NLS-1$
        FEATURE_IDS.put("Namespace_PackageableElement", Integer.valueOf(73)); //$NON-NLS-1$
        FEATURE_IDS.put("Namespace_ElementImport", Integer.valueOf(74)); //$NON-NLS-1$
        FEATURE_IDS.put("Namespace_PackageImport", Integer.valueOf(75)); //$NON-NLS-1$
        FEATURE_IDS.put("Namespace_Contraint", Integer.valueOf(76)); //$NON-NLS-1$
        FEATURE_IDS.put("ElementImport_PackageableElement", Integer.valueOf(77)); //$NON-NLS-1$
        FEATURE_IDS.put("PackageImport_Package", Integer.valueOf(78)); //$NON-NLS-1$
        FEATURE_IDS.put("Contraint_Element", Integer.valueOf(79)); //$NON-NLS-1$
        FEATURE_IDS.put("Contraint_ValueSpecification", Integer.valueOf(80)); //$NON-NLS-1$
        FEATURE_IDS.put("TypedElement_Type", Integer.valueOf(81)); //$NON-NLS-1$
        FEATURE_IDS.put("Association_Property", Integer.valueOf(82)); //$NON-NLS-1$
        FEATURE_IDS.put("Association_Property1", Integer.valueOf(83)); //$NON-NLS-1$
        FEATURE_IDS.put("Association_Type", Integer.valueOf(84)); //$NON-NLS-1$
        FEATURE_IDS.put("Association_Property2", Integer.valueOf(85)); //$NON-NLS-1$
        FEATURE_IDS.put("Classifier_NamedElement", Integer.valueOf(86)); //$NON-NLS-1$
        FEATURE_IDS.put("c2c", Integer.valueOf(87)); //$NON-NLS-1$
        FEATURE_IDS.put("Classifier_Classifier", Integer.valueOf(88)); //$NON-NLS-1$
        FEATURE_IDS.put("Classifier_Property", Integer.valueOf(89)); //$NON-NLS-1$
        FEATURE_IDS.put("Classifier_Generalization", Integer.valueOf(90)); //$NON-NLS-1$
        FEATURE_IDS.put("powertypeExtent", Integer.valueOf(91)); //$NON-NLS-1$
        FEATURE_IDS.put("Classifier_Feature", Integer.valueOf(92)); //$NON-NLS-1$
        FEATURE_IDS.put("Classifier_Substitution", Integer.valueOf(93)); //$NON-NLS-1$
        FEATURE_IDS.put("collaboration", Integer.valueOf(94)); //$NON-NLS-1$
        FEATURE_IDS.put("Classifier_CollaborationUse", Integer.valueOf(95)); //$NON-NLS-1$
        FEATURE_IDS.put("ownedUseCase", Integer.valueOf(96)); //$NON-NLS-1$
        FEATURE_IDS.put("Classifier_UseCase", Integer.valueOf(97)); //$NON-NLS-1$
        FEATURE_IDS.put("RedefinableElement_RedefinableElement", Integer.valueOf(98)); //$NON-NLS-1$
        FEATURE_IDS.put("RedefinableElement_Classifier", Integer.valueOf(99)); //$NON-NLS-1$
        FEATURE_IDS.put("TemplateableElement_TemplateBinding", Integer.valueOf(100)); //$NON-NLS-1$
        FEATURE_IDS.put("TemplateableElement_TemplateSignature", Integer.valueOf(101)); //$NON-NLS-1$
        FEATURE_IDS.put("TemplateBinding_TemplateSignature", Integer.valueOf(102)); //$NON-NLS-1$
        FEATURE_IDS.put("TemplateBinding_TemplateParameterSubstitution", Integer.valueOf(103)); //$NON-NLS-1$
        FEATURE_IDS.put("TemplateSignature_TemplateParameter", Integer.valueOf(104)); //$NON-NLS-1$
        FEATURE_IDS.put("TemplateSignature_TemplateParameter1", Integer.valueOf(105)); //$NON-NLS-1$
        FEATURE_IDS.put("TemplateParameter_ParameterableElement", Integer.valueOf(106)); //$NON-NLS-1$
        FEATURE_IDS.put("TemplateParameter_ParameterableElement1", Integer.valueOf(107)); //$NON-NLS-1$
        FEATURE_IDS.put("TemplateParameter_ParameterableElement2", Integer.valueOf(108)); //$NON-NLS-1$
        FEATURE_IDS.put("TemplateParameter_ParameterableElement3", Integer.valueOf(109)); //$NON-NLS-1$
        FEATURE_IDS.put("TemplateParameterSubstitution_TemplateParameter", Integer.valueOf(110)); //$NON-NLS-1$
        FEATURE_IDS.put("actual", Integer.valueOf(111)); //$NON-NLS-1$
        FEATURE_IDS.put("TemplateParameterSubstitution_ParameterableElement", Integer.valueOf(112)); //$NON-NLS-1$
        FEATURE_IDS.put("Generalization_Classifier", Integer.valueOf(113)); //$NON-NLS-1$
        FEATURE_IDS.put("Generalization_GeneralizationSet", Integer.valueOf(114)); //$NON-NLS-1$
        FEATURE_IDS.put("Substitution_Classifier", Integer.valueOf(115)); //$NON-NLS-1$
        FEATURE_IDS.put("Abstraction_Dependency", Integer.valueOf(116)); //$NON-NLS-1$
        FEATURE_IDS.put("OpaqueExpression_Behavior", Integer.valueOf(117)); //$NON-NLS-1$
        FEATURE_IDS.put("OpaqueExpression_Parameter", Integer.valueOf(118)); //$NON-NLS-1$
        FEATURE_IDS.put("Parameter_ParameterSet", Integer.valueOf(119)); //$NON-NLS-1$
        FEATURE_IDS.put("Parameter_Operation", Integer.valueOf(120)); //$NON-NLS-1$
        FEATURE_IDS.put("Parameter_ValueSpecification", Integer.valueOf(121)); //$NON-NLS-1$
        FEATURE_IDS.put("MultiplicityElment_ValueSpecification", Integer.valueOf(122)); //$NON-NLS-1$
        FEATURE_IDS.put("MultiplicityElment_ValueSpecification1", Integer.valueOf(123)); //$NON-NLS-1$
        FEATURE_IDS.put("ConnectableElement_ConnectionEnd", Integer.valueOf(124)); //$NON-NLS-1$
        FEATURE_IDS.put("ConnectionEnd_Property", Integer.valueOf(125)); //$NON-NLS-1$
        FEATURE_IDS.put("ConnectionEnd_Property1", Integer.valueOf(126)); //$NON-NLS-1$
        FEATURE_IDS.put("ConnectionEnd_ConnectableElement", Integer.valueOf(127)); //$NON-NLS-1$
        FEATURE_IDS.put("PropertyToClass", Integer.valueOf(128)); //$NON-NLS-1$
        FEATURE_IDS.put("Property_DataType", Integer.valueOf(129)); //$NON-NLS-1$
        FEATURE_IDS.put("Property_Property", Integer.valueOf(130)); //$NON-NLS-1$
        FEATURE_IDS.put("Property_Property1", Integer.valueOf(131)); //$NON-NLS-1$
        FEATURE_IDS.put("Property_Property11", Integer.valueOf(132)); //$NON-NLS-1$
        FEATURE_IDS.put("Property_Association", Integer.valueOf(133)); //$NON-NLS-1$
        FEATURE_IDS.put("Property_Property12", Integer.valueOf(134)); //$NON-NLS-1$
        FEATURE_IDS.put("DeploymentTarget_Deployment", Integer.valueOf(135)); //$NON-NLS-1$
        FEATURE_IDS.put("DeploymentTarget_PackageableElement", Integer.valueOf(136)); //$NON-NLS-1$
        FEATURE_IDS.put("Deployment_DeployedArtifact", Integer.valueOf(137)); //$NON-NLS-1$
        FEATURE_IDS.put("Deployment_DeploymentSpecification", Integer.valueOf(138)); //$NON-NLS-1$
        FEATURE_IDS.put("Artifact_Artifact", Integer.valueOf(139)); //$NON-NLS-1$
        FEATURE_IDS.put("Artifact_Manifestation", Integer.valueOf(140)); //$NON-NLS-1$
        FEATURE_IDS.put("Artifact_Property", Integer.valueOf(141)); //$NON-NLS-1$
        FEATURE_IDS.put("Artifact_Operation", Integer.valueOf(142)); //$NON-NLS-1$
        FEATURE_IDS.put("Manifestation_PackageableElement", Integer.valueOf(143)); //$NON-NLS-1$
        FEATURE_IDS.put("Operation_Interface", Integer.valueOf(144)); //$NON-NLS-1$
        FEATURE_IDS.put("OperationToClass", Integer.valueOf(145)); //$NON-NLS-1$
        FEATURE_IDS.put("Operation_Contraint", Integer.valueOf(146)); //$NON-NLS-1$
        FEATURE_IDS.put("Operation_Contraint1", Integer.valueOf(147)); //$NON-NLS-1$
        FEATURE_IDS.put("Operation_Operation", Integer.valueOf(148)); //$NON-NLS-1$
        FEATURE_IDS.put("Operation_Contraint2", Integer.valueOf(149)); //$NON-NLS-1$
        FEATURE_IDS.put("Operation_Type", Integer.valueOf(150)); //$NON-NLS-1$
        FEATURE_IDS.put("DataType_Operation", Integer.valueOf(151)); //$NON-NLS-1$
        FEATURE_IDS.put("Element_Comment", Integer.valueOf(152)); //$NON-NLS-1$
        FEATURE_IDS.put("Property_ValueSpecification", Integer.valueOf(153)); //$NON-NLS-1$
        FEATURE_IDS.put("BehavioralFeature_Parameter", Integer.valueOf(154)); //$NON-NLS-1$
        FEATURE_IDS.put("BehavioralFeature_Behavior", Integer.valueOf(155)); //$NON-NLS-1$
        FEATURE_IDS.put("BehavioralFeature_Type", Integer.valueOf(156)); //$NON-NLS-1$
        FEATURE_IDS.put("BehavioralFeature_ParameterSet", Integer.valueOf(157)); //$NON-NLS-1$
        FEATURE_IDS.put("Behavior_Behavior", Integer.valueOf(158)); //$NON-NLS-1$
        FEATURE_IDS.put("Behavior_Parameter", Integer.valueOf(159)); //$NON-NLS-1$
        FEATURE_IDS.put("Behavior_BehavioredClassifier", Integer.valueOf(160)); //$NON-NLS-1$
        FEATURE_IDS.put("Behavior_Contraint", Integer.valueOf(161)); //$NON-NLS-1$
    }

    // constructors    
    public UmlPackageImpl()
    {
        super();
    }
    public UmlPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    public com.sap.tc.moin.repository.mmi.reflect.RefEnum create___RefEnum(com.sap.tc.moin.repository.mmi.model.EnumerationType enumType, String name) {
        com.sap.tc.moin.repository.mmi.reflect.RefEnum result = null;
        java.lang.String enumName = enumType.getName();
          if (enumName.equals("VisibilityKind")) { //$NON-NLS-1$
            result = uml.VisibilityKindEnum.forName(name);
          }
          else if (enumName.equals("TransitionKind")) { //$NON-NLS-1$
            result = uml.TransitionKindEnum.forName(name);
          }
          else if (enumName.equals("PseudostateKind")) { //$NON-NLS-1$
            result = uml.PseudostateKindEnum.forName(name);
          }
          else if (enumName.equals("ConnectorKind")) { //$NON-NLS-1$
            result = uml.ConnectorKindEnum.forName(name);
          }
          else if (enumName.equals("ExpansionKind")) { //$NON-NLS-1$
            result = uml.ExpansionKindEnum.forName(name);
          }
          else if (enumName.equals("InteractionOperatorKind")) { //$NON-NLS-1$
            result = uml.InteractionOperatorKindEnum.forName(name);
          }
          else if (enumName.equals("MessageSort")) { //$NON-NLS-1$
            result = uml.MessageSortEnum.forName(name);
          }
          else if (enumName.equals("MessageKind")) { //$NON-NLS-1$
            result = uml.MessageKindEnum.forName(name);
          }
          else if (enumName.equals("ObjectNodeOrderingKind")) { //$NON-NLS-1$
            result = uml.ObjectNodeOrderingKindEnum.forName(name);
          }
          else if (enumName.equals("ParameterEffectKind")) { //$NON-NLS-1$
            result = uml.ParameterEffectKindEnum.forName(name);
          }
          else if (enumName.equals("ParameterDirectionKind")) { //$NON-NLS-1$
            result = uml.ParameterDirectionKindEnum.forName(name);
          }
          else if (enumName.equals("AggregationKind")) { //$NON-NLS-1$
            result = uml.AggregationKindEnum.forName(name);
          }
          else if (enumName.equals("CallConcurrencyKind")) { //$NON-NLS-1$
            result = uml.CallConcurrencyKindEnum.forName(name);
          }
        return result;
    }
    // internal structure type creators
    // nested packages
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getComment(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Comment"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Element"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getPackage(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Package"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getPackageableElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "PackageableElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getNamespace(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Namespace"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getTemplateableElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "TemplateableElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getType(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Type"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getPackageMerge(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "PackageMerge"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getProfileApplication(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ProfileApplication"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getNamedElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "NamedElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getParameterableElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ParameterableElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getDependency(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Dependency"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getStringExpression(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "StringExpression"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getDirectedRelationship(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "DirectedRelationship"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getRelationship(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Relationship"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getElementImport(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ElementImport"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getPackageImport(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "PackageImport"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getContraint(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Contraint"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getValueSpecification(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ValueSpecification"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getTypedElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "TypedElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAssociation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Association"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getClassifier(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Classifier"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getProperty(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Property"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getRedefinableElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "RedefinableElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getGeneralization(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Generalization"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getGeneralizationSet(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "GeneralizationSet"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getFeature(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Feature"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSubstitution(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Substitution"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getCollaborationUse(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "CollaborationUse"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUseCase(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UseCase"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getTemplateBinding(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "TemplateBinding"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getTemplateSignature(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "TemplateSignature"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getTemplateParameterSubstitution(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "TemplateParameterSubstitution"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getTemplateParameter(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "TemplateParameter"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getRealization(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Realization"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAbstraction(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Abstraction"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getOpaqueExpression(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "OpaqueExpression"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getParameter(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Parameter"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getBehavior(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Behavior"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getConnectableElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ConnectableElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getMultiplicityElment(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "MultiplicityElment"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getParameterSet(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ParameterSet"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getOperation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Operation"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getConnectionEnd(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ConnectionEnd"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getConnectableElementTemplateParameter(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ConnectableElementTemplateParameter"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getStucturalFeature(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "StucturalFeature"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getDeploymentTarget(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "DeploymentTarget"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlClass(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UmlClass"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getDataType(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "DataType"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getDeployment(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Deployment"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getDeployedArtifact(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "DeployedArtifact"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getDeploymentSpecification(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "DeploymentSpecification"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getArtifact(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Artifact"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getManifestation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Manifestation"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getBehavioralFeature(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "BehavioralFeature"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getInterface(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Interface"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getBehavioredClassifier(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "BehavioredClassifier"); //$NON-NLS-1$
    }
    // associations
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getCommentElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Comment_Element"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getElementElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Element_Element"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getPackageType(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Package_Type"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getPackageMergePackage(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "PackageMerge_Package"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getPackageMergePackage1(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "PackageMerge_Package1"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getPackagePackageableElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Package_PackageableElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getPackagePackage(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Package_Package"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getPackageProfileApplication(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Package_ProfileApplication"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getNamedElementDependency(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "NamedElement_Dependency"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getNamedElementNamespace(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "NamedElement_Namespace"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getNamedElementStringExpression(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "NamedElement_StringExpression"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getDependencyNamedElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Dependency_NamedElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTarget(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "target"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSource(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "source"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getRelationshipElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Relationship_Element"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getNamespaceNamedElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Namespace_NamedElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getNamespacePackageableElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Namespace_PackageableElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getNamespaceElementImport(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Namespace_ElementImport"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getNamespacePackageImport(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Namespace_PackageImport"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getNamespaceContraint(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Namespace_Contraint"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getElementImportPackageableElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "ElementImport_PackageableElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getPackageImportPackage(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "PackageImport_Package"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getContraintElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Contraint_Element"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getContraintValueSpecification(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Contraint_ValueSpecification"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTypedElementType(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TypedElement_Type"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAssociationProperty(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Association_Property"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAssociationProperty1(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Association_Property1"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAssociationType(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Association_Type"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAssociationProperty2(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Association_Property2"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getClassifierNamedElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Classifier_NamedElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getC2c(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "c2c"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getClassifierClassifier(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Classifier_Classifier"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getClassifierProperty(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Classifier_Property"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getClassifierGeneralization(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Classifier_Generalization"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getPowertypeExtent(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "powertypeExtent"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getClassifierFeature(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Classifier_Feature"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getClassifierSubstitution(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Classifier_Substitution"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getCollaboration(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "collaboration"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getClassifierCollaborationUse(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Classifier_CollaborationUse"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getOwnedUseCase(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "ownedUseCase"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getClassifierUseCase(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Classifier_UseCase"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getRedefinableElementRedefinableElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "RedefinableElement_RedefinableElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getRedefinableElementClassifier(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "RedefinableElement_Classifier"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTemplateableElementTemplateBinding(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TemplateableElement_TemplateBinding"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTemplateableElementTemplateSignature(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TemplateableElement_TemplateSignature"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTemplateBindingTemplateSignature(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TemplateBinding_TemplateSignature"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTemplateBindingTemplateParameterSubstitution(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TemplateBinding_TemplateParameterSubstitution"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTemplateSignatureTemplateParameter(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TemplateSignature_TemplateParameter"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTemplateSignatureTemplateParameter1(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TemplateSignature_TemplateParameter1"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTemplateParameterParameterableElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TemplateParameter_ParameterableElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTemplateParameterParameterableElement1(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TemplateParameter_ParameterableElement1"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTemplateParameterParameterableElement2(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TemplateParameter_ParameterableElement2"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTemplateParameterParameterableElement3(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TemplateParameter_ParameterableElement3"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTemplateParameterSubstitutionTemplateParameter(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TemplateParameterSubstitution_TemplateParameter"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getActual(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "actual"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getTemplateParameterSubstitutionParameterableElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "TemplateParameterSubstitution_ParameterableElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getGeneralizationClassifier(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Generalization_Classifier"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getGeneralizationGeneralizationSet(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Generalization_GeneralizationSet"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSubstitutionClassifier(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Substitution_Classifier"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAbstractionDependency(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Abstraction_Dependency"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getOpaqueExpressionBehavior(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "OpaqueExpression_Behavior"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getOpaqueExpressionParameter(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "OpaqueExpression_Parameter"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getParameterParameterSet(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Parameter_ParameterSet"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getParameterOperation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Parameter_Operation"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getParameterValueSpecification(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Parameter_ValueSpecification"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getMultiplicityElmentValueSpecification(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "MultiplicityElment_ValueSpecification"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getMultiplicityElmentValueSpecification1(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "MultiplicityElment_ValueSpecification1"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getConnectableElementConnectionEnd(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "ConnectableElement_ConnectionEnd"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getConnectionEndProperty(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "ConnectionEnd_Property"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getConnectionEndProperty1(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "ConnectionEnd_Property1"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getConnectionEndConnectableElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "ConnectionEnd_ConnectableElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getPropertyToClass(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "PropertyToClass"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getPropertyDataType(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Property_DataType"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getPropertyProperty(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Property_Property"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getPropertyProperty1(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Property_Property1"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getPropertyProperty11(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Property_Property11"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getPropertyAssociation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Property_Association"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getPropertyProperty12(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Property_Property12"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getDeploymentTargetDeployment(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "DeploymentTarget_Deployment"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getDeploymentTargetPackageableElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "DeploymentTarget_PackageableElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getDeploymentDeployedArtifact(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Deployment_DeployedArtifact"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getDeploymentDeploymentSpecification(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Deployment_DeploymentSpecification"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getArtifactArtifact(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Artifact_Artifact"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getArtifactManifestation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Artifact_Manifestation"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getArtifactProperty(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Artifact_Property"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getArtifactOperation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Artifact_Operation"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getManifestationPackageableElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Manifestation_PackageableElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getOperationInterface(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Operation_Interface"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getOperationToClass(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "OperationToClass"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getOperationContraint(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Operation_Contraint"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getOperationContraint1(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Operation_Contraint1"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getOperationOperation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Operation_Operation"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getOperationContraint2(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Operation_Contraint2"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getOperationType(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Operation_Type"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getDataTypeOperation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "DataType_Operation"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getElementComment(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Element_Comment"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getPropertyValueSpecification(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Property_ValueSpecification"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getBehavioralFeatureParameter(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "BehavioralFeature_Parameter"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getBehavioralFeatureBehavior(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "BehavioralFeature_Behavior"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getBehavioralFeatureType(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "BehavioralFeature_Type"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getBehavioralFeatureParameterSet(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "BehavioralFeature_ParameterSet"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getBehaviorBehavior(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Behavior_Behavior"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getBehaviorParameter(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Behavior_Parameter"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getBehaviorBehavioredClassifier(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Behavior_BehavioredClassifier"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getBehaviorContraint(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Behavior_Contraint"); //$NON-NLS-1$
    }
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.CommentImpl")); //$NON-NLS-1$
                case 1:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 2:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.PackageImpl")); //$NON-NLS-1$
                case 3:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 4:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 5:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 6:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.TypeImpl")); //$NON-NLS-1$
                case 7:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.PackageMergeImpl")); //$NON-NLS-1$
                case 8:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.ProfileApplicationImpl")); //$NON-NLS-1$
                case 9:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 10:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.ParameterableElementImpl")); //$NON-NLS-1$
                case 11:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.DependencyImpl")); //$NON-NLS-1$
                case 12:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.StringExpressionImpl")); //$NON-NLS-1$
                case 13:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 14:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 15:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.ElementImportImpl")); //$NON-NLS-1$
                case 16:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.PackageImportImpl")); //$NON-NLS-1$
                case 17:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.ContraintImpl")); //$NON-NLS-1$
                case 18:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 19:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 20:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.AssociationImpl")); //$NON-NLS-1$
                case 21:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 22:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.PropertyImpl")); //$NON-NLS-1$
                case 23:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 24:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.GeneralizationImpl")); //$NON-NLS-1$
                case 25:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.GeneralizationSetImpl")); //$NON-NLS-1$
                case 26:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.FeatureImpl")); //$NON-NLS-1$
                case 27:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.SubstitutionImpl")); //$NON-NLS-1$
                case 28:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.CollaborationUseImpl")); //$NON-NLS-1$
                case 29:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.UseCaseImpl")); //$NON-NLS-1$
                case 30:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.TemplateBindingImpl")); //$NON-NLS-1$
                case 31:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.TemplateSignatureImpl")); //$NON-NLS-1$
                case 32:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.TemplateParameterSubstitutionImpl")); //$NON-NLS-1$
                case 33:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.TemplateParameterImpl")); //$NON-NLS-1$
                case 34:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.RealizationImpl")); //$NON-NLS-1$
                case 35:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.AbstractionImpl")); //$NON-NLS-1$
                case 36:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.OpaqueExpressionImpl")); //$NON-NLS-1$
                case 37:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.ParameterImpl")); //$NON-NLS-1$
                case 38:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 39:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 40:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 41:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.ParameterSetImpl")); //$NON-NLS-1$
                case 42:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.OperationImpl")); //$NON-NLS-1$
                case 43:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.ConnectionEndImpl")); //$NON-NLS-1$
                case 44:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.ConnectableElementTemplateParameterImpl")); //$NON-NLS-1$
                case 45:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.StucturalFeatureImpl")); //$NON-NLS-1$
                case 46:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 47:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.UmlClassImpl")); //$NON-NLS-1$
                case 48:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.DataTypeImpl")); //$NON-NLS-1$
                case 49:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.DeploymentImpl")); //$NON-NLS-1$
                case 50:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 51:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.DeploymentSpecificationImpl")); //$NON-NLS-1$
                case 52:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.ArtifactImpl")); //$NON-NLS-1$
                case 53:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.ManifestationImpl")); //$NON-NLS-1$
                case 54:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 55:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.InterfaceImpl")); //$NON-NLS-1$
                case 56:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("uml.__impl.BehavioredClassifierImpl")); //$NON-NLS-1$
                case 57:
                    return new uml.__impl.CommentElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 58:
                    return new uml.__impl.ElementElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 59:
                    return new uml.__impl.PackageTypeImpl(workspace, mofId, immediatePackage, metaObject);
                case 60:
                    return new uml.__impl.PackageMergePackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 61:
                    return new uml.__impl.PackageMergePackage1Impl(workspace, mofId, immediatePackage, metaObject);
                case 62:
                    return new uml.__impl.PackagePackageableElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 63:
                    return new uml.__impl.PackagePackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 64:
                    return new uml.__impl.PackageProfileApplicationImpl(workspace, mofId, immediatePackage, metaObject);
                case 65:
                    return new uml.__impl.NamedElementDependencyImpl(workspace, mofId, immediatePackage, metaObject);
                case 66:
                    return new uml.__impl.NamedElementNamespaceImpl(workspace, mofId, immediatePackage, metaObject);
                case 67:
                    return new uml.__impl.NamedElementStringExpressionImpl(workspace, mofId, immediatePackage, metaObject);
                case 68:
                    return new uml.__impl.DependencyNamedElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 69:
                    return new uml.__impl.TargetImpl(workspace, mofId, immediatePackage, metaObject);
                case 70:
                    return new uml.__impl.SourceImpl(workspace, mofId, immediatePackage, metaObject);
                case 71:
                    return new uml.__impl.RelationshipElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 72:
                    return new uml.__impl.NamespaceNamedElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 73:
                    return new uml.__impl.NamespacePackageableElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 74:
                    return new uml.__impl.NamespaceElementImportImpl(workspace, mofId, immediatePackage, metaObject);
                case 75:
                    return new uml.__impl.NamespacePackageImportImpl(workspace, mofId, immediatePackage, metaObject);
                case 76:
                    return new uml.__impl.NamespaceContraintImpl(workspace, mofId, immediatePackage, metaObject);
                case 77:
                    return new uml.__impl.ElementImportPackageableElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 78:
                    return new uml.__impl.PackageImportPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 79:
                    return new uml.__impl.ContraintElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 80:
                    return new uml.__impl.ContraintValueSpecificationImpl(workspace, mofId, immediatePackage, metaObject);
                case 81:
                    return new uml.__impl.TypedElementTypeImpl(workspace, mofId, immediatePackage, metaObject);
                case 82:
                    return new uml.__impl.AssociationPropertyImpl(workspace, mofId, immediatePackage, metaObject);
                case 83:
                    return new uml.__impl.AssociationProperty1Impl(workspace, mofId, immediatePackage, metaObject);
                case 84:
                    return new uml.__impl.AssociationTypeImpl(workspace, mofId, immediatePackage, metaObject);
                case 85:
                    return new uml.__impl.AssociationProperty2Impl(workspace, mofId, immediatePackage, metaObject);
                case 86:
                    return new uml.__impl.ClassifierNamedElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 87:
                    return new uml.__impl.C2cImpl(workspace, mofId, immediatePackage, metaObject);
                case 88:
                    return new uml.__impl.ClassifierClassifierImpl(workspace, mofId, immediatePackage, metaObject);
                case 89:
                    return new uml.__impl.ClassifierPropertyImpl(workspace, mofId, immediatePackage, metaObject);
                case 90:
                    return new uml.__impl.ClassifierGeneralizationImpl(workspace, mofId, immediatePackage, metaObject);
                case 91:
                    return new uml.__impl.PowertypeExtentImpl(workspace, mofId, immediatePackage, metaObject);
                case 92:
                    return new uml.__impl.ClassifierFeatureImpl(workspace, mofId, immediatePackage, metaObject);
                case 93:
                    return new uml.__impl.ClassifierSubstitutionImpl(workspace, mofId, immediatePackage, metaObject);
                case 94:
                    return new uml.__impl.CollaborationImpl(workspace, mofId, immediatePackage, metaObject);
                case 95:
                    return new uml.__impl.ClassifierCollaborationUseImpl(workspace, mofId, immediatePackage, metaObject);
                case 96:
                    return new uml.__impl.OwnedUseCaseImpl(workspace, mofId, immediatePackage, metaObject);
                case 97:
                    return new uml.__impl.ClassifierUseCaseImpl(workspace, mofId, immediatePackage, metaObject);
                case 98:
                    return new uml.__impl.RedefinableElementRedefinableElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 99:
                    return new uml.__impl.RedefinableElementClassifierImpl(workspace, mofId, immediatePackage, metaObject);
                case 100:
                    return new uml.__impl.TemplateableElementTemplateBindingImpl(workspace, mofId, immediatePackage, metaObject);
                case 101:
                    return new uml.__impl.TemplateableElementTemplateSignatureImpl(workspace, mofId, immediatePackage, metaObject);
                case 102:
                    return new uml.__impl.TemplateBindingTemplateSignatureImpl(workspace, mofId, immediatePackage, metaObject);
                case 103:
                    return new uml.__impl.TemplateBindingTemplateParameterSubstitutionImpl(workspace, mofId, immediatePackage, metaObject);
                case 104:
                    return new uml.__impl.TemplateSignatureTemplateParameterImpl(workspace, mofId, immediatePackage, metaObject);
                case 105:
                    return new uml.__impl.TemplateSignatureTemplateParameter1Impl(workspace, mofId, immediatePackage, metaObject);
                case 106:
                    return new uml.__impl.TemplateParameterParameterableElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 107:
                    return new uml.__impl.TemplateParameterParameterableElement1Impl(workspace, mofId, immediatePackage, metaObject);
                case 108:
                    return new uml.__impl.TemplateParameterParameterableElement2Impl(workspace, mofId, immediatePackage, metaObject);
                case 109:
                    return new uml.__impl.TemplateParameterParameterableElement3Impl(workspace, mofId, immediatePackage, metaObject);
                case 110:
                    return new uml.__impl.TemplateParameterSubstitutionTemplateParameterImpl(workspace, mofId, immediatePackage, metaObject);
                case 111:
                    return new uml.__impl.ActualImpl(workspace, mofId, immediatePackage, metaObject);
                case 112:
                    return new uml.__impl.TemplateParameterSubstitutionParameterableElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 113:
                    return new uml.__impl.GeneralizationClassifierImpl(workspace, mofId, immediatePackage, metaObject);
                case 114:
                    return new uml.__impl.GeneralizationGeneralizationSetImpl(workspace, mofId, immediatePackage, metaObject);
                case 115:
                    return new uml.__impl.SubstitutionClassifierImpl(workspace, mofId, immediatePackage, metaObject);
                case 116:
                    return new uml.__impl.AbstractionDependencyImpl(workspace, mofId, immediatePackage, metaObject);
                case 117:
                    return new uml.__impl.OpaqueExpressionBehaviorImpl(workspace, mofId, immediatePackage, metaObject);
                case 118:
                    return new uml.__impl.OpaqueExpressionParameterImpl(workspace, mofId, immediatePackage, metaObject);
                case 119:
                    return new uml.__impl.ParameterParameterSetImpl(workspace, mofId, immediatePackage, metaObject);
                case 120:
                    return new uml.__impl.ParameterOperationImpl(workspace, mofId, immediatePackage, metaObject);
                case 121:
                    return new uml.__impl.ParameterValueSpecificationImpl(workspace, mofId, immediatePackage, metaObject);
                case 122:
                    return new uml.__impl.MultiplicityElmentValueSpecificationImpl(workspace, mofId, immediatePackage, metaObject);
                case 123:
                    return new uml.__impl.MultiplicityElmentValueSpecification1Impl(workspace, mofId, immediatePackage, metaObject);
                case 124:
                    return new uml.__impl.ConnectableElementConnectionEndImpl(workspace, mofId, immediatePackage, metaObject);
                case 125:
                    return new uml.__impl.ConnectionEndPropertyImpl(workspace, mofId, immediatePackage, metaObject);
                case 126:
                    return new uml.__impl.ConnectionEndProperty1Impl(workspace, mofId, immediatePackage, metaObject);
                case 127:
                    return new uml.__impl.ConnectionEndConnectableElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 128:
                    return new uml.__impl.PropertyToClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 129:
                    return new uml.__impl.PropertyDataTypeImpl(workspace, mofId, immediatePackage, metaObject);
                case 130:
                    return new uml.__impl.PropertyPropertyImpl(workspace, mofId, immediatePackage, metaObject);
                case 131:
                    return new uml.__impl.PropertyProperty1Impl(workspace, mofId, immediatePackage, metaObject);
                case 132:
                    return new uml.__impl.PropertyProperty11Impl(workspace, mofId, immediatePackage, metaObject);
                case 133:
                    return new uml.__impl.PropertyAssociationImpl(workspace, mofId, immediatePackage, metaObject);
                case 134:
                    return new uml.__impl.PropertyProperty12Impl(workspace, mofId, immediatePackage, metaObject);
                case 135:
                    return new uml.__impl.DeploymentTargetDeploymentImpl(workspace, mofId, immediatePackage, metaObject);
                case 136:
                    return new uml.__impl.DeploymentTargetPackageableElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 137:
                    return new uml.__impl.DeploymentDeployedArtifactImpl(workspace, mofId, immediatePackage, metaObject);
                case 138:
                    return new uml.__impl.DeploymentDeploymentSpecificationImpl(workspace, mofId, immediatePackage, metaObject);
                case 139:
                    return new uml.__impl.ArtifactArtifactImpl(workspace, mofId, immediatePackage, metaObject);
                case 140:
                    return new uml.__impl.ArtifactManifestationImpl(workspace, mofId, immediatePackage, metaObject);
                case 141:
                    return new uml.__impl.ArtifactPropertyImpl(workspace, mofId, immediatePackage, metaObject);
                case 142:
                    return new uml.__impl.ArtifactOperationImpl(workspace, mofId, immediatePackage, metaObject);
                case 143:
                    return new uml.__impl.ManifestationPackageableElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 144:
                    return new uml.__impl.OperationInterfaceImpl(workspace, mofId, immediatePackage, metaObject);
                case 145:
                    return new uml.__impl.OperationToClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 146:
                    return new uml.__impl.OperationContraintImpl(workspace, mofId, immediatePackage, metaObject);
                case 147:
                    return new uml.__impl.OperationContraint1Impl(workspace, mofId, immediatePackage, metaObject);
                case 148:
                    return new uml.__impl.OperationOperationImpl(workspace, mofId, immediatePackage, metaObject);
                case 149:
                    return new uml.__impl.OperationContraint2Impl(workspace, mofId, immediatePackage, metaObject);
                case 150:
                    return new uml.__impl.OperationTypeImpl(workspace, mofId, immediatePackage, metaObject);
                case 151:
                    return new uml.__impl.DataTypeOperationImpl(workspace, mofId, immediatePackage, metaObject);
                case 152:
                    return new uml.__impl.ElementCommentImpl(workspace, mofId, immediatePackage, metaObject);
                case 153:
                    return new uml.__impl.PropertyValueSpecificationImpl(workspace, mofId, immediatePackage, metaObject);
                case 154:
                    return new uml.__impl.BehavioralFeatureParameterImpl(workspace, mofId, immediatePackage, metaObject);
                case 155:
                    return new uml.__impl.BehavioralFeatureBehaviorImpl(workspace, mofId, immediatePackage, metaObject);
                case 156:
                    return new uml.__impl.BehavioralFeatureTypeImpl(workspace, mofId, immediatePackage, metaObject);
                case 157:
                    return new uml.__impl.BehavioralFeatureParameterSetImpl(workspace, mofId, immediatePackage, metaObject);
                case 158:
                    return new uml.__impl.BehaviorBehaviorImpl(workspace, mofId, immediatePackage, metaObject);
                case 159:
                    return new uml.__impl.BehaviorParameterImpl(workspace, mofId, immediatePackage, metaObject);
                case 160:
                    return new uml.__impl.BehaviorBehavioredClassifierImpl(workspace, mofId, immediatePackage, metaObject);
                case 161:
                    return new uml.__impl.BehaviorContraintImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    public java.lang.Class<uml.UmlPackage> get___JmiInterface() {
        return uml.UmlPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(0);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefPackageAndName rpan = null;
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(57);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
            name = "Comment"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Comment"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Element"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Element"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Package"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Package"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "PackageableElement"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.PackageableElement"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Namespace"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Namespace"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "TemplateableElement"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.TemplateableElement"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Type"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Type"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "PackageMerge"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.PackageMerge"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ProfileApplication"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.ProfileApplication"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "NamedElement"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.NamedElement"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ParameterableElement"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.ParameterableElement"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Dependency"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Dependency"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "StringExpression"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.StringExpression"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "DirectedRelationship"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.DirectedRelationship"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Relationship"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Relationship"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ElementImport"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.ElementImport"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "PackageImport"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.PackageImport"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Contraint"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Contraint"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ValueSpecification"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.ValueSpecification"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "TypedElement"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.TypedElement"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Association"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Association"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Classifier"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Classifier"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Property"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Property"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "RedefinableElement"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.RedefinableElement"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Generalization"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Generalization"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "GeneralizationSet"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.GeneralizationSet"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Feature"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Feature"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Substitution"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Substitution"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "CollaborationUse"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.CollaborationUse"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UseCase"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.UseCase"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "TemplateBinding"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.TemplateBinding"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "TemplateSignature"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.TemplateSignature"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "TemplateParameterSubstitution"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.TemplateParameterSubstitution"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "TemplateParameter"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.TemplateParameter"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Realization"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Realization"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Abstraction"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Abstraction"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "OpaqueExpression"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.OpaqueExpression"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Parameter"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Parameter"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Behavior"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Behavior"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ConnectableElement"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.ConnectableElement"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "MultiplicityElment"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.MultiplicityElment"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ParameterSet"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.ParameterSet"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Operation"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Operation"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ConnectionEnd"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.ConnectionEnd"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ConnectableElementTemplateParameter"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.ConnectableElementTemplateParameter"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "StucturalFeature"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.StucturalFeature"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "DeploymentTarget"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.DeploymentTarget"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UmlClass"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.UmlClass"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "DataType"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.DataType"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Deployment"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Deployment"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "DeployedArtifact"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.DeployedArtifact"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "DeploymentSpecification"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.DeploymentSpecification"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Artifact"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Artifact"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Manifestation"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Manifestation"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "BehavioralFeature"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.BehavioralFeature"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Interface"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.Interface"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "BehavioredClassifier"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "uml.BehavioredClassifier"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(105);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefAssociationAndName raan = null;
            name = "Comment_Element"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.CommentElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Element_Element"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ElementElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Package_Type"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.PackageType"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "PackageMerge_Package"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.PackageMergePackage"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "PackageMerge_Package1"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.PackageMergePackage1"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Package_PackageableElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.PackagePackageableElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Package_Package"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.PackagePackage"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Package_ProfileApplication"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.PackageProfileApplication"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "NamedElement_Dependency"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.NamedElementDependency"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "NamedElement_Namespace"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.NamedElementNamespace"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "NamedElement_StringExpression"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.NamedElementStringExpression"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Dependency_NamedElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.DependencyNamedElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "target"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.Target"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "source"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.Source"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Relationship_Element"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.RelationshipElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Namespace_NamedElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.NamespaceNamedElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Namespace_PackageableElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.NamespacePackageableElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Namespace_ElementImport"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.NamespaceElementImport"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Namespace_PackageImport"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.NamespacePackageImport"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Namespace_Contraint"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.NamespaceContraint"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "ElementImport_PackageableElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ElementImportPackageableElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "PackageImport_Package"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.PackageImportPackage"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Contraint_Element"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ContraintElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Contraint_ValueSpecification"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ContraintValueSpecification"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TypedElement_Type"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.TypedElementType"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Association_Property"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.AssociationProperty"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Association_Property1"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.AssociationProperty1"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Association_Type"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.AssociationType"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Association_Property2"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.AssociationProperty2"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Classifier_NamedElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ClassifierNamedElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "c2c"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.C2c"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Classifier_Classifier"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ClassifierClassifier"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Classifier_Property"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ClassifierProperty"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Classifier_Generalization"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ClassifierGeneralization"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "powertypeExtent"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.PowertypeExtent"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Classifier_Feature"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ClassifierFeature"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Classifier_Substitution"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ClassifierSubstitution"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "collaboration"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.Collaboration"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Classifier_CollaborationUse"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ClassifierCollaborationUse"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "ownedUseCase"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.OwnedUseCase"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Classifier_UseCase"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ClassifierUseCase"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "RedefinableElement_RedefinableElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.RedefinableElementRedefinableElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "RedefinableElement_Classifier"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.RedefinableElementClassifier"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TemplateableElement_TemplateBinding"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.TemplateableElementTemplateBinding"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TemplateableElement_TemplateSignature"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.TemplateableElementTemplateSignature"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TemplateBinding_TemplateSignature"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.TemplateBindingTemplateSignature"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TemplateBinding_TemplateParameterSubstitution"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.TemplateBindingTemplateParameterSubstitution"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TemplateSignature_TemplateParameter"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.TemplateSignatureTemplateParameter"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TemplateSignature_TemplateParameter1"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.TemplateSignatureTemplateParameter1"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TemplateParameter_ParameterableElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.TemplateParameterParameterableElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TemplateParameter_ParameterableElement1"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.TemplateParameterParameterableElement1"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TemplateParameter_ParameterableElement2"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.TemplateParameterParameterableElement2"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TemplateParameter_ParameterableElement3"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.TemplateParameterParameterableElement3"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TemplateParameterSubstitution_TemplateParameter"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.TemplateParameterSubstitutionTemplateParameter"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "actual"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.Actual"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "TemplateParameterSubstitution_ParameterableElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.TemplateParameterSubstitutionParameterableElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Generalization_Classifier"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.GeneralizationClassifier"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Generalization_GeneralizationSet"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.GeneralizationGeneralizationSet"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Substitution_Classifier"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.SubstitutionClassifier"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Abstraction_Dependency"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.AbstractionDependency"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "OpaqueExpression_Behavior"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.OpaqueExpressionBehavior"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "OpaqueExpression_Parameter"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.OpaqueExpressionParameter"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Parameter_ParameterSet"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ParameterParameterSet"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Parameter_Operation"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ParameterOperation"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Parameter_ValueSpecification"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ParameterValueSpecification"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "MultiplicityElment_ValueSpecification"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.MultiplicityElmentValueSpecification"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "MultiplicityElment_ValueSpecification1"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.MultiplicityElmentValueSpecification1"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "ConnectableElement_ConnectionEnd"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ConnectableElementConnectionEnd"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "ConnectionEnd_Property"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ConnectionEndProperty"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "ConnectionEnd_Property1"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ConnectionEndProperty1"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "ConnectionEnd_ConnectableElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ConnectionEndConnectableElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "PropertyToClass"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.PropertyToClass"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Property_DataType"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.PropertyDataType"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Property_Property"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.PropertyProperty"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Property_Property1"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.PropertyProperty1"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Property_Property11"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.PropertyProperty11"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Property_Association"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.PropertyAssociation"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Property_Property12"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.PropertyProperty12"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "DeploymentTarget_Deployment"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.DeploymentTargetDeployment"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "DeploymentTarget_PackageableElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.DeploymentTargetPackageableElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Deployment_DeployedArtifact"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.DeploymentDeployedArtifact"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Deployment_DeploymentSpecification"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.DeploymentDeploymentSpecification"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Artifact_Artifact"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ArtifactArtifact"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Artifact_Manifestation"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ArtifactManifestation"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Artifact_Property"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ArtifactProperty"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Artifact_Operation"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ArtifactOperation"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Manifestation_PackageableElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ManifestationPackageableElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Operation_Interface"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.OperationInterface"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "OperationToClass"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.OperationToClass"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Operation_Contraint"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.OperationContraint"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Operation_Contraint1"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.OperationContraint1"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Operation_Operation"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.OperationOperation"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Operation_Contraint2"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.OperationContraint2"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Operation_Type"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.OperationType"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "DataType_Operation"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.DataTypeOperation"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Element_Comment"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.ElementComment"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Property_ValueSpecification"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.PropertyValueSpecification"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "BehavioralFeature_Parameter"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.BehavioralFeatureParameter"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "BehavioralFeature_Behavior"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.BehavioralFeatureBehavior"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "BehavioralFeature_Type"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.BehavioralFeatureType"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "BehavioralFeature_ParameterSet"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.BehavioralFeatureParameterSet"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Behavior_Behavior"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.BehaviorBehavior"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Behavior_Parameter"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.BehaviorParameter"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Behavior_BehavioredClassifier"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.BehaviorBehavioredClassifier"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Behavior_Contraint"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "uml.BehaviorContraint"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<uml.__impl.UmlPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new uml.__impl.UmlPackageWrapper(conn, this, synchronize);
    }

}