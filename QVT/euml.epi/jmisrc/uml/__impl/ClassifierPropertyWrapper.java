/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml.__impl;

public class ClassifierPropertyWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<uml.ClassifierProperty> implements uml.ClassifierProperty,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ClassifierProperty wrapper
     */
    public ClassifierPropertyWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, uml.__impl.ClassifierPropertyImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private uml.__impl.ClassifierPropertyImpl getCastWrappedObject() {
        return (uml.__impl.ClassifierPropertyImpl) getWrappedObject();
    }

    public uml.ClassifierProperty unwrap() {
        return (uml.ClassifierProperty) getWrappedObject();
    }
    
    public boolean exists(uml.Classifier _Classifier, uml.Property _Attribute) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Classifier), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Attribute));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Classifier), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Attribute)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public uml.Classifier getClassifier(uml.Property _Attribute) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (uml.Classifier) wrapResult(getCastWrappedObject().getClassifier(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Attribute)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (uml.Classifier) wrapResult(getCastWrappedObject().getClassifier(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Attribute))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getAttribute(uml.Classifier _Classifier) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getAttribute(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Classifier)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getAttribute(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Classifier))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<uml.ClassifierProperty> get___JmiInterface() {
        return uml.ClassifierProperty.class;
    }

    protected String metaObjectToString() {
        return "uml.ClassifierProperty (Java Type)\numl.Classifier_Property (MOF Type)"; //$NON-NLS-1$
    }    
}