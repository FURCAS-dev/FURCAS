/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml;

/**
 * A classifier is a classification of instances - it describes a set of instances that have features in common. A classifier can specify a generalization hierarchy by referencing its general classifiers.

 * A classifier has the capability to own collaboration uses. These collaboration uses link a collaboration with the classifier to give a description of the workings of the classifier.

 * A classifier has the capability to own use cases. Although the owning classifier typically represents the subject to which the owned use cases apply, this is not necessarily the case. In principle, the same use case can be applied to multiple subjects, as identified by the subject association role of a use case.

 * Classifier is defined to be a kind of templateable element so that a classifier can be parameterized. It is also defined to be a kind of parameterable element so that a classifier can be a formal template parameter.
 * This interface is not intended to be implemented by clients.
 */
public interface Classifier extends uml.Namespace,uml.RedefinableElement,uml.Type,uml.TemplateableElement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.Classifier> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.Classifier>("49868A3EC0F85B00F0ED11DD8C52000E35A783E4", "sap.com/moin/mm/euml", "uml", "Classifier"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public boolean isAbstract() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAbstract(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public java.util.Collection<uml.NamedElement> getInheritedMember() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.Classifier> getRedefinedClassifier() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.Classifier> getGeneral() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.Property> getAttribute() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.Generalization> getGeneralization() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.GeneralizationSet> getPowertypeExtent() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.Feature> getFeature() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.Substitution> getSubstitution() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.CollaborationUse> getCollaborationUse() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public uml.CollaborationUse getRepresentation() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setRepresentation(uml.CollaborationUse newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.UseCase> getOwnedUseCase() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.UseCase> getUseCase() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,java.util.Collection<java.lang.String>> NAME( ) {
            return uml.NamedElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,uml.VisibilityKind> VISIBILITY( ) {
            return uml.NamedElement.DESCRIPTORS.VISIBILITY( );
        }
        /**
         * Returns the descriptor for the <code>qualifiedName</code> attribute.
         * @return  the descriptor for the <code>qualifiedName</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,java.lang.String> QUALIFIED_NAME( ) {
            return uml.NamedElement.DESCRIPTORS.QUALIFIED_NAME( );
        }
        /**
         * Returns the descriptor for the <code>isLeaf</code> attribute.
         * @return  the descriptor for the <code>isLeaf</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.RedefinableElement,java.lang.Boolean> IS_LEAF( ) {
            return uml.RedefinableElement.DESCRIPTORS.IS_LEAF( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Classifier,java.lang.Boolean> __isAbstract;
        /**
         * Returns the descriptor for the <code>isAbstract</code> attribute.
         * @return  the descriptor for the <code>isAbstract</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Classifier,java.lang.Boolean> IS_ABSTRACT( ) {
            if ( __isAbstract == null ) {
                __isAbstract = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Classifier,java.lang.Boolean>( "49868BDFB94EBA10F0EE11DDAC33000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Classifier", "isAbstract" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isAbstract;
        }
        /**
         * Returns the descriptor for the <code>ownedElement</code> reference.
         * @return  the descriptor for the <code>ownedElement</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,java.util.Collection<uml.Element>> OWNED_ELEMENT( ) {
            return uml.Element.DESCRIPTORS.OWNED_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>owner</code> reference.
         * @return  the descriptor for the <code>owner</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,uml.Element> OWNER( ) {
            return uml.Element.DESCRIPTORS.OWNER( );
        }
        /**
         * Returns the descriptor for the <code>ownedComment</code> reference.
         * @return  the descriptor for the <code>ownedComment</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,java.util.Collection<uml.Comment>> OWNED_COMMENT( ) {
            return uml.Element.DESCRIPTORS.OWNED_COMMENT( );
        }
        /**
         * Returns the descriptor for the <code>clientDependency</code> reference.
         * @return  the descriptor for the <code>clientDependency</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,java.util.Collection<uml.Dependency>> CLIENT_DEPENDENCY( ) {
            return uml.NamedElement.DESCRIPTORS.CLIENT_DEPENDENCY( );
        }
        /**
         * Returns the descriptor for the <code>namespace</code> reference.
         * @return  the descriptor for the <code>namespace</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,uml.Namespace> NAMESPACE( ) {
            return uml.NamedElement.DESCRIPTORS.NAMESPACE( );
        }
        /**
         * Returns the descriptor for the <code>nameExpression</code> reference.
         * @return  the descriptor for the <code>nameExpression</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,uml.StringExpression> NAME_EXPRESSION( ) {
            return uml.NamedElement.DESCRIPTORS.NAME_EXPRESSION( );
        }
        /**
         * Returns the descriptor for the <code>ownedMember</code> reference.
         * @return  the descriptor for the <code>ownedMember</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.NamedElement>> OWNED_MEMBER( ) {
            return uml.Namespace.DESCRIPTORS.OWNED_MEMBER( );
        }
        /**
         * Returns the descriptor for the <code>member</code> reference.
         * @return  the descriptor for the <code>member</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.NamedElement>> MEMBER( ) {
            return uml.Namespace.DESCRIPTORS.MEMBER( );
        }
        /**
         * Returns the descriptor for the <code>importedMember</code> reference.
         * @return  the descriptor for the <code>importedMember</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.PackageableElement>> IMPORTED_MEMBER( ) {
            return uml.Namespace.DESCRIPTORS.IMPORTED_MEMBER( );
        }
        /**
         * Returns the descriptor for the <code>elementImport</code> reference.
         * @return  the descriptor for the <code>elementImport</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.ElementImport>> ELEMENT_IMPORT( ) {
            return uml.Namespace.DESCRIPTORS.ELEMENT_IMPORT( );
        }
        /**
         * Returns the descriptor for the <code>packageImport</code> reference.
         * @return  the descriptor for the <code>packageImport</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.PackageImport>> PACKAGE_IMPORT( ) {
            return uml.Namespace.DESCRIPTORS.PACKAGE_IMPORT( );
        }
        /**
         * Returns the descriptor for the <code>ownedRule</code> reference.
         * @return  the descriptor for the <code>ownedRule</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.Contraint>> OWNED_RULE( ) {
            return uml.Namespace.DESCRIPTORS.OWNED_RULE( );
        }
        /**
         * Returns the descriptor for the <code>redefinedElement</code> reference.
         * @return  the descriptor for the <code>redefinedElement</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.RedefinableElement,java.util.Collection<uml.RedefinableElement>> REDEFINED_ELEMENT( ) {
            return uml.RedefinableElement.DESCRIPTORS.REDEFINED_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>redefinitionContext</code> reference.
         * @return  the descriptor for the <code>redefinitionContext</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.RedefinableElement,java.util.Collection<uml.Classifier>> REDEFINITION_CONTEXT( ) {
            return uml.RedefinableElement.DESCRIPTORS.REDEFINITION_CONTEXT( );
        }
        /**
         * Returns the descriptor for the <code>templateparameter</code> reference.
         * @return  the descriptor for the <code>templateparameter</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ParameterableElement,uml.TemplateParameter> TEMPLATEPARAMETER( ) {
            return uml.ParameterableElement.DESCRIPTORS.TEMPLATEPARAMETER( );
        }
        /**
         * Returns the descriptor for the <code>owningtemplateparameter</code> reference.
         * @return  the descriptor for the <code>owningtemplateparameter</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ParameterableElement,uml.TemplateParameter> OWNINGTEMPLATEPARAMETER( ) {
            return uml.ParameterableElement.DESCRIPTORS.OWNINGTEMPLATEPARAMETER( );
        }
        /**
         * Returns the descriptor for the <code>umlpackage</code> reference.
         * @return  the descriptor for the <code>umlpackage</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Type,uml.Package> UMLPACKAGE( ) {
            return uml.Type.DESCRIPTORS.UMLPACKAGE( );
        }
        /**
         * Returns the descriptor for the <code>templatebinding</code> reference.
         * @return  the descriptor for the <code>templatebinding</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateableElement,java.util.Collection<uml.TemplateBinding>> TEMPLATEBINDING( ) {
            return uml.TemplateableElement.DESCRIPTORS.TEMPLATEBINDING( );
        }
        /**
         * Returns the descriptor for the <code>ownedtemplatesignature</code> reference.
         * @return  the descriptor for the <code>ownedtemplatesignature</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.TemplateableElement,java.util.Collection<uml.TemplateSignature>> OWNEDTEMPLATESIGNATURE( ) {
            return uml.TemplateableElement.DESCRIPTORS.OWNEDTEMPLATESIGNATURE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.NamedElement>> __inheritedMember;
        /**
         * Returns the descriptor for the <code>inheritedMember</code> reference.
         * @return  the descriptor for the <code>inheritedMember</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.NamedElement>> INHERITED_MEMBER( ) {
            if ( __inheritedMember == null ) {
                __inheritedMember = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.NamedElement>>( "49868C0ED58B9403F0EE11DD9A6E000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Classifier", "inheritedMember" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __inheritedMember;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Classifier>> __redefinedClassifier;
        /**
         * Returns the descriptor for the <code>redefinedClassifier</code> reference.
         * @return  the descriptor for the <code>redefinedClassifier</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Classifier>> REDEFINED_CLASSIFIER( ) {
            if ( __redefinedClassifier == null ) {
                __redefinedClassifier = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Classifier>>( "49868C43F53A8A43F0EE11DDABD5000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Classifier", "redefinedClassifier" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __redefinedClassifier;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Classifier>> __general;
        /**
         * Returns the descriptor for the <code>general</code> reference.
         * @return  the descriptor for the <code>general</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Classifier>> GENERAL( ) {
            if ( __general == null ) {
                __general = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Classifier>>( "49868C6D0DDCB140F0EF11DDCBA2000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Classifier", "general" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __general;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Property>> __attribute;
        /**
         * Returns the descriptor for the <code>attribute</code> reference.
         * @return  the descriptor for the <code>attribute</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Property>> ATTRIBUTE( ) {
            if ( __attribute == null ) {
                __attribute = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Property>>( "49868C90230CBBF3F0EF11DDC464000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Classifier", "attribute" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __attribute;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Generalization>> __generalization;
        /**
         * Returns the descriptor for the <code>generalization</code> reference.
         * @return  the descriptor for the <code>generalization</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Generalization>> GENERALIZATION( ) {
            if ( __generalization == null ) {
                __generalization = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Generalization>>( "49868CC240CBC910F0EF11DDCF07000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Classifier", "generalization" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __generalization;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.GeneralizationSet>> __powertypeExtent;
        /**
         * Returns the descriptor for the <code>powertypeExtent</code> reference.
         * @return  the descriptor for the <code>powertypeExtent</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.GeneralizationSet>> POWERTYPE_EXTENT( ) {
            if ( __powertypeExtent == null ) {
                __powertypeExtent = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.GeneralizationSet>>( "49868D0E6E0C9033F0EF11DD8F7A000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Classifier", "powertypeExtent" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __powertypeExtent;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Feature>> __feature;
        /**
         * Returns the descriptor for the <code>feature</code> reference.
         * @return  the descriptor for the <code>feature</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Feature>> FEATURE( ) {
            if ( __feature == null ) {
                __feature = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Feature>>( "49868DF7F8F97193F0EF11DDBAFA000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Classifier", "feature" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __feature;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Substitution>> __substitution;
        /**
         * Returns the descriptor for the <code>substitution</code> reference.
         * @return  the descriptor for the <code>substitution</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Substitution>> SUBSTITUTION( ) {
            if ( __substitution == null ) {
                __substitution = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.Substitution>>( "49868E512E4AE363F0F011DDA755000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Classifier", "substitution" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __substitution;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.CollaborationUse>> __collaborationUse;
        /**
         * Returns the descriptor for the <code>collaborationUse</code> reference.
         * @return  the descriptor for the <code>collaborationUse</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.CollaborationUse>> COLLABORATION_USE( ) {
            if ( __collaborationUse == null ) {
                __collaborationUse = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.CollaborationUse>>( "49868E9A59F3F380F0F011DDB4CF000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Classifier", "collaborationUse" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __collaborationUse;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,uml.CollaborationUse> __representation;
        /**
         * Returns the descriptor for the <code>representation</code> reference.
         * @return  the descriptor for the <code>representation</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,uml.CollaborationUse> REPRESENTATION( ) {
            if ( __representation == null ) {
                __representation = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,uml.CollaborationUse>( "49868EC774A2B363F0F011DD91CC000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Classifier", "representation" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __representation;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.UseCase>> __ownedUseCase;
        /**
         * Returns the descriptor for the <code>ownedUseCase</code> reference.
         * @return  the descriptor for the <code>ownedUseCase</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.UseCase>> OWNED_USE_CASE( ) {
            if ( __ownedUseCase == null ) {
                __ownedUseCase = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.UseCase>>( "49868F0D9E526483F0F011DD8240000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Classifier", "ownedUseCase" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __ownedUseCase;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.UseCase>> __useCase;
        /**
         * Returns the descriptor for the <code>useCase</code> reference.
         * @return  the descriptor for the <code>useCase</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.UseCase>> USE_CASE( ) {
            if ( __useCase == null ) {
                __useCase = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Classifier,java.util.Collection<uml.UseCase>>( "49868F21AA74EDF3F0F011DD8104000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Classifier", "useCase" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __useCase;
        }
    }
}    