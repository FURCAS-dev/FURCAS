/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml;

/**
 * A generalization is a taxonomic relationship between a more general classifier and a more specific classifier. Each instance of the specific classifier is also an indirect instance of the general classifier. Thus, the specific classifier inherits the features of the more general classifier.
 * A generalization relates a specific classifier to a more general classifier, and is owned by the specific classifier.
 * This interface is not intended to be implemented by clients.
 */
public interface Generalization extends uml.DirectedRelationship {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.Generalization> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.Generalization>("49868CAE34C5C850F0EF11DDAEB0000E35A783E4", "sap.com/moin/mm/euml", "uml", "Generalization"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public java.lang.Boolean isSubstitutable() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setSubstitutable(java.lang.Boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public uml.Classifier getSpecific() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setSpecific(uml.Classifier newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public uml.Classifier getGeneral() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setGeneral(uml.Classifier newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.GeneralizationSet> getGeneralizationset() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Generalization,java.lang.Boolean> __isSubstitutable;
        /**
         * Returns the descriptor for the <code>isSubstitutable</code> attribute.
         * @return  the descriptor for the <code>isSubstitutable</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Generalization,java.lang.Boolean> IS_SUBSTITUTABLE( ) {
            if ( __isSubstitutable == null ) {
                __isSubstitutable = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.Generalization,java.lang.Boolean>( "49869496EB69C6C0F0F311DDC9DF000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Generalization", "isSubstitutable" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isSubstitutable;
        }
        /**
         * Returns the descriptor for the <code>element</code> reference.
         * @return  the descriptor for the <code>element</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.DirectedRelationship,java.util.Collection<uml.Element>> ELEMENT( ) {
            return uml.DirectedRelationship.DESCRIPTORS.ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>element1</code> reference.
         * @return  the descriptor for the <code>element1</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.DirectedRelationship,java.util.Collection<uml.Element>> ELEMENT1( ) {
            return uml.DirectedRelationship.DESCRIPTORS.ELEMENT1( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Generalization,uml.Classifier> __specific;
        /**
         * Returns the descriptor for the <code>specific</code> reference.
         * @return  the descriptor for the <code>specific</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Generalization,uml.Classifier> SPECIFIC( ) {
            if ( __specific == null ) {
                __specific = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Generalization,uml.Classifier>( "49868CEC5A043CA0F0EF11DD9ED7000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Generalization", "specific" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __specific;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Generalization,uml.Classifier> __general;
        /**
         * Returns the descriptor for the <code>general</code> reference.
         * @return  the descriptor for the <code>general</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Generalization,uml.Classifier> GENERAL( ) {
            if ( __general == null ) {
                __general = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Generalization,uml.Classifier>( "498694EC1EB110B3F0F411DDC90F000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Generalization", "general" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __general;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Generalization,java.util.Collection<uml.GeneralizationSet>> __generalizationset;
        /**
         * Returns the descriptor for the <code>generalizationset</code> reference.
         * @return  the descriptor for the <code>generalizationset</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Generalization,java.util.Collection<uml.GeneralizationSet>> GENERALIZATIONSET( ) {
            if ( __generalizationset == null ) {
                __generalizationset = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Generalization,java.util.Collection<uml.GeneralizationSet>>( "498695082F0499A3F0F411DD8036000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Generalization", "generalizationset" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __generalizationset;
        }
    }
}    