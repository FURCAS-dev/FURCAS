/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml;

/**
 * An element import identifies an element in another package, and allows the element to be referenced using its name without a qualifier.
 * This interface is not intended to be implemented by clients.
 */
public interface ElementImport extends uml.DirectedRelationship {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.ElementImport> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.ElementImport>("4986848E5CE99B90F0EA11DDCAE3000E35A783E4", "sap.com/moin/mm/euml", "uml", "ElementImport"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public uml.VisibilityKind getVisibility() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setVisibility(uml.VisibilityKind newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.lang.String getAlias() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAlias(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public uml.Namespace getImportingnamespace() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setImportingnamespace(uml.Namespace newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public uml.PackageableElement getImportedElement() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setImportedElement(uml.PackageableElement newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.ElementImport,uml.VisibilityKind> __visibility;
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.ElementImport,uml.VisibilityKind> VISIBILITY( ) {
            if ( __visibility == null ) {
                __visibility = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.ElementImport,uml.VisibilityKind>( "498686234E998E50F0EB11DD81C6000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "ElementImport", "visibility" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __visibility;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.ElementImport,java.lang.String> __alias;
        /**
         * Returns the descriptor for the <code>alias</code> attribute.
         * @return  the descriptor for the <code>alias</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.ElementImport,java.lang.String> ALIAS( ) {
            if ( __alias == null ) {
                __alias = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.ElementImport,java.lang.String>( "4986863558EB4F60F0EB11DD847C000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "ElementImport", "alias" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __alias;
        }
        /**
         * Returns the descriptor for the <code>element</code> reference.
         * @return  the descriptor for the <code>element</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.DirectedRelationship,java.util.Collection<uml.Element>> ELEMENT( ) {
            return uml.DirectedRelationship.DESCRIPTORS.ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>element1</code> reference.
         * @return  the descriptor for the <code>element1</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.DirectedRelationship,java.util.Collection<uml.Element>> ELEMENT1( ) {
            return uml.DirectedRelationship.DESCRIPTORS.ELEMENT1( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ElementImport,uml.Namespace> __importingnamespace;
        /**
         * Returns the descriptor for the <code>importingnamespace</code> reference.
         * @return  the descriptor for the <code>importingnamespace</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ElementImport,uml.Namespace> IMPORTINGNAMESPACE( ) {
            if ( __importingnamespace == null ) {
                __importingnamespace = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ElementImport,uml.Namespace>( "498684F298DF08B0F0EA11DD8A09000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "ElementImport", "importingnamespace" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __importingnamespace;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ElementImport,uml.PackageableElement> __importedElement;
        /**
         * Returns the descriptor for the <code>importedElement</code> reference.
         * @return  the descriptor for the <code>importedElement</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ElementImport,uml.PackageableElement> IMPORTED_ELEMENT( ) {
            if ( __importedElement == null ) {
                __importedElement = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.ElementImport,uml.PackageableElement>( "49868660728A25E3F0EB11DDBCA8000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "ElementImport", "importedElement" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __importedElement;
        }
    }
}    