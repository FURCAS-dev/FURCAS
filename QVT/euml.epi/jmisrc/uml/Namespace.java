/**
 * Generated by the MOIN Generator Version 3.0
 **/

package uml;

/**
 * A namespace is an element in a model that contains a set of named elements that can be identified by name.
 * This interface is not intended to be implemented by clients.
 */
public interface Namespace extends uml.NamedElement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.Namespace> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, uml.Namespace>("49867BE13104D440F0E511DDB10E000E35A783E4", "sap.com/moin/mm/euml", "uml", "Namespace"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // references
    public java.util.Collection<uml.NamedElement> getOwnedMember() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.NamedElement> getMember() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.PackageableElement> getImportedMember() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.ElementImport> getElementImport() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.PackageImport> getPackageImport() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<uml.Contraint> getOwnedRule() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,java.util.Collection<java.lang.String>> NAME( ) {
            return uml.NamedElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,uml.VisibilityKind> VISIBILITY( ) {
            return uml.NamedElement.DESCRIPTORS.VISIBILITY( );
        }
        /**
         * Returns the descriptor for the <code>qualifiedName</code> attribute.
         * @return  the descriptor for the <code>qualifiedName</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,uml.NamedElement,java.lang.String> QUALIFIED_NAME( ) {
            return uml.NamedElement.DESCRIPTORS.QUALIFIED_NAME( );
        }
        /**
         * Returns the descriptor for the <code>ownedElement</code> reference.
         * @return  the descriptor for the <code>ownedElement</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,java.util.Collection<uml.Element>> OWNED_ELEMENT( ) {
            return uml.Element.DESCRIPTORS.OWNED_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>owner</code> reference.
         * @return  the descriptor for the <code>owner</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,uml.Element> OWNER( ) {
            return uml.Element.DESCRIPTORS.OWNER( );
        }
        /**
         * Returns the descriptor for the <code>ownedComment</code> reference.
         * @return  the descriptor for the <code>ownedComment</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Element,java.util.Collection<uml.Comment>> OWNED_COMMENT( ) {
            return uml.Element.DESCRIPTORS.OWNED_COMMENT( );
        }
        /**
         * Returns the descriptor for the <code>clientDependency</code> reference.
         * @return  the descriptor for the <code>clientDependency</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,java.util.Collection<uml.Dependency>> CLIENT_DEPENDENCY( ) {
            return uml.NamedElement.DESCRIPTORS.CLIENT_DEPENDENCY( );
        }
        /**
         * Returns the descriptor for the <code>namespace</code> reference.
         * @return  the descriptor for the <code>namespace</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,uml.Namespace> NAMESPACE( ) {
            return uml.NamedElement.DESCRIPTORS.NAMESPACE( );
        }
        /**
         * Returns the descriptor for the <code>nameExpression</code> reference.
         * @return  the descriptor for the <code>nameExpression</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.NamedElement,uml.StringExpression> NAME_EXPRESSION( ) {
            return uml.NamedElement.DESCRIPTORS.NAME_EXPRESSION( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.NamedElement>> __ownedMember;
        /**
         * Returns the descriptor for the <code>ownedMember</code> reference.
         * @return  the descriptor for the <code>ownedMember</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.NamedElement>> OWNED_MEMBER( ) {
            if ( __ownedMember == null ) {
                __ownedMember = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.NamedElement>>( "4986818D927F2D30F0E811DDA962000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Namespace", "ownedMember" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __ownedMember;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.NamedElement>> __member;
        /**
         * Returns the descriptor for the <code>member</code> reference.
         * @return  the descriptor for the <code>member</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.NamedElement>> MEMBER( ) {
            if ( __member == null ) {
                __member = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.NamedElement>>( "498683FA04FC73D3F0EA11DDB6DD000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Namespace", "member" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __member;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.PackageableElement>> __importedMember;
        /**
         * Returns the descriptor for the <code>importedMember</code> reference.
         * @return  the descriptor for the <code>importedMember</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.PackageableElement>> IMPORTED_MEMBER( ) {
            if ( __importedMember == null ) {
                __importedMember = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.PackageableElement>>( "498684211BE7EA20F0EA11DD845E000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Namespace", "importedMember" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __importedMember;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.ElementImport>> __elementImport;
        /**
         * Returns the descriptor for the <code>elementImport</code> reference.
         * @return  the descriptor for the <code>elementImport</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.ElementImport>> ELEMENT_IMPORT( ) {
            if ( __elementImport == null ) {
                __elementImport = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.ElementImport>>( "4986849C656A4620F0EA11DDA02A000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Namespace", "elementImport" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __elementImport;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.PackageImport>> __packageImport;
        /**
         * Returns the descriptor for the <code>packageImport</code> reference.
         * @return  the descriptor for the <code>packageImport</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.PackageImport>> PACKAGE_IMPORT( ) {
            if ( __packageImport == null ) {
                __packageImport = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.PackageImport>>( "49868522B57B40B3F0EA11DD8BC4000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Namespace", "packageImport" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __packageImport;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.Contraint>> __ownedRule;
        /**
         * Returns the descriptor for the <code>ownedRule</code> reference.
         * @return  the descriptor for the <code>ownedRule</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.Contraint>> OWNED_RULE( ) {
            if ( __ownedRule == null ) {
                __ownedRule = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,uml.Namespace,java.util.Collection<uml.Contraint>>( "498685A805231933F0EB11DD87B5000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "uml", "Namespace", "ownedRule" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __ownedRule;
        }
    }
}    