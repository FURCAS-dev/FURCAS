/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.presentation.graphic.__impl;

public final class GraphicPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;

    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(14);
        FEATURE_IDS.put("Canvas", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("Representaive", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("Diagram", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("DiagramConnector", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("DiagramElement", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("InvisibleRegion", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("Canvas_Representaive", Integer.valueOf(6)); //$NON-NLS-1$
        FEATURE_IDS.put("Representaive_UMLElement", Integer.valueOf(7)); //$NON-NLS-1$
        FEATURE_IDS.put("DiagramConnector_DiagramElement", Integer.valueOf(8)); //$NON-NLS-1$
        FEATURE_IDS.put("DiagramElement_InvisibleRegion", Integer.valueOf(9)); //$NON-NLS-1$
    }

    // constructors    
    public GraphicPackageImpl()
    {
        super();
    }
    public GraphicPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    // internal structure type creators
    // nested packages
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getCanvas(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Canvas"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getRepresentaive(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Representaive"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getDiagram(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Diagram"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getDiagramConnector(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "DiagramConnector"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getDiagramElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "DiagramElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getInvisibleRegion(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "InvisibleRegion"); //$NON-NLS-1$
    }
    // associations
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getCanvasRepresentaive(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Canvas_Representaive"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getRepresentaiveUmlelement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Representaive_UMLElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getDiagramConnectorDiagramElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "DiagramConnector_DiagramElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getDiagramElementInvisibleRegion(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "DiagramElement_InvisibleRegion"); //$NON-NLS-1$
    }
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 1:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 2:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.presentation.graphic.__impl.DiagramImpl")); //$NON-NLS-1$
                case 3:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.presentation.graphic.__impl.DiagramConnectorImpl")); //$NON-NLS-1$
                case 4:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.presentation.graphic.__impl.DiagramElementImpl")); //$NON-NLS-1$
                case 5:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.presentation.graphic.__impl.InvisibleRegionImpl")); //$NON-NLS-1$
                case 6:
                    return new euml.presentation.graphic.__impl.CanvasRepresentaiveImpl(workspace, mofId, immediatePackage, metaObject);
                case 7:
                    return new euml.presentation.graphic.__impl.RepresentaiveUmlelementImpl(workspace, mofId, immediatePackage, metaObject);
                case 8:
                    return new euml.presentation.graphic.__impl.DiagramConnectorDiagramElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 9:
                    return new euml.presentation.graphic.__impl.DiagramElementInvisibleRegionImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<euml.presentation.graphic.GraphicPackage> get___JmiInterface() {
        return euml.presentation.graphic.GraphicPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(0);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefPackageAndName rpan = null;
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(6);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
            name = "Canvas"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.presentation.graphic.Canvas"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Representaive"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.presentation.graphic.Representaive"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Diagram"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.presentation.graphic.Diagram"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "DiagramConnector"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.presentation.graphic.DiagramConnector"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "DiagramElement"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.presentation.graphic.DiagramElement"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "InvisibleRegion"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.presentation.graphic.InvisibleRegion"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(4);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefAssociationAndName raan = null;
            name = "Canvas_Representaive"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.presentation.graphic.CanvasRepresentaive"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Representaive_UMLElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.presentation.graphic.RepresentaiveUmlelement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "DiagramConnector_DiagramElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.presentation.graphic.DiagramConnectorDiagramElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "DiagramElement_InvisibleRegion"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.presentation.graphic.DiagramElementInvisibleRegion"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<euml.presentation.graphic.__impl.GraphicPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new euml.presentation.graphic.__impl.GraphicPackageWrapper(conn, this, synchronize);
    }

}