/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.presentation.graphic;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface Representaive extends de.ikv.medini.kernel.MediniObject {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, euml.presentation.graphic.Representaive> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, euml.presentation.graphic.Representaive>("497EBC1EC702FAB0EC4611DDC798000E35A783E4", "sap.com/moin/mm/euml", "EUML", "Presentation", "Graphic", "Representaive"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 

    
    // attributes
    public boolean isStereotypeIsVisible() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setStereotypeIsVisible(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public int getZOrder() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setZOrder(int newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public euml.presentation.graphic.Canvas getThediagram() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setThediagram(euml.presentation.graphic.Canvas newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public euml.generic.kernel.Umlelement getTheRepresentedElement() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setTheRepresentedElement(euml.generic.kernel.Umlelement newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>mediniIdentifier</code> attribute.
         * @return  the descriptor for the <code>mediniIdentifier</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,de.ikv.medini.kernel.MediniObject,java.lang.String> MEDINI_IDENTIFIER( ) {
            return de.ikv.medini.kernel.MediniObject.DESCRIPTORS.MEDINI_IDENTIFIER( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Representaive,java.lang.Boolean> __stereotypeIsVisible;
        /**
         * Returns the descriptor for the <code>stereotypeIsVisible</code> attribute.
         * @return  the descriptor for the <code>stereotypeIsVisible</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Representaive,java.lang.Boolean> STEREOTYPE_IS_VISIBLE( ) {
            if ( __stereotypeIsVisible == null ) {
                __stereotypeIsVisible = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Representaive,java.lang.Boolean>( "497EBF38A03C4DD0EC4811DD98EB000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "Representaive", "stereotypeIsVisible" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __stereotypeIsVisible;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Representaive,java.lang.Integer> __zOrder;
        /**
         * Returns the descriptor for the <code>zOrder</code> attribute.
         * @return  the descriptor for the <code>zOrder</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Representaive,java.lang.Integer> Z_ORDER( ) {
            if ( __zOrder == null ) {
                __zOrder = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Representaive,java.lang.Integer>( "497EBF6FC112FB30EC4811DDC11F000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "Representaive", "zOrder" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __zOrder;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.presentation.graphic.Representaive,euml.presentation.graphic.Canvas> __thediagram;
        /**
         * Returns the descriptor for the <code>thediagram</code> reference.
         * @return  the descriptor for the <code>thediagram</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.presentation.graphic.Representaive,euml.presentation.graphic.Canvas> THEDIAGRAM( ) {
            if ( __thediagram == null ) {
                __thediagram = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.presentation.graphic.Representaive,euml.presentation.graphic.Canvas>( "497EBEFA7B646380EC4811DDB5F7000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "Representaive", "thediagram" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __thediagram;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.presentation.graphic.Representaive,euml.generic.kernel.Umlelement> __theRepresentedElement;
        /**
         * Returns the descriptor for the <code>theRepresentedElement</code> reference.
         * @return  the descriptor for the <code>theRepresentedElement</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.presentation.graphic.Representaive,euml.generic.kernel.Umlelement> THE_REPRESENTED_ELEMENT( ) {
            if ( __theRepresentedElement == null ) {
                __theRepresentedElement = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.presentation.graphic.Representaive,euml.generic.kernel.Umlelement>( "497F0F5661A90383EC7811DD94A8000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "Representaive", "theRepresentedElement" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __theRepresentedElement;
        }
    }
}    