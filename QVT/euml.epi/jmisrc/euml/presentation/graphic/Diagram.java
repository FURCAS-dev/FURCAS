/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.presentation.graphic;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface Diagram extends euml.generic.kernel.UmlnamedElement,euml.presentation.graphic.Canvas {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, euml.presentation.graphic.Diagram> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, euml.presentation.graphic.Diagram>("497EBFC1F23D0A70EC4811DD8F2A000E35A783E4", "sap.com/moin/mm/euml", "EUML", "Presentation", "Graphic", "Diagram"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 

    
    // attributes
    public boolean isShowPublic() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setShowPublic(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isShowProtected() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setShowProtected(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isShowPrivate() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setShowPrivate(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.lang.String getOrientation() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setOrientation(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public int getXDimension() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setXDimension(int newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public int getYDimension() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setYDimension(int newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public int getScale() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setScale(int newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isHighlightImports() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setHighlightImports(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isShowPackageContents() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setShowPackageContents(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.lang.String getExtendedStyle() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setExtendedStyle(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isLocked() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setLocked(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.lang.String getNotes() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setNotes(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>mediniIdentifier</code> attribute.
         * @return  the descriptor for the <code>mediniIdentifier</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,de.ikv.medini.kernel.MediniObject,java.lang.String> MEDINI_IDENTIFIER( ) {
            return de.ikv.medini.kernel.MediniObject.DESCRIPTORS.MEDINI_IDENTIFIER( );
        }
        /**
         * Returns the descriptor for the <code>typeCode</code> attribute.
         * @return  the descriptor for the <code>typeCode</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.Umlelement,java.lang.String> TYPE_CODE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.TYPE_CODE( );
        }
        /**
         * Returns the descriptor for the <code>stereotype</code> attribute.
         * @return  the descriptor for the <code>stereotype</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.Umlelement,java.lang.String> STEREOTYPE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.STEREOTYPE( );
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.UmlnamedElement,java.lang.String> NAME( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.UmlnamedElement,euml.generic.kernel.UmlvisibilityKind> VISIBILITY( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.VISIBILITY( );
        }
        /**
         * Returns the descriptor for the <code>comment</code> attribute.
         * @return  the descriptor for the <code>comment</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.UmlnamedElement,java.lang.String> COMMENT( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.COMMENT( );
        }
        /**
         * Returns the descriptor for the <code>alias</code> attribute.
         * @return  the descriptor for the <code>alias</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.UmlnamedElement,java.lang.String> ALIAS( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.ALIAS( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean> __showPublic;
        /**
         * Returns the descriptor for the <code>showPublic</code> attribute.
         * @return  the descriptor for the <code>showPublic</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean> SHOW_PUBLIC( ) {
            if ( __showPublic == null ) {
                __showPublic = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean>( "497EE601BE559170EC5F11DDBEEE000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "Diagram", "showPublic" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __showPublic;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean> __showProtected;
        /**
         * Returns the descriptor for the <code>showProtected</code> attribute.
         * @return  the descriptor for the <code>showProtected</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean> SHOW_PROTECTED( ) {
            if ( __showProtected == null ) {
                __showProtected = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean>( "497EE60BC4634030EC5F11DD8EBE000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "Diagram", "showProtected" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __showProtected;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean> __showPrivate;
        /**
         * Returns the descriptor for the <code>showPrivate</code> attribute.
         * @return  the descriptor for the <code>showPrivate</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean> SHOW_PRIVATE( ) {
            if ( __showPrivate == null ) {
                __showPrivate = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean>( "497EE615CA546640EC5F11DDB581000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "Diagram", "showPrivate" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __showPrivate;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.String> __orientation;
        /**
         * Returns the descriptor for the <code>orientation</code> attribute.
         * @return  the descriptor for the <code>orientation</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.String> ORIENTATION( ) {
            if ( __orientation == null ) {
                __orientation = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.String>( "497EE61ECFAA84D0EC5F11DDAF17000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "Diagram", "orientation" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __orientation;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Integer> __xDimension;
        /**
         * Returns the descriptor for the <code>xDimension</code> attribute.
         * @return  the descriptor for the <code>xDimension</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Integer> X_DIMENSION( ) {
            if ( __xDimension == null ) {
                __xDimension = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Integer>( "497EE629D69D1550EC5F11DDA777000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "Diagram", "xDimension" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __xDimension;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Integer> __yDimension;
        /**
         * Returns the descriptor for the <code>yDimension</code> attribute.
         * @return  the descriptor for the <code>yDimension</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Integer> Y_DIMENSION( ) {
            if ( __yDimension == null ) {
                __yDimension = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Integer>( "497EE636DDF3E5E0EC5F11DDCE81000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "Diagram", "yDimension" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __yDimension;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Integer> __scale;
        /**
         * Returns the descriptor for the <code>scale</code> attribute.
         * @return  the descriptor for the <code>scale</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Integer> SCALE( ) {
            if ( __scale == null ) {
                __scale = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Integer>( "497EE640E4313020EC5F11DDBF8A000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "Diagram", "scale" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __scale;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean> __highlightImports;
        /**
         * Returns the descriptor for the <code>highlightImports</code> attribute.
         * @return  the descriptor for the <code>highlightImports</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean> HIGHLIGHT_IMPORTS( ) {
            if ( __highlightImports == null ) {
                __highlightImports = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean>( "497EE64CEB513940EC5F11DDBF1B000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "Diagram", "highlightImports" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __highlightImports;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean> __showPackageContents;
        /**
         * Returns the descriptor for the <code>showPackageContents</code> attribute.
         * @return  the descriptor for the <code>showPackageContents</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean> SHOW_PACKAGE_CONTENTS( ) {
            if ( __showPackageContents == null ) {
                __showPackageContents = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean>( "497EE65AF3C5FCF0EC5F11DDC46F000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "Diagram", "showPackageContents" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __showPackageContents;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.String> __extendedStyle;
        /**
         * Returns the descriptor for the <code>extendedStyle</code> attribute.
         * @return  the descriptor for the <code>extendedStyle</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.String> EXTENDED_STYLE( ) {
            if ( __extendedStyle == null ) {
                __extendedStyle = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.String>( "497EE668FBC605D0EC5F11DDCAAC000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "Diagram", "extendedStyle" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __extendedStyle;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean> __isLocked;
        /**
         * Returns the descriptor for the <code>isLocked</code> attribute.
         * @return  the descriptor for the <code>isLocked</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean> IS_LOCKED( ) {
            if ( __isLocked == null ) {
                __isLocked = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.Boolean>( "497EE6720218D3E0EC6011DDA1F8000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "Diagram", "isLocked" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __isLocked;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.String> __notes;
        /**
         * Returns the descriptor for the <code>notes</code> attribute.
         * @return  the descriptor for the <code>notes</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.String> NOTES( ) {
            if ( __notes == null ) {
                __notes = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Diagram,java.lang.String>( "497EE67A07061E80EC6011DD9CFD000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "Diagram", "notes" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __notes;
        }
        /**
         * Returns the descriptor for the <code>theRepresentative</code> reference.
         * @return  the descriptor for the <code>theRepresentative</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.presentation.graphic.Representaive>> THE_REPRESENTATIVE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_REPRESENTATIVE( );
        }
        /**
         * Returns the descriptor for the <code>theRelationshipOfSource</code> reference.
         * @return  the descriptor for the <code>theRelationshipOfSource</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.relationships.UmldirectedRelationship>> THE_RELATIONSHIP_OF_SOURCE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_RELATIONSHIP_OF_SOURCE( );
        }
        /**
         * Returns the descriptor for the <code>targettrace</code> reference.
         * @return  the descriptor for the <code>targettrace</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.Umltrace>> TARGETTRACE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.TARGETTRACE( );
        }
        /**
         * Returns the descriptor for the <code>sourcetrace</code> reference.
         * @return  the descriptor for the <code>sourcetrace</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.Umltrace>> SOURCETRACE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.SOURCETRACE( );
        }
        /**
         * Returns the descriptor for the <code>relationships</code> reference.
         * @return  the descriptor for the <code>relationships</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.Umlrelationship>> RELATIONSHIPS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.RELATIONSHIPS( );
        }
        /**
         * Returns the descriptor for the <code>theRelationshipOfTarget</code> reference.
         * @return  the descriptor for the <code>theRelationshipOfTarget</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.UmldirectedRelationship>> THE_RELATIONSHIP_OF_TARGET( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_RELATIONSHIP_OF_TARGET( );
        }
        /**
         * Returns the descriptor for the <code>theStereotype</code> reference.
         * @return  the descriptor for the <code>theStereotype</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,euml.generic.kernel.AppliedStereotype> THE_STEREOTYPE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_STEREOTYPE( );
        }
        /**
         * Returns the descriptor for the <code>theAnnotation</code> reference.
         * @return  the descriptor for the <code>theAnnotation</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlannotation>> THE_ANNOTATION( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_ANNOTATION( );
        }
        /**
         * Returns the descriptor for the <code>theConstraint</code> reference.
         * @return  the descriptor for the <code>theConstraint</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlconstraint>> THE_CONSTRAINT( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_CONSTRAINT( );
        }
        /**
         * Returns the descriptor for the <code>theUtilizedElements</code> reference.
         * @return  the descriptor for the <code>theUtilizedElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlelement>> THE_UTILIZED_ELEMENTS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_UTILIZED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>theUtilisingElements</code> reference.
         * @return  the descriptor for the <code>theUtilisingElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.kernel.Umlelement>> THE_UTILISING_ELEMENTS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_UTILISING_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>theOwnedElements</code> reference.
         * @return  the descriptor for the <code>theOwnedElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlelement>> THE_OWNED_ELEMENTS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_OWNED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>theOwner</code> reference.
         * @return  the descriptor for the <code>theOwner</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,euml.generic.kernel.Umlelement> THE_OWNER( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_OWNER( );
        }
        /**
         * Returns the descriptor for the <code>theObjectOnDiagram</code> reference.
         * @return  the descriptor for the <code>theObjectOnDiagram</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.presentation.graphic.Canvas,java.util.Collection<euml.presentation.graphic.Representaive>> THE_OBJECT_ON_DIAGRAM( ) {
            return euml.presentation.graphic.Canvas.DESCRIPTORS.THE_OBJECT_ON_DIAGRAM( );
        }
        /**
         * Returns the descriptor for the <code>deduceTypeCodeAndStereotype</code> operation.
         * @return  the descriptor for the <code>deduceTypeCodeAndStereotype</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlelement,java.lang.Void> DEDUCE_TYPE_CODE_AND_STEREOTYPE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.DEDUCE_TYPE_CODE_AND_STEREOTYPE( );
        }
        /**
         * Returns the descriptor for the <code>deleteElement</code> operation.
         * @return  the descriptor for the <code>deleteElement</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlelement,java.lang.Void> DELETE_ELEMENT( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.DELETE_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>getqualifiedName</code> operation.
         * @return  the descriptor for the <code>getqualifiedName</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.UmlnamedElement,java.util.List<java.lang.String>> GETQUALIFIED_NAME( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.GETQUALIFIED_NAME( );
        }
        /**
         * Returns the descriptor for the <code>getqualifiedAlias</code> operation.
         * @return  the descriptor for the <code>getqualifiedAlias</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.UmlnamedElement,java.util.List<java.lang.String>> GETQUALIFIED_ALIAS( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.GETQUALIFIED_ALIAS( );
        }
        /**
         * Returns the descriptor for the <code>gettheNamespace</code> operation.
         * @return  the descriptor for the <code>gettheNamespace</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.UmlnamedElement,euml.generic.kernel.Umlnamespace> GETTHE_NAMESPACE( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.GETTHE_NAMESPACE( );
        }
    }
}    