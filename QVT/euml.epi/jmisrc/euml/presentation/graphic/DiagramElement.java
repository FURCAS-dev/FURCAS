/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.presentation.graphic;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface DiagramElement extends euml.presentation.graphic.Representaive {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, euml.presentation.graphic.DiagramElement> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, euml.presentation.graphic.DiagramElement>("497EE7AEBE264EA0EC6011DD9BBE000E35A783E4", "sap.com/moin/mm/euml", "EUML", "Presentation", "Graphic", "DiagramElement"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 

    
    // attributes
    public int getLeft() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setLeft(int newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public int getRight() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setRight(int newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public int getTop() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setTop(int newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public int getBottom() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setBottom(int newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.lang.String getStyle() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setStyle(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public int getSubtype() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setSubtype(int newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public java.util.Collection<euml.presentation.graphic.DiagramConnector> getTheConnectors() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public euml.presentation.graphic.InvisibleRegion getTheRegions() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setTheRegions(euml.presentation.graphic.InvisibleRegion newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>mediniIdentifier</code> attribute.
         * @return  the descriptor for the <code>mediniIdentifier</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,de.ikv.medini.kernel.MediniObject,java.lang.String> MEDINI_IDENTIFIER( ) {
            return de.ikv.medini.kernel.MediniObject.DESCRIPTORS.MEDINI_IDENTIFIER( );
        }
        /**
         * Returns the descriptor for the <code>stereotypeIsVisible</code> attribute.
         * @return  the descriptor for the <code>stereotypeIsVisible</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Representaive,java.lang.Boolean> STEREOTYPE_IS_VISIBLE( ) {
            return euml.presentation.graphic.Representaive.DESCRIPTORS.STEREOTYPE_IS_VISIBLE( );
        }
        /**
         * Returns the descriptor for the <code>zOrder</code> attribute.
         * @return  the descriptor for the <code>zOrder</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.Representaive,java.lang.Integer> Z_ORDER( ) {
            return euml.presentation.graphic.Representaive.DESCRIPTORS.Z_ORDER( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.Integer> __left;
        /**
         * Returns the descriptor for the <code>left</code> attribute.
         * @return  the descriptor for the <code>left</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.Integer> LEFT( ) {
            if ( __left == null ) {
                __left = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.Integer>( "497EE7C8CDAF3490EC6011DD9742000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "DiagramElement", "left" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __left;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.Integer> __right;
        /**
         * Returns the descriptor for the <code>right</code> attribute.
         * @return  the descriptor for the <code>right</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.Integer> RIGHT( ) {
            if ( __right == null ) {
                __right = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.Integer>( "497EE7CED18C95D0EC6011DDC152000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "DiagramElement", "right" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __right;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.Integer> __top;
        /**
         * Returns the descriptor for the <code>top</code> attribute.
         * @return  the descriptor for the <code>top</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.Integer> TOP( ) {
            if ( __top == null ) {
                __top = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.Integer>( "497EE7D6D6181160EC6011DDCAAF000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "DiagramElement", "top" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __top;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.Integer> __bottom;
        /**
         * Returns the descriptor for the <code>bottom</code> attribute.
         * @return  the descriptor for the <code>bottom</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.Integer> BOTTOM( ) {
            if ( __bottom == null ) {
                __bottom = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.Integer>( "497EE7DFDB8142C0EC6011DDB9B3000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "DiagramElement", "bottom" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __bottom;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.String> __style;
        /**
         * Returns the descriptor for the <code>style</code> attribute.
         * @return  the descriptor for the <code>style</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.String> STYLE( ) {
            if ( __style == null ) {
                __style = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.String>( "497EE7ECE358DC10EC6011DDB64C000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "DiagramElement", "style" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __style;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.Integer> __subtype;
        /**
         * Returns the descriptor for the <code>subtype</code> attribute.
         * @return  the descriptor for the <code>subtype</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.Integer> SUBTYPE( ) {
            if ( __subtype == null ) {
                __subtype = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.presentation.graphic.DiagramElement,java.lang.Integer>( "497EE7F3E7B22410EC6011DDA162000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "DiagramElement", "subtype" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __subtype;
        }
        /**
         * Returns the descriptor for the <code>thediagram</code> reference.
         * @return  the descriptor for the <code>thediagram</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.presentation.graphic.Representaive,euml.presentation.graphic.Canvas> THEDIAGRAM( ) {
            return euml.presentation.graphic.Representaive.DESCRIPTORS.THEDIAGRAM( );
        }
        /**
         * Returns the descriptor for the <code>theRepresentedElement</code> reference.
         * @return  the descriptor for the <code>theRepresentedElement</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.presentation.graphic.Representaive,euml.generic.kernel.Umlelement> THE_REPRESENTED_ELEMENT( ) {
            return euml.presentation.graphic.Representaive.DESCRIPTORS.THE_REPRESENTED_ELEMENT( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.presentation.graphic.DiagramElement,java.util.Collection<euml.presentation.graphic.DiagramConnector>> __theConnectors;
        /**
         * Returns the descriptor for the <code>theConnectors</code> reference.
         * @return  the descriptor for the <code>theConnectors</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.presentation.graphic.DiagramElement,java.util.Collection<euml.presentation.graphic.DiagramConnector>> THE_CONNECTORS( ) {
            if ( __theConnectors == null ) {
                __theConnectors = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.presentation.graphic.DiagramElement,java.util.Collection<euml.presentation.graphic.DiagramConnector>>( "49863C99798CE700F0BF11DDA8CE000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "DiagramElement", "theConnectors" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __theConnectors;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.presentation.graphic.DiagramElement,euml.presentation.graphic.InvisibleRegion> __theRegions;
        /**
         * Returns the descriptor for the <code>theRegions</code> reference.
         * @return  the descriptor for the <code>theRegions</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.presentation.graphic.DiagramElement,euml.presentation.graphic.InvisibleRegion> THE_REGIONS( ) {
            if ( __theRegions == null ) {
                __theRegions = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.presentation.graphic.DiagramElement,euml.presentation.graphic.InvisibleRegion>( "49863CECAAE6B8D0F0BF11DDC882000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Presentation", "Graphic", "DiagramElement", "the_regions" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __theRegions;
        }
    }
}    