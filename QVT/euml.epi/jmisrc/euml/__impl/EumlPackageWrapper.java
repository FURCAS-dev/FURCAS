/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.__impl;

public class EumlPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<euml.__impl.EumlPackageImpl> implements euml.EumlPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The EumlPackage wrapper
     */
    public EumlPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, euml.__impl.EumlPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private euml.__impl.EumlPackageImpl getCastWrappedObject() {
        return (euml.__impl.EumlPackageImpl) getWrappedObject();
    }
    
    public euml.__impl.EumlPackageImpl unwrap() {
        return (euml.__impl.EumlPackageImpl) getWrappedObject();
    }
    
    public euml.presentation.PresentationPackage getPresentation()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.presentation.PresentationPackage) wrapResult(getCastWrappedObject().getPresentation(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.presentation.PresentationPackage) wrapResult(getCastWrappedObject().getPresentation(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.GenericPackage getGeneric()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.GenericPackage) wrapResult(getCastWrappedObject().getGeneric(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.GenericPackage) wrapResult(getCastWrappedObject().getGeneric(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    @SuppressWarnings("unchecked")
    public java.lang.Class<euml.EumlPackage> get___JmiInterface() {
        return euml.EumlPackage.class;
    }
    
    protected String metaObjectToString() {
        return "euml.EumlPackage (Java Type)\nEUML (MOF Type)"; //$NON-NLS-1$
    }
}