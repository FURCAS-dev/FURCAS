/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.generic.interactions.__impl;

public class UmlcombinedFragmentWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefObjectWrapperImpl<euml.generic.interactions.__impl.UmlcombinedFragmentImpl> implements euml.generic.interactions.UmlcombinedFragment,com.sap.tc.moin.repository.Partitionable {

        
    private static final java.util.Map<java.lang.String, java.lang.Integer> OPERATION_IDS;

    static {
        
        OPERATION_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>();
        OPERATION_IDS.put("getoperand", Integer.valueOf(0)); //$NON-NLS-1$
        OPERATION_IDS.put("getcfragmentGate", Integer.valueOf(1)); //$NON-NLS-1$
    }

    public UmlcombinedFragmentWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, euml.generic.interactions.__impl.UmlcombinedFragmentImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    @SuppressWarnings("unused")
    private euml.generic.interactions.__impl.UmlcombinedFragmentImpl getCastWrappedObject() {
        return (euml.generic.interactions.__impl.UmlcombinedFragmentImpl) getWrappedObject();
    }
    
    private euml.generic.interactions.__impl.UmlcombinedFragmentImpl getCastWrappedObject(com.sap.tc.moin.repository.core.CorePartitionable resolved) {
        return (euml.generic.interactions.__impl.UmlcombinedFragmentImpl) resolved;
    }
    
    public euml.generic.interactions.__impl.UmlcombinedFragmentImpl unwrap() {
        return (euml.generic.interactions.__impl.UmlcombinedFragmentImpl) getWrappedObject();
    }
        
    // methods for attributes
    public euml.generic.interactions.UmlinteractionOperand getInteractionOperator() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.interactions.UmlinteractionOperand) wrapResult(getCastWrappedObject().getInteractionOperator(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.interactions.UmlinteractionOperand) wrapResult(getCastWrappedObject().getInteractionOperator(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

    public void setInteractionOperator(euml.generic.interactions.UmlinteractionOperand newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    getCastWrappedObject().setInteractionOperator(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) newValue));
                }       
            }
            else {
                assertConnectionAlive();
                attachConnectionIfRequired();
                getCastWrappedObject().setInteractionOperator(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) newValue));
            } 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

     
    // methods for references
   
    // methods for modeled operations
    public java.util.Collection<euml.generic.interactions.UmlinteractionOperand> getoperand() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (java.util.Collection<euml.generic.interactions.UmlinteractionOperand>)___invokeOperation(connection, 0, "49865D46F32E5040F0D211DD9476000E35A783E4", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public java.util.Collection<euml.generic.interactions.Umlgate> getcfragmentGate() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (java.util.Collection<euml.generic.interactions.Umlgate>)___invokeOperation(connection, 1, "49865E74A7324C40F0D311DD9FFC000E35A783E4", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    
    // methods for internal modeled operations
    private java.util.Collection<euml.generic.interactions.UmlinteractionOperand> invoke__getoperand(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return null;
    }
    private java.util.Collection<euml.generic.interactions.Umlgate> invoke__getcfragmentGate(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return null;
    }

    // reflective methods
    @Override
    public Object refInvokeOperation(com.sap.tc.moin.repository.core.CoreConnection connection, java.lang.String requestedOperation, java.util.List<? extends Object> args) throws com.sap.tc.moin.repository.mmi.reflect.RefException {
        if (requestedOperation == null) {
            throw new com.sap.tc.moin.repository.mmi.reflect.InvalidNameException(requestedOperation);
        }
        java.lang.Integer operationId = OPERATION_IDS.get(requestedOperation);
        if (operationId == null) {
            throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(requestedOperation, refMetaObject(), "refInvokeOperation(String)"); //$NON-NLS-1$
        }
        switch (operationId) {
                
            case 0:
                return ___invokeOperation( connection, operationId, "49865D46F32E5040F0D211DD9476000E35A783E4", args ); //$NON-NLS-1$    
                
            case 1:
                return ___invokeOperation( connection, operationId, "49865E74A7324C40F0D311DD9FFC000E35A783E4", args ); //$NON-NLS-1$    
            default:
                throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(requestedOperation, refMetaObject(), "refInvokeOperation(String)"); //$NON-NLS-1$
        }
    }

    @Override
    public Object invoke___Operation(com.sap.tc.moin.repository.core.CoreConnection connection, int operationId, java.util.List<? extends Object> args) throws com.sap.tc.moin.repository.mmi.reflect.RefException {
        switch (operationId) {
                
            case 0:
                return invoke__getoperand(connection);    
                
            case 1:
                return invoke__getcfragmentGate(connection);    
            default:
                throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException( operationId, refMetaObject( ), "invoke___Operation(int)"); //$NON-NLS-1$
        }

    }    

    // get the JMI interface
    @SuppressWarnings("unchecked")
    public java.lang.Class<euml.generic.interactions.UmlcombinedFragment> get___JmiInterface() {
        return euml.generic.interactions.UmlcombinedFragment.class;
    }

    // to String
    protected String metaObjectToString() {
        return "euml.generic.interactions.UmlcombinedFragment (Java Type)\nEUML.Generic.Interactions.UMLCombinedFragment (MOF Type)"; //$NON-NLS-1$
    }    
}