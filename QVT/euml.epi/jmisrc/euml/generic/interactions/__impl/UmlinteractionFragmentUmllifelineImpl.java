/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.generic.interactions.__impl;

public final class UmlinteractionFragmentUmllifelineImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationImpl
{
    // default constructor
    public UmlinteractionFragmentUmllifelineImpl() {
        super();
    }

    // specific constructor
    public UmlinteractionFragmentUmllifelineImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _CoveredBy, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Covered) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return exists(get___CurrentConnection(), _CoveredBy, _Covered);
    }
    public boolean exists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _CoveredBy, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Covered) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return ___existsMultN( connection, _CoveredBy, _Covered, "498659D8E7C4C882F0D011DDA851000E35A783E4"); //$NON-NLS-1$
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getCoveredBy(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Covered) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getCoveredBy(get___CurrentConnection(), _Covered);
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getCoveredBy(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Covered) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject>) ___queryElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _Covered, get___EndAndMetaObject( 1 ) );
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getCovered(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _CoveredBy) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getCovered(get___CurrentConnection(), _CoveredBy);
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getCovered(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _CoveredBy) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject>) ___getElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _CoveredBy, get___EndAndMetaObject( 0 ) );
    }
    public boolean add(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _CoveredBy, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Covered) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_CoveredBy, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Covered);
    }
    public boolean add(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _CoveredBy, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Covered) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_CoveredBy, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Covered);
    }
    public boolean remove(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _CoveredBy, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Covered) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_CoveredBy, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Covered);
    }
    public boolean remove(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _CoveredBy, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Covered) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_CoveredBy, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Covered);
    }
    public boolean refLinkExists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefObject firstEnd, com.sap.tc.moin.repository.mmi.reflect.RefObject secondEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        if ( firstEnd == null || secondEnd == null ) { return false; }
        checkTypesForRefLinkExists( connection, firstEnd, secondEnd );
        return exists( connection, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) firstEnd, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) secondEnd );
    }

    public java.lang.Class<euml.generic.interactions.UmlinteractionFragmentUmllifeline> get___JmiInterface() {
        return euml.generic.interactions.UmlinteractionFragmentUmllifeline.class;
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<euml.generic.interactions.UmlinteractionFragmentUmllifeline> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new euml.generic.interactions.__impl.UmlinteractionFragmentUmllifelineWrapper(conn, this, synchronize);
    }
}