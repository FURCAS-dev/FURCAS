/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.generic.usecases.__impl;

public class UseCasesPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<euml.generic.usecases.__impl.UseCasesPackageImpl> implements euml.generic.usecases.UseCasesPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The UseCasesPackage wrapper
     */
    public UseCasesPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, euml.generic.usecases.__impl.UseCasesPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private euml.generic.usecases.__impl.UseCasesPackageImpl getCastWrappedObject() {
        return (euml.generic.usecases.__impl.UseCasesPackageImpl) getWrappedObject();
    }
    
    public euml.generic.usecases.__impl.UseCasesPackageImpl unwrap() {
        return (euml.generic.usecases.__impl.UseCasesPackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlactor()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getUmlactor(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getUmlactor(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmluseCase()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getUmluseCase(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getUmluseCase(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.usecases.UmluseCaseUmluseCase getUmluseCaseUmluseCase()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.usecases.UmluseCaseUmluseCase) wrapResult(getCastWrappedObject().getUmluseCaseUmluseCase(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.usecases.UmluseCaseUmluseCase) wrapResult(getCastWrappedObject().getUmluseCaseUmluseCase(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.usecases.TheIncludedUseCase getTheIncludedUseCase()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.usecases.TheIncludedUseCase) wrapResult(getCastWrappedObject().getTheIncludedUseCase(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.usecases.TheIncludedUseCase) wrapResult(getCastWrappedObject().getTheIncludedUseCase(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.usecases.UmlactorUmlclassifier getUmlactorUmlclassifier()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.usecases.UmlactorUmlclassifier) wrapResult(getCastWrappedObject().getUmlactorUmlclassifier(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.usecases.UmlactorUmlclassifier) wrapResult(getCastWrappedObject().getUmlactorUmlclassifier(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.usecases.UmlclassifierUmluseCase getUmlclassifierUmluseCase()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.usecases.UmlclassifierUmluseCase) wrapResult(getCastWrappedObject().getUmlclassifierUmluseCase(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.usecases.UmlclassifierUmluseCase) wrapResult(getCastWrappedObject().getUmlclassifierUmluseCase(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    @SuppressWarnings("unchecked")
    public java.lang.Class<euml.generic.usecases.UseCasesPackage> get___JmiInterface() {
        return euml.generic.usecases.UseCasesPackage.class;
    }
    
    protected String metaObjectToString() {
        return "euml.generic.usecases.UseCasesPackage (Java Type)\nEUML.Generic.UseCases (MOF Type)"; //$NON-NLS-1$
    }
}