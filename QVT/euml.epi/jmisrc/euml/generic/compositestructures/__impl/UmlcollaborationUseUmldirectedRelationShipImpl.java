/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.generic.compositestructures.__impl;

public final class UmlcollaborationUseUmldirectedRelationShipImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationImpl
{
    // default constructor
    public UmlcollaborationUseUmldirectedRelationShipImpl() {
        super();
    }

    // specific constructor
    public UmlcollaborationUseUmldirectedRelationShipImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Umlcollaborationuse, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _RoleBinding) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return exists(get___CurrentConnection(), _Umlcollaborationuse, _RoleBinding);
    }
    public boolean exists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Umlcollaborationuse, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _RoleBinding) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return ___existsMultN( connection, _Umlcollaborationuse, _RoleBinding, "49864DCEBAAB63B2F0C911DDB780000E35A783E4"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefBaseObject getUmlcollaborationuse(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _RoleBinding) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getUmlcollaborationuse(get___CurrentConnection(), _RoleBinding);
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefBaseObject getUmlcollaborationuse(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _RoleBinding) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        com.sap.tc.moin.repository.core.EndAndMetaObject endAndMetaObject = get___EndAndMetaObject( 1 );
        return (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) get___CompositeParentForEndAndMetaObject( connection, _RoleBinding, endAndMetaObject );
    }
    public java.util.List<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getRoleBinding(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Umlcollaborationuse) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getRoleBinding(get___CurrentConnection(), _Umlcollaborationuse);
    }
    public java.util.List<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getRoleBinding(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Umlcollaborationuse) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.List<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject>) ___getElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _Umlcollaborationuse, get___EndAndMetaObject( 0 ) );
    }
    public boolean add(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Umlcollaborationuse, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _RoleBinding) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_Umlcollaborationuse, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_RoleBinding);
    }
    public boolean add(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Umlcollaborationuse, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _RoleBinding) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Umlcollaborationuse, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_RoleBinding);
    }
    public boolean remove(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Umlcollaborationuse, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _RoleBinding) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_Umlcollaborationuse, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_RoleBinding);
    }
    public boolean remove(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Umlcollaborationuse, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _RoleBinding) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Umlcollaborationuse, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_RoleBinding);
    }
    public boolean refLinkExists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefObject firstEnd, com.sap.tc.moin.repository.mmi.reflect.RefObject secondEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        if ( firstEnd == null || secondEnd == null ) { return false; }
        checkTypesForRefLinkExists( connection, firstEnd, secondEnd );
        return exists( connection, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) firstEnd, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) secondEnd );
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<euml.generic.compositestructures.UmlcollaborationUseUmldirectedRelationShip> get___JmiInterface() {
        return euml.generic.compositestructures.UmlcollaborationUseUmldirectedRelationShip.class;
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<euml.generic.compositestructures.UmlcollaborationUseUmldirectedRelationShip> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new euml.generic.compositestructures.__impl.UmlcollaborationUseUmldirectedRelationShipWrapper(conn, this, synchronize);
    }
}