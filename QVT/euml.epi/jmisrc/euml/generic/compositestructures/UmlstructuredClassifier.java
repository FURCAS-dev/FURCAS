/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.generic.compositestructures;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface UmlstructuredClassifier extends euml.generic.kernel.Umlclassifier {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, euml.generic.compositestructures.UmlstructuredClassifier> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, euml.generic.compositestructures.UmlstructuredClassifier>("497EDF0594F9C980EC5B11DDAA60000E35A783E4", "sap.com/moin/mm/euml", "EUML", "Generic", "CompositeStructures", "UMLStructuredClassifier"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 

    
    // operations
    public java.util.List<euml.generic.compositestructures.Umlport> getownedPorts() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<euml.generic.compositestructures.Umlconnector> getownedConnectors() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<euml.generic.kernel.Umlproperty> getownedProperties() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<euml.generic.compositestructures.Umlpart> getparts() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<euml.generic.compositestructures.PortUsage> getportUsages() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>mediniIdentifier</code> attribute.
         * @return  the descriptor for the <code>mediniIdentifier</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,de.ikv.medini.kernel.MediniObject,java.lang.String> MEDINI_IDENTIFIER( ) {
            return de.ikv.medini.kernel.MediniObject.DESCRIPTORS.MEDINI_IDENTIFIER( );
        }
        /**
         * Returns the descriptor for the <code>typeCode</code> attribute.
         * @return  the descriptor for the <code>typeCode</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.Umlelement,java.lang.String> TYPE_CODE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.TYPE_CODE( );
        }
        /**
         * Returns the descriptor for the <code>stereotype</code> attribute.
         * @return  the descriptor for the <code>stereotype</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.Umlelement,java.lang.String> STEREOTYPE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.STEREOTYPE( );
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.UmlnamedElement,java.lang.String> NAME( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.UmlnamedElement,euml.generic.kernel.UmlvisibilityKind> VISIBILITY( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.VISIBILITY( );
        }
        /**
         * Returns the descriptor for the <code>comment</code> attribute.
         * @return  the descriptor for the <code>comment</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.UmlnamedElement,java.lang.String> COMMENT( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.COMMENT( );
        }
        /**
         * Returns the descriptor for the <code>alias</code> attribute.
         * @return  the descriptor for the <code>alias</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.UmlnamedElement,java.lang.String> ALIAS( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.ALIAS( );
        }
        /**
         * Returns the descriptor for the <code>isAbstract</code> attribute.
         * @return  the descriptor for the <code>isAbstract</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.Umlclassifier,java.lang.Boolean> IS_ABSTRACT( ) {
            return euml.generic.kernel.Umlclassifier.DESCRIPTORS.IS_ABSTRACT( );
        }
        /**
         * Returns the descriptor for the <code>theRepresentative</code> reference.
         * @return  the descriptor for the <code>theRepresentative</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.presentation.graphic.Representaive>> THE_REPRESENTATIVE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_REPRESENTATIVE( );
        }
        /**
         * Returns the descriptor for the <code>theRelationshipOfSource</code> reference.
         * @return  the descriptor for the <code>theRelationshipOfSource</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.relationships.UmldirectedRelationship>> THE_RELATIONSHIP_OF_SOURCE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_RELATIONSHIP_OF_SOURCE( );
        }
        /**
         * Returns the descriptor for the <code>targettrace</code> reference.
         * @return  the descriptor for the <code>targettrace</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.Umltrace>> TARGETTRACE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.TARGETTRACE( );
        }
        /**
         * Returns the descriptor for the <code>sourcetrace</code> reference.
         * @return  the descriptor for the <code>sourcetrace</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.Umltrace>> SOURCETRACE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.SOURCETRACE( );
        }
        /**
         * Returns the descriptor for the <code>relationships</code> reference.
         * @return  the descriptor for the <code>relationships</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.Umlrelationship>> RELATIONSHIPS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.RELATIONSHIPS( );
        }
        /**
         * Returns the descriptor for the <code>theRelationshipOfTarget</code> reference.
         * @return  the descriptor for the <code>theRelationshipOfTarget</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.UmldirectedRelationship>> THE_RELATIONSHIP_OF_TARGET( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_RELATIONSHIP_OF_TARGET( );
        }
        /**
         * Returns the descriptor for the <code>theStereotype</code> reference.
         * @return  the descriptor for the <code>theStereotype</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,euml.generic.kernel.AppliedStereotype> THE_STEREOTYPE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_STEREOTYPE( );
        }
        /**
         * Returns the descriptor for the <code>theAnnotation</code> reference.
         * @return  the descriptor for the <code>theAnnotation</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlannotation>> THE_ANNOTATION( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_ANNOTATION( );
        }
        /**
         * Returns the descriptor for the <code>theConstraint</code> reference.
         * @return  the descriptor for the <code>theConstraint</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlconstraint>> THE_CONSTRAINT( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_CONSTRAINT( );
        }
        /**
         * Returns the descriptor for the <code>theUtilizedElements</code> reference.
         * @return  the descriptor for the <code>theUtilizedElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlelement>> THE_UTILIZED_ELEMENTS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_UTILIZED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>theUtilisingElements</code> reference.
         * @return  the descriptor for the <code>theUtilisingElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.kernel.Umlelement>> THE_UTILISING_ELEMENTS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_UTILISING_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>theOwnedElements</code> reference.
         * @return  the descriptor for the <code>theOwnedElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlelement>> THE_OWNED_ELEMENTS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_OWNED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>theOwner</code> reference.
         * @return  the descriptor for the <code>theOwner</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,euml.generic.kernel.Umlelement> THE_OWNER( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_OWNER( );
        }
        /**
         * Returns the descriptor for the <code>thetypedelement</code> reference.
         * @return  the descriptor for the <code>thetypedelement</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umltype,java.util.List<euml.generic.kernel.UmltypedElement>> THETYPEDELEMENT( ) {
            return euml.generic.kernel.Umltype.DESCRIPTORS.THETYPEDELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>theUseCase</code> reference.
         * @return  the descriptor for the <code>theUseCase</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.usecases.UmluseCase>> THE_USE_CASE( ) {
            return euml.generic.kernel.Umlclassifier.DESCRIPTORS.THE_USE_CASE( );
        }
        /**
         * Returns the descriptor for the <code>representation</code> reference.
         * @return  the descriptor for the <code>representation</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlclassifier,euml.generic.compositestructures.UmlcollaborationUse> REPRESENTATION( ) {
            return euml.generic.kernel.Umlclassifier.DESCRIPTORS.REPRESENTATION( );
        }
        /**
         * Returns the descriptor for the <code>theclassifierbehavior</code> reference.
         * @return  the descriptor for the <code>theclassifierbehavior</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlclassifier,euml.generic.commonbehaviors.Umlbehaviror> THECLASSIFIERBEHAVIOR( ) {
            return euml.generic.kernel.Umlclassifier.DESCRIPTORS.THECLASSIFIERBEHAVIOR( );
        }
        /**
         * Returns the descriptor for the <code>theRaisingOperations</code> reference.
         * @return  the descriptor for the <code>theRaisingOperations</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.kernel.Umloperation>> THE_RAISING_OPERATIONS( ) {
            return euml.generic.kernel.Umlclassifier.DESCRIPTORS.THE_RAISING_OPERATIONS( );
        }
        /**
         * Returns the descriptor for the <code>deduceTypeCodeAndStereotype</code> operation.
         * @return  the descriptor for the <code>deduceTypeCodeAndStereotype</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlelement,java.lang.Void> DEDUCE_TYPE_CODE_AND_STEREOTYPE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.DEDUCE_TYPE_CODE_AND_STEREOTYPE( );
        }
        /**
         * Returns the descriptor for the <code>deleteElement</code> operation.
         * @return  the descriptor for the <code>deleteElement</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlelement,java.lang.Void> DELETE_ELEMENT( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.DELETE_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>getqualifiedName</code> operation.
         * @return  the descriptor for the <code>getqualifiedName</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.UmlnamedElement,java.util.List<java.lang.String>> GETQUALIFIED_NAME( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.GETQUALIFIED_NAME( );
        }
        /**
         * Returns the descriptor for the <code>getqualifiedAlias</code> operation.
         * @return  the descriptor for the <code>getqualifiedAlias</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.UmlnamedElement,java.util.List<java.lang.String>> GETQUALIFIED_ALIAS( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.GETQUALIFIED_ALIAS( );
        }
        /**
         * Returns the descriptor for the <code>gettheNamespace</code> operation.
         * @return  the descriptor for the <code>gettheNamespace</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.UmlnamedElement,euml.generic.kernel.Umlnamespace> GETTHE_NAMESPACE( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.GETTHE_NAMESPACE( );
        }
        /**
         * Returns the descriptor for the <code>gettheContainedElements</code> operation.
         * @return  the descriptor for the <code>gettheContainedElements</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlnamespace,java.util.List<euml.generic.kernel.UmlnamedElement>> GETTHE_CONTAINED_ELEMENTS( ) {
            return euml.generic.kernel.Umlnamespace.DESCRIPTORS.GETTHE_CONTAINED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>getownedBehavior</code> operation.
         * @return  the descriptor for the <code>getownedBehavior</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.commonbehaviors.Umlbehaviror>> GETOWNED_BEHAVIOR( ) {
            return euml.generic.kernel.Umlclassifier.DESCRIPTORS.GETOWNED_BEHAVIOR( );
        }
        /**
         * Returns the descriptor for the <code>getownedTriggers</code> operation.
         * @return  the descriptor for the <code>getownedTriggers</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.commonbehaviors.Umltrigger>> GETOWNED_TRIGGERS( ) {
            return euml.generic.kernel.Umlclassifier.DESCRIPTORS.GETOWNED_TRIGGERS( );
        }
        /**
         * Returns the descriptor for the <code>getcollaborationUsages</code> operation.
         * @return  the descriptor for the <code>getcollaborationUsages</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.compositestructures.UmlcollaborationUse>> GETCOLLABORATION_USAGES( ) {
            return euml.generic.kernel.Umlclassifier.DESCRIPTORS.GETCOLLABORATION_USAGES( );
        }
        /**
         * Returns the descriptor for the <code>gettheBaseClassifiers</code> operation.
         * @return  the descriptor for the <code>gettheBaseClassifiers</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.kernel.Umlclassifier>> GETTHE_BASE_CLASSIFIERS( ) {
            return euml.generic.kernel.Umlclassifier.DESCRIPTORS.GETTHE_BASE_CLASSIFIERS( );
        }
        /**
         * Returns the descriptor for the <code>getgeneralizations</code> operation.
         * @return  the descriptor for the <code>getgeneralizations</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.relationships.Umlgeneralization>> GETGENERALIZATIONS( ) {
            return euml.generic.kernel.Umlclassifier.DESCRIPTORS.GETGENERALIZATIONS( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.compositestructures.UmlstructuredClassifier,java.util.List<euml.generic.compositestructures.Umlport>> __getownedPorts;
        /**
         * Returns the descriptor for the <code>getownedPorts</code> operation.
         * @return  the descriptor for the <code>getownedPorts</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.compositestructures.UmlstructuredClassifier,java.util.List<euml.generic.compositestructures.Umlport>> GETOWNED_PORTS( ) {
            if ( __getownedPorts == null ) {
                __getownedPorts = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.compositestructures.UmlstructuredClassifier,java.util.List<euml.generic.compositestructures.Umlport>>( "498649D85E6D6A50F0C711DDBC55000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "CompositeStructures", "UMLStructuredClassifier", "getownedPorts" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __getownedPorts;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.compositestructures.UmlstructuredClassifier,java.util.List<euml.generic.compositestructures.Umlconnector>> __getownedConnectors;
        /**
         * Returns the descriptor for the <code>getownedConnectors</code> operation.
         * @return  the descriptor for the <code>getownedConnectors</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.compositestructures.UmlstructuredClassifier,java.util.List<euml.generic.compositestructures.Umlconnector>> GETOWNED_CONNECTORS( ) {
            if ( __getownedConnectors == null ) {
                __getownedConnectors = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.compositestructures.UmlstructuredClassifier,java.util.List<euml.generic.compositestructures.Umlconnector>>( "498649F770C3EF30F0C711DDCE2B000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "CompositeStructures", "UMLStructuredClassifier", "getownedConnectors" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __getownedConnectors;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.compositestructures.UmlstructuredClassifier,java.util.List<euml.generic.kernel.Umlproperty>> __getownedProperties;
        /**
         * Returns the descriptor for the <code>getownedProperties</code> operation.
         * @return  the descriptor for the <code>getownedProperties</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.compositestructures.UmlstructuredClassifier,java.util.List<euml.generic.kernel.Umlproperty>> GETOWNED_PROPERTIES( ) {
            if ( __getownedProperties == null ) {
                __getownedProperties = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.compositestructures.UmlstructuredClassifier,java.util.List<euml.generic.kernel.Umlproperty>>( "49864A1985568160F0C711DD9B76000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "CompositeStructures", "UMLStructuredClassifier", "getownedProperties" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __getownedProperties;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.compositestructures.UmlstructuredClassifier,java.util.List<euml.generic.compositestructures.Umlpart>> __getparts;
        /**
         * Returns the descriptor for the <code>getparts</code> operation.
         * @return  the descriptor for the <code>getparts</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.compositestructures.UmlstructuredClassifier,java.util.List<euml.generic.compositestructures.Umlpart>> GETPARTS( ) {
            if ( __getparts == null ) {
                __getparts = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.compositestructures.UmlstructuredClassifier,java.util.List<euml.generic.compositestructures.Umlpart>>( "49864A2E916D4B00F0C711DD871C000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "CompositeStructures", "UMLStructuredClassifier", "getparts" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __getparts;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.compositestructures.UmlstructuredClassifier,java.util.List<euml.generic.compositestructures.PortUsage>> __getportUsages;
        /**
         * Returns the descriptor for the <code>getportUsages</code> operation.
         * @return  the descriptor for the <code>getportUsages</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.compositestructures.UmlstructuredClassifier,java.util.List<euml.generic.compositestructures.PortUsage>> GETPORT_USAGES( ) {
            if ( __getportUsages == null ) {
                __getportUsages = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.compositestructures.UmlstructuredClassifier,java.util.List<euml.generic.compositestructures.PortUsage>>( "49864A3B99A8D640F0C711DD8B64000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "CompositeStructures", "UMLStructuredClassifier", "getportUsages" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __getportUsages;
        }
    }
}    