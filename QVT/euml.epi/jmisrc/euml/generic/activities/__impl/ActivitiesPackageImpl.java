/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.generic.activities.__impl;

public final class ActivitiesPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;

    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(51);
        FEATURE_IDS.put("UMLActivityNode", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLAction", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLObjectNode", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLPin", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLInputPin", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("ClassifierPin", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("ConnectableElementPin", Integer.valueOf(6)); //$NON-NLS-1$
        FEATURE_IDS.put("InstanceUsage", Integer.valueOf(7)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLActivityEdge", Integer.valueOf(8)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLActivityGroup", Integer.valueOf(9)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLInterruptibleActivityRegion", Integer.valueOf(10)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLOutputPin", Integer.valueOf(11)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLExceptionHandler", Integer.valueOf(12)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLActivity", Integer.valueOf(13)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLActivityParameterNode", Integer.valueOf(14)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLActivityPartition", Integer.valueOf(15)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLControlFlow", Integer.valueOf(16)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLControlNode", Integer.valueOf(17)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLDataStoreNode", Integer.valueOf(18)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLDecisionMergeNode", Integer.valueOf(19)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLFinalNode", Integer.valueOf(20)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLForkJoinNode", Integer.valueOf(21)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLInitialNode", Integer.valueOf(22)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLObjectFlow", Integer.valueOf(23)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLStructuredActivityNode", Integer.valueOf(24)); //$NON-NLS-1$
        FEATURE_IDS.put("ConnectableElementPin_UMLConnectableElement", Integer.valueOf(25)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLActivityNode_UMLActivityEdge", Integer.valueOf(26)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLActivityNode_UMLActivityEdge1", Integer.valueOf(27)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLActivityGroup_UMLActivityNode", Integer.valueOf(28)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLActivityGroup_UMLActivityEdge", Integer.valueOf(29)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLInterruptibleActivityRegion_UMLActivityEdge", Integer.valueOf(30)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLExceptionHandler_UMLAction", Integer.valueOf(31)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLExceptionHandler_UMLObjectNode", Integer.valueOf(32)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLExceptionHandler_UMLClassifier", Integer.valueOf(33)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLActivityParameterNode_UMLParameter", Integer.valueOf(34)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLActivityPartition_UMLNamedElement", Integer.valueOf(35)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLDecisionMergeNode_UMLBehaviror", Integer.valueOf(36)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLValueSpecification_UMLObjectNode", Integer.valueOf(37)); //$NON-NLS-1$
    }

    // constructors    
    public ActivitiesPackageImpl()
    {
        super();
    }
    public ActivitiesPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    public com.sap.tc.moin.repository.mmi.reflect.RefEnum create___RefEnum(com.sap.tc.moin.repository.mmi.model.EnumerationType enumType, String name) {
        com.sap.tc.moin.repository.mmi.reflect.RefEnum result = null;
        java.lang.String enumName = enumType.getName();
          if (enumName.equals("UMLFinalNodeKind")) { //$NON-NLS-1$
            result = euml.generic.activities.UmlfinalNodeKindEnum.forName(name);
          }
        return result;
    }
    // internal structure type creators
    // nested packages
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlactivityNode(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLActivityNode"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlaction(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLAction"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlobjectNode(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLObjectNode"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlpin(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLPin"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlinputPin(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLInputPin"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getClassifierPin(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ClassifierPin"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getConnectableElementPin(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ConnectableElementPin"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getInstanceUsage(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "InstanceUsage"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlactivityEdge(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLActivityEdge"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlactivityGroup(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLActivityGroup"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlinterruptibleActivityRegion(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLInterruptibleActivityRegion"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmloutputPin(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLOutputPin"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlexceptionHandler(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLExceptionHandler"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlactivity(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLActivity"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlactivityParameterNode(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLActivityParameterNode"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlactivityPartition(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLActivityPartition"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlcontrolFlow(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLControlFlow"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlcontrolNode(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLControlNode"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmldataStoreNode(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLDataStoreNode"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmldecisionMergeNode(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLDecisionMergeNode"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlfinalNode(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLFinalNode"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlforkJoinNode(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLForkJoinNode"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlinitialNode(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLInitialNode"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlobjectFlow(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLObjectFlow"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlstructuredActivityNode(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLStructuredActivityNode"); //$NON-NLS-1$
    }
    // associations
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getConnectableElementPinUmlconnectableElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "ConnectableElementPin_UMLConnectableElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlactivityNodeUmlactivityEdge(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLActivityNode_UMLActivityEdge"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlactivityNodeUmlactivityEdge1(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLActivityNode_UMLActivityEdge1"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlactivityGroupUmlactivityNode(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLActivityGroup_UMLActivityNode"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlactivityGroupUmlactivityEdge(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLActivityGroup_UMLActivityEdge"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlinterruptibleActivityRegionUmlactivityEdge(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLInterruptibleActivityRegion_UMLActivityEdge"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlexceptionHandlerUmlaction(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLExceptionHandler_UMLAction"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlexceptionHandlerUmlobjectNode(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLExceptionHandler_UMLObjectNode"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlexceptionHandlerUmlclassifier(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLExceptionHandler_UMLClassifier"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlactivityParameterNodeUmlparameter(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLActivityParameterNode_UMLParameter"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlactivityPartitionUmlnamedElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLActivityPartition_UMLNamedElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmldecisionMergeNodeUmlbehaviror(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLDecisionMergeNode_UMLBehaviror"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlvalueSpecificationUmlobjectNode(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLValueSpecification_UMLObjectNode"); //$NON-NLS-1$
    }
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 1:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.UmlactionImpl")); //$NON-NLS-1$
                case 2:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 3:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 4:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.UmlinputPinImpl")); //$NON-NLS-1$
                case 5:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.ClassifierPinImpl")); //$NON-NLS-1$
                case 6:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.ConnectableElementPinImpl")); //$NON-NLS-1$
                case 7:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.InstanceUsageImpl")); //$NON-NLS-1$
                case 8:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 9:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 10:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.UmlinterruptibleActivityRegionImpl")); //$NON-NLS-1$
                case 11:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.UmloutputPinImpl")); //$NON-NLS-1$
                case 12:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.UmlexceptionHandlerImpl")); //$NON-NLS-1$
                case 13:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.UmlactivityImpl")); //$NON-NLS-1$
                case 14:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.UmlactivityParameterNodeImpl")); //$NON-NLS-1$
                case 15:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.UmlactivityPartitionImpl")); //$NON-NLS-1$
                case 16:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.UmlcontrolFlowImpl")); //$NON-NLS-1$
                case 17:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 18:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.UmldataStoreNodeImpl")); //$NON-NLS-1$
                case 19:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.UmldecisionMergeNodeImpl")); //$NON-NLS-1$
                case 20:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.UmlfinalNodeImpl")); //$NON-NLS-1$
                case 21:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.UmlforkJoinNodeImpl")); //$NON-NLS-1$
                case 22:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.UmlinitialNodeImpl")); //$NON-NLS-1$
                case 23:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.UmlobjectFlowImpl")); //$NON-NLS-1$
                case 24:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.activities.__impl.UmlstructuredActivityNodeImpl")); //$NON-NLS-1$
                case 25:
                    return new euml.generic.activities.__impl.ConnectableElementPinUmlconnectableElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 26:
                    return new euml.generic.activities.__impl.UmlactivityNodeUmlactivityEdgeImpl(workspace, mofId, immediatePackage, metaObject);
                case 27:
                    return new euml.generic.activities.__impl.UmlactivityNodeUmlactivityEdge1Impl(workspace, mofId, immediatePackage, metaObject);
                case 28:
                    return new euml.generic.activities.__impl.UmlactivityGroupUmlactivityNodeImpl(workspace, mofId, immediatePackage, metaObject);
                case 29:
                    return new euml.generic.activities.__impl.UmlactivityGroupUmlactivityEdgeImpl(workspace, mofId, immediatePackage, metaObject);
                case 30:
                    return new euml.generic.activities.__impl.UmlinterruptibleActivityRegionUmlactivityEdgeImpl(workspace, mofId, immediatePackage, metaObject);
                case 31:
                    return new euml.generic.activities.__impl.UmlexceptionHandlerUmlactionImpl(workspace, mofId, immediatePackage, metaObject);
                case 32:
                    return new euml.generic.activities.__impl.UmlexceptionHandlerUmlobjectNodeImpl(workspace, mofId, immediatePackage, metaObject);
                case 33:
                    return new euml.generic.activities.__impl.UmlexceptionHandlerUmlclassifierImpl(workspace, mofId, immediatePackage, metaObject);
                case 34:
                    return new euml.generic.activities.__impl.UmlactivityParameterNodeUmlparameterImpl(workspace, mofId, immediatePackage, metaObject);
                case 35:
                    return new euml.generic.activities.__impl.UmlactivityPartitionUmlnamedElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 36:
                    return new euml.generic.activities.__impl.UmldecisionMergeNodeUmlbehavirorImpl(workspace, mofId, immediatePackage, metaObject);
                case 37:
                    return new euml.generic.activities.__impl.UmlvalueSpecificationUmlobjectNodeImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<euml.generic.activities.ActivitiesPackage> get___JmiInterface() {
        return euml.generic.activities.ActivitiesPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(0);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefPackageAndName rpan = null;
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(25);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
            name = "UMLActivityNode"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmlactivityNode"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLAction"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.Umlaction"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLObjectNode"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmlobjectNode"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLPin"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.Umlpin"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLInputPin"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmlinputPin"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ClassifierPin"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.ClassifierPin"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ConnectableElementPin"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.ConnectableElementPin"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "InstanceUsage"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.InstanceUsage"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLActivityEdge"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmlactivityEdge"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLActivityGroup"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmlactivityGroup"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLInterruptibleActivityRegion"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmlinterruptibleActivityRegion"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLOutputPin"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmloutputPin"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLExceptionHandler"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmlexceptionHandler"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLActivity"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.Umlactivity"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLActivityParameterNode"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmlactivityParameterNode"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLActivityPartition"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmlactivityPartition"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLControlFlow"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmlcontrolFlow"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLControlNode"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmlcontrolNode"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLDataStoreNode"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmldataStoreNode"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLDecisionMergeNode"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmldecisionMergeNode"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLFinalNode"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmlfinalNode"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLForkJoinNode"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmlforkJoinNode"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLInitialNode"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmlinitialNode"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLObjectFlow"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmlobjectFlow"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLStructuredActivityNode"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.activities.UmlstructuredActivityNode"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(13);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefAssociationAndName raan = null;
            name = "ConnectableElementPin_UMLConnectableElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.activities.ConnectableElementPinUmlconnectableElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLActivityNode_UMLActivityEdge"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.activities.UmlactivityNodeUmlactivityEdge"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLActivityNode_UMLActivityEdge1"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.activities.UmlactivityNodeUmlactivityEdge1"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLActivityGroup_UMLActivityNode"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.activities.UmlactivityGroupUmlactivityNode"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLActivityGroup_UMLActivityEdge"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.activities.UmlactivityGroupUmlactivityEdge"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLInterruptibleActivityRegion_UMLActivityEdge"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.activities.UmlinterruptibleActivityRegionUmlactivityEdge"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLExceptionHandler_UMLAction"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.activities.UmlexceptionHandlerUmlaction"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLExceptionHandler_UMLObjectNode"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.activities.UmlexceptionHandlerUmlobjectNode"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLExceptionHandler_UMLClassifier"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.activities.UmlexceptionHandlerUmlclassifier"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLActivityParameterNode_UMLParameter"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.activities.UmlactivityParameterNodeUmlparameter"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLActivityPartition_UMLNamedElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.activities.UmlactivityPartitionUmlnamedElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLDecisionMergeNode_UMLBehaviror"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.activities.UmldecisionMergeNodeUmlbehaviror"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLValueSpecification_UMLObjectNode"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.activities.UmlvalueSpecificationUmlobjectNode"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<euml.generic.activities.__impl.ActivitiesPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new euml.generic.activities.__impl.ActivitiesPackageWrapper(conn, this, synchronize);
    }

}