/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.generic.activities;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface UmlactivityGroup extends euml.generic.kernel.Umlelement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, euml.generic.activities.UmlactivityGroup> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, euml.generic.activities.UmlactivityGroup>("497EEF6F5D6EAFD0EC6511DDBD45000E35A783E4", "sap.com/moin/mm/euml", "EUML", "Generic", "Activities", "UMLActivityGroup"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 

    
    // references
    public java.util.List<euml.generic.activities.UmlactivityNode> getTheNodeOfTheGroup() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<euml.generic.activities.UmlactivityEdge> getUmlactivityedge() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<euml.generic.activities.UmlactivityEdge> getTheDdgesOfTheGroup() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // operations
    public java.util.List<euml.generic.activities.UmlactivityGroup> getownedGroups() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>mediniIdentifier</code> attribute.
         * @return  the descriptor for the <code>mediniIdentifier</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,de.ikv.medini.kernel.MediniObject,java.lang.String> MEDINI_IDENTIFIER( ) {
            return de.ikv.medini.kernel.MediniObject.DESCRIPTORS.MEDINI_IDENTIFIER( );
        }
        /**
         * Returns the descriptor for the <code>typeCode</code> attribute.
         * @return  the descriptor for the <code>typeCode</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.Umlelement,java.lang.String> TYPE_CODE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.TYPE_CODE( );
        }
        /**
         * Returns the descriptor for the <code>stereotype</code> attribute.
         * @return  the descriptor for the <code>stereotype</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.Umlelement,java.lang.String> STEREOTYPE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.STEREOTYPE( );
        }
        /**
         * Returns the descriptor for the <code>theRepresentative</code> reference.
         * @return  the descriptor for the <code>theRepresentative</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.presentation.graphic.Representaive>> THE_REPRESENTATIVE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_REPRESENTATIVE( );
        }
        /**
         * Returns the descriptor for the <code>theRelationshipOfSource</code> reference.
         * @return  the descriptor for the <code>theRelationshipOfSource</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.relationships.UmldirectedRelationship>> THE_RELATIONSHIP_OF_SOURCE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_RELATIONSHIP_OF_SOURCE( );
        }
        /**
         * Returns the descriptor for the <code>targettrace</code> reference.
         * @return  the descriptor for the <code>targettrace</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.Umltrace>> TARGETTRACE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.TARGETTRACE( );
        }
        /**
         * Returns the descriptor for the <code>sourcetrace</code> reference.
         * @return  the descriptor for the <code>sourcetrace</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.Umltrace>> SOURCETRACE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.SOURCETRACE( );
        }
        /**
         * Returns the descriptor for the <code>relationships</code> reference.
         * @return  the descriptor for the <code>relationships</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.Umlrelationship>> RELATIONSHIPS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.RELATIONSHIPS( );
        }
        /**
         * Returns the descriptor for the <code>theRelationshipOfTarget</code> reference.
         * @return  the descriptor for the <code>theRelationshipOfTarget</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.UmldirectedRelationship>> THE_RELATIONSHIP_OF_TARGET( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_RELATIONSHIP_OF_TARGET( );
        }
        /**
         * Returns the descriptor for the <code>theStereotype</code> reference.
         * @return  the descriptor for the <code>theStereotype</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,euml.generic.kernel.AppliedStereotype> THE_STEREOTYPE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_STEREOTYPE( );
        }
        /**
         * Returns the descriptor for the <code>theAnnotation</code> reference.
         * @return  the descriptor for the <code>theAnnotation</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlannotation>> THE_ANNOTATION( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_ANNOTATION( );
        }
        /**
         * Returns the descriptor for the <code>theConstraint</code> reference.
         * @return  the descriptor for the <code>theConstraint</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlconstraint>> THE_CONSTRAINT( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_CONSTRAINT( );
        }
        /**
         * Returns the descriptor for the <code>theUtilizedElements</code> reference.
         * @return  the descriptor for the <code>theUtilizedElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlelement>> THE_UTILIZED_ELEMENTS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_UTILIZED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>theUtilisingElements</code> reference.
         * @return  the descriptor for the <code>theUtilisingElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.kernel.Umlelement>> THE_UTILISING_ELEMENTS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_UTILISING_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>theOwnedElements</code> reference.
         * @return  the descriptor for the <code>theOwnedElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlelement>> THE_OWNED_ELEMENTS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_OWNED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>theOwner</code> reference.
         * @return  the descriptor for the <code>theOwner</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,euml.generic.kernel.Umlelement> THE_OWNER( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_OWNER( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.activities.UmlactivityGroup,java.util.List<euml.generic.activities.UmlactivityNode>> __theNodeOfTheGroup;
        /**
         * Returns the descriptor for the <code>theNodeOfTheGroup</code> reference.
         * @return  the descriptor for the <code>theNodeOfTheGroup</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.activities.UmlactivityGroup,java.util.List<euml.generic.activities.UmlactivityNode>> THE_NODE_OF_THE_GROUP( ) {
            if ( __theNodeOfTheGroup == null ) {
                __theNodeOfTheGroup = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.activities.UmlactivityGroup,java.util.List<euml.generic.activities.UmlactivityNode>>( "4986507F55C87212F0CB11DDA2C6000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "Activities", "UMLActivityGroup", "theNodeOfTheGroup" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __theNodeOfTheGroup;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.activities.UmlactivityGroup,java.util.List<euml.generic.activities.UmlactivityEdge>> __umlactivityedge;
        /**
         * Returns the descriptor for the <code>umlactivityedge</code> reference.
         * @return  the descriptor for the <code>umlactivityedge</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.activities.UmlactivityGroup,java.util.List<euml.generic.activities.UmlactivityEdge>> UMLACTIVITYEDGE( ) {
            if ( __umlactivityedge == null ) {
                __umlactivityedge = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.activities.UmlactivityGroup,java.util.List<euml.generic.activities.UmlactivityEdge>>( "498650C981E66413F0CB11DDB0B8000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "Activities", "UMLActivityGroup", "umlactivityedge" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __umlactivityedge;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.activities.UmlactivityGroup,java.util.List<euml.generic.activities.UmlactivityEdge>> __theDdgesOfTheGroup;
        /**
         * Returns the descriptor for the <code>theDdgesOfTheGroup</code> reference.
         * @return  the descriptor for the <code>theDdgesOfTheGroup</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.activities.UmlactivityGroup,java.util.List<euml.generic.activities.UmlactivityEdge>> THE_DDGES_OF_THE_GROUP( ) {
            if ( __theDdgesOfTheGroup == null ) {
                __theDdgesOfTheGroup = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.activities.UmlactivityGroup,java.util.List<euml.generic.activities.UmlactivityEdge>>( "49865111AC7614F0F0CB11DDAFD6000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "Activities", "UMLActivityGroup", "theDdgesOfTheGroup" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __theDdgesOfTheGroup;
        }
        /**
         * Returns the descriptor for the <code>deduceTypeCodeAndStereotype</code> operation.
         * @return  the descriptor for the <code>deduceTypeCodeAndStereotype</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlelement,java.lang.Void> DEDUCE_TYPE_CODE_AND_STEREOTYPE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.DEDUCE_TYPE_CODE_AND_STEREOTYPE( );
        }
        /**
         * Returns the descriptor for the <code>deleteElement</code> operation.
         * @return  the descriptor for the <code>deleteElement</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlelement,java.lang.Void> DELETE_ELEMENT( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.DELETE_ELEMENT( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.activities.UmlactivityGroup,java.util.List<euml.generic.activities.UmlactivityGroup>> __getownedGroups;
        /**
         * Returns the descriptor for the <code>getownedGroups</code> operation.
         * @return  the descriptor for the <code>getownedGroups</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.activities.UmlactivityGroup,java.util.List<euml.generic.activities.UmlactivityGroup>> GETOWNED_GROUPS( ) {
            if ( __getownedGroups == null ) {
                __getownedGroups = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.activities.UmlactivityGroup,java.util.List<euml.generic.activities.UmlactivityGroup>>( "497EEFC4900F3270EC6511DD9985000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "Activities", "UMLActivityGroup", "getownedGroups" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __getownedGroups;
        }
    }
}    