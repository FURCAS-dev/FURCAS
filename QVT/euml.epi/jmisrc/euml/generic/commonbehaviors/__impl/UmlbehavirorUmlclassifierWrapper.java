/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.generic.commonbehaviors.__impl;

public class UmlbehavirorUmlclassifierWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<euml.generic.commonbehaviors.UmlbehavirorUmlclassifier> implements euml.generic.commonbehaviors.UmlbehavirorUmlclassifier,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The UmlbehavirorUmlclassifier wrapper
     */
    public UmlbehavirorUmlclassifierWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, euml.generic.commonbehaviors.__impl.UmlbehavirorUmlclassifierImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private euml.generic.commonbehaviors.__impl.UmlbehavirorUmlclassifierImpl getCastWrappedObject() {
        return (euml.generic.commonbehaviors.__impl.UmlbehavirorUmlclassifierImpl) getWrappedObject();
    }

    public euml.generic.commonbehaviors.UmlbehavirorUmlclassifier unwrap() {
        return (euml.generic.commonbehaviors.UmlbehavirorUmlclassifier) getWrappedObject();
    }
    
    public boolean exists(euml.generic.commonbehaviors.Umlbehaviror _TheClassifierBehavior, euml.generic.kernel.Umlclassifier _TheBehavioredClassifier) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheClassifierBehavior), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheBehavioredClassifier));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheClassifierBehavior), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheBehavioredClassifier)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.commonbehaviors.Umlbehaviror getTheClassifierBehavior(euml.generic.kernel.Umlclassifier _TheBehavioredClassifier) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.commonbehaviors.Umlbehaviror) wrapResult(getCastWrappedObject().getTheClassifierBehavior(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheBehavioredClassifier)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.commonbehaviors.Umlbehaviror) wrapResult(getCastWrappedObject().getTheClassifierBehavior(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheBehavioredClassifier))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.kernel.Umlclassifier getTheBehavioredClassifier(euml.generic.commonbehaviors.Umlbehaviror _TheClassifierBehavior) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.kernel.Umlclassifier) wrapResult(getCastWrappedObject().getTheBehavioredClassifier(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheClassifierBehavior)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.kernel.Umlclassifier) wrapResult(getCastWrappedObject().getTheBehavioredClassifier(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheClassifierBehavior))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(euml.generic.commonbehaviors.Umlbehaviror _TheClassifierBehavior, euml.generic.kernel.Umlclassifier _TheBehavioredClassifier) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheClassifierBehavior), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheBehavioredClassifier));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheClassifierBehavior), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheBehavioredClassifier)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(euml.generic.commonbehaviors.Umlbehaviror _TheClassifierBehavior, euml.generic.kernel.Umlclassifier _TheBehavioredClassifier) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheClassifierBehavior), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheBehavioredClassifier));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheClassifierBehavior), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheBehavioredClassifier)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<euml.generic.commonbehaviors.UmlbehavirorUmlclassifier> get___JmiInterface() {
        return euml.generic.commonbehaviors.UmlbehavirorUmlclassifier.class;
    }

    protected String metaObjectToString() {
        return "euml.generic.commonbehaviors.UmlbehavirorUmlclassifier (Java Type)\nEUML.Generic.CommonBehaviors.UMLBehaviror_UMLClassifier (MOF Type)"; //$NON-NLS-1$
    }    
}