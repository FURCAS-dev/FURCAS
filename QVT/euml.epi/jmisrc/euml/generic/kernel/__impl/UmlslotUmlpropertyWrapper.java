/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.generic.kernel.__impl;

public class UmlslotUmlpropertyWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<euml.generic.kernel.UmlslotUmlproperty> implements euml.generic.kernel.UmlslotUmlproperty,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The UmlslotUmlproperty wrapper
     */
    public UmlslotUmlpropertyWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, euml.generic.kernel.__impl.UmlslotUmlpropertyImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private euml.generic.kernel.__impl.UmlslotUmlpropertyImpl getCastWrappedObject() {
        return (euml.generic.kernel.__impl.UmlslotUmlpropertyImpl) getWrappedObject();
    }

    public euml.generic.kernel.UmlslotUmlproperty unwrap() {
        return (euml.generic.kernel.UmlslotUmlproperty) getWrappedObject();
    }
    
    public boolean exists(euml.generic.kernel.Umlslot _Umlslot, euml.generic.kernel.Umlproperty _DefiningFeature) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Umlslot), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DefiningFeature));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Umlslot), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DefiningFeature)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.kernel.Umlslot getUmlslot(euml.generic.kernel.Umlproperty _DefiningFeature) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.kernel.Umlslot) wrapResult(getCastWrappedObject().getUmlslot(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DefiningFeature)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.kernel.Umlslot) wrapResult(getCastWrappedObject().getUmlslot(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DefiningFeature))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.kernel.Umlproperty getDefiningFeature(euml.generic.kernel.Umlslot _Umlslot) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.kernel.Umlproperty) wrapResult(getCastWrappedObject().getDefiningFeature(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Umlslot)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.kernel.Umlproperty) wrapResult(getCastWrappedObject().getDefiningFeature(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Umlslot))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(euml.generic.kernel.Umlslot _Umlslot, euml.generic.kernel.Umlproperty _DefiningFeature) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Umlslot), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DefiningFeature));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Umlslot), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DefiningFeature)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(euml.generic.kernel.Umlslot _Umlslot, euml.generic.kernel.Umlproperty _DefiningFeature) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Umlslot), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DefiningFeature));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Umlslot), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DefiningFeature)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<euml.generic.kernel.UmlslotUmlproperty> get___JmiInterface() {
        return euml.generic.kernel.UmlslotUmlproperty.class;
    }

    protected String metaObjectToString() {
        return "euml.generic.kernel.UmlslotUmlproperty (Java Type)\nEUML.Generic.Kernel.UMLSlot_UMLProperty (MOF Type)"; //$NON-NLS-1$
    }    
}