/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.generic.kernel.__impl;

public class UmlelementUmlelement1Wrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<euml.generic.kernel.UmlelementUmlelement1> implements euml.generic.kernel.UmlelementUmlelement1,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The UmlelementUmlelement1 wrapper
     */
    public UmlelementUmlelement1Wrapper(com.sap.tc.moin.repository.core.CoreConnection conn, euml.generic.kernel.__impl.UmlelementUmlelement1Impl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private euml.generic.kernel.__impl.UmlelementUmlelement1Impl getCastWrappedObject() {
        return (euml.generic.kernel.__impl.UmlelementUmlelement1Impl) getWrappedObject();
    }

    public euml.generic.kernel.UmlelementUmlelement1 unwrap() {
        return (euml.generic.kernel.UmlelementUmlelement1) getWrappedObject();
    }
    
    public boolean exists(euml.generic.kernel.Umlelement _TheOwner, euml.generic.kernel.Umlelement _TheOwnedElements) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheOwner), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheOwnedElements));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheOwner), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheOwnedElements)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.kernel.Umlelement getTheOwner(euml.generic.kernel.Umlelement _TheOwnedElements) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.kernel.Umlelement) wrapResult(getCastWrappedObject().getTheOwner(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheOwnedElements)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.kernel.Umlelement) wrapResult(getCastWrappedObject().getTheOwner(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheOwnedElements))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.List getTheOwnedElements(euml.generic.kernel.Umlelement _TheOwner) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.List) wrapResult(getCastWrappedObject().getTheOwnedElements(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheOwner)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.List) wrapResult(getCastWrappedObject().getTheOwnedElements(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheOwner))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(euml.generic.kernel.Umlelement _TheOwner, euml.generic.kernel.Umlelement _TheOwnedElements) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheOwner), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheOwnedElements));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheOwner), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheOwnedElements)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(euml.generic.kernel.Umlelement _TheOwner, euml.generic.kernel.Umlelement _TheOwnedElements) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheOwner), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheOwnedElements));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheOwner), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheOwnedElements)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<euml.generic.kernel.UmlelementUmlelement1> get___JmiInterface() {
        return euml.generic.kernel.UmlelementUmlelement1.class;
    }

    protected String metaObjectToString() {
        return "euml.generic.kernel.UmlelementUmlelement1 (Java Type)\nEUML.Generic.Kernel.UMLElement_UMLElement1 (MOF Type)"; //$NON-NLS-1$
    }    
}