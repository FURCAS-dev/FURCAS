/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.generic.kernel.__impl;

public class UmlinstanceSpecificationUmlclassifierWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<euml.generic.kernel.UmlinstanceSpecificationUmlclassifier> implements euml.generic.kernel.UmlinstanceSpecificationUmlclassifier,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The UmlinstanceSpecificationUmlclassifier wrapper
     */
    public UmlinstanceSpecificationUmlclassifierWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, euml.generic.kernel.__impl.UmlinstanceSpecificationUmlclassifierImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private euml.generic.kernel.__impl.UmlinstanceSpecificationUmlclassifierImpl getCastWrappedObject() {
        return (euml.generic.kernel.__impl.UmlinstanceSpecificationUmlclassifierImpl) getWrappedObject();
    }

    public euml.generic.kernel.UmlinstanceSpecificationUmlclassifier unwrap() {
        return (euml.generic.kernel.UmlinstanceSpecificationUmlclassifier) getWrappedObject();
    }
    
    public boolean exists(euml.generic.kernel.UmlinstanceSpecification _Umlinstancespecification, euml.generic.kernel.Umlclassifier _TheClassifiers) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Umlinstancespecification), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheClassifiers));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Umlinstancespecification), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheClassifiers)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.kernel.UmlinstanceSpecification getUmlinstancespecification(euml.generic.kernel.Umlclassifier _TheClassifiers) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.kernel.UmlinstanceSpecification) wrapResult(getCastWrappedObject().getUmlinstancespecification(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheClassifiers)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.kernel.UmlinstanceSpecification) wrapResult(getCastWrappedObject().getUmlinstancespecification(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheClassifiers))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.List getTheClassifiers(euml.generic.kernel.UmlinstanceSpecification _Umlinstancespecification) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.List) wrapResult(getCastWrappedObject().getTheClassifiers(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Umlinstancespecification)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.List) wrapResult(getCastWrappedObject().getTheClassifiers(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Umlinstancespecification))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(euml.generic.kernel.UmlinstanceSpecification _Umlinstancespecification, euml.generic.kernel.Umlclassifier _TheClassifiers) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Umlinstancespecification), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheClassifiers));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Umlinstancespecification), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheClassifiers)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(euml.generic.kernel.UmlinstanceSpecification _Umlinstancespecification, euml.generic.kernel.Umlclassifier _TheClassifiers) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Umlinstancespecification), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheClassifiers));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Umlinstancespecification), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TheClassifiers)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<euml.generic.kernel.UmlinstanceSpecificationUmlclassifier> get___JmiInterface() {
        return euml.generic.kernel.UmlinstanceSpecificationUmlclassifier.class;
    }

    protected String metaObjectToString() {
        return "euml.generic.kernel.UmlinstanceSpecificationUmlclassifier (Java Type)\nEUML.Generic.Kernel.UMLInstanceSpecification_UMLClassifier (MOF Type)"; //$NON-NLS-1$
    }    
}