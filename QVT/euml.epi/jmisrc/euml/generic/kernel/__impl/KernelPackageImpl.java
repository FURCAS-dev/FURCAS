/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.generic.kernel.__impl;

public final class KernelPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;
    
    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(59);
        FEATURE_IDS.put("UMLElement", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("AppliedStereotype", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("TaggedVaule", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLAnnotation", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLConstraint", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLNamedElement", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLNamespace", Integer.valueOf(6)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLType", Integer.valueOf(7)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLClassifier", Integer.valueOf(8)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLTypedElement", Integer.valueOf(9)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLFeature", Integer.valueOf(10)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLMultiplicityElement", Integer.valueOf(11)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLValueSpecification", Integer.valueOf(12)); //$NON-NLS-1$
        FEATURE_IDS.put("LiteralValue", Integer.valueOf(13)); //$NON-NLS-1$
        FEATURE_IDS.put("ReferenceValue", Integer.valueOf(14)); //$NON-NLS-1$
        FEATURE_IDS.put("StringValue", Integer.valueOf(15)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLInterface", Integer.valueOf(16)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLProperty", Integer.valueOf(17)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLPrimitiveType", Integer.valueOf(18)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLInstanceValue", Integer.valueOf(19)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLSlot", Integer.valueOf(20)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLInstanceSpecification", Integer.valueOf(21)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLEnumerationLiteral", Integer.valueOf(22)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLEnumeration", Integer.valueOf(23)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLAssociation", Integer.valueOf(24)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLClass", Integer.valueOf(25)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLOperation", Integer.valueOf(26)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLParameter", Integer.valueOf(27)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLPackage", Integer.valueOf(28)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLElement_AppliedStereotype", Integer.valueOf(29)); //$NON-NLS-1$
        FEATURE_IDS.put("AppliedStereotype_TaggedVaule", Integer.valueOf(30)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLElement_UMLAnnotation", Integer.valueOf(31)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLElement_UMLConstraint", Integer.valueOf(32)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLElement_UMLElement", Integer.valueOf(33)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLElement_UMLElement1", Integer.valueOf(34)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLClassifier_UMLCollaborationUse", Integer.valueOf(35)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLClassifier_UMLOperation", Integer.valueOf(36)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLType_UMLTypedElement", Integer.valueOf(37)); //$NON-NLS-1$
        FEATURE_IDS.put("value", Integer.valueOf(38)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLAssociation_UMLProperty", Integer.valueOf(39)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLAssociation_UMLProperty1", Integer.valueOf(40)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLInstanceSpecification_UMLClassifier", Integer.valueOf(41)); //$NON-NLS-1$
        FEATURE_IDS.put("UMLSlot_UMLProperty", Integer.valueOf(42)); //$NON-NLS-1$
        FEATURE_IDS.put("instance", Integer.valueOf(43)); //$NON-NLS-1$
    }

    // constructors    
    public KernelPackageImpl()
    {
        super();
    }
    public KernelPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    public com.sap.tc.moin.repository.mmi.reflect.RefEnum create___RefEnum(com.sap.tc.moin.repository.mmi.model.EnumerationType enumType, String name) {
        com.sap.tc.moin.repository.mmi.reflect.RefEnum result = null;
        java.lang.String enumName = enumType.getName();
          if (enumName.equals("UMLVisibilityKind")) { //$NON-NLS-1$
            result = euml.generic.kernel.UmlvisibilityKindEnum.forName(name);
          }
          else if (enumName.equals("UMLParamDirectionKind")) { //$NON-NLS-1$
            result = euml.generic.kernel.UmlparamDirectionKindEnum.forName(name);
          }
          else if (enumName.equals("UMLAggregationKind")) { //$NON-NLS-1$
            result = euml.generic.kernel.UmlaggregationKindEnum.forName(name);
          }
        return result;
    }
    // internal structure type creators
    // nested packages
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlelement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAppliedStereotype(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "AppliedStereotype"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getTaggedVaule(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "TaggedVaule"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlannotation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLAnnotation"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlconstraint(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLConstraint"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlnamedElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLNamedElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlnamespace(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLNamespace"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmltype(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLType"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlclassifier(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLClassifier"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmltypedElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLTypedElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlfeature(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLFeature"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlmultiplicityElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLMultiplicityElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlvalueSpecification(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLValueSpecification"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getLiteralValue(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "LiteralValue"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getReferenceValue(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ReferenceValue"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getStringValue(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "StringValue"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlinterface(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLInterface"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlproperty(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLProperty"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlprimitiveType(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLPrimitiveType"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlinstanceValue(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLInstanceValue"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlslot(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLSlot"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlinstanceSpecification(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLInstanceSpecification"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlenumerationLiteral(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLEnumerationLiteral"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlenumeration(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLEnumeration"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlassociation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLAssociation"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlclass(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLClass"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmloperation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLOperation"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlparameter(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLParameter"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getUmlpackage(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "UMLPackage"); //$NON-NLS-1$
    }
    // associations
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlelementAppliedStereotype(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLElement_AppliedStereotype"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAppliedStereotypeTaggedVaule(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "AppliedStereotype_TaggedVaule"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlelementUmlannotation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLElement_UMLAnnotation"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlelementUmlconstraint(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLElement_UMLConstraint"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlelementUmlelement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLElement_UMLElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlelementUmlelement1(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLElement_UMLElement1"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlclassifierUmlcollaborationUse(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLClassifier_UMLCollaborationUse"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlclassifierUmloperation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLClassifier_UMLOperation"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmltypeUmltypedElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLType_UMLTypedElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getValue(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "value"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlassociationUmlproperty(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLAssociation_UMLProperty"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlassociationUmlproperty1(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLAssociation_UMLProperty1"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlinstanceSpecificationUmlclassifier(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLInstanceSpecification_UMLClassifier"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getUmlslotUmlproperty(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "UMLSlot_UMLProperty"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getInstance(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "instance"); //$NON-NLS-1$
    }
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 1:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.AppliedStereotypeImpl")); //$NON-NLS-1$
                case 2:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 3:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.UmlannotationImpl")); //$NON-NLS-1$
                case 4:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.UmlconstraintImpl")); //$NON-NLS-1$
                case 5:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 6:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 7:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 8:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 9:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 10:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 11:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 12:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 13:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.LiteralValueImpl")); //$NON-NLS-1$
                case 14:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.ReferenceValueImpl")); //$NON-NLS-1$
                case 15:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.StringValueImpl")); //$NON-NLS-1$
                case 16:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.UmlinterfaceImpl")); //$NON-NLS-1$
                case 17:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.UmlpropertyImpl")); //$NON-NLS-1$
                case 18:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.UmlprimitiveTypeImpl")); //$NON-NLS-1$
                case 19:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.UmlinstanceValueImpl")); //$NON-NLS-1$
                case 20:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.UmlslotImpl")); //$NON-NLS-1$
                case 21:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.UmlinstanceSpecificationImpl")); //$NON-NLS-1$
                case 22:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.UmlenumerationLiteralImpl")); //$NON-NLS-1$
                case 23:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.UmlenumerationImpl")); //$NON-NLS-1$
                case 24:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.UmlassociationImpl")); //$NON-NLS-1$
                case 25:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.UmlclassImpl")); //$NON-NLS-1$
                case 26:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.UmloperationImpl")); //$NON-NLS-1$
                case 27:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.UmlparameterImpl")); //$NON-NLS-1$
                case 28:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("euml.generic.kernel.__impl.UmlpackageImpl")); //$NON-NLS-1$
                case 29:
                    return new euml.generic.kernel.__impl.UmlelementAppliedStereotypeImpl(workspace, mofId, immediatePackage, metaObject);
                case 30:
                    return new euml.generic.kernel.__impl.AppliedStereotypeTaggedVauleImpl(workspace, mofId, immediatePackage, metaObject);
                case 31:
                    return new euml.generic.kernel.__impl.UmlelementUmlannotationImpl(workspace, mofId, immediatePackage, metaObject);
                case 32:
                    return new euml.generic.kernel.__impl.UmlelementUmlconstraintImpl(workspace, mofId, immediatePackage, metaObject);
                case 33:
                    return new euml.generic.kernel.__impl.UmlelementUmlelementImpl(workspace, mofId, immediatePackage, metaObject);
                case 34:
                    return new euml.generic.kernel.__impl.UmlelementUmlelement1Impl(workspace, mofId, immediatePackage, metaObject);
                case 35:
                    return new euml.generic.kernel.__impl.UmlclassifierUmlcollaborationUseImpl(workspace, mofId, immediatePackage, metaObject);
                case 36:
                    return new euml.generic.kernel.__impl.UmlclassifierUmloperationImpl(workspace, mofId, immediatePackage, metaObject);
                case 37:
                    return new euml.generic.kernel.__impl.UmltypeUmltypedElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 38:
                    return new euml.generic.kernel.__impl.ValueImpl(workspace, mofId, immediatePackage, metaObject);
                case 39:
                    return new euml.generic.kernel.__impl.UmlassociationUmlpropertyImpl(workspace, mofId, immediatePackage, metaObject);
                case 40:
                    return new euml.generic.kernel.__impl.UmlassociationUmlproperty1Impl(workspace, mofId, immediatePackage, metaObject);
                case 41:
                    return new euml.generic.kernel.__impl.UmlinstanceSpecificationUmlclassifierImpl(workspace, mofId, immediatePackage, metaObject);
                case 42:
                    return new euml.generic.kernel.__impl.UmlslotUmlpropertyImpl(workspace, mofId, immediatePackage, metaObject);
                case 43:
                    return new euml.generic.kernel.__impl.InstanceImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    public java.lang.Class<euml.generic.kernel.KernelPackage> get___JmiInterface() {
        return euml.generic.kernel.KernelPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(0);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefPackageAndName rpan = null;
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(29);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
            name = "UMLElement"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.Umlelement"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "AppliedStereotype"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.AppliedStereotype"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "TaggedVaule"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.TaggedVaule"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLAnnotation"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.Umlannotation"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLConstraint"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.Umlconstraint"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLNamedElement"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.UmlnamedElement"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLNamespace"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.Umlnamespace"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLType"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.Umltype"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLClassifier"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.Umlclassifier"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLTypedElement"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.UmltypedElement"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLFeature"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.Umlfeature"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLMultiplicityElement"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.UmlmultiplicityElement"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLValueSpecification"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.UmlvalueSpecification"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "LiteralValue"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.LiteralValue"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ReferenceValue"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.ReferenceValue"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "StringValue"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.StringValue"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLInterface"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.Umlinterface"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLProperty"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.Umlproperty"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLPrimitiveType"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.UmlprimitiveType"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLInstanceValue"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.UmlinstanceValue"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLSlot"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.Umlslot"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLInstanceSpecification"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.UmlinstanceSpecification"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLEnumerationLiteral"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.UmlenumerationLiteral"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLEnumeration"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.Umlenumeration"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLAssociation"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.Umlassociation"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLClass"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.Umlclass"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLOperation"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.Umloperation"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLParameter"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.Umlparameter"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "UMLPackage"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "euml.generic.kernel.Umlpackage"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(15);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefAssociationAndName raan = null;
            name = "UMLElement_AppliedStereotype"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.kernel.UmlelementAppliedStereotype"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "AppliedStereotype_TaggedVaule"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.kernel.AppliedStereotypeTaggedVaule"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLElement_UMLAnnotation"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.kernel.UmlelementUmlannotation"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLElement_UMLConstraint"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.kernel.UmlelementUmlconstraint"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLElement_UMLElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.kernel.UmlelementUmlelement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLElement_UMLElement1"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.kernel.UmlelementUmlelement1"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLClassifier_UMLCollaborationUse"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.kernel.UmlclassifierUmlcollaborationUse"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLClassifier_UMLOperation"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.kernel.UmlclassifierUmloperation"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLType_UMLTypedElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.kernel.UmltypeUmltypedElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "value"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.kernel.Value"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLAssociation_UMLProperty"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.kernel.UmlassociationUmlproperty"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLAssociation_UMLProperty1"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.kernel.UmlassociationUmlproperty1"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLInstanceSpecification_UMLClassifier"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.kernel.UmlinstanceSpecificationUmlclassifier"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "UMLSlot_UMLProperty"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.kernel.UmlslotUmlproperty"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "instance"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "euml.generic.kernel.Instance"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<euml.generic.kernel.__impl.KernelPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new euml.generic.kernel.__impl.KernelPackageWrapper(conn, this, synchronize);
    }

}