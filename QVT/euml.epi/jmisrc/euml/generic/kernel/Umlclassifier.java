/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.generic.kernel;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface Umlclassifier extends euml.generic.kernel.Umltype,euml.generic.kernel.Umlnamespace {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, euml.generic.kernel.Umlclassifier> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, euml.generic.kernel.Umlclassifier>("497EC4E1006DAC00EC4C11DDCF49000E35A783E4", "sap.com/moin/mm/euml", "EUML", "Generic", "Kernel", "UMLClassifier"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 

    
    // attributes
    public boolean isAbstract() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAbstract(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public java.util.List<euml.generic.usecases.UmluseCase> getTheUseCase() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public euml.generic.compositestructures.UmlcollaborationUse getRepresentation() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setRepresentation(euml.generic.compositestructures.UmlcollaborationUse newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public euml.generic.commonbehaviors.Umlbehaviror getTheclassifierbehavior() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setTheclassifierbehavior(euml.generic.commonbehaviors.Umlbehaviror newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<euml.generic.kernel.Umloperation> getTheRaisingOperations() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // operations
    public java.util.List<euml.generic.commonbehaviors.Umlbehaviror> getownedBehavior() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<euml.generic.commonbehaviors.Umltrigger> getownedTriggers() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<euml.generic.compositestructures.UmlcollaborationUse> getcollaborationUsages() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<euml.generic.kernel.Umlclassifier> gettheBaseClassifiers() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<euml.generic.relationships.Umlgeneralization> getgeneralizations() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>mediniIdentifier</code> attribute.
         * @return  the descriptor for the <code>mediniIdentifier</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,de.ikv.medini.kernel.MediniObject,java.lang.String> MEDINI_IDENTIFIER( ) {
            return de.ikv.medini.kernel.MediniObject.DESCRIPTORS.MEDINI_IDENTIFIER( );
        }
        /**
         * Returns the descriptor for the <code>typeCode</code> attribute.
         * @return  the descriptor for the <code>typeCode</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.Umlelement,java.lang.String> TYPE_CODE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.TYPE_CODE( );
        }
        /**
         * Returns the descriptor for the <code>stereotype</code> attribute.
         * @return  the descriptor for the <code>stereotype</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.Umlelement,java.lang.String> STEREOTYPE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.STEREOTYPE( );
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.UmlnamedElement,java.lang.String> NAME( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.UmlnamedElement,euml.generic.kernel.UmlvisibilityKind> VISIBILITY( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.VISIBILITY( );
        }
        /**
         * Returns the descriptor for the <code>comment</code> attribute.
         * @return  the descriptor for the <code>comment</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.UmlnamedElement,java.lang.String> COMMENT( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.COMMENT( );
        }
        /**
         * Returns the descriptor for the <code>alias</code> attribute.
         * @return  the descriptor for the <code>alias</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.UmlnamedElement,java.lang.String> ALIAS( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.ALIAS( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.Umlclassifier,java.lang.Boolean> __isAbstract;
        /**
         * Returns the descriptor for the <code>isAbstract</code> attribute.
         * @return  the descriptor for the <code>isAbstract</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.Umlclassifier,java.lang.Boolean> IS_ABSTRACT( ) {
            if ( __isAbstract == null ) {
                __isAbstract = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.Umlclassifier,java.lang.Boolean>( "497EE409926B9D30EC5E11DDAEA6000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "Kernel", "UMLClassifier", "isAbstract" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __isAbstract;
        }
        /**
         * Returns the descriptor for the <code>theRepresentative</code> reference.
         * @return  the descriptor for the <code>theRepresentative</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.presentation.graphic.Representaive>> THE_REPRESENTATIVE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_REPRESENTATIVE( );
        }
        /**
         * Returns the descriptor for the <code>theRelationshipOfSource</code> reference.
         * @return  the descriptor for the <code>theRelationshipOfSource</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.relationships.UmldirectedRelationship>> THE_RELATIONSHIP_OF_SOURCE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_RELATIONSHIP_OF_SOURCE( );
        }
        /**
         * Returns the descriptor for the <code>targettrace</code> reference.
         * @return  the descriptor for the <code>targettrace</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.Umltrace>> TARGETTRACE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.TARGETTRACE( );
        }
        /**
         * Returns the descriptor for the <code>sourcetrace</code> reference.
         * @return  the descriptor for the <code>sourcetrace</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.Umltrace>> SOURCETRACE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.SOURCETRACE( );
        }
        /**
         * Returns the descriptor for the <code>relationships</code> reference.
         * @return  the descriptor for the <code>relationships</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.Umlrelationship>> RELATIONSHIPS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.RELATIONSHIPS( );
        }
        /**
         * Returns the descriptor for the <code>theRelationshipOfTarget</code> reference.
         * @return  the descriptor for the <code>theRelationshipOfTarget</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.UmldirectedRelationship>> THE_RELATIONSHIP_OF_TARGET( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_RELATIONSHIP_OF_TARGET( );
        }
        /**
         * Returns the descriptor for the <code>theStereotype</code> reference.
         * @return  the descriptor for the <code>theStereotype</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,euml.generic.kernel.AppliedStereotype> THE_STEREOTYPE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_STEREOTYPE( );
        }
        /**
         * Returns the descriptor for the <code>theAnnotation</code> reference.
         * @return  the descriptor for the <code>theAnnotation</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlannotation>> THE_ANNOTATION( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_ANNOTATION( );
        }
        /**
         * Returns the descriptor for the <code>theConstraint</code> reference.
         * @return  the descriptor for the <code>theConstraint</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlconstraint>> THE_CONSTRAINT( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_CONSTRAINT( );
        }
        /**
         * Returns the descriptor for the <code>theUtilizedElements</code> reference.
         * @return  the descriptor for the <code>theUtilizedElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlelement>> THE_UTILIZED_ELEMENTS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_UTILIZED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>theUtilisingElements</code> reference.
         * @return  the descriptor for the <code>theUtilisingElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.kernel.Umlelement>> THE_UTILISING_ELEMENTS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_UTILISING_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>theOwnedElements</code> reference.
         * @return  the descriptor for the <code>theOwnedElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlelement>> THE_OWNED_ELEMENTS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_OWNED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>theOwner</code> reference.
         * @return  the descriptor for the <code>theOwner</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,euml.generic.kernel.Umlelement> THE_OWNER( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_OWNER( );
        }
        /**
         * Returns the descriptor for the <code>thetypedelement</code> reference.
         * @return  the descriptor for the <code>thetypedelement</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umltype,java.util.List<euml.generic.kernel.UmltypedElement>> THETYPEDELEMENT( ) {
            return euml.generic.kernel.Umltype.DESCRIPTORS.THETYPEDELEMENT( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.usecases.UmluseCase>> __theUseCase;
        /**
         * Returns the descriptor for the <code>theUseCase</code> reference.
         * @return  the descriptor for the <code>theUseCase</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.usecases.UmluseCase>> THE_USE_CASE( ) {
            if ( __theUseCase == null ) {
                __theUseCase = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.usecases.UmluseCase>>( "498656FE34A07393F0CF11DDC409000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "Kernel", "UMLClassifier", "theUseCase" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __theUseCase;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlclassifier,euml.generic.compositestructures.UmlcollaborationUse> __representation;
        /**
         * Returns the descriptor for the <code>representation</code> reference.
         * @return  the descriptor for the <code>representation</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlclassifier,euml.generic.compositestructures.UmlcollaborationUse> REPRESENTATION( ) {
            if ( __representation == null ) {
                __representation = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlclassifier,euml.generic.compositestructures.UmlcollaborationUse>( "49866DC6C8CC3383F0DC11DD8CE5000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "Kernel", "UMLClassifier", "representation" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __representation;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlclassifier,euml.generic.commonbehaviors.Umlbehaviror> __theclassifierbehavior;
        /**
         * Returns the descriptor for the <code>theclassifierbehavior</code> reference.
         * @return  the descriptor for the <code>theclassifierbehavior</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlclassifier,euml.generic.commonbehaviors.Umlbehaviror> THECLASSIFIERBEHAVIOR( ) {
            if ( __theclassifierbehavior == null ) {
                __theclassifierbehavior = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlclassifier,euml.generic.commonbehaviors.Umlbehaviror>( "49866EC4608C0290F0DD11DDA686000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "Kernel", "UMLClassifier", "theclassifierbehavior" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __theclassifierbehavior;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.kernel.Umloperation>> __theRaisingOperations;
        /**
         * Returns the descriptor for the <code>theRaisingOperations</code> reference.
         * @return  the descriptor for the <code>theRaisingOperations</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.kernel.Umloperation>> THE_RAISING_OPERATIONS( ) {
            if ( __theRaisingOperations == null ) {
                __theRaisingOperations = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.kernel.Umloperation>>( "49866F37A4A52D32F0DD11DDC83C000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "Kernel", "UMLClassifier", "theRaisingOperations" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __theRaisingOperations;
        }
        /**
         * Returns the descriptor for the <code>deduceTypeCodeAndStereotype</code> operation.
         * @return  the descriptor for the <code>deduceTypeCodeAndStereotype</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlelement,java.lang.Void> DEDUCE_TYPE_CODE_AND_STEREOTYPE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.DEDUCE_TYPE_CODE_AND_STEREOTYPE( );
        }
        /**
         * Returns the descriptor for the <code>deleteElement</code> operation.
         * @return  the descriptor for the <code>deleteElement</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlelement,java.lang.Void> DELETE_ELEMENT( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.DELETE_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>getqualifiedName</code> operation.
         * @return  the descriptor for the <code>getqualifiedName</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.UmlnamedElement,java.util.List<java.lang.String>> GETQUALIFIED_NAME( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.GETQUALIFIED_NAME( );
        }
        /**
         * Returns the descriptor for the <code>getqualifiedAlias</code> operation.
         * @return  the descriptor for the <code>getqualifiedAlias</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.UmlnamedElement,java.util.List<java.lang.String>> GETQUALIFIED_ALIAS( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.GETQUALIFIED_ALIAS( );
        }
        /**
         * Returns the descriptor for the <code>gettheNamespace</code> operation.
         * @return  the descriptor for the <code>gettheNamespace</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.UmlnamedElement,euml.generic.kernel.Umlnamespace> GETTHE_NAMESPACE( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.GETTHE_NAMESPACE( );
        }
        /**
         * Returns the descriptor for the <code>gettheContainedElements</code> operation.
         * @return  the descriptor for the <code>gettheContainedElements</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlnamespace,java.util.List<euml.generic.kernel.UmlnamedElement>> GETTHE_CONTAINED_ELEMENTS( ) {
            return euml.generic.kernel.Umlnamespace.DESCRIPTORS.GETTHE_CONTAINED_ELEMENTS( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.commonbehaviors.Umlbehaviror>> __getownedBehavior;
        /**
         * Returns the descriptor for the <code>getownedBehavior</code> operation.
         * @return  the descriptor for the <code>getownedBehavior</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.commonbehaviors.Umlbehaviror>> GETOWNED_BEHAVIOR( ) {
            if ( __getownedBehavior == null ) {
                __getownedBehavior = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.commonbehaviors.Umlbehaviror>>( "497EE100C351FEA0EC5C11DDBC0C000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "Kernel", "UMLClassifier", "getownedBehavior" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __getownedBehavior;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.commonbehaviors.Umltrigger>> __getownedTriggers;
        /**
         * Returns the descriptor for the <code>getownedTriggers</code> operation.
         * @return  the descriptor for the <code>getownedTriggers</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.commonbehaviors.Umltrigger>> GETOWNED_TRIGGERS( ) {
            if ( __getownedTriggers == null ) {
                __getownedTriggers = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.commonbehaviors.Umltrigger>>( "497EE12DDDCC4100EC5C11DDAABE000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "Kernel", "UMLClassifier", "getownedTriggers" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __getownedTriggers;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.compositestructures.UmlcollaborationUse>> __getcollaborationUsages;
        /**
         * Returns the descriptor for the <code>getcollaborationUsages</code> operation.
         * @return  the descriptor for the <code>getcollaborationUsages</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.compositestructures.UmlcollaborationUse>> GETCOLLABORATION_USAGES( ) {
            if ( __getcollaborationUsages == null ) {
                __getcollaborationUsages = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.compositestructures.UmlcollaborationUse>>( "497EE1DF483D1820EC5D11DD893B000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "Kernel", "UMLClassifier", "getcollaborationUsages" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __getcollaborationUsages;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.kernel.Umlclassifier>> __gettheBaseClassifiers;
        /**
         * Returns the descriptor for the <code>gettheBaseClassifiers</code> operation.
         * @return  the descriptor for the <code>gettheBaseClassifiers</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.kernel.Umlclassifier>> GETTHE_BASE_CLASSIFIERS( ) {
            if ( __gettheBaseClassifiers == null ) {
                __gettheBaseClassifiers = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.kernel.Umlclassifier>>( "497EE30AFA04B8B0EC5D11DDAC9C000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "Kernel", "UMLClassifier", "gettheBaseClassifiers" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __gettheBaseClassifiers;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.relationships.Umlgeneralization>> __getgeneralizations;
        /**
         * Returns the descriptor for the <code>getgeneralizations</code> operation.
         * @return  the descriptor for the <code>getgeneralizations</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.relationships.Umlgeneralization>> GETGENERALIZATIONS( ) {
            if ( __getgeneralizations == null ) {
                __getgeneralizations = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlclassifier,java.util.List<euml.generic.relationships.Umlgeneralization>>( "497EE3E47C033990EC5E11DDBB66000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "Kernel", "UMLClassifier", "getgeneralizations" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __getgeneralizations;
        }
    }
}    