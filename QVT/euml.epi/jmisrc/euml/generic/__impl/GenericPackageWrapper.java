/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.generic.__impl;

public class GenericPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<euml.generic.__impl.GenericPackageImpl> implements euml.generic.GenericPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The GenericPackage wrapper
     */
    public GenericPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, euml.generic.__impl.GenericPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private euml.generic.__impl.GenericPackageImpl getCastWrappedObject() {
        return (euml.generic.__impl.GenericPackageImpl) getWrappedObject();
    }
    
    public euml.generic.__impl.GenericPackageImpl unwrap() {
        return (euml.generic.__impl.GenericPackageImpl) getWrappedObject();
    }
    
    public euml.generic.kernel.KernelPackage getKernel()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.kernel.KernelPackage) wrapResult(getCastWrappedObject().getKernel(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.kernel.KernelPackage) wrapResult(getCastWrappedObject().getKernel(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.relationships.RelationshipsPackage getRelationships()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.relationships.RelationshipsPackage) wrapResult(getCastWrappedObject().getRelationships(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.relationships.RelationshipsPackage) wrapResult(getCastWrappedObject().getRelationships(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.components.ComponentsPackage getComponents()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.components.ComponentsPackage) wrapResult(getCastWrappedObject().getComponents(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.components.ComponentsPackage) wrapResult(getCastWrappedObject().getComponents(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.commonbehaviors.CommonBehaviorsPackage getCommonBehaviors()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.commonbehaviors.CommonBehaviorsPackage) wrapResult(getCastWrappedObject().getCommonBehaviors(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.commonbehaviors.CommonBehaviorsPackage) wrapResult(getCastWrappedObject().getCommonBehaviors(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.compositestructures.CompositeStructuresPackage getCompositeStructures()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.compositestructures.CompositeStructuresPackage) wrapResult(getCastWrappedObject().getCompositeStructures(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.compositestructures.CompositeStructuresPackage) wrapResult(getCastWrappedObject().getCompositeStructures(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.usecases.UseCasesPackage getUseCases()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.usecases.UseCasesPackage) wrapResult(getCastWrappedObject().getUseCases(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.usecases.UseCasesPackage) wrapResult(getCastWrappedObject().getUseCases(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.actions.ActionsPackage getActions()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.actions.ActionsPackage) wrapResult(getCastWrappedObject().getActions(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.actions.ActionsPackage) wrapResult(getCastWrappedObject().getActions(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.activities.ActivitiesPackage getActivities()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.activities.ActivitiesPackage) wrapResult(getCastWrappedObject().getActivities(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.activities.ActivitiesPackage) wrapResult(getCastWrappedObject().getActivities(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public euml.generic.interactions.InteractionsPackage getInteractions()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (euml.generic.interactions.InteractionsPackage) wrapResult(getCastWrappedObject().getInteractions(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (euml.generic.interactions.InteractionsPackage) wrapResult(getCastWrappedObject().getInteractions(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    public java.lang.Class<euml.generic.GenericPackage> get___JmiInterface() {
        return euml.generic.GenericPackage.class;
    }
    
    protected String metaObjectToString() {
        return "euml.generic.GenericPackage (Java Type)\nEUML.Generic (MOF Type)"; //$NON-NLS-1$
    }
}