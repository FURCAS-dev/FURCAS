/**
 * Generated by the MOIN Generator Version 3.0
 **/

package euml.generic.actions;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface UmlcallAction extends euml.generic.actions.UmlinvocationAction {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, euml.generic.actions.UmlcallAction> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, euml.generic.actions.UmlcallAction>("497EF4B380E26EE0EC6811DDC994000E35A783E4", "sap.com/moin/mm/euml", "EUML", "Generic", "Actions", "UMLCallAction"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 

    
    // attributes
    public boolean isSynchronous() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setSynchronous(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // operations
    public java.util.List<euml.generic.activities.UmloutputPin> getresult() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>mediniIdentifier</code> attribute.
         * @return  the descriptor for the <code>mediniIdentifier</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,de.ikv.medini.kernel.MediniObject,java.lang.String> MEDINI_IDENTIFIER( ) {
            return de.ikv.medini.kernel.MediniObject.DESCRIPTORS.MEDINI_IDENTIFIER( );
        }
        /**
         * Returns the descriptor for the <code>typeCode</code> attribute.
         * @return  the descriptor for the <code>typeCode</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.Umlelement,java.lang.String> TYPE_CODE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.TYPE_CODE( );
        }
        /**
         * Returns the descriptor for the <code>stereotype</code> attribute.
         * @return  the descriptor for the <code>stereotype</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.Umlelement,java.lang.String> STEREOTYPE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.STEREOTYPE( );
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.UmlnamedElement,java.lang.String> NAME( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.UmlnamedElement,euml.generic.kernel.UmlvisibilityKind> VISIBILITY( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.VISIBILITY( );
        }
        /**
         * Returns the descriptor for the <code>comment</code> attribute.
         * @return  the descriptor for the <code>comment</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.UmlnamedElement,java.lang.String> COMMENT( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.COMMENT( );
        }
        /**
         * Returns the descriptor for the <code>alias</code> attribute.
         * @return  the descriptor for the <code>alias</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.kernel.UmlnamedElement,java.lang.String> ALIAS( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.ALIAS( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.actions.UmlcallAction,java.lang.Boolean> __isSynchronous;
        /**
         * Returns the descriptor for the <code>isSynchronous</code> attribute.
         * @return  the descriptor for the <code>isSynchronous</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.actions.UmlcallAction,java.lang.Boolean> IS_SYNCHRONOUS( ) {
            if ( __isSynchronous == null ) {
                __isSynchronous = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,euml.generic.actions.UmlcallAction,java.lang.Boolean>( "497EF4DF9B689820EC6811DDA7B1000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "Actions", "UMLCallAction", "isSynchronous" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __isSynchronous;
        }
        /**
         * Returns the descriptor for the <code>theRepresentative</code> reference.
         * @return  the descriptor for the <code>theRepresentative</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.presentation.graphic.Representaive>> THE_REPRESENTATIVE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_REPRESENTATIVE( );
        }
        /**
         * Returns the descriptor for the <code>theRelationshipOfSource</code> reference.
         * @return  the descriptor for the <code>theRelationshipOfSource</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.relationships.UmldirectedRelationship>> THE_RELATIONSHIP_OF_SOURCE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_RELATIONSHIP_OF_SOURCE( );
        }
        /**
         * Returns the descriptor for the <code>targettrace</code> reference.
         * @return  the descriptor for the <code>targettrace</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.Umltrace>> TARGETTRACE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.TARGETTRACE( );
        }
        /**
         * Returns the descriptor for the <code>sourcetrace</code> reference.
         * @return  the descriptor for the <code>sourcetrace</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.Umltrace>> SOURCETRACE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.SOURCETRACE( );
        }
        /**
         * Returns the descriptor for the <code>relationships</code> reference.
         * @return  the descriptor for the <code>relationships</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.Umlrelationship>> RELATIONSHIPS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.RELATIONSHIPS( );
        }
        /**
         * Returns the descriptor for the <code>theRelationshipOfTarget</code> reference.
         * @return  the descriptor for the <code>theRelationshipOfTarget</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.relationships.UmldirectedRelationship>> THE_RELATIONSHIP_OF_TARGET( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_RELATIONSHIP_OF_TARGET( );
        }
        /**
         * Returns the descriptor for the <code>theStereotype</code> reference.
         * @return  the descriptor for the <code>theStereotype</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,euml.generic.kernel.AppliedStereotype> THE_STEREOTYPE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_STEREOTYPE( );
        }
        /**
         * Returns the descriptor for the <code>theAnnotation</code> reference.
         * @return  the descriptor for the <code>theAnnotation</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlannotation>> THE_ANNOTATION( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_ANNOTATION( );
        }
        /**
         * Returns the descriptor for the <code>theConstraint</code> reference.
         * @return  the descriptor for the <code>theConstraint</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlconstraint>> THE_CONSTRAINT( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_CONSTRAINT( );
        }
        /**
         * Returns the descriptor for the <code>theUtilizedElements</code> reference.
         * @return  the descriptor for the <code>theUtilizedElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlelement>> THE_UTILIZED_ELEMENTS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_UTILIZED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>theUtilisingElements</code> reference.
         * @return  the descriptor for the <code>theUtilisingElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.Collection<euml.generic.kernel.Umlelement>> THE_UTILISING_ELEMENTS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_UTILISING_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>theOwnedElements</code> reference.
         * @return  the descriptor for the <code>theOwnedElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,java.util.List<euml.generic.kernel.Umlelement>> THE_OWNED_ELEMENTS( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_OWNED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>theOwner</code> reference.
         * @return  the descriptor for the <code>theOwner</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.kernel.Umlelement,euml.generic.kernel.Umlelement> THE_OWNER( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.THE_OWNER( );
        }
        /**
         * Returns the descriptor for the <code>theIncomingEdge</code> reference.
         * @return  the descriptor for the <code>theIncomingEdge</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.activities.UmlactivityNode,java.util.List<euml.generic.activities.UmlactivityEdge>> THE_INCOMING_EDGE( ) {
            return euml.generic.activities.UmlactivityNode.DESCRIPTORS.THE_INCOMING_EDGE( );
        }
        /**
         * Returns the descriptor for the <code>theOutgoingEdge</code> reference.
         * @return  the descriptor for the <code>theOutgoingEdge</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.activities.UmlactivityNode,java.util.List<euml.generic.activities.UmlactivityEdge>> THE_OUTGOING_EDGE( ) {
            return euml.generic.activities.UmlactivityNode.DESCRIPTORS.THE_OUTGOING_EDGE( );
        }
        /**
         * Returns the descriptor for the <code>thegroupofthenode</code> reference.
         * @return  the descriptor for the <code>thegroupofthenode</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,euml.generic.activities.UmlactivityNode,euml.generic.activities.UmlactivityGroup> THEGROUPOFTHENODE( ) {
            return euml.generic.activities.UmlactivityNode.DESCRIPTORS.THEGROUPOFTHENODE( );
        }
        /**
         * Returns the descriptor for the <code>deduceTypeCodeAndStereotype</code> operation.
         * @return  the descriptor for the <code>deduceTypeCodeAndStereotype</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlelement,java.lang.Void> DEDUCE_TYPE_CODE_AND_STEREOTYPE( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.DEDUCE_TYPE_CODE_AND_STEREOTYPE( );
        }
        /**
         * Returns the descriptor for the <code>deleteElement</code> operation.
         * @return  the descriptor for the <code>deleteElement</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.Umlelement,java.lang.Void> DELETE_ELEMENT( ) {
            return euml.generic.kernel.Umlelement.DESCRIPTORS.DELETE_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>getqualifiedName</code> operation.
         * @return  the descriptor for the <code>getqualifiedName</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.UmlnamedElement,java.util.List<java.lang.String>> GETQUALIFIED_NAME( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.GETQUALIFIED_NAME( );
        }
        /**
         * Returns the descriptor for the <code>getqualifiedAlias</code> operation.
         * @return  the descriptor for the <code>getqualifiedAlias</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.UmlnamedElement,java.util.List<java.lang.String>> GETQUALIFIED_ALIAS( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.GETQUALIFIED_ALIAS( );
        }
        /**
         * Returns the descriptor for the <code>gettheNamespace</code> operation.
         * @return  the descriptor for the <code>gettheNamespace</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.kernel.UmlnamedElement,euml.generic.kernel.Umlnamespace> GETTHE_NAMESPACE( ) {
            return euml.generic.kernel.UmlnamedElement.DESCRIPTORS.GETTHE_NAMESPACE( );
        }
        /**
         * Returns the descriptor for the <code>getinput</code> operation.
         * @return  the descriptor for the <code>getinput</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.activities.Umlaction,java.util.List<euml.generic.activities.UmlinputPin>> GETINPUT( ) {
            return euml.generic.activities.Umlaction.DESCRIPTORS.GETINPUT( );
        }
        /**
         * Returns the descriptor for the <code>getoutput</code> operation.
         * @return  the descriptor for the <code>getoutput</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.activities.Umlaction,java.util.List<euml.generic.activities.UmloutputPin>> GETOUTPUT( ) {
            return euml.generic.activities.Umlaction.DESCRIPTORS.GETOUTPUT( );
        }
        /**
         * Returns the descriptor for the <code>getownedHandlers</code> operation.
         * @return  the descriptor for the <code>getownedHandlers</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.activities.Umlaction,java.util.List<euml.generic.activities.UmlexceptionHandler>> GETOWNED_HANDLERS( ) {
            return euml.generic.activities.Umlaction.DESCRIPTORS.GETOWNED_HANDLERS( );
        }
        /**
         * Returns the descriptor for the <code>getargument</code> operation.
         * @return  the descriptor for the <code>getargument</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.actions.UmlinvocationAction,java.util.List<euml.generic.activities.UmlinputPin>> GETARGUMENT( ) {
            return euml.generic.actions.UmlinvocationAction.DESCRIPTORS.GETARGUMENT( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.actions.UmlcallAction,java.util.List<euml.generic.activities.UmloutputPin>> __getresult;
        /**
         * Returns the descriptor for the <code>getresult</code> operation.
         * @return  the descriptor for the <code>getresult</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.actions.UmlcallAction,java.util.List<euml.generic.activities.UmloutputPin>> GETRESULT( ) {
            if ( __getresult == null ) {
                __getresult = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,euml.generic.actions.UmlcallAction,java.util.List<euml.generic.activities.UmloutputPin>>( "497EF4C88D8A7C00EC6811DDB789000E35A783E4", "sap.com/moin/mm/euml", new java.lang.String[] { "EUML", "Generic", "Actions", "UMLCallAction", "getresult" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __getresult;
        }
    }
}    