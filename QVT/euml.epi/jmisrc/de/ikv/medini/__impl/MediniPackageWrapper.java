/**
 * Generated by the MOIN Generator Version 3.0
 **/

package de.ikv.medini.__impl;

public class MediniPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<de.ikv.medini.__impl.MediniPackageImpl> implements de.ikv.medini.MediniPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The MediniPackage wrapper
     */
    public MediniPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, de.ikv.medini.__impl.MediniPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private de.ikv.medini.__impl.MediniPackageImpl getCastWrappedObject() {
        return (de.ikv.medini.__impl.MediniPackageImpl) getWrappedObject();
    }
    
    public de.ikv.medini.__impl.MediniPackageImpl unwrap() {
        return (de.ikv.medini.__impl.MediniPackageImpl) getWrappedObject();
    }
    
    public de.ikv.medini.kernel.KernelPackage getKernel()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (de.ikv.medini.kernel.KernelPackage) wrapResult(getCastWrappedObject().getKernel(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (de.ikv.medini.kernel.KernelPackage) wrapResult(getCastWrappedObject().getKernel(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    @SuppressWarnings("unchecked")
    public java.lang.Class<de.ikv.medini.MediniPackage> get___JmiInterface() {
        return de.ikv.medini.MediniPackage.class;
    }
    
    protected String metaObjectToString() {
        return "de.ikv.medini.MediniPackage (Java Type)\nde.ikv.medini (MOF Type)"; //$NON-NLS-1$
    }
}