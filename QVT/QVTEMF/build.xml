<project name="QVTEMF" default="clean.distribute" basedir=".">

	<property file="${basedir}/build.properties" /> 
	<property file="${basedir}/../build.properties" />
	<property file="${basedir}/../build.properties.default" />

	<import file="${OCLBase}/generic-build.xml" />

	<target name="call.dependent">
		<ant antfile="${oclEmf.dir}/build.xml" target="${targetname}" />
		<ant antfile="${qvtCommon.dir}/build.xml" target="${targetname}" />
	</target>

	<path id="project.src.path">
		<pathelement location="${qvtEmf.src.dir}" />
	</path>
	
	<fileset id="distribution.files" dir="${qvtEmf.temp.dir}">
		<!-- cripple QVT execution -->
		<exclude name="**/de/ikv/medini/qvt/execution/*" if="brand.cripple"/>
		<!-- cripple OCL execution -->
		<exclude name="**/RuntimeEnvironmentImpl.*" if="brand.cripple"/>
		<!-- Only copy java source if property "brand.source" is set -->
		<exclude name="**/*.java" unless="brand.source"/>
	</fileset>

	<target name="clean">
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${qvtEmf.dist.dir}" includes="**/*" />
			<fileset dir="${qvtEmf.temp.dir}" includes="**/*" />
			<fileset dir="${qvtEmf.bin.dir}" includes="**/*" />
		</delete>
	</target>
	
	<target name="init">
		<mkdir dir="${qvtEmf.dist.dir}" />
		<mkdir dir="${qvtEmf.bin.dir}" />
		<mkdir dir="${qvtEmf.temp.dir}" />
	</target>

	<target name="compile" description="Compiles the java sources">
		<javac destdir="${qvtEmf.bin.dir}" deprecation="${deprecation.warnings}" debug="${build.compiler.debug}" encoding="ISO-8859-1" source="1.5" target="1.5">
			<classpath refid="qvtEmf.class.path" />
			<src refid="project.src.path" />
		</javac>
	</target>

	<target name="pack" depends="prepare.pack,prepare.src.pack,pack.jar,pack.dll,external-distribute">
	</target>
	
	<target name="prepare.pack">
		<copy todir="${qvtEmf.temp.dir}">
			<fileset dir="${qvtEmf.bin.dir}" />
			<fileset dir="${oclEmf.bin.dir}" />
			<fileset dir="${oclCommon.bin.dir}" />
		</copy>
		<copy todir="${qvtEmf.temp.dir}" overwrite="true">
			<fileset dir="${qvtCommon.bin.dir}" />
		</copy>
		<unzip dest="${qvtEmf.temp.dir}">
			<fileset dir="${oclCommon.lib.dir}" includes="**/*.jar" />
			<fileset dir="${qvtCommon.lib.dir}" includes="**/*.jar" />
		</unzip>
	</target>
	
	<target name="pack.jar" depends="pack.jar.withmanifest,pack.jar.withoutmanifest">
	</target>

	<target name="check.manifest">
		<available file="${basedir}/META-INF/MANIFEST.MF" property="manifest.exist" />
	</target>

	<target name="pack.jar.withmanifest" if="manifest.exist" depends="check.manifest">
		<jar destfile="${qvtEmf.dist.dir}/qvtemf.jar" manifest="${basedir}/META-INF/MANIFEST.MF">
			<fileset refid="distribution.files"/>
		</jar>
	</target>

	<target name="pack.jar.withoutmanifest" unless="manifest.exist" depends="check.manifest">
		<jar destfile="${qvtEmf.dist.dir}/qvtemf.jar" >
			<fileset refid="distribution.files"/>
		</jar>
	</target>

	<target name="pack.dll">
		<!-- Note to include EMF libraries -->
		<!--
		<exec executable="${ikvm.dir}/bin/ikvmc.exe">
			<arg line=" -target:library ${qvtEmf.dist.dir}/qvtemf.jar -out:${qvtEmf.dist.dir}/qvtemfd.dll" />
		</exec>
		-->
	</target>

	<target name="external-distribute" if="build.artifactsDir">
		<copy todir="${build.artifactsDir}">
			<fileset dir="${qvtEmf.dist.dir}" includes="**/*.jar" />
		</copy>
	</target>

	<target name="prepare.src.pack" if="brand.source">
		<copy todir="${qvtEmf.temp.dir}">
			<fileset dir="${qvtEmf.src.dir}" includes="**/*.java"/>
			<fileset dir="${oclEmf.src.dir}" includes="**/*.java" />
			<fileset dir="${oclCommon.src.dir}" includes="**/*.java" />
			<fileset dir="${oclCommon.srcgen.dir}" includes="**/*.java" />
		</copy>
		<copy todir="${qvtEmf.temp.dir}" overwrite="true">
			<fileset dir="${qvtCommon.src.dir}" includes="**/*.java" />
			<fileset dir="${qvtCommon.srcgen.dir}" includes="**/*.java" />
		</copy>
	</target>

	<target name="brand.cripple">
		<property name="brand.cripple" value="true" />
	</target>

	<target name="brand.source">
		<property name="brand.source" value="true" />
	</target>

	<target name="incremental.distribute.cripple" depends="brand.cripple,incremental.distribute">
	</target>

	<target name="clean.distribute.cripple" depends="brand.cripple,clean.distribute">
	</target>
	
	<target name="clean.distribute.with.src" depends="brand.source,clean.distribute">
	</target>
	
	<target name="incremental.distribute.with.src" depends="brand.source,incremental.distribute">
	</target>

</project>
