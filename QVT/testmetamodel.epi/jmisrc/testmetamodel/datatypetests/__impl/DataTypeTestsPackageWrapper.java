/**
 * Generated by the MOIN Generator Version 3.0
 **/

package testmetamodel.datatypetests.__impl;

public class DataTypeTestsPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<testmetamodel.datatypetests.__impl.DataTypeTestsPackageImpl> implements testmetamodel.datatypetests.DataTypeTestsPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The DataTypeTestsPackage wrapper
     */
    public DataTypeTestsPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, testmetamodel.datatypetests.__impl.DataTypeTestsPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private testmetamodel.datatypetests.__impl.DataTypeTestsPackageImpl getCastWrappedObject() {
        return (testmetamodel.datatypetests.__impl.DataTypeTestsPackageImpl) getWrappedObject();
    }
    
    public testmetamodel.datatypetests.__impl.DataTypeTestsPackageImpl unwrap() {
        return (testmetamodel.datatypetests.__impl.DataTypeTestsPackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getEnumerationTest()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getEnumerationTest(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getEnumerationTest(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getStructureTest()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getStructureTest(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getStructureTest(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    public testmetamodel.datatypetests.StructureTestType createStructureTestType(com.sap.tc.moin.repository.mmi.descriptors.StructureFieldContainer<? super testmetamodel.datatypetests.StructureTestType> structureFieldContainer) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return wrapResult(getCastWrappedObject().createStructureTestType(connection, structureFieldContainer));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return wrapResult(getCastWrappedObject().createStructureTestType(connection, structureFieldContainer));
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

    
    public java.lang.Class<testmetamodel.datatypetests.DataTypeTestsPackage> get___JmiInterface() {
        return testmetamodel.datatypetests.DataTypeTestsPackage.class;
    }
    
    protected String metaObjectToString() {
        return "testmetamodel.datatypetests.DataTypeTestsPackage (Java Type)\nTestMetaModel.DataTypeTests (MOF Type)"; //$NON-NLS-1$
    }
}