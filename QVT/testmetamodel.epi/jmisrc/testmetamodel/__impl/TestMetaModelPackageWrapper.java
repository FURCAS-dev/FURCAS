/**
 * Generated by the MOIN Generator Version 3.0
 **/

package testmetamodel.__impl;

public class TestMetaModelPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<testmetamodel.__impl.TestMetaModelPackageImpl> implements testmetamodel.TestMetaModelPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The TestMetaModelPackage wrapper
     */
    public TestMetaModelPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, testmetamodel.__impl.TestMetaModelPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private testmetamodel.__impl.TestMetaModelPackageImpl getCastWrappedObject() {
        return (testmetamodel.__impl.TestMetaModelPackageImpl) getWrappedObject();
    }
    
    public testmetamodel.__impl.TestMetaModelPackageImpl unwrap() {
        return (testmetamodel.__impl.TestMetaModelPackageImpl) getWrappedObject();
    }
    
    public testmetamodel.classifiertest.ClassifierTestPackage getClassifierTest()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (testmetamodel.classifiertest.ClassifierTestPackage) wrapResult(getCastWrappedObject().getClassifierTest(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (testmetamodel.classifiertest.ClassifierTestPackage) wrapResult(getCastWrappedObject().getClassifierTest(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public testmetamodel.datatypetests.DataTypeTestsPackage getDataTypeTests()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (testmetamodel.datatypetests.DataTypeTestsPackage) wrapResult(getCastWrappedObject().getDataTypeTests(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (testmetamodel.datatypetests.DataTypeTestsPackage) wrapResult(getCastWrappedObject().getDataTypeTests(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public testmetamodel.primitivetypestest.PrimitiveTypesTestPackage getPrimitiveTypesTest()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (testmetamodel.primitivetypestest.PrimitiveTypesTestPackage) wrapResult(getCastWrappedObject().getPrimitiveTypesTest(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (testmetamodel.primitivetypestest.PrimitiveTypesTestPackage) wrapResult(getCastWrappedObject().getPrimitiveTypesTest(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public testmetamodel.primitivetypesstatictests.PrimitiveTypesStaticTestsPackage getPrimitiveTypesStaticTests()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (testmetamodel.primitivetypesstatictests.PrimitiveTypesStaticTestsPackage) wrapResult(getCastWrappedObject().getPrimitiveTypesStaticTests(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (testmetamodel.primitivetypesstatictests.PrimitiveTypesStaticTestsPackage) wrapResult(getCastWrappedObject().getPrimitiveTypesStaticTests(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public testmetamodel.relationshiptests.RelationshipTestsPackage getRelationshipTests()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (testmetamodel.relationshiptests.RelationshipTestsPackage) wrapResult(getCastWrappedObject().getRelationshipTests(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (testmetamodel.relationshiptests.RelationshipTestsPackage) wrapResult(getCastWrappedObject().getRelationshipTests(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getTopLevelDummyClass()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getTopLevelDummyClass(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getTopLevelDummyClass(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    @SuppressWarnings("unchecked")
    public java.lang.Class<testmetamodel.TestMetaModelPackage> get___JmiInterface() {
        return testmetamodel.TestMetaModelPackage.class;
    }
    
    protected String metaObjectToString() {
        return "testmetamodel.TestMetaModelPackage (Java Type)\nTestMetaModel (MOF Type)"; //$NON-NLS-1$
    }
}