/**
 * Generated by the MOIN Generator Version 3.0
 **/

package testmetamodel.relationshiptests.__impl;

public class NavigableAssociationTestStaticLongTestWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<testmetamodel.relationshiptests.NavigableAssociationTestStaticLongTest> implements testmetamodel.relationshiptests.NavigableAssociationTestStaticLongTest,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The NavigableAssociationTestStaticLongTest wrapper
     */
    public NavigableAssociationTestStaticLongTestWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, testmetamodel.relationshiptests.__impl.NavigableAssociationTestStaticLongTestImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private testmetamodel.relationshiptests.__impl.NavigableAssociationTestStaticLongTestImpl getCastWrappedObject() {
        return (testmetamodel.relationshiptests.__impl.NavigableAssociationTestStaticLongTestImpl) getWrappedObject();
    }

    public testmetamodel.relationshiptests.NavigableAssociationTestStaticLongTest unwrap() {
        return (testmetamodel.relationshiptests.NavigableAssociationTestStaticLongTest) getWrappedObject();
    }
    
    public boolean exists(testmetamodel.relationshiptests.NavigableAssociationTest _Navigableassociationtest, testmetamodel.primitivetypesstatictests.StaticLongTest _Aggregate) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Navigableassociationtest), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Aggregate));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Navigableassociationtest), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Aggregate)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public testmetamodel.relationshiptests.NavigableAssociationTest getNavigableassociationtest(testmetamodel.primitivetypesstatictests.StaticLongTest _Aggregate) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (testmetamodel.relationshiptests.NavigableAssociationTest) wrapResult(getCastWrappedObject().getNavigableassociationtest(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Aggregate)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (testmetamodel.relationshiptests.NavigableAssociationTest) wrapResult(getCastWrappedObject().getNavigableassociationtest(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Aggregate))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getAggregate(testmetamodel.relationshiptests.NavigableAssociationTest _Navigableassociationtest) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getAggregate(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Navigableassociationtest)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getAggregate(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Navigableassociationtest))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(testmetamodel.relationshiptests.NavigableAssociationTest _Navigableassociationtest, testmetamodel.primitivetypesstatictests.StaticLongTest _Aggregate) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Navigableassociationtest), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Aggregate));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Navigableassociationtest), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Aggregate)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(testmetamodel.relationshiptests.NavigableAssociationTest _Navigableassociationtest, testmetamodel.primitivetypesstatictests.StaticLongTest _Aggregate) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Navigableassociationtest), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Aggregate));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Navigableassociationtest), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Aggregate)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<testmetamodel.relationshiptests.NavigableAssociationTestStaticLongTest> get___JmiInterface() {
        return testmetamodel.relationshiptests.NavigableAssociationTestStaticLongTest.class;
    }

    protected String metaObjectToString() {
        return "testmetamodel.relationshiptests.NavigableAssociationTestStaticLongTest (Java Type)\nTestMetaModel.RelationshipTests.NavigableAssociationTest_StaticLongTest (MOF Type)"; //$NON-NLS-1$
    }    
}