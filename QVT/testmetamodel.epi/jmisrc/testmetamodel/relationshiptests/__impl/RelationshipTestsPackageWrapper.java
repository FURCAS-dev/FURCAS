/**
 * Generated by the MOIN Generator Version 3.0
 **/

package testmetamodel.relationshiptests.__impl;

public class RelationshipTestsPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<testmetamodel.relationshiptests.__impl.RelationshipTestsPackageImpl> implements testmetamodel.relationshiptests.RelationshipTestsPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The RelationshipTestsPackage wrapper
     */
    public RelationshipTestsPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, testmetamodel.relationshiptests.__impl.RelationshipTestsPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private testmetamodel.relationshiptests.__impl.RelationshipTestsPackageImpl getCastWrappedObject() {
        return (testmetamodel.relationshiptests.__impl.RelationshipTestsPackageImpl) getWrappedObject();
    }
    
    public testmetamodel.relationshiptests.__impl.RelationshipTestsPackageImpl unwrap() {
        return (testmetamodel.relationshiptests.__impl.RelationshipTestsPackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getClassTest()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getClassTest(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getClassTest(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getNavigableAssociationTest()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getNavigableAssociationTest(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getNavigableAssociationTest(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public testmetamodel.relationshiptests.ClassTestStaticBooleanTest getClassTestStaticBooleanTest()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (testmetamodel.relationshiptests.ClassTestStaticBooleanTest) wrapResult(getCastWrappedObject().getClassTestStaticBooleanTest(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (testmetamodel.relationshiptests.ClassTestStaticBooleanTest) wrapResult(getCastWrappedObject().getClassTestStaticBooleanTest(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public testmetamodel.relationshiptests.ClassTestStringTest getClassTestStringTest()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (testmetamodel.relationshiptests.ClassTestStringTest) wrapResult(getCastWrappedObject().getClassTestStringTest(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (testmetamodel.relationshiptests.ClassTestStringTest) wrapResult(getCastWrappedObject().getClassTestStringTest(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public testmetamodel.relationshiptests.ClassTestStringTest1 getClassTestStringTest1()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (testmetamodel.relationshiptests.ClassTestStringTest1) wrapResult(getCastWrappedObject().getClassTestStringTest1(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (testmetamodel.relationshiptests.ClassTestStringTest1) wrapResult(getCastWrappedObject().getClassTestStringTest1(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public testmetamodel.relationshiptests.ClassTestClassTest getClassTestClassTest()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (testmetamodel.relationshiptests.ClassTestClassTest) wrapResult(getCastWrappedObject().getClassTestClassTest(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (testmetamodel.relationshiptests.ClassTestClassTest) wrapResult(getCastWrappedObject().getClassTestClassTest(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public testmetamodel.relationshiptests.ClassTestStringTest2 getClassTestStringTest2()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (testmetamodel.relationshiptests.ClassTestStringTest2) wrapResult(getCastWrappedObject().getClassTestStringTest2(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (testmetamodel.relationshiptests.ClassTestStringTest2) wrapResult(getCastWrappedObject().getClassTestStringTest2(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public testmetamodel.relationshiptests.ClassTestIntergerTest getClassTestIntergerTest()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (testmetamodel.relationshiptests.ClassTestIntergerTest) wrapResult(getCastWrappedObject().getClassTestIntergerTest(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (testmetamodel.relationshiptests.ClassTestIntergerTest) wrapResult(getCastWrappedObject().getClassTestIntergerTest(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public testmetamodel.relationshiptests.NavigableAssociationTestStaticIntegerTest getNavigableAssociationTestStaticIntegerTest()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (testmetamodel.relationshiptests.NavigableAssociationTestStaticIntegerTest) wrapResult(getCastWrappedObject().getNavigableAssociationTestStaticIntegerTest(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (testmetamodel.relationshiptests.NavigableAssociationTestStaticIntegerTest) wrapResult(getCastWrappedObject().getNavigableAssociationTestStaticIntegerTest(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public testmetamodel.relationshiptests.NavigableAssociationTestStaticLongTest getNavigableAssociationTestStaticLongTest()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (testmetamodel.relationshiptests.NavigableAssociationTestStaticLongTest) wrapResult(getCastWrappedObject().getNavigableAssociationTestStaticLongTest(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (testmetamodel.relationshiptests.NavigableAssociationTestStaticLongTest) wrapResult(getCastWrappedObject().getNavigableAssociationTestStaticLongTest(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    public java.lang.Class<testmetamodel.relationshiptests.RelationshipTestsPackage> get___JmiInterface() {
        return testmetamodel.relationshiptests.RelationshipTestsPackage.class;
    }
    
    protected String metaObjectToString() {
        return "testmetamodel.relationshiptests.RelationshipTestsPackage (Java Type)\nTestMetaModel.RelationshipTests (MOF Type)"; //$NON-NLS-1$
    }
}