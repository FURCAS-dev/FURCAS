/**
 * Generated by the MOIN Generator Version 3.0
 **/

package testmetamodel.classifiertest.__impl;

public class ClassifierTestPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<testmetamodel.classifiertest.__impl.ClassifierTestPackageImpl> implements testmetamodel.classifiertest.ClassifierTestPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ClassifierTestPackage wrapper
     */
    public ClassifierTestPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, testmetamodel.classifiertest.__impl.ClassifierTestPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private testmetamodel.classifiertest.__impl.ClassifierTestPackageImpl getCastWrappedObject() {
        return (testmetamodel.classifiertest.__impl.ClassifierTestPackageImpl) getWrappedObject();
    }
    
    public testmetamodel.classifiertest.__impl.ClassifierTestPackageImpl unwrap() {
        return (testmetamodel.classifiertest.__impl.ClassifierTestPackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAbstractSuperClass()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getAbstractSuperClass(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getAbstractSuperClass(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSubClass()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getSubClass(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getSubClass(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSuperClass()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getSuperClass(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getSuperClass(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public testmetamodel.classifiertest.AbstractSuperClassSubClass getAbstractSuperClassSubClass()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (testmetamodel.classifiertest.AbstractSuperClassSubClass) wrapResult(getCastWrappedObject().getAbstractSuperClassSubClass(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (testmetamodel.classifiertest.AbstractSuperClassSubClass) wrapResult(getCastWrappedObject().getAbstractSuperClassSubClass(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    public java.lang.Class<testmetamodel.classifiertest.ClassifierTestPackage> get___JmiInterface() {
        return testmetamodel.classifiertest.ClassifierTestPackage.class;
    }
    
    protected String metaObjectToString() {
        return "testmetamodel.classifiertest.ClassifierTestPackage (Java Type)\nTestMetaModel.ClassifierTest (MOF Type)"; //$NON-NLS-1$
    }
}