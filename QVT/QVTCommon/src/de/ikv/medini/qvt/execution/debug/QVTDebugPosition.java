/*******************************************************************************
 * Copyright (c) 2008 ikv++ technologies ag and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     ikv++ technologies ag - initial API and implementation
 *******************************************************************************/

package de.ikv.medini.qvt.execution.debug;

import de.ikv.medini.qvt.execution.QvtSemanticTask;

/**
 * Identifies a position in a debug session, consisting of a trace binding plus the source code position
 * 
 * @author kiegeland
 * 
 */
public class QVTDebugPosition {

	private QvtSemanticTask task;

	private int bindingNumber;

	private QVTSourcePosition sourcePosition;

	public QVTDebugPosition(QvtSemanticTask task, int bindingNumber, QVTSourcePosition sourcePosition) {
		this.task = task;
		this.bindingNumber = bindingNumber;
		this.sourcePosition = sourcePosition;
	}

	/**
	 * Hash code based on {@link #task}, {@link #bindingNumber} and {@link #sourcePosition}.
	 * 
	 * Generated by Eclipse on above attributes
	 */
	public int hashCode() {
		final int PRIME = 31;
		int result = 1;
		result = PRIME * result + this.bindingNumber;
		result = PRIME * result + (this.sourcePosition == null ? 0 : this.sourcePosition.hashCode());
		result = PRIME * result + (this.task == null ? 0 : this.task.hashCode());
		return result;
	}

	/**
	 * Equality based on {@link #task}, {@link #bindingNumber} and {@link #sourcePosition}.
	 * 
	 * Generated by Eclipse on above attributes
	 */
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (this.getClass() != obj.getClass()) {
			return false;
		}
		final QVTDebugPosition other = (QVTDebugPosition) obj;
		if (this.bindingNumber != other.bindingNumber) {
			return false;
		}
		if (this.sourcePosition == null) {
			if (other.sourcePosition != null) {
				return false;
			}
		} else if (!this.sourcePosition.equals(other.sourcePosition)) {
			return false;
		}
		if (this.task == null) {
			if (other.task != null) {
				return false;
			}
		} else if (!this.task.equals(other.task)) {
			return false;
		}
		return true;
	}

}
