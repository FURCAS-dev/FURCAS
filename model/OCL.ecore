<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="ocl"
    nsURI="http://www.eclipse.org/ocl/1.1.0/OCL" nsPrefix="ocl">
  <eSubpackages name="types" nsURI="http://www.eclipse.org/ocl/1.1.0/OCL/Types" nsPrefix="ocl.types">
    <eClassifiers xsi:type="ecore:EClass" name="AnyType">
      <eTypeParameters name="O"/>
      <eGenericSuperTypes eClassifier="#//utilities/PredefinedType">
        <eTypeArguments eTypeParameter="#//types/AnyType/O"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BagType">
      <eTypeParameters name="C"/>
      <eTypeParameters name="O"/>
      <eGenericSuperTypes eClassifier="#//types/CollectionType">
        <eTypeArguments eTypeParameter="#//types/BagType/C"/>
        <eTypeArguments eTypeParameter="#//types/BagType/O"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionType">
      <eTypeParameters name="C"/>
      <eTypeParameters name="O"/>
      <eOperations name="oclIterators" upperBound="-1">
        <eGenericType eTypeParameter="#//types/CollectionType/O"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="elementType">
        <eGenericType eTypeParameter="#//types/CollectionType/C"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" lowerBound="1"
          eType="#//expressions/CollectionKind" changeable="false" volatile="true"
          transient="true"/>
      <eGenericSuperTypes eClassifier="#//utilities/PredefinedType">
        <eTypeArguments eTypeParameter="#//types/CollectionType/O"/>
      </eGenericSuperTypes>
      <eGenericSuperTypes eClassifier="#//utilities/TypedASTNode"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ElementType"/>
    <eClassifiers xsi:type="ecore:EClass" name="InvalidType">
      <eTypeParameters name="O"/>
      <eGenericSuperTypes eClassifier="#//utilities/PredefinedType">
        <eTypeArguments eTypeParameter="#//types/InvalidType/O"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="MessageType">
      <eTypeParameters name="C"/>
      <eTypeParameters name="O"/>
      <eTypeParameters name="P"/>
      <eOperations name="oclProperties" upperBound="-1">
        <eGenericType eTypeParameter="#//types/MessageType/P"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredOperation">
        <eGenericType eTypeParameter="#//types/MessageType/O"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredSignal">
        <eGenericType eTypeParameter="#//types/MessageType/C"/>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//utilities/PredefinedType">
        <eTypeArguments eTypeParameter="#//types/MessageType/O"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OrderedSetType">
      <eTypeParameters name="C"/>
      <eTypeParameters name="O"/>
      <eGenericSuperTypes eClassifier="#//types/CollectionType">
        <eTypeArguments eTypeParameter="#//types/OrderedSetType/C"/>
        <eTypeArguments eTypeParameter="#//types/OrderedSetType/O"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PrimitiveType">
      <eTypeParameters name="O"/>
      <eGenericSuperTypes eClassifier="#//utilities/PredefinedType">
        <eTypeArguments eTypeParameter="#//types/PrimitiveType/O"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SequenceType">
      <eTypeParameters name="C"/>
      <eTypeParameters name="O"/>
      <eGenericSuperTypes eClassifier="#//types/CollectionType">
        <eTypeArguments eTypeParameter="#//types/SequenceType/C"/>
        <eTypeArguments eTypeParameter="#//types/SequenceType/O"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SetType">
      <eTypeParameters name="C"/>
      <eTypeParameters name="O"/>
      <eGenericSuperTypes eClassifier="#//types/CollectionType">
        <eTypeArguments eTypeParameter="#//types/SetType/C"/>
        <eTypeArguments eTypeParameter="#//types/SetType/O"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TupleType">
      <eTypeParameters name="O"/>
      <eTypeParameters name="P"/>
      <eOperations name="oclProperties" upperBound="-1">
        <eGenericType eTypeParameter="#//types/TupleType/P"/>
      </eOperations>
      <eGenericSuperTypes eClassifier="#//utilities/PredefinedType">
        <eTypeArguments eTypeParameter="#//types/TupleType/O"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TypeType">
      <eTypeParameters name="C"/>
      <eTypeParameters name="O"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredType" lowerBound="1">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="suppressedSetVisibility" value="true"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//types/TypeType/C"/>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//utilities/PredefinedType">
        <eTypeArguments eTypeParameter="#//types/TypeType/O"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="VoidType">
      <eTypeParameters name="O"/>
      <eGenericSuperTypes eClassifier="#//utilities/PredefinedType">
        <eTypeArguments eTypeParameter="#//types/VoidType/O"/>
      </eGenericSuperTypes>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="expressions" nsURI="http://www.eclipse.org/ocl/1.1.0/OCL/Expressions"
      nsPrefix="ocl.expr">
    <eClassifiers xsi:type="ecore:EClass" name="AssociationClassCallExp">
      <eTypeParameters name="C"/>
      <eTypeParameters name="P"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredAssociationClass">
        <eGenericType eTypeParameter="#//expressions/AssociationClassCallExp/C"/>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//expressions/NavigationCallExp">
        <eTypeArguments eTypeParameter="#//expressions/AssociationClassCallExp/C"/>
        <eTypeArguments eTypeParameter="#//expressions/AssociationClassCallExp/P"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="NavigationCallExp" abstract="true">
      <eTypeParameters name="C"/>
      <eTypeParameters name="P"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="qualifier" upperBound="-1"
          containment="true">
        <eGenericType eClassifier="#//expressions/OCLExpression">
          <eTypeArguments eTypeParameter="#//expressions/NavigationCallExp/C"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="navigationSource">
        <eGenericType eTypeParameter="#//expressions/NavigationCallExp/P"/>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//expressions/FeatureCallExp">
        <eTypeArguments eTypeParameter="#//expressions/NavigationCallExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="FeatureCallExp" abstract="true">
      <eTypeParameters name="C"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="markedPre" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eGenericSuperTypes eClassifier="#//expressions/CallExp">
        <eTypeArguments eTypeParameter="#//expressions/FeatureCallExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CallExp" abstract="true">
      <eTypeParameters name="C"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="source" containment="true">
        <eGenericType eClassifier="#//expressions/OCLExpression">
          <eTypeArguments eTypeParameter="#//expressions/CallExp/C"/>
        </eGenericType>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//expressions/OCLExpression">
        <eTypeArguments eTypeParameter="#//expressions/CallExp/C"/>
      </eGenericSuperTypes>
      <eGenericSuperTypes eClassifier="#//utilities/CallingASTNode"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OCLExpression" abstract="true">
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="name" value="OclExpression"/>
      </eAnnotations>
      <eTypeParameters name="C"/>
      <eGenericSuperTypes eClassifier="#//utilities/TypedElement">
        <eTypeArguments eTypeParameter="#//expressions/OCLExpression/C"/>
      </eGenericSuperTypes>
      <eGenericSuperTypes eClassifier="#//utilities/Visitable"/>
      <eGenericSuperTypes eClassifier="#//utilities/ASTNode"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BooleanLiteralExp">
      <eTypeParameters name="C"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="booleanSymbol" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBooleanObject"/>
      <eGenericSuperTypes eClassifier="#//expressions/PrimitiveLiteralExp">
        <eTypeArguments eTypeParameter="#//expressions/BooleanLiteralExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PrimitiveLiteralExp" abstract="true">
      <eTypeParameters name="C"/>
      <eGenericSuperTypes eClassifier="#//expressions/LiteralExp">
        <eTypeArguments eTypeParameter="#//expressions/PrimitiveLiteralExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LiteralExp" abstract="true">
      <eTypeParameters name="C"/>
      <eGenericSuperTypes eClassifier="#//expressions/OCLExpression">
        <eTypeArguments eTypeParameter="#//expressions/LiteralExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionItem">
      <eTypeParameters name="C"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="item" lowerBound="1"
          containment="true">
        <eGenericType eClassifier="#//expressions/OCLExpression">
          <eTypeArguments eTypeParameter="#//expressions/CollectionItem/C"/>
        </eGenericType>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//expressions/CollectionLiteralPart">
        <eTypeArguments eTypeParameter="#//expressions/CollectionItem/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionLiteralPart" abstract="true">
      <eTypeParameters name="C"/>
      <eGenericSuperTypes eClassifier="#//utilities/TypedElement">
        <eTypeArguments eTypeParameter="#//expressions/CollectionLiteralPart/C"/>
      </eGenericSuperTypes>
      <eGenericSuperTypes eClassifier="#//utilities/Visitable"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="CollectionKind">
      <eLiterals name="Set"/>
      <eLiterals name="OrderedSet" value="1"/>
      <eLiterals name="Bag" value="2"/>
      <eLiterals name="Sequence" value="3"/>
      <eLiterals name="Collection" value="4"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionLiteralExp">
      <eTypeParameters name="C"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" eType="#//expressions/CollectionKind"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="part" upperBound="-1"
          containment="true">
        <eGenericType eClassifier="#//expressions/CollectionLiteralPart">
          <eTypeArguments eTypeParameter="#//expressions/CollectionLiteralExp/C"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="simpleRange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
          changeable="false" volatile="true" transient="true"/>
      <eGenericSuperTypes eClassifier="#//expressions/LiteralExp">
        <eTypeArguments eTypeParameter="#//expressions/CollectionLiteralExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionRange">
      <eTypeParameters name="C"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="first" lowerBound="1"
          containment="true">
        <eGenericType eClassifier="#//expressions/OCLExpression">
          <eTypeArguments eTypeParameter="#//expressions/CollectionRange/C"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="last" lowerBound="1"
          containment="true">
        <eGenericType eClassifier="#//expressions/OCLExpression">
          <eTypeArguments eTypeParameter="#//expressions/CollectionRange/C"/>
        </eGenericType>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//expressions/CollectionLiteralPart">
        <eTypeArguments eTypeParameter="#//expressions/CollectionRange/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EnumLiteralExp">
      <eTypeParameters name="C"/>
      <eTypeParameters name="EL"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredEnumLiteral">
        <eGenericType eTypeParameter="#//expressions/EnumLiteralExp/EL"/>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//expressions/LiteralExp">
        <eTypeArguments eTypeParameter="#//expressions/EnumLiteralExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IfExp">
      <eTypeParameters name="C"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="condition" containment="true">
        <eGenericType eClassifier="#//expressions/OCLExpression">
          <eTypeArguments eTypeParameter="#//expressions/IfExp/C"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="thenExpression" containment="true">
        <eGenericType eClassifier="#//expressions/OCLExpression">
          <eTypeArguments eTypeParameter="#//expressions/IfExp/C"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="elseExpression" containment="true">
        <eGenericType eClassifier="#//expressions/OCLExpression">
          <eTypeArguments eTypeParameter="#//expressions/IfExp/C"/>
        </eGenericType>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//expressions/OCLExpression">
        <eTypeArguments eTypeParameter="#//expressions/IfExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IntegerLiteralExp">
      <eTypeParameters name="C"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="integerSymbol" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"/>
      <eGenericSuperTypes eClassifier="#//expressions/NumericLiteralExp">
        <eTypeArguments eTypeParameter="#//expressions/IntegerLiteralExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="NumericLiteralExp" abstract="true">
      <eTypeParameters name="C"/>
      <eGenericSuperTypes eClassifier="#//expressions/PrimitiveLiteralExp">
        <eTypeArguments eTypeParameter="#//expressions/NumericLiteralExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="UnlimitedNaturalLiteralExp">
      <eTypeParameters name="C"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="integerSymbol" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="unlimited" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
          changeable="false" volatile="true" transient="true" derived="true"/>
      <eGenericSuperTypes eClassifier="#//expressions/NumericLiteralExp">
        <eTypeArguments eTypeParameter="#//expressions/UnlimitedNaturalLiteralExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="InvalidLiteralExp">
      <eTypeParameters name="C"/>
      <eGenericSuperTypes eClassifier="#//expressions/LiteralExp">
        <eTypeArguments eTypeParameter="#//expressions/InvalidLiteralExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IterateExp">
      <eTypeParameters name="C"/>
      <eTypeParameters name="PM"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="result" containment="true">
        <eGenericType eClassifier="#//expressions/Variable">
          <eTypeArguments eTypeParameter="#//expressions/IterateExp/C"/>
          <eTypeArguments eTypeParameter="#//expressions/IterateExp/PM"/>
        </eGenericType>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//expressions/LoopExp">
        <eTypeArguments eTypeParameter="#//expressions/IterateExp/C"/>
        <eTypeArguments eTypeParameter="#//expressions/IterateExp/PM"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LoopExp" abstract="true">
      <eTypeParameters name="C"/>
      <eTypeParameters name="PM"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="body" containment="true">
        <eGenericType eClassifier="#//expressions/OCLExpression">
          <eTypeArguments eTypeParameter="#//expressions/LoopExp/C"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="iterator" upperBound="-1"
          containment="true">
        <eGenericType eClassifier="#//expressions/Variable">
          <eTypeArguments eTypeParameter="#//expressions/LoopExp/C"/>
          <eTypeArguments eTypeParameter="#//expressions/LoopExp/PM"/>
        </eGenericType>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//expressions/CallExp">
        <eTypeArguments eTypeParameter="#//expressions/LoopExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Variable">
      <eTypeParameters name="C"/>
      <eTypeParameters name="PM"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="initExpression" containment="true">
        <eGenericType eClassifier="#//expressions/OCLExpression">
          <eTypeArguments eTypeParameter="#//expressions/Variable/C"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="representedParameter">
        <eGenericType eTypeParameter="#//expressions/Variable/PM"/>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//utilities/TypedElement">
        <eTypeArguments eTypeParameter="#//expressions/Variable/C"/>
      </eGenericSuperTypes>
      <eGenericSuperTypes eClassifier="#//utilities/Visitable"/>
      <eGenericSuperTypes eClassifier="#//utilities/TypedASTNode"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IteratorExp">
      <eTypeParameters name="C"/>
      <eTypeParameters name="PM"/>
      <eGenericSuperTypes eClassifier="#//expressions/LoopExp">
        <eTypeArguments eTypeParameter="#//expressions/IteratorExp/C"/>
        <eTypeArguments eTypeParameter="#//expressions/IteratorExp/PM"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LetExp">
      <eTypeParameters name="C"/>
      <eTypeParameters name="PM"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="in" containment="true">
        <eGenericType eClassifier="#//expressions/OCLExpression">
          <eTypeArguments eTypeParameter="#//expressions/LetExp/C"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="variable" containment="true">
        <eGenericType eClassifier="#//expressions/Variable">
          <eTypeArguments eTypeParameter="#//expressions/LetExp/C"/>
          <eTypeArguments eTypeParameter="#//expressions/LetExp/PM"/>
        </eGenericType>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//expressions/OCLExpression">
        <eTypeArguments eTypeParameter="#//expressions/LetExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="MessageExp">
      <eTypeParameters name="C"/>
      <eTypeParameters name="COA"/>
      <eTypeParameters name="SSA"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="target" containment="true">
        <eGenericType eClassifier="#//expressions/OCLExpression">
          <eTypeArguments eTypeParameter="#//expressions/MessageExp/C"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="argument" upperBound="-1"
          containment="true">
        <eGenericType eClassifier="#//expressions/OCLExpression">
          <eTypeArguments eTypeParameter="#//expressions/MessageExp/C"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="calledOperation" containment="true">
        <eGenericType eTypeParameter="#//expressions/MessageExp/COA"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sentSignal" containment="true">
        <eGenericType eTypeParameter="#//expressions/MessageExp/SSA"/>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//expressions/OCLExpression">
        <eTypeArguments eTypeParameter="#//expressions/MessageExp/C"/>
      </eGenericSuperTypes>
      <eGenericSuperTypes eClassifier="#//utilities/CallingASTNode"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="NullLiteralExp">
      <eTypeParameters name="C"/>
      <eGenericSuperTypes eClassifier="#//expressions/LiteralExp">
        <eTypeArguments eTypeParameter="#//expressions/NullLiteralExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OperationCallExp">
      <eTypeParameters name="C"/>
      <eTypeParameters name="O"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="argument" upperBound="-1"
          containment="true">
        <eGenericType eClassifier="#//expressions/OCLExpression">
          <eTypeArguments eTypeParameter="#//expressions/OperationCallExp/C"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredOperation">
        <eGenericType eTypeParameter="#//expressions/OperationCallExp/O"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="operationCode" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
          volatile="true" transient="true"/>
      <eGenericSuperTypes eClassifier="#//expressions/FeatureCallExp">
        <eTypeArguments eTypeParameter="#//expressions/OperationCallExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PropertyCallExp">
      <eTypeParameters name="C"/>
      <eTypeParameters name="P"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredProperty">
        <eGenericType eTypeParameter="#//expressions/PropertyCallExp/P"/>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//expressions/NavigationCallExp">
        <eTypeArguments eTypeParameter="#//expressions/PropertyCallExp/C"/>
        <eTypeArguments eTypeParameter="#//expressions/PropertyCallExp/P"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RealLiteralExp">
      <eTypeParameters name="C"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="realSymbol" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDoubleObject"/>
      <eGenericSuperTypes eClassifier="#//expressions/NumericLiteralExp">
        <eTypeArguments eTypeParameter="#//expressions/RealLiteralExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="StateExp">
      <eTypeParameters name="C"/>
      <eTypeParameters name="S"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredState">
        <eGenericType eTypeParameter="#//expressions/StateExp/S"/>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//expressions/OCLExpression">
        <eTypeArguments eTypeParameter="#//expressions/StateExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="StringLiteralExp">
      <eTypeParameters name="C"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="stringSymbol" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eGenericSuperTypes eClassifier="#//expressions/PrimitiveLiteralExp">
        <eTypeArguments eTypeParameter="#//expressions/StringLiteralExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TupleLiteralExp">
      <eTypeParameters name="C"/>
      <eTypeParameters name="P"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="part" upperBound="-1"
          containment="true">
        <eGenericType eClassifier="#//expressions/TupleLiteralPart">
          <eTypeArguments eTypeParameter="#//expressions/TupleLiteralExp/C"/>
          <eTypeArguments eTypeParameter="#//expressions/TupleLiteralExp/P"/>
        </eGenericType>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//expressions/LiteralExp">
        <eTypeArguments eTypeParameter="#//expressions/TupleLiteralExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TupleLiteralPart">
      <eTypeParameters name="C"/>
      <eTypeParameters name="P"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="value" containment="true">
        <eGenericType eClassifier="#//expressions/OCLExpression">
          <eTypeArguments eTypeParameter="#//expressions/TupleLiteralPart/C"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="attribute">
        <eGenericType eTypeParameter="#//expressions/TupleLiteralPart/P"/>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//utilities/TypedElement">
        <eTypeArguments eTypeParameter="#//expressions/TupleLiteralPart/C"/>
      </eGenericSuperTypes>
      <eGenericSuperTypes eClassifier="#//utilities/Visitable"/>
      <eGenericSuperTypes eClassifier="#//utilities/TypedASTNode"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TypeExp">
      <eTypeParameters name="C"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredType">
        <eGenericType eTypeParameter="#//expressions/TypeExp/C"/>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//expressions/OCLExpression">
        <eTypeArguments eTypeParameter="#//expressions/TypeExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="UnspecifiedValueExp">
      <eTypeParameters name="C"/>
      <eGenericSuperTypes eClassifier="#//expressions/OCLExpression">
        <eTypeArguments eTypeParameter="#//expressions/UnspecifiedValueExp/C"/>
      </eGenericSuperTypes>
      <eGenericSuperTypes eClassifier="#//utilities/TypedASTNode"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="VariableExp">
      <eTypeParameters name="C"/>
      <eTypeParameters name="PM"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredVariable">
        <eGenericType eClassifier="#//expressions/Variable">
          <eTypeArguments eTypeParameter="#//expressions/VariableExp/C"/>
          <eTypeArguments eTypeParameter="#//expressions/VariableExp/PM"/>
        </eGenericType>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//expressions/OCLExpression">
        <eTypeArguments eTypeParameter="#//expressions/VariableExp/C"/>
      </eGenericSuperTypes>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="utilities" nsURI="http://www.eclipse.org/ocl/1.1.0/OCL/Utilities"
      nsPrefix="ocl.util">
    <eClassifiers xsi:type="ecore:EClass" name="ASTNode" abstract="true" interface="true">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="startPosition" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
          transient="true" defaultValueLiteral="-1"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="endPosition" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
          transient="true" defaultValueLiteral="-1"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CallingASTNode" abstract="true" interface="true"
        eSuperTypes="#//utilities/ASTNode">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="propertyStartPosition"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt" transient="true"
          defaultValueLiteral="-1"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="propertyEndPosition"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt" transient="true"
          defaultValueLiteral="-1"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TypedASTNode" abstract="true" interface="true"
        eSuperTypes="#//utilities/ASTNode">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="typeStartPosition" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
          transient="true" defaultValueLiteral="-1"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="typeEndPosition" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
          transient="true" defaultValueLiteral="-1"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Visitable" abstract="true" interface="true">
      <eOperations name="accept">
        <eGenericType eTypeParameter="#//utilities/Visitable/accept/T"/>
        <eTypeParameters name="T"/>
        <eTypeParameters name="U">
          <eBounds eClassifier="#//utilities/Visitor">
            <eTypeArguments eTypeParameter="#//utilities/Visitable/accept/T"/>
            <eTypeArguments/>
            <eTypeArguments/>
            <eTypeArguments/>
            <eTypeArguments/>
            <eTypeArguments/>
            <eTypeArguments/>
            <eTypeArguments/>
            <eTypeArguments/>
            <eTypeArguments/>
          </eBounds>
        </eTypeParameters>
        <eParameters name="v">
          <eGenericType eTypeParameter="#//utilities/Visitable/accept/U"/>
        </eParameters>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Visitor" abstract="true" interface="true">
      <eTypeParameters name="T"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="O"/>
      <eTypeParameters name="P"/>
      <eTypeParameters name="EL"/>
      <eTypeParameters name="PM"/>
      <eTypeParameters name="S"/>
      <eTypeParameters name="COA"/>
      <eTypeParameters name="SSA"/>
      <eTypeParameters name="CT"/>
      <eOperations name="visitVariableExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="variableExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/VariableExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
            <eTypeArguments eTypeParameter="#//utilities/Visitor/PM"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitLetExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="letExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/LetExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
            <eTypeArguments eTypeParameter="#//utilities/Visitor/PM"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitIfExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="ifExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/IfExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitTypeExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="typeExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/TypeExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitPropertyCallExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="callExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/PropertyCallExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
            <eTypeArguments eTypeParameter="#//utilities/Visitor/P"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitOperationCallExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="callExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/OperationCallExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
            <eTypeArguments eTypeParameter="#//utilities/Visitor/O"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitAssociationClassCallExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="callExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/AssociationClassCallExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
            <eTypeArguments eTypeParameter="#//utilities/Visitor/P"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitIteratorExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="callExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/IteratorExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
            <eTypeArguments eTypeParameter="#//utilities/Visitor/PM"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitIterateExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="callExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/IterateExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
            <eTypeArguments eTypeParameter="#//utilities/Visitor/PM"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitUnspecifiedValueExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="unspecExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/UnspecifiedValueExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitIntegerLiteralExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="literalExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/IntegerLiteralExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitUnlimitedNaturalLiteralExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="literalExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/UnlimitedNaturalLiteralExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitRealLiteralExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="literalExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/RealLiteralExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitStringLiteralExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="literalExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/StringLiteralExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitBooleanLiteralExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="literalExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/BooleanLiteralExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitEnumLiteralExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="literalExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/EnumLiteralExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
            <eTypeArguments eTypeParameter="#//utilities/Visitor/EL"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitCollectionLiteralExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="literalExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/CollectionLiteralExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitCollectionItem">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="item" lowerBound="1">
          <eGenericType eClassifier="#//expressions/CollectionItem">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitCollectionRange">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="range" lowerBound="1">
          <eGenericType eClassifier="#//expressions/CollectionRange">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitTupleLiteralExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="literalExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/TupleLiteralExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
            <eTypeArguments eTypeParameter="#//utilities/Visitor/P"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitTupleLiteralPart">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="part" lowerBound="1">
          <eGenericType eClassifier="#//expressions/TupleLiteralPart">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
            <eTypeArguments eTypeParameter="#//utilities/Visitor/P"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitInvalidLiteralExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="literalExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/InvalidLiteralExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitNullLiteralExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="literalExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/NullLiteralExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitStateExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="stateExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/StateExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
            <eTypeArguments eTypeParameter="#//utilities/Visitor/S"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitMessageExp">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="messageExp" lowerBound="1">
          <eGenericType eClassifier="#//expressions/MessageExp">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
            <eTypeArguments eTypeParameter="#//utilities/Visitor/COA"/>
            <eTypeArguments eTypeParameter="#//utilities/Visitor/SSA"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitVariable">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="variable" lowerBound="1">
          <eGenericType eClassifier="#//expressions/Variable">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
            <eTypeArguments eTypeParameter="#//utilities/Visitor/PM"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitExpressionInOCL">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="expression" lowerBound="1">
          <eGenericType eClassifier="#//utilities/ExpressionInOCL">
            <eTypeArguments eTypeParameter="#//utilities/Visitor/C"/>
            <eTypeArguments eTypeParameter="#//utilities/Visitor/PM"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="visitConstraint">
        <eGenericType eTypeParameter="#//utilities/Visitor/T"/>
        <eParameters name="constraint" lowerBound="1">
          <eGenericType eTypeParameter="#//utilities/Visitor/CT"/>
        </eParameters>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TypedElement" abstract="true" interface="true">
      <eTypeParameters name="C"/>
      <eOperations name="getName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getType">
        <eGenericType eTypeParameter="#//utilities/TypedElement/C"/>
      </eOperations>
      <eOperations name="setName" ordered="false" lowerBound="1">
        <eParameters name="name" ordered="false" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="setType" ordered="false" lowerBound="1">
        <eParameters name="type" ordered="false" lowerBound="1">
          <eGenericType eTypeParameter="#//utilities/TypedElement/C"/>
        </eParameters>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ExpressionInOCL" abstract="true" interface="true"
        eSuperTypes="#//utilities/Visitable">
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="name" value="ExpressionInOcl"/>
      </eAnnotations>
      <eTypeParameters name="C"/>
      <eTypeParameters name="PM"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="bodyExpression" lowerBound="1"
          containment="true">
        <eGenericType eClassifier="#//expressions/OCLExpression">
          <eTypeArguments eTypeParameter="#//utilities/ExpressionInOCL/C"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="contextVariable" lowerBound="1"
          containment="true">
        <eGenericType eClassifier="#//expressions/Variable">
          <eTypeArguments eTypeParameter="#//utilities/ExpressionInOCL/C"/>
          <eTypeArguments eTypeParameter="#//utilities/ExpressionInOCL/PM"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="resultVariable" containment="true">
        <eGenericType eClassifier="#//expressions/Variable">
          <eTypeArguments eTypeParameter="#//utilities/ExpressionInOCL/C"/>
          <eTypeArguments eTypeParameter="#//utilities/ExpressionInOCL/PM"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parameterVariable" upperBound="-1"
          containment="true">
        <eGenericType eClassifier="#//expressions/Variable">
          <eTypeArguments eTypeParameter="#//utilities/ExpressionInOCL/C"/>
          <eTypeArguments eTypeParameter="#//utilities/ExpressionInOCL/PM"/>
        </eGenericType>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PredefinedType" abstract="true" interface="true">
      <eTypeParameters name="O"/>
      <eOperations name="getName" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="oclOperations" upperBound="-1">
        <eGenericType eTypeParameter="#//utilities/PredefinedType/O"/>
      </eOperations>
    </eClassifiers>
  </eSubpackages>
</ecore:EPackage>
