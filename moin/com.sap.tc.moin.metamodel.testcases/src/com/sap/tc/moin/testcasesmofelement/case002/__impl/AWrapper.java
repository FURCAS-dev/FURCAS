/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.testcasesmofelement.case002.__impl;

public class AWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefObjectWrapperImpl<com.sap.tc.moin.testcasesmofelement.case002.__impl.AImpl> implements com.sap.tc.moin.testcasesmofelement.case002.A,com.sap.tc.moin.repository.Partitionable {

    
    static {
    }

    public AWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.tc.moin.testcasesmofelement.case002.__impl.AImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private com.sap.tc.moin.testcasesmofelement.case002.__impl.AImpl getCastWrappedObject() {
        return (com.sap.tc.moin.testcasesmofelement.case002.__impl.AImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.testcasesmofelement.case002.__impl.AImpl unwrap() {
        return (com.sap.tc.moin.testcasesmofelement.case002.__impl.AImpl) getWrappedObject();
    }
        
    // methods for attributes
     
    // methods for references
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefObject> getToManyElement() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefObject>) wrapResult(getCastWrappedObject().getToManyElement(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefObject>) wrapResult(getCastWrappedObject().getToManyElement(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }



   
    // methods for modeled operations
    
    // methods for internal modeled operations

    // reflective methods
    

    // get the JMI interface
    public java.lang.Class<com.sap.tc.moin.testcasesmofelement.case002.A> get___JmiInterface() {
        return com.sap.tc.moin.testcasesmofelement.case002.A.class;
    }

    // to String
    protected String metaObjectToString() {
        return "com.sap.tc.moin.testcasesmofelement.case002.A (Java Type)\ntestcasesMofElement.case002.A (MOF Type)"; //$NON-NLS-1$
    }    
}