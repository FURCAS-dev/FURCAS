/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.testcases.case007.__impl;

public class Case007PackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<com.sap.tc.moin.testcases.case007.__impl.Case007PackageImpl> implements com.sap.tc.moin.testcases.case007.Case007Package,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The Case007Package wrapper
     */
    public Case007PackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.tc.moin.testcases.case007.__impl.Case007PackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private com.sap.tc.moin.testcases.case007.__impl.Case007PackageImpl getCastWrappedObject() {
        return (com.sap.tc.moin.testcases.case007.__impl.Case007PackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.testcases.case007.__impl.Case007PackageImpl unwrap() {
        return (com.sap.tc.moin.testcases.case007.__impl.Case007PackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.testcases.case007.clustered.ClusteredPackage getClustered()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.testcases.case007.clustered.ClusteredPackage) wrapResult(getCastWrappedObject().getClustered(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.testcases.case007.clustered.ClusteredPackage) wrapResult(getCastWrappedObject().getClustered(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.testcases.case007.base.BasePackage getBase()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.testcases.case007.base.BasePackage) wrapResult(getCastWrappedObject().getBase(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.testcases.case007.base.BasePackage) wrapResult(getCastWrappedObject().getBase(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.testcases.case007.top.TopPackage getTop()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.testcases.case007.top.TopPackage) wrapResult(getCastWrappedObject().getTop(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.testcases.case007.top.TopPackage) wrapResult(getCastWrappedObject().getTop(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.testcases.case007.cluster.ClusterPackage getCluster()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.testcases.case007.cluster.ClusterPackage) wrapResult(getCastWrappedObject().getCluster(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.testcases.case007.cluster.ClusterPackage) wrapResult(getCastWrappedObject().getCluster(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.testcases.case007.importer.ImporterPackage getImporter()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.testcases.case007.importer.ImporterPackage) wrapResult(getCastWrappedObject().getImporter(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.testcases.case007.importer.ImporterPackage) wrapResult(getCastWrappedObject().getImporter(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    public java.lang.Class<com.sap.tc.moin.testcases.case007.Case007Package> get___JmiInterface() {
        return com.sap.tc.moin.testcases.case007.Case007Package.class;
    }
    
    protected String metaObjectToString() {
        return "com.sap.tc.moin.testcases.case007.Case007Package (Java Type)\ntestcases.case007 (MOF Type)"; //$NON-NLS-1$
    }
}