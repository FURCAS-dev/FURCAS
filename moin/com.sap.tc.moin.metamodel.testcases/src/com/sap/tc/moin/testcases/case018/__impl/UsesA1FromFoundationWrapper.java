/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.testcases.case018.__impl;

public class UsesA1FromFoundationWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<com.sap.tc.moin.testcases.case018.UsesA1FromFoundation> implements com.sap.tc.moin.testcases.case018.UsesA1FromFoundation,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The UsesA1FromFoundation wrapper
     */
    public UsesA1FromFoundationWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.tc.moin.testcases.case018.__impl.UsesA1FromFoundationImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private com.sap.tc.moin.testcases.case018.__impl.UsesA1FromFoundationImpl getCastWrappedObject() {
        return (com.sap.tc.moin.testcases.case018.__impl.UsesA1FromFoundationImpl) getWrappedObject();
    }

    public com.sap.tc.moin.testcases.case018.UsesA1FromFoundation unwrap() {
        return (com.sap.tc.moin.testcases.case018.UsesA1FromFoundation) getWrappedObject();
    }
    
    public boolean exists(com.sap.tc.moin.testcasesfoundation.case001f.A1f _A1FromFoundation, com.sap.tc.moin.testcases.case018.A18 _A18) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _A1FromFoundation), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _A18));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _A1FromFoundation), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _A18)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.testcasesfoundation.case001f.A1f getA1FromFoundation(com.sap.tc.moin.testcases.case018.A18 _A18) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.testcasesfoundation.case001f.A1f) wrapResult(getCastWrappedObject().getA1FromFoundation(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _A18)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.testcasesfoundation.case001f.A1f) wrapResult(getCastWrappedObject().getA1FromFoundation(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _A18))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.testcases.case018.A18 getA18(com.sap.tc.moin.testcasesfoundation.case001f.A1f _A1FromFoundation) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.testcases.case018.A18) wrapResult(getCastWrappedObject().getA18(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _A1FromFoundation)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.testcases.case018.A18) wrapResult(getCastWrappedObject().getA18(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _A1FromFoundation))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(com.sap.tc.moin.testcasesfoundation.case001f.A1f _A1FromFoundation, com.sap.tc.moin.testcases.case018.A18 _A18) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _A1FromFoundation), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _A18));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _A1FromFoundation), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _A18)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(com.sap.tc.moin.testcasesfoundation.case001f.A1f _A1FromFoundation, com.sap.tc.moin.testcases.case018.A18 _A18) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _A1FromFoundation), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _A18));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _A1FromFoundation), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _A18)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<com.sap.tc.moin.testcases.case018.UsesA1FromFoundation> get___JmiInterface() {
        return com.sap.tc.moin.testcases.case018.UsesA1FromFoundation.class;
    }

    protected String metaObjectToString() {
        return "com.sap.tc.moin.testcases.case018.UsesA1FromFoundation (Java Type)\ntestcases.case018.usesA1FromFoundation (MOF Type)"; //$NON-NLS-1$
    }    
}