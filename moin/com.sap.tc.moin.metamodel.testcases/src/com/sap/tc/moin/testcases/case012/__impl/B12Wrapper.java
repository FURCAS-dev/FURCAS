/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.testcases.case012.__impl;

public class B12Wrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefObjectWrapperImpl<com.sap.tc.moin.testcases.case012.__impl.B12Impl> implements com.sap.tc.moin.testcases.case012.B12,com.sap.tc.moin.repository.Partitionable {

        
    private static final java.util.Map<java.lang.String, java.lang.Integer> OPERATION_IDS;
    
    static {
        
        OPERATION_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>();
        OPERATION_IDS.put("instanceOperation1", Integer.valueOf(0)); //$NON-NLS-1$
        OPERATION_IDS.put("instanceOperation2", Integer.valueOf(1)); //$NON-NLS-1$
    }

    public B12Wrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.tc.moin.testcases.case012.__impl.B12Impl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private com.sap.tc.moin.testcases.case012.__impl.B12Impl getCastWrappedObject() {
        return (com.sap.tc.moin.testcases.case012.__impl.B12Impl) getWrappedObject();
    }
    
    public com.sap.tc.moin.testcases.case012.__impl.B12Impl unwrap() {
        return (com.sap.tc.moin.testcases.case012.__impl.B12Impl) getWrappedObject();
    }
        
    // methods for attributes
     
    // methods for references
   
    // methods for modeled operations
    public boolean instanceOperation1() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (java.lang.Boolean)___invokeOperation(connection, 0, "47A97A49D1BDF346D49311DC9F74001558C93B47", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public double instanceOperation2() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (java.lang.Double)___invokeOperation(connection, 1, "47A97A49D1BDF34AD49311DC9B5F001558C93B47", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    
    // methods for internal modeled operations
    private boolean invoke__instanceOperation1(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // begin of implementation provided in tag org.omg.sap2mof.OperationCodeJava
        // D14.instanceOperation1
        return true;
        // end of implementation provided in tag org.omg.sap2mof.OperationCodeJava
    }
    private double invoke__instanceOperation2(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // begin of implementation provided in tag org.omg.sap2mof.OperationCodeJava
        // D14.instanceOperation2
        return 4.20;
        // end of implementation provided in tag org.omg.sap2mof.OperationCodeJava
    }

    // reflective methods
    @Override
    public Object refInvokeOperation(com.sap.tc.moin.repository.core.CoreConnection connection, java.lang.String requestedOperation, java.util.List<? extends Object> args) throws com.sap.tc.moin.repository.mmi.reflect.RefException {
        if (requestedOperation == null) {
            throw new com.sap.tc.moin.repository.mmi.reflect.InvalidNameException(requestedOperation);
        }
        java.lang.Integer operationId = OPERATION_IDS.get(requestedOperation);
        if (operationId == null) {
            throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(requestedOperation, refMetaObject(), "refInvokeOperation(String)"); //$NON-NLS-1$
        }
        switch (operationId) {
                
            case 0:
                return ___invokeOperation( connection, operationId, "47A97A49D1BDF346D49311DC9F74001558C93B47", args ); //$NON-NLS-1$    
                
            case 1:
                return ___invokeOperation( connection, operationId, "47A97A49D1BDF34AD49311DC9B5F001558C93B47", args ); //$NON-NLS-1$    
            default:
                throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(requestedOperation, refMetaObject(), "refInvokeOperation(String)"); //$NON-NLS-1$
        }
    }
    
    @Override
    public Object invoke___Operation(com.sap.tc.moin.repository.core.CoreConnection connection, int operationId, java.util.List<? extends Object> args) throws com.sap.tc.moin.repository.mmi.reflect.RefException {
        switch (operationId) {
                
            case 0:
                return invoke__instanceOperation1(connection);    
                
            case 1:
                return invoke__instanceOperation2(connection);    
            default:
                throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException( operationId, refMetaObject( ), "invoke___Operation(int)"); //$NON-NLS-1$
        }
    
    }    

    // get the JMI interface
    public java.lang.Class<com.sap.tc.moin.testcases.case012.B12> get___JmiInterface() {
        return com.sap.tc.moin.testcases.case012.B12.class;
    }

    // to String
    protected String metaObjectToString() {
        return "com.sap.tc.moin.testcases.case012.B12 (Java Type)\ntestcases.case012.B12 (MOF Type)"; //$NON-NLS-1$
    }    
}