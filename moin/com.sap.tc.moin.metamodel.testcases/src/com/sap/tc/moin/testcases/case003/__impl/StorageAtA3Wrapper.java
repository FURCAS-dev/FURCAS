/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.testcases.case003.__impl;

public class StorageAtA3Wrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<com.sap.tc.moin.testcases.case003.StorageAtA3> implements com.sap.tc.moin.testcases.case003.StorageAtA3,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The StorageAtA3 wrapper
     */
    public StorageAtA3Wrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.tc.moin.testcases.case003.__impl.StorageAtA3Impl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private com.sap.tc.moin.testcases.case003.__impl.StorageAtA3Impl getCastWrappedObject() {
        return (com.sap.tc.moin.testcases.case003.__impl.StorageAtA3Impl) getWrappedObject();
    }

    public com.sap.tc.moin.testcases.case003.StorageAtA3 unwrap() {
        return (com.sap.tc.moin.testcases.case003.StorageAtA3) getWrappedObject();
    }
    
    public boolean exists(com.sap.tc.moin.testcases.case003.A3 _Z, com.sap.tc.moin.testcases.case003.B3 _B3) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Z), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _B3));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Z), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _B3)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.testcases.case003.A3 getZ(com.sap.tc.moin.testcases.case003.B3 _B3) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.testcases.case003.A3) wrapResult(getCastWrappedObject().getZ(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _B3)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.testcases.case003.A3) wrapResult(getCastWrappedObject().getZ(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _B3))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.testcases.case003.B3 getB3(com.sap.tc.moin.testcases.case003.A3 _Z) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.testcases.case003.B3) wrapResult(getCastWrappedObject().getB3(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Z)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.testcases.case003.B3) wrapResult(getCastWrappedObject().getB3(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Z))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(com.sap.tc.moin.testcases.case003.A3 _Z, com.sap.tc.moin.testcases.case003.B3 _B3) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Z), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _B3));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Z), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _B3)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(com.sap.tc.moin.testcases.case003.A3 _Z, com.sap.tc.moin.testcases.case003.B3 _B3) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Z), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _B3));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Z), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _B3)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<com.sap.tc.moin.testcases.case003.StorageAtA3> get___JmiInterface() {
        return com.sap.tc.moin.testcases.case003.StorageAtA3.class;
    }

    protected String metaObjectToString() {
        return "com.sap.tc.moin.testcases.case003.StorageAtA3 (Java Type)\ntestcases.case003.StorageAtA3 (MOF Type)"; //$NON-NLS-1$
    }    
}