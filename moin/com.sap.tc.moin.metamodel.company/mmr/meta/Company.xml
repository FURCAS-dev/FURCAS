<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<!-- <!DOCTYPE XMI SYSTEM 'Model1311.DTD' > -->
<XMI xmi.version = '1.1' xmlns:Model='omg.org/mof.Model/1.3' timestamp = 'Fri Feb 29 14:39:31 2008' >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>Unisys.JCR.1</XMI.exporter>
   <XMI.exporterVersion>1.3.2</XMI.exporterVersion>
  </XMI.documentation>
  <XMI.metamodel xmi.name = 'org.omg.mof.Model' xmi.version = '1.3'/>
 </XMI.header>
<XMI.content>
<!-- ==================== Company    [Package] ==================== -->
<Model:Package xmi.id = 'a434FA8E20378' 
  name = 'Company' annotation = '' 
  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' >
  <Model:Namespace.contents>
    <!-- ==================== Company.org.omg.mof.idl_prefix=com.sap    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.15' 
      name = 'org.omg.mof.idl_prefix=com.sap' annotation = '' 
      tagId = 'org.omg.mof.idl_prefix' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>com.sap</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xml:link = 'simple' href = 'Company.xml|a434FA8E20378'/>
      </Model:Tag.elements>
    </Model:Tag>
    <Model:Import xmi.id = 'G.16' 
      name = 'PrimitiveTypes' annotation = '' 
      visibility = 'public_vis' isClustered = 'true' >
      <Model:Import.importedNamespace>
        <Model:Namespace xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B5389EE0204'/>
      </Model:Import.importedNamespace>
    </Model:Import>
    <!-- ==================== Company.Employee    [Class] ==================== -->
    <Model:Class xmi.id = 'a434FA90702E2' 
      name = 'Employee' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:ModelElement.constraints>
        <Model:Constraint xmi.idref = 'a45388A220203'/>  <!-- Company.Employee.Boss10YearsOlderThanEmployee -->
        <Model:Constraint xmi.idref = 'a45388B4F031F'/>  <!-- Company.Employee.Secretary10YearsOlderThanBoss -->
        <Model:Constraint xmi.idref = 'a44F705CE0221'/>  <!-- Company.Employee.UniqueNames -->
        <Model:Constraint xmi.idref = 'a44F706C50035'/>  <!-- Company.Employee.BossIsOldest -->
        <Model:Constraint xmi.idref = 'a44F7079A002A'/>  <!-- Company.Employee.DivisionBossSecretary -->
        <Model:Constraint xmi.idref = 'a44F7080E03BD'/>  <!-- Company.Employee.SecretaryOlderThanBoss -->
      </Model:ModelElement.constraints>
      <Model:Namespace.contents>
        <!-- ==================== Company.Employee.name    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a434FA95100A8' 
          name = 'name' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== Company.Employee.age    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a434FA958023A' 
          name = 'age' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== Company.Employee.salary    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a434FA95D01DE' 
          name = 'salary' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== Company.Employee.employer    [Reference] ==================== -->
        <Model:Reference xmi.id = 'a434FABB303A3' 
          name = 'employer' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a434FA90E01B7'/>  <!-- Company.Department -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a434FA9BC0307'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== Company.Employee.managed    [Reference] ==================== -->
        <Model:Reference xmi.id = 'a434FABCC01D3' 
          name = 'managed' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a434FA90E01B7'/>  <!-- Company.Department -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a434FAB8201AE'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== Company.Employee.directed    [Reference] ==================== -->
        <Model:Reference xmi.id = 'a438F32540055' 
          name = 'directed' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a438F3013025D'/>  <!-- Company.Division -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a438F320B03C0'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== Company.Employee.secretary    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a438FFDB20046' 
          name = 'secretary' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a434FA90702E2'/>  <!-- Company.Employee -->
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== Company.Employee.UniqueNames    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a44F705CE0221' 
          name = 'UniqueNames' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Employee
inv UniqueNames:
Employee.allInstances()-&gt;forAll(e | e &lt;&gt; self implies e.name &lt;&gt; self.name)</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a434FA90702E2'/>  <!-- Company.Employee -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== Company.Employee.BossIsOldest    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a44F706C50035' 
          name = 'BossIsOldest' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Employee
inv BossIsOldest:
self.age &lt;= self.employer.boss.age</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a434FA90702E2'/>  <!-- Company.Employee -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== Company.Employee.DivisionBossSecretary    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a44F7079A002A' 
          name = 'DivisionBossSecretary' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Employee
inv divBossSecretary:
if self.directed-&gt;isEmpty() then
self.secretary.oclIsUndefined()
else
not self.secretary.oclIsUndefined()
endif</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a434FA90702E2'/>  <!-- Company.Employee -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== Company.Employee.SecretaryOlderThanBoss    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a44F7080E03BD' 
          name = 'SecretaryOlderThanBoss' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Employee
inv secretaryOlderThanBoss:
if self.directed-&gt;notEmpty() and
not self.secretary.oclIsUndefined() then
self.age &lt; self.secretary.age 
else true
endif</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a434FA90702E2'/>  <!-- Company.Employee -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== Company.Employee.Boss10YearsOlderThanEmployee    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a45388A220203' 
          name = 'Boss10YearsOlderThanEmployee' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Employee
inv Boss10YearsOlderThanEmployee:
self.age + 10 &lt;= self.employer.boss.age</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a434FA90702E2'/>  <!-- Company.Employee -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== Company.Employee.Secretary10YearsOlderThanBoss    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a45388B4F031F' 
          name = 'Secretary10YearsOlderThanBoss' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Employee
inv Secretary10YearsOlderThanBoss:
if self.directed-&gt;notEmpty() and
not self.secretary.oclIsUndefined() then
self.age + 10 &lt; self.secretary.age 
else true
endif</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a434FA90702E2'/>  <!-- Company.Employee -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== Company.org.omg.sap2mof.deferredConstraintViolationSeverity=Warning    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.17' 
      name = 'org.omg.sap2mof.deferredConstraintViolationSeverity=Warning' annotation = '' 
      tagId = 'org.omg.sap2mof.deferredConstraintViolationSeverity' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>Warning</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xmi.idref = 'a45388A220203'/>  <!-- Company.Employee.Boss10YearsOlderThanEmployee -->
        <Model:ModelElement xmi.idref = 'a45388B4F031F'/>  <!-- Company.Employee.Secretary10YearsOlderThanBoss -->
        <Model:ModelElement xmi.idref = 'a4538898A0049'/>  <!-- Company.Freelance.ValidAssignmentWarning -->
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== Company.org.omg.sap2mof.constraintCategory=yellow    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.18' 
      name = 'org.omg.sap2mof.constraintCategory=yellow' annotation = '' 
      tagId = 'org.omg.sap2mof.constraintCategory' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>yellow</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xmi.idref = 'a45388A220203'/>  <!-- Company.Employee.Boss10YearsOlderThanEmployee -->
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== Company.org.omg.sap2mof.constraintCategory=green    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.19' 
      name = 'org.omg.sap2mof.constraintCategory=green' annotation = '' 
      tagId = 'org.omg.sap2mof.constraintCategory' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>green</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xmi.idref = 'a45388B4F031F'/>  <!-- Company.Employee.Secretary10YearsOlderThanBoss -->
        <Model:ModelElement xmi.idref = 'a44F6DCE5018D'/>  <!-- Company.Department.OldEmployee -->
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== Company.Department    [Class] ==================== -->
    <Model:Class xmi.id = 'a434FA90E01B7' 
      name = 'Department' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:ModelElement.constraints>
        <Model:Constraint xmi.idref = 'a45388BBE0375'/>  <!-- Company.Department.MaxJuniorsWarning -->
        <Model:Constraint xmi.idref = 'a44F6DC530321'/>  <!-- Company.Department.NotBossFreelance -->
        <Model:Constraint xmi.idref = 'a44F6DCE5018D'/>  <!-- Company.Department.OldEmployee -->
        <Model:Constraint xmi.idref = 'a44F6DD4E015F'/>  <!-- Company.Department.MaxJuniors -->
        <Model:Constraint xmi.idref = 'a44F6DDC200D4'/>  <!-- Company.Department.BossHighestSalary -->
        <Model:Constraint xmi.idref = 'a44F6DEE101F1'/>  <!-- Company.Department.Boss10YearsOlderThanJunior -->
        <Model:Constraint xmi.idref = 'a44FBC4D10016'/>  <!-- Company.Department.ExpensesRestriction -->
      </Model:ModelElement.constraints>
      <Model:Namespace.contents>
        <!-- ==================== Company.Department.name    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a434FA91D0193' 
          name = 'name' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== Company.Department.maxJuniors    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a434FA92403C6' 
          name = 'maxJuniors' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== Company.Department.budget    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a434FA92D004F' 
          name = 'budget' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== Company.Department.employee    [Reference] ==================== -->
        <Model:Reference xmi.id = 'a434FAB3A03B8' 
          name = 'employee' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a434FA90702E2'/>  <!-- Company.Employee -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a434FA9BC0305'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== Company.Department.boss    [Reference] ==================== -->
        <Model:Reference xmi.id = 'a434FAB5301C0' 
          name = 'boss' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a434FA90702E2'/>  <!-- Company.Employee -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a434FAB8201AC'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== Company.Department.calcExpenses    [Operation] ==================== -->
        <Model:Operation xmi.id = 'a4517EB240252' 
          name = 'calcExpenses' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isQuery = 'true' >
          <Model:Namespace.contents>
            <Model:Parameter xmi.id = 'XX.1' 
              name = '*return' annotation = '' 
              direction = 'return_dir' >
              <Model:Parameter.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:Parameter.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
              </Model:TypedElement.type>
            </Model:Parameter>
          </Model:Namespace.contents>
        </Model:Operation>
        <!-- ==================== Company.Department.NotBossFreelance    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a44F6DC530321' 
          name = 'NotBossFreelance' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Department
inv NotBossFreelance: 
not self.boss.oclIsTypeOf(Freelance)</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a434FA90E01B7'/>  <!-- Company.Department -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== Company.Department.OldEmployee    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a44F6DCE5018D' 
          name = 'OldEmployee' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Department
inv OldEmployee:
self.employee-&gt;exists(e | e.age &gt; 45)</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a434FA90E01B7'/>  <!-- Company.Department -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== Company.Department.MaxJuniors    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a44F6DD4E015F' 
          name = 'MaxJuniors' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Department
inv MaxJuniors:
self.employee-&gt;select(e|e.age &lt; 25)-&gt;size()
&lt;self.maxJuniors</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a434FA90E01B7'/>  <!-- Company.Department -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== Company.Department.BossHighestSalary    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a44F6DDC200D4' 
          name = 'BossHighestSalary' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Department
inv BossHighestSalary:
self.employee-&gt;select(e|e.salary &gt;= self.boss.salary)-&gt;size() &lt;= 1</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a434FA90E01B7'/>  <!-- Company.Department -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== Company.Department.Boss10YearsOlderThanJunior    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a44F6DEE101F1' 
          name = 'Boss10YearsOlderThanJunior' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Department
inv boss10YearsOlderThanJunior:
let t:Tuple(boss:Employee,junior:Employee)=
Tuple{boss=self.boss, junior=self.employee-&gt;sortedBy(age)-&gt;first()} in
t.boss.age &gt; t.junior.age + 10</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a434FA90E01B7'/>  <!-- Company.Department -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== Company.Department.ExpensesRestriction    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a44FBC4D10016' 
          name = 'ExpensesRestriction' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Department
inv BudgetRestriction:
self.calcExpenses() &lt;= self.budget</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a434FA90E01B7'/>  <!-- Company.Department -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== Company.Department.MaxJuniorsWarning    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a45388BBE0375' 
          name = 'MaxJuniorsWarning' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Department
inv MaxJuniorsWarning:
if self.maxJuniors &gt; 1
then
self.employee-&gt;select(e|e.age &lt; 25)-&gt;size()
&lt;self.maxJuniors - 1
else
true
endif</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a434FA90E01B7'/>  <!-- Company.Department -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== Company.org.omg.sap2mof.OperationCodeOcl=context Department::calcExpenses():Integer...    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.20' 
      name = 'org.omg.sap2mof.OperationCodeOcl=context Department::calcExpenses():Integer...' annotation = '' 
      tagId = 'org.omg.sap2mof.OperationCodeOcl' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>context Department::calcExpenses():Integer
body:
self.employee-&gt;iterate(e; sum=0 | sum + e.salary) + self.boss.salary</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xmi.idref = 'a4517EB240252'/>  <!-- Company.Department.calcExpenses -->
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== Company.org.omg.sap2mof.violationMessageExpression='Department '.concat(self.name).concat(' has too many Juniors')    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.21' 
      name = 'org.omg.sap2mof.violationMessageExpression=&apos;Department &apos;.concat(self.name).concat(&apos; has too many Juniors&apos;)' annotation = '' 
      tagId = 'org.omg.sap2mof.violationMessageExpression' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>'Department '.concat(self.name).concat(' has too many Juniors')</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xmi.idref = 'a44F6DD4E015F'/>  <!-- Company.Department.MaxJuniors -->
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== Company.org.omg.sap2mof.violationMessageExpression='The Junior must at least be 10 years younger than the boss'    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.22' 
      name = 'org.omg.sap2mof.violationMessageExpression=&apos;The Junior must at least be 10 years younger than the boss&apos;' annotation = '' 
      tagId = 'org.omg.sap2mof.violationMessageExpression' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>'The Junior must at least be 10 years younger than the boss'</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xmi.idref = 'a44F6DEE101F1'/>  <!-- Company.Department.Boss10YearsOlderThanJunior -->
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== Company.org.omg.sap2mof.violationMessageExpression='Department \'\'{0}\'\' is supposed have at most {1} juniors; right now, there are {2} juniors assigned'//...    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.23' 
      name = 'org.omg.sap2mof.violationMessageExpression=&apos;Department \&apos;\&apos;{0}\&apos;\&apos; is supposed have at most {1} juniors; right now, there are {2} juniors assigned&apos;//...' annotation = '' 
      tagId = 'org.omg.sap2mof.violationMessageExpression' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>'Department \'\'{0}\'\' is supposed have at most {1} juniors; right now, there are {2} juniors assigned'//
self.name//
self.maxJuniors//
self.employee-&gt;select(e|e.age &lt; 25)-&gt;size()
</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xmi.idref = 'a45388BBE0375'/>  <!-- Company.Department.MaxJuniorsWarning -->
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== Company.Freelance    [Class] ==================== -->
    <Model:Class xmi.id = 'a434FA91500A0' 
      name = 'Freelance' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:ModelElement.constraints>
        <Model:Constraint xmi.idref = 'a4538898A0049'/>  <!-- Company.Freelance.ValidAssignmentWarning -->
        <Model:Constraint xmi.idref = 'a44F7064B0135'/>  <!-- Company.Freelance.ValidAssignment -->
        <Model:Constraint xmi.idref = 'a47B2E1A40186'/>  <!-- Company.StudentAndFreelancesAge -->
      </Model:ModelElement.constraints>
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a434FA90702E2'/>  <!-- Company.Employee -->
      </Model:GeneralizableElement.supertypes>
      <Model:Namespace.contents>
        <!-- ==================== Company.Freelance.assignment    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a434FA9650169' 
          name = 'assignment' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== Company.Freelance.ValidAssignment    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a44F7064B0135' 
          name = 'ValidAssignment' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Freelance
inv ValidAssignment:
self.assignment &gt;= 5 and self.assignment &lt;= 30</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a434FA91500A0'/>  <!-- Company.Freelance -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== Company.Freelance.ValidAssignmentWarning    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a4538898A0049' 
          name = 'ValidAssignmentWarning' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Freelance
inv ValidAssignmentWarning:
self.assignment &gt;= 5 and self.assignment &lt;= 40</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a434FA91500A0'/>  <!-- Company.Freelance -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== Company.org.omg.sap2mof.constraintCategory=black red    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.24' 
      name = 'org.omg.sap2mof.constraintCategory=black red' annotation = '' 
      tagId = 'org.omg.sap2mof.constraintCategory' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>black red</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xmi.idref = 'a44F7064B0135'/>  <!-- Company.Freelance.ValidAssignment -->
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== Company.org.omg.sap2mof.constraintCategory=yellow red    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.25' 
      name = 'org.omg.sap2mof.constraintCategory=yellow red' annotation = '' 
      tagId = 'org.omg.sap2mof.constraintCategory' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>yellow red</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xmi.idref = 'a4538898A0049'/>  <!-- Company.Freelance.ValidAssignmentWarning -->
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== Company.Division    [Class] ==================== -->
    <Model:Class xmi.id = 'a438F3013025D' 
      name = 'Division' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:ModelElement.constraints>
        <Model:Constraint xmi.idref = 'a44F7073202F4'/>  <!-- Company.Division.NastyConstraint -->
      </Model:ModelElement.constraints>
      <Model:Namespace.contents>
        <!-- ==================== Company.Division.name    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a438F302D021F' 
          name = 'name' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== Company.Division.department    [Reference] ==================== -->
        <Model:Reference xmi.id = 'a438F318A03B8' 
          name = 'department' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a434FA90E01B7'/>  <!-- Company.Department -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a438F30E4003B'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== Company.Division.director    [Reference] ==================== -->
        <Model:Reference xmi.id = 'a438F32B00082' 
          name = 'director' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a434FA90702E2'/>  <!-- Company.Employee -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a438F320B03B6'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== Company.Division.budget    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a438F32D602B8' 
          name = 'budget' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== Company.Division.NastyConstraint    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a44F7073202F4' 
          name = 'NastyConstraint' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Division
inv nasty:
self.department-&gt;collect(d| 
d.employee-&gt;including(d.boss)).salary-&gt;sum() &lt; budget</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a438F3013025D'/>  <!-- Company.Division -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== Company.Student    [Class] ==================== -->
    <Model:Class xmi.id = 'a47B2E18103A9' 
      name = 'Student' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:ModelElement.constraints>
        <Model:Constraint xmi.idref = 'a47B2E1A40186'/>  <!-- Company.StudentAndFreelancesAge -->
      </Model:ModelElement.constraints>
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a434FA90702E2'/>  <!-- Company.Employee -->
      </Model:GeneralizableElement.supertypes>
    </Model:Class>
    <!-- ==================== Company.StudentAndFreelancesAge    [Constraint] ==================== -->
    <Model:Constraint xmi.id = 'a47B2E1A40186' 
      name = 'StudentAndFreelancesAge' annotation = '' 
      language = 'OCL' evaluationPolicy = 'deferred' >
      <Model:Constraint.expression>
        <XMI.any xmi.type = 'string' xmi.name = ''>context Employee
inv: self.age &lt; 40</XMI.any>
      </Model:Constraint.expression>
      <Model:Constraint.constrainedElements>
        <Model:ModelElement xmi.idref = 'a47B2E18103A9'/>  <!-- Company.Student -->
        <Model:ModelElement xmi.idref = 'a434FA91500A0'/>  <!-- Company.Freelance -->
      </Model:Constraint.constrainedElements>
    </Model:Constraint>
    <!-- ==================== Company.WorksIn    [Association] ==================== -->
    <Model:Association xmi.id = 'a434FA9BB037B' 
      name = 'WorksIn' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a434FA9BC0305' 
          name = 'employee' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a434FA90702E2'/>  <!-- Company.Employee -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a434FA9BC0307' 
          name = 'employer' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a434FA90E01B7'/>  <!-- Company.Department -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== Company.org.omg.sap2mof.store=yes    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.26' 
      name = 'org.omg.sap2mof.store=yes' annotation = '' 
      tagId = 'org.omg.sap2mof.store' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>yes</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xmi.idref = 'a434FA9BC0305'/>
        <Model:ModelElement xmi.idref = 'a434FAB8201AC'/>
        <Model:ModelElement xmi.idref = 'a438F320B03B6'/>
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== Company.org.omg.sap2mof.store=no    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.27' 
      name = 'org.omg.sap2mof.store=no' annotation = '' 
      tagId = 'org.omg.sap2mof.store' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>no</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xmi.idref = 'a434FA9BC0307'/>
        <Model:ModelElement xmi.idref = 'a434FAB8201AE'/>
        <Model:ModelElement xmi.idref = 'a438F320B03C0'/>
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== Company.Manages    [Association] ==================== -->
    <Model:Association xmi.id = 'a434FAB8102E1' 
      name = 'Manages' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a434FAB8201AC' 
          name = 'boss' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a434FA90702E2'/>  <!-- Company.Employee -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a434FAB8201AE' 
          name = 'managed' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a434FA90E01B7'/>  <!-- Company.Department -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== Company.Divides    [Association] ==================== -->
    <Model:Association xmi.id = 'a438F30E3013E' 
      name = 'Divides' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a438F30E4003B' 
          name = 'department' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a434FA90E01B7'/>  <!-- Company.Department -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a438F30E40045' 
          name = 'division' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a438F3013025D'/>  <!-- Company.Division -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== Company.Directs    [Association] ==================== -->
    <Model:Association xmi.id = 'a438F320B00D1' 
      name = 'Directs' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a438F320B03B6' 
          name = 'director' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a434FA90702E2'/>  <!-- Company.Employee -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a438F320B03C0' 
          name = 'directed' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a438F3013025D'/>  <!-- Company.Division -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
  </Model:Namespace.contents>
</Model:Package>
</XMI.content>
</XMI>
