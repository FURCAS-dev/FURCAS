/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.ide.metamodel.webdynpro.component.viewset;

/**
 * Abstract superclass for view areas and view container assignments. Represents the assignment of "hole" with a view instance or a viewset.
 * This interface is not intended to be implemented by clients.
 */
public interface Placeholder extends com.sap.ide.metamodel.common.CommonDevelopmentObject {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.ide.metamodel.webdynpro.component.viewset.Placeholder> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.ide.metamodel.webdynpro.component.viewset.Placeholder>("45DDACEE064BC1074A2B49A01D1F8E8E72B88AD5", "sap.com/tc/moin/webdynpro", "WebDynpro", "component", "viewset", "Placeholder"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 

    
    // references
    public java.util.List<com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetHierarchyNode> getEmbeddedNodes() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetHierarchyNode getOwner() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setOwner(com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetHierarchyNode newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetHierarchyNode getDefaultNode() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setDefaultNode(com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetHierarchyNode newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.ide.metamodel.webdynpro.component.view.ViewContainer getViewContainer() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setViewContainer(com.sap.ide.metamodel.webdynpro.component.view.ViewContainer newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.ide.metamodel.webdynpro.component.view.ViewContainer getWindowViewContainer() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setWindowViewContainer(com.sap.ide.metamodel.webdynpro.component.view.ViewContainer newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.lang.String> NAME( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>templateInstances</code> reference.
         * @return  the descriptor for the <code>templateInstances</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.util.List<com.sap.ide.metamodel.common.template.EmbeddedTemplateInstance>> TEMPLATE_INSTANCES( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.TEMPLATE_INSTANCES( );
        }
        /**
         * Returns the descriptor for the <code>diagrams</code> reference.
         * @return  the descriptor for the <code>diagrams</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.util.List<com.sap.ide.metamodel.common.diagram.EmbeddedDiagram>> DIAGRAMS( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.DIAGRAMS( );
        }
        /**
         * Returns the descriptor for the <code>documentationObject</code> reference.
         * @return  the descriptor for the <code>documentationObject</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,com.sap.ide.metamodel.common.DocumentationObject> DOCUMENTATION_OBJECT( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.DOCUMENTATION_OBJECT( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.viewset.Placeholder,java.util.List<com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetHierarchyNode>> __embeddedNodes;
        /**
         * Returns the descriptor for the <code>embeddedNodes</code> reference.
         * @return  the descriptor for the <code>embeddedNodes</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.viewset.Placeholder,java.util.List<com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetHierarchyNode>> EMBEDDED_NODES( ) {
            if ( __embeddedNodes == null ) {
                __embeddedNodes = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.viewset.Placeholder,java.util.List<com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetHierarchyNode>>( "45DDACEE5B06EA2313A44681072EE3E1C4F32961", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "component", "viewset", "Placeholder", "EmbeddedNodes" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __embeddedNodes;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.viewset.Placeholder,com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetHierarchyNode> __owner;
        /**
         * Returns the descriptor for the <code>owner</code> reference.
         * @return  the descriptor for the <code>owner</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.viewset.Placeholder,com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetHierarchyNode> OWNER( ) {
            if ( __owner == null ) {
                __owner = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.viewset.Placeholder,com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetHierarchyNode>( "45DDACEEFB812AC23C354F883BC7E73EF4278F27", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "component", "viewset", "Placeholder", "Owner" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __owner;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.viewset.Placeholder,com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetHierarchyNode> __defaultNode;
        /**
         * Returns the descriptor for the <code>defaultNode</code> reference.
         * @return  the descriptor for the <code>defaultNode</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.viewset.Placeholder,com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetHierarchyNode> DEFAULT_NODE( ) {
            if ( __defaultNode == null ) {
                __defaultNode = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.viewset.Placeholder,com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetHierarchyNode>( "45DDACEE1B419136801443D11AB89C5D7310D746", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "component", "viewset", "Placeholder", "DefaultNode" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __defaultNode;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.viewset.Placeholder,com.sap.ide.metamodel.webdynpro.component.view.ViewContainer> __viewContainer;
        /**
         * Returns the descriptor for the <code>viewContainer</code> reference.
         * @return  the descriptor for the <code>viewContainer</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.viewset.Placeholder,com.sap.ide.metamodel.webdynpro.component.view.ViewContainer> VIEW_CONTAINER( ) {
            if ( __viewContainer == null ) {
                __viewContainer = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.viewset.Placeholder,com.sap.ide.metamodel.webdynpro.component.view.ViewContainer>( "45DDACEE9F1F6B2E99BC482137B798119D785770", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "component", "viewset", "Placeholder", "ViewContainer" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __viewContainer;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.viewset.Placeholder,com.sap.ide.metamodel.webdynpro.component.view.ViewContainer> __windowViewContainer;
        /**
         * Returns the descriptor for the <code>windowViewContainer</code> reference.
         * @return  the descriptor for the <code>windowViewContainer</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.viewset.Placeholder,com.sap.ide.metamodel.webdynpro.component.view.ViewContainer> WINDOW_VIEW_CONTAINER( ) {
            if ( __windowViewContainer == null ) {
                __windowViewContainer = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.viewset.Placeholder,com.sap.ide.metamodel.webdynpro.component.view.ViewContainer>( "45DDACEECE3FB174B4FC4ECB264AABCEC99039DC", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "component", "viewset", "Placeholder", "WindowViewContainer" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 
            }
            return __windowViewContainer;
        }
    }
}    