/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.ide.metamodel.webdynpro.configuration.__impl;

public class AOutgoingAssociationsParentObjectWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<com.sap.ide.metamodel.webdynpro.configuration.AOutgoingAssociationsParentObject> implements com.sap.ide.metamodel.webdynpro.configuration.AOutgoingAssociationsParentObject,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The AOutgoingAssociationsParentObject wrapper
     */
    public AOutgoingAssociationsParentObjectWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.ide.metamodel.webdynpro.configuration.__impl.AOutgoingAssociationsParentObjectImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private com.sap.ide.metamodel.webdynpro.configuration.__impl.AOutgoingAssociationsParentObjectImpl getCastWrappedObject() {
        return (com.sap.ide.metamodel.webdynpro.configuration.__impl.AOutgoingAssociationsParentObjectImpl) getWrappedObject();
    }

    public com.sap.ide.metamodel.webdynpro.configuration.AOutgoingAssociationsParentObject unwrap() {
        return (com.sap.ide.metamodel.webdynpro.configuration.AOutgoingAssociationsParentObject) getWrappedObject();
    }
    
    public boolean exists(com.sap.ide.metamodel.webdynpro.configuration.ConfigAssociation _OutgoingAssociations, com.sap.ide.metamodel.webdynpro.configuration.ConfigurationObject _ParentObject) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OutgoingAssociations), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParentObject));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OutgoingAssociations), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParentObject)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.List getOutgoingAssociations(com.sap.ide.metamodel.webdynpro.configuration.ConfigurationObject _ParentObject) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.List) wrapResult(getCastWrappedObject().getOutgoingAssociations(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParentObject)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.List) wrapResult(getCastWrappedObject().getOutgoingAssociations(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParentObject))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.ide.metamodel.webdynpro.configuration.ConfigurationObject getParentObject(com.sap.ide.metamodel.webdynpro.configuration.ConfigAssociation _OutgoingAssociations) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.ide.metamodel.webdynpro.configuration.ConfigurationObject) wrapResult(getCastWrappedObject().getParentObject(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OutgoingAssociations)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.ide.metamodel.webdynpro.configuration.ConfigurationObject) wrapResult(getCastWrappedObject().getParentObject(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OutgoingAssociations))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(com.sap.ide.metamodel.webdynpro.configuration.ConfigAssociation _OutgoingAssociations, com.sap.ide.metamodel.webdynpro.configuration.ConfigurationObject _ParentObject) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OutgoingAssociations), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParentObject));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OutgoingAssociations), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParentObject)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(com.sap.ide.metamodel.webdynpro.configuration.ConfigAssociation _OutgoingAssociations, com.sap.ide.metamodel.webdynpro.configuration.ConfigurationObject _ParentObject) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OutgoingAssociations), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParentObject));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OutgoingAssociations), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParentObject)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<com.sap.ide.metamodel.webdynpro.configuration.AOutgoingAssociationsParentObject> get___JmiInterface() {
        return com.sap.ide.metamodel.webdynpro.configuration.AOutgoingAssociationsParentObject.class;
    }

    protected String metaObjectToString() {
        return "com.sap.ide.metamodel.webdynpro.configuration.AOutgoingAssociationsParentObject (Java Type)\nWebDynpro.configuration.A_OutgoingAssociations_ParentObject (MOF Type)"; //$NON-NLS-1$
    }    
}