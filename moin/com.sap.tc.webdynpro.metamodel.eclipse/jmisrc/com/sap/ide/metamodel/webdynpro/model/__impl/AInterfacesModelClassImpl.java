/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.ide.metamodel.webdynpro.model.__impl;

public final class AInterfacesModelClassImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationImpl
{
    // default constructor
    public AInterfacesModelClassImpl() {
        super();
    }

    // specific constructor
    public AInterfacesModelClassImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Interfaces, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ModelClass) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return exists(get___CurrentConnection(), _Interfaces, _ModelClass);
    }
    public boolean exists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Interfaces, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ModelClass) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return ___existsMultN( connection, _ModelClass, _Interfaces, "45DDACEFEBE8CD34503F456C1418B9558A5AC599"); //$NON-NLS-1$
    }
    public java.util.List<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getInterfaces(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ModelClass) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getInterfaces(get___CurrentConnection(), _ModelClass);
    }
    public java.util.List<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getInterfaces(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ModelClass) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.List<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject>) ___getElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _ModelClass, get___EndAndMetaObject( 1 ) );
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getModelClass(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Interfaces) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getModelClass(get___CurrentConnection(), _Interfaces);
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getModelClass(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Interfaces) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject>) ___queryElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _Interfaces, get___EndAndMetaObject( 0 ) );
    }
    public boolean add(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Interfaces, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ModelClass) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_Interfaces, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_ModelClass);
    }
    public boolean add(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Interfaces, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ModelClass) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Interfaces, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_ModelClass);
    }
    public boolean remove(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Interfaces, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ModelClass) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_Interfaces, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_ModelClass);
    }
    public boolean remove(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Interfaces, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ModelClass) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Interfaces, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_ModelClass);
    }
    public boolean refLinkExists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefObject firstEnd, com.sap.tc.moin.repository.mmi.reflect.RefObject secondEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        if ( firstEnd == null || secondEnd == null ) { return false; }
        checkTypesForRefLinkExists( connection, firstEnd, secondEnd );
        return exists( connection, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) firstEnd, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) secondEnd );
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<com.sap.ide.metamodel.webdynpro.model.AInterfacesModelClass> get___JmiInterface() {
        return com.sap.ide.metamodel.webdynpro.model.AInterfacesModelClass.class;
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<com.sap.ide.metamodel.webdynpro.model.AInterfacesModelClass> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new com.sap.ide.metamodel.webdynpro.model.__impl.AInterfacesModelClassWrapper(conn, this, synchronize);
    }
}