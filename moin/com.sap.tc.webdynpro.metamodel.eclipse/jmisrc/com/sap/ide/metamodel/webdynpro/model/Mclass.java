/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.ide.metamodel.webdynpro.model;

/**
 * Represents a class of the non-ui-related application domain, typically a so-called business object.
 * This interface is not intended to be implemented by clients.
 */
public interface Mclass extends com.sap.ide.metamodel.webdynpro.base.AppClass {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.ide.metamodel.webdynpro.model.Mclass> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.ide.metamodel.webdynpro.model.Mclass>("45DDACEFEEDA99E19FAE49FE2F8DE18AE442E072", "sap.com/tc/moin/webdynpro", "WebDynpro", "model", "MClass"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // attributes
    public boolean isRootObject() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setRootObject(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isInterface() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setInterface(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isAbstract() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAbstract(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.lang.String getStereotype() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setStereotype(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public java.util.List<com.sap.ide.metamodel.webdynpro.model.ModelClassSetting> getSettings() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<com.sap.ide.metamodel.webdynpro.model.Mclass> getInterfaces() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.ide.metamodel.dictionary.datatype.DtStructure getStructure() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setStructure(com.sap.ide.metamodel.dictionary.datatype.DtStructure newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.ide.metamodel.webdynpro.model.Model getModel() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setModel(com.sap.ide.metamodel.webdynpro.model.Model newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.lang.String> NAME( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.AppClass,com.sap.ide.metamodel.webdynpro.enums.VisibilityEnum> VISIBILITY( ) {
            return com.sap.ide.metamodel.webdynpro.base.AppClass.DESCRIPTORS.VISIBILITY( );
        }
        /**
         * Returns the descriptor for the <code>codeBody</code> attribute.
         * @return  the descriptor for the <code>codeBody</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.AppClass,java.lang.String> CODE_BODY( ) {
            return com.sap.ide.metamodel.webdynpro.base.AppClass.DESCRIPTORS.CODE_BODY( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.model.Mclass,java.lang.Boolean> __isRootObject;
        /**
         * Returns the descriptor for the <code>isRootObject</code> attribute.
         * @return  the descriptor for the <code>isRootObject</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.model.Mclass,java.lang.Boolean> IS_ROOT_OBJECT( ) {
            if ( __isRootObject == null ) {
                __isRootObject = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.model.Mclass,java.lang.Boolean>( "45DDACEF671AA3AC385E4CD60FA9AD50ACE4D6E1", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "model", "MClass", "isRootObject" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __isRootObject;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.model.Mclass,java.lang.Boolean> __isInterface;
        /**
         * Returns the descriptor for the <code>isInterface</code> attribute.
         * @return  the descriptor for the <code>isInterface</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.model.Mclass,java.lang.Boolean> IS_INTERFACE( ) {
            if ( __isInterface == null ) {
                __isInterface = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.model.Mclass,java.lang.Boolean>( "45DDACEF5A47033579934DAD2376DD5661D0E978", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "model", "MClass", "isInterface" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __isInterface;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.model.Mclass,java.lang.Boolean> __isAbstract;
        /**
         * Returns the descriptor for the <code>isAbstract</code> attribute.
         * @return  the descriptor for the <code>isAbstract</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.model.Mclass,java.lang.Boolean> IS_ABSTRACT( ) {
            if ( __isAbstract == null ) {
                __isAbstract = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.model.Mclass,java.lang.Boolean>( "45DDACEFD6C1C22E71B74DB93E93CA6BEBB0B94A", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "model", "MClass", "isAbstract" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __isAbstract;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.model.Mclass,java.lang.String> __stereotype;
        /**
         * Returns the descriptor for the <code>stereotype</code> attribute.
         * @return  the descriptor for the <code>stereotype</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.model.Mclass,java.lang.String> STEREOTYPE( ) {
            if ( __stereotype == null ) {
                __stereotype = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.model.Mclass,java.lang.String>( "45DDACEF85773B31BF304532016EDE7F61146762", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "model", "MClass", "stereotype" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __stereotype;
        }
        /**
         * Returns the descriptor for the <code>templateInstances</code> reference.
         * @return  the descriptor for the <code>templateInstances</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.util.List<com.sap.ide.metamodel.common.template.EmbeddedTemplateInstance>> TEMPLATE_INSTANCES( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.TEMPLATE_INSTANCES( );
        }
        /**
         * Returns the descriptor for the <code>diagrams</code> reference.
         * @return  the descriptor for the <code>diagrams</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.util.List<com.sap.ide.metamodel.common.diagram.EmbeddedDiagram>> DIAGRAMS( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.DIAGRAMS( );
        }
        /**
         * Returns the descriptor for the <code>documentationObject</code> reference.
         * @return  the descriptor for the <code>documentationObject</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,com.sap.ide.metamodel.common.DocumentationObject> DOCUMENTATION_OBJECT( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.DOCUMENTATION_OBJECT( );
        }
        /**
         * Returns the descriptor for the <code>methods</code> reference.
         * @return  the descriptor for the <code>methods</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.AppClass,java.util.List<com.sap.ide.metamodel.webdynpro.base.Method>> METHODS( ) {
            return com.sap.ide.metamodel.webdynpro.base.AppClass.DESCRIPTORS.METHODS( );
        }
        /**
         * Returns the descriptor for the <code>properties</code> reference.
         * @return  the descriptor for the <code>properties</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.AppClass,java.util.List<com.sap.ide.metamodel.webdynpro.base.Property>> PROPERTIES( ) {
            return com.sap.ide.metamodel.webdynpro.base.AppClass.DESCRIPTORS.PROPERTIES( );
        }
        /**
         * Returns the descriptor for the <code>validators</code> reference.
         * @return  the descriptor for the <code>validators</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.AppClass,java.util.List<com.sap.ide.metamodel.webdynpro.base.Validator>> VALIDATORS( ) {
            return com.sap.ide.metamodel.webdynpro.base.AppClass.DESCRIPTORS.VALIDATORS( );
        }
        /**
         * Returns the descriptor for the <code>errorHandlers</code> reference.
         * @return  the descriptor for the <code>errorHandlers</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.AppClass,java.util.List<com.sap.ide.metamodel.webdynpro.base.ErrorHandler>> ERROR_HANDLERS( ) {
            return com.sap.ide.metamodel.webdynpro.base.AppClass.DESCRIPTORS.ERROR_HANDLERS( );
        }
        /**
         * Returns the descriptor for the <code>eventHandlers</code> reference.
         * @return  the descriptor for the <code>eventHandlers</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.AppClass,java.util.List<com.sap.ide.metamodel.webdynpro.base.EventHandler>> EVENT_HANDLERS( ) {
            return com.sap.ide.metamodel.webdynpro.base.AppClass.DESCRIPTORS.EVENT_HANDLERS( );
        }
        /**
         * Returns the descriptor for the <code>events</code> reference.
         * @return  the descriptor for the <code>events</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.AppClass,java.util.List<com.sap.ide.metamodel.webdynpro.base.CustomEvent>> EVENTS( ) {
            return com.sap.ide.metamodel.webdynpro.base.AppClass.DESCRIPTORS.EVENTS( );
        }
        /**
         * Returns the descriptor for the <code>superClass</code> reference.
         * @return  the descriptor for the <code>superClass</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.AppClass,com.sap.ide.metamodel.webdynpro.base.AppClass> SUPER_CLASS( ) {
            return com.sap.ide.metamodel.webdynpro.base.AppClass.DESCRIPTORS.SUPER_CLASS( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.model.Mclass,java.util.List<com.sap.ide.metamodel.webdynpro.model.ModelClassSetting>> __settings;
        /**
         * Returns the descriptor for the <code>settings</code> reference.
         * @return  the descriptor for the <code>settings</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.model.Mclass,java.util.List<com.sap.ide.metamodel.webdynpro.model.ModelClassSetting>> SETTINGS( ) {
            if ( __settings == null ) {
                __settings = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.model.Mclass,java.util.List<com.sap.ide.metamodel.webdynpro.model.ModelClassSetting>>( "45DDACEFBBEB9921541342BD0510B906B87DD418", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "model", "MClass", "Settings" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __settings;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.model.Mclass,java.util.List<com.sap.ide.metamodel.webdynpro.model.Mclass>> __interfaces;
        /**
         * Returns the descriptor for the <code>interfaces</code> reference.
         * @return  the descriptor for the <code>interfaces</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.model.Mclass,java.util.List<com.sap.ide.metamodel.webdynpro.model.Mclass>> INTERFACES( ) {
            if ( __interfaces == null ) {
                __interfaces = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.model.Mclass,java.util.List<com.sap.ide.metamodel.webdynpro.model.Mclass>>( "45DDACEFAF54C361543247C33AB9E9FDDB818767", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "model", "MClass", "Interfaces" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __interfaces;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.model.Mclass,com.sap.ide.metamodel.dictionary.datatype.DtStructure> __structure;
        /**
         * Returns the descriptor for the <code>structure</code> reference.
         * @return  the descriptor for the <code>structure</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.model.Mclass,com.sap.ide.metamodel.dictionary.datatype.DtStructure> STRUCTURE( ) {
            if ( __structure == null ) {
                __structure = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.model.Mclass,com.sap.ide.metamodel.dictionary.datatype.DtStructure>( "45DDACEF38CF3C903C87482027B5832038FE4B59", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "model", "MClass", "Structure" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __structure;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.model.Mclass,com.sap.ide.metamodel.webdynpro.model.Model> __model;
        /**
         * Returns the descriptor for the <code>model</code> reference.
         * @return  the descriptor for the <code>model</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.model.Mclass,com.sap.ide.metamodel.webdynpro.model.Model> MODEL( ) {
            if ( __model == null ) {
                __model = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.model.Mclass,com.sap.ide.metamodel.webdynpro.model.Model>( "460CC65C9C2962B9F2724492116A8927F3D45A24", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "model", "MClass", "Model" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __model;
        }
    }
}    