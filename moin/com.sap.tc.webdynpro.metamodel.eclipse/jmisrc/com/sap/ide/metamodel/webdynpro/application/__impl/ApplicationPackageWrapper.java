/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.ide.metamodel.webdynpro.application.__impl;

public class ApplicationPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<com.sap.ide.metamodel.webdynpro.application.__impl.ApplicationPackageImpl> implements com.sap.ide.metamodel.webdynpro.application.ApplicationPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ApplicationPackage wrapper
     */
    public ApplicationPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.ide.metamodel.webdynpro.application.__impl.ApplicationPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private com.sap.ide.metamodel.webdynpro.application.__impl.ApplicationPackageImpl getCastWrappedObject() {
        return (com.sap.ide.metamodel.webdynpro.application.__impl.ApplicationPackageImpl) getWrappedObject();
    }
    
    public com.sap.ide.metamodel.webdynpro.application.__impl.ApplicationPackageImpl unwrap() {
        return (com.sap.ide.metamodel.webdynpro.application.__impl.ApplicationPackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getApplication()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getApplication(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getApplication(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getApplicationProperty()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getApplicationProperty(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getApplicationProperty(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.ide.metamodel.webdynpro.application.AApplicationPropertiesApplication getAApplicationPropertiesApplication()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.ide.metamodel.webdynpro.application.AApplicationPropertiesApplication) wrapResult(getCastWrappedObject().getAApplicationPropertiesApplication(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.ide.metamodel.webdynpro.application.AApplicationPropertiesApplication) wrapResult(getCastWrappedObject().getAApplicationPropertiesApplication(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.ide.metamodel.webdynpro.application.AStartupPlugApplication getAStartupPlugApplication()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.ide.metamodel.webdynpro.application.AStartupPlugApplication) wrapResult(getCastWrappedObject().getAStartupPlugApplication(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.ide.metamodel.webdynpro.application.AStartupPlugApplication) wrapResult(getCastWrappedObject().getAStartupPlugApplication(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.ide.metamodel.webdynpro.application.APropertyDefinitionSetsApplication getAPropertyDefinitionSetsApplication()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.ide.metamodel.webdynpro.application.APropertyDefinitionSetsApplication) wrapResult(getCastWrappedObject().getAPropertyDefinitionSetsApplication(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.ide.metamodel.webdynpro.application.APropertyDefinitionSetsApplication) wrapResult(getCastWrappedObject().getAPropertyDefinitionSetsApplication(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.ide.metamodel.webdynpro.application.APropertyDefinitionApplicationProperty getAPropertyDefinitionApplicationProperty()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.ide.metamodel.webdynpro.application.APropertyDefinitionApplicationProperty) wrapResult(getCastWrappedObject().getAPropertyDefinitionApplicationProperty(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.ide.metamodel.webdynpro.application.APropertyDefinitionApplicationProperty) wrapResult(getCastWrappedObject().getAPropertyDefinitionApplicationProperty(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.ide.metamodel.webdynpro.application.ARootComponentConfigurationApplication getARootComponentConfigurationApplication()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.ide.metamodel.webdynpro.application.ARootComponentConfigurationApplication) wrapResult(getCastWrappedObject().getARootComponentConfigurationApplication(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.ide.metamodel.webdynpro.application.ARootComponentConfigurationApplication) wrapResult(getCastWrappedObject().getARootComponentConfigurationApplication(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    @SuppressWarnings("unchecked")
    public java.lang.Class<com.sap.ide.metamodel.webdynpro.application.ApplicationPackage> get___JmiInterface() {
        return com.sap.ide.metamodel.webdynpro.application.ApplicationPackage.class;
    }
    
    protected String metaObjectToString() {
        return "com.sap.ide.metamodel.webdynpro.application.ApplicationPackage (Java Type)\nWebDynpro.application (MOF Type)"; //$NON-NLS-1$
    }
}