/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.ide.metamodel.webdynpro.enums;

public final class TextTypeEnumEnum implements com.sap.ide.metamodel.webdynpro.enums.TextTypeEnum
{
    private static final long serialVersionUID = 1L;
    
    private final static String ENUMLABELNOTFOUNDPATTERN = "Enumeration label \"{0}\" is not defined for enumeration \"{1}\""; //$NON-NLS-1$

    private static final java.util.List<String> __QUALIFIED_NAME = java.util.Collections.unmodifiableList(java.util.Arrays.asList(new String[] { "WebDynpro", "enums", "TextTypeEnum" })); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$

    public static final TextTypeEnumEnum NOT_SPECIFIED = new TextTypeEnumEnum("not_specified"); //$NON-NLS-1$
    public static final TextTypeEnumEnum LABEL = new TextTypeEnumEnum("label"); //$NON-NLS-1$
    public static final TextTypeEnumEnum CHECKBOX = new TextTypeEnumEnum("checkbox"); //$NON-NLS-1$
    public static final TextTypeEnumEnum RADIO = new TextTypeEnumEnum("radio"); //$NON-NLS-1$
    public static final TextTypeEnumEnum FRAME = new TextTypeEnumEnum("frame"); //$NON-NLS-1$
    public static final TextTypeEnumEnum LISTITEM = new TextTypeEnumEnum("listitem"); //$NON-NLS-1$
    public static final TextTypeEnumEnum MENU = new TextTypeEnumEnum("menu"); //$NON-NLS-1$
    public static final TextTypeEnumEnum MENUITEM = new TextTypeEnumEnum("menuitem"); //$NON-NLS-1$
    public static final TextTypeEnumEnum CELL = new TextTypeEnumEnum("cell"); //$NON-NLS-1$
    public static final TextTypeEnumEnum HEADING = new TextTypeEnumEnum("heading"); //$NON-NLS-1$
    public static final TextTypeEnumEnum BUTTON = new TextTypeEnumEnum("button"); //$NON-NLS-1$
    public static final TextTypeEnumEnum CAPTION = new TextTypeEnumEnum("caption"); //$NON-NLS-1$
    public static final TextTypeEnumEnum LIST = new TextTypeEnumEnum("list"); //$NON-NLS-1$
    public static final TextTypeEnumEnum TABLE_TITLE = new TextTypeEnumEnum("tableTitle"); //$NON-NLS-1$
    public static final TextTypeEnumEnum TABLE_COLUMN_HEADING = new TextTypeEnumEnum("tableColumnHeading"); //$NON-NLS-1$
    public static final TextTypeEnumEnum TABLE_ROW_HEADING = new TextTypeEnumEnum("tableRowHeading"); //$NON-NLS-1$
    public static final TextTypeEnumEnum ERROR_MESSAGE = new TextTypeEnumEnum("errorMessage"); //$NON-NLS-1$
    public static final TextTypeEnumEnum WARNING_MESSAGE = new TextTypeEnumEnum("warningMessage"); //$NON-NLS-1$
    public static final TextTypeEnumEnum INFORMATION_MESSAGE = new TextTypeEnumEnum("informationMessage"); //$NON-NLS-1$
    public static final TextTypeEnumEnum HYPERLINK = new TextTypeEnumEnum("hyperlink"); //$NON-NLS-1$
    public static final TextTypeEnumEnum LOGENTRY = new TextTypeEnumEnum("logentry"); //$NON-NLS-1$
    public static final TextTypeEnumEnum TAB_STRIP = new TextTypeEnumEnum("tabStrip"); //$NON-NLS-1$
    public static final TextTypeEnumEnum TAB = new TextTypeEnumEnum("tab"); //$NON-NLS-1$
    public static final TextTypeEnumEnum QUICK_INFO = new TextTypeEnumEnum("quickInfo"); //$NON-NLS-1$
    public static final TextTypeEnumEnum TREE_NODE = new TextTypeEnumEnum("treeNode"); //$NON-NLS-1$
    public static final TextTypeEnumEnum DEFINITION = new TextTypeEnumEnum("definition"); //$NON-NLS-1$
    public static final TextTypeEnumEnum DESCRIPTION = new TextTypeEnumEnum("description"); //$NON-NLS-1$
    public static final TextTypeEnumEnum INSTRUCTION = new TextTypeEnumEnum("instruction"); //$NON-NLS-1$
    public static final TextTypeEnumEnum TICKER = new TextTypeEnumEnum("ticker"); //$NON-NLS-1$
    public static final TextTypeEnumEnum GENERALTEXT = new TextTypeEnumEnum("generaltext"); //$NON-NLS-1$
    public static final TextTypeEnumEnum ACCESSIBILITY = new TextTypeEnumEnum("accessibility"); //$NON-NLS-1$
    public static final TextTypeEnumEnum GROUPTITLE = new TextTypeEnumEnum("grouptitle"); //$NON-NLS-1$
    public static final TextTypeEnumEnum TERM = new TextTypeEnumEnum("term"); //$NON-NLS-1$
    public static final TextTypeEnumEnum LISTBOX = new TextTypeEnumEnum("listbox"); //$NON-NLS-1$
    public static final TextTypeEnumEnum MESSAGETEXT = new TextTypeEnumEnum("messagetext"); //$NON-NLS-1$
    public static final TextTypeEnumEnum SELECTIONTEXT = new TextTypeEnumEnum("selectiontext"); //$NON-NLS-1$
    public static final TextTypeEnumEnum FAQ = new TextTypeEnumEnum("faq"); //$NON-NLS-1$
    public static final TextTypeEnumEnum FAQA = new TextTypeEnumEnum("faqa"); //$NON-NLS-1$
    public static final TextTypeEnumEnum GLOSSARYDEFINITION = new TextTypeEnumEnum("glossarydefinition"); //$NON-NLS-1$
    public static final TextTypeEnumEnum GENERALTEXTLONG = new TextTypeEnumEnum("generaltextlong"); //$NON-NLS-1$
    public static final TextTypeEnumEnum LOG_ENTRYLONG = new TextTypeEnumEnum("logEntrylong"); //$NON-NLS-1$
    public static final TextTypeEnumEnum MESSAGETEXTLONG = new TextTypeEnumEnum("messagetextlong"); //$NON-NLS-1$
    public static final TextTypeEnumEnum INFORMATIONTEXTLONG = new TextTypeEnumEnum("informationtextlong"); //$NON-NLS-1$
    public static final TextTypeEnumEnum TECHNICALTEXTLONG = new TextTypeEnumEnum("technicaltextlong"); //$NON-NLS-1$
    public static final TextTypeEnumEnum EXPLANATION = new TextTypeEnumEnum("explanation"); //$NON-NLS-1$
    public static final TextTypeEnumEnum FORMATTEDTEXT = new TextTypeEnumEnum("formattedtext"); //$NON-NLS-1$

    private static java.util.Map<String, TextTypeEnum> __labelIds = new java.util.HashMap<String, TextTypeEnum>();
    private java.lang.String __literalName;

    static {
       __labelIds.put("not_specified", NOT_SPECIFIED); //$NON-NLS-1$
       __labelIds.put("label", LABEL); //$NON-NLS-1$
       __labelIds.put("checkbox", CHECKBOX); //$NON-NLS-1$
       __labelIds.put("radio", RADIO); //$NON-NLS-1$
       __labelIds.put("frame", FRAME); //$NON-NLS-1$
       __labelIds.put("listitem", LISTITEM); //$NON-NLS-1$
       __labelIds.put("menu", MENU); //$NON-NLS-1$
       __labelIds.put("menuitem", MENUITEM); //$NON-NLS-1$
       __labelIds.put("cell", CELL); //$NON-NLS-1$
       __labelIds.put("heading", HEADING); //$NON-NLS-1$
       __labelIds.put("button", BUTTON); //$NON-NLS-1$
       __labelIds.put("caption", CAPTION); //$NON-NLS-1$
       __labelIds.put("list", LIST); //$NON-NLS-1$
       __labelIds.put("tableTitle", TABLE_TITLE); //$NON-NLS-1$
       __labelIds.put("tableColumnHeading", TABLE_COLUMN_HEADING); //$NON-NLS-1$
       __labelIds.put("tableRowHeading", TABLE_ROW_HEADING); //$NON-NLS-1$
       __labelIds.put("errorMessage", ERROR_MESSAGE); //$NON-NLS-1$
       __labelIds.put("warningMessage", WARNING_MESSAGE); //$NON-NLS-1$
       __labelIds.put("informationMessage", INFORMATION_MESSAGE); //$NON-NLS-1$
       __labelIds.put("hyperlink", HYPERLINK); //$NON-NLS-1$
       __labelIds.put("logentry", LOGENTRY); //$NON-NLS-1$
       __labelIds.put("tabStrip", TAB_STRIP); //$NON-NLS-1$
       __labelIds.put("tab", TAB); //$NON-NLS-1$
       __labelIds.put("quickInfo", QUICK_INFO); //$NON-NLS-1$
       __labelIds.put("treeNode", TREE_NODE); //$NON-NLS-1$
       __labelIds.put("definition", DEFINITION); //$NON-NLS-1$
       __labelIds.put("description", DESCRIPTION); //$NON-NLS-1$
       __labelIds.put("instruction", INSTRUCTION); //$NON-NLS-1$
       __labelIds.put("ticker", TICKER); //$NON-NLS-1$
       __labelIds.put("generaltext", GENERALTEXT); //$NON-NLS-1$
       __labelIds.put("accessibility", ACCESSIBILITY); //$NON-NLS-1$
       __labelIds.put("grouptitle", GROUPTITLE); //$NON-NLS-1$
       __labelIds.put("term", TERM); //$NON-NLS-1$
       __labelIds.put("listbox", LISTBOX); //$NON-NLS-1$
       __labelIds.put("messagetext", MESSAGETEXT); //$NON-NLS-1$
       __labelIds.put("selectiontext", SELECTIONTEXT); //$NON-NLS-1$
       __labelIds.put("faq", FAQ); //$NON-NLS-1$
       __labelIds.put("faqa", FAQA); //$NON-NLS-1$
       __labelIds.put("glossarydefinition", GLOSSARYDEFINITION); //$NON-NLS-1$
       __labelIds.put("generaltextlong", GENERALTEXTLONG); //$NON-NLS-1$
       __labelIds.put("logEntrylong", LOG_ENTRYLONG); //$NON-NLS-1$
       __labelIds.put("messagetextlong", MESSAGETEXTLONG); //$NON-NLS-1$
       __labelIds.put("informationtextlong", INFORMATIONTEXTLONG); //$NON-NLS-1$
       __labelIds.put("technicaltextlong", TECHNICALTEXTLONG); //$NON-NLS-1$
       __labelIds.put("explanation", EXPLANATION); //$NON-NLS-1$
       __labelIds.put("formattedtext", FORMATTEDTEXT); //$NON-NLS-1$
    }

    // constructor is private
    private TextTypeEnumEnum(java.lang.String literalName){
        this.__literalName = literalName;
    }

    public static TextTypeEnum forName(java.lang.String value) {
        TextTypeEnum result = __labelIds.get(value);
        if(result != null) {
            return result;
        }
        String message = new java.text.MessageFormat( ENUMLABELNOTFOUNDPATTERN ).format( new String[] { value, "TextTypeEnumEnum" } ); //$NON-NLS-1$
        throw new java.lang.IllegalArgumentException(message);
    }

    public java.util.List<java.lang.String> refTypeName() {
        return __QUALIFIED_NAME;
    }

    @java.lang.Override
    public java.lang.String toString() {
        return this.__literalName;
    }

    /* this is required by the specification */
    protected java.lang.Object readResolve() throws java.io.ObjectStreamException {
        try {
            return forName(__literalName);
        }
        catch(java.lang.IllegalArgumentException iae) {
            java.io.InvalidObjectException ioe = new java.io.InvalidObjectException(iae.getMessage());
            ioe.initCause(iae);
            throw ioe;
        }
    }
}