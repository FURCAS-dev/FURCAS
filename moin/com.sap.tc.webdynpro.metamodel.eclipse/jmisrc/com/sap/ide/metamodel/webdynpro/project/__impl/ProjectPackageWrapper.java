/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.ide.metamodel.webdynpro.project.__impl;

public class ProjectPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<com.sap.ide.metamodel.webdynpro.project.__impl.ProjectPackageImpl> implements com.sap.ide.metamodel.webdynpro.project.ProjectPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ProjectPackage wrapper
     */
    public ProjectPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.ide.metamodel.webdynpro.project.__impl.ProjectPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private com.sap.ide.metamodel.webdynpro.project.__impl.ProjectPackageImpl getCastWrappedObject() {
        return (com.sap.ide.metamodel.webdynpro.project.__impl.ProjectPackageImpl) getWrappedObject();
    }
    
    public com.sap.ide.metamodel.webdynpro.project.__impl.ProjectPackageImpl unwrap() {
        return (com.sap.ide.metamodel.webdynpro.project.__impl.ProjectPackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getProjectProperties()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getProjectProperties(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getProjectProperties(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getLibraryReference()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getLibraryReference(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getLibraryReference(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.ide.metamodel.webdynpro.project.ALibraryReferencesProjectProperties getALibraryReferencesProjectProperties()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.ide.metamodel.webdynpro.project.ALibraryReferencesProjectProperties) wrapResult(getCastWrappedObject().getALibraryReferencesProjectProperties(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.ide.metamodel.webdynpro.project.ALibraryReferencesProjectProperties) wrapResult(getCastWrappedObject().getALibraryReferencesProjectProperties(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.ide.metamodel.webdynpro.project.AJcoReferencesProjectProperties getAJcoReferencesProjectProperties()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.ide.metamodel.webdynpro.project.AJcoReferencesProjectProperties) wrapResult(getCastWrappedObject().getAJcoReferencesProjectProperties(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.ide.metamodel.webdynpro.project.AJcoReferencesProjectProperties) wrapResult(getCastWrappedObject().getAJcoReferencesProjectProperties(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.ide.metamodel.webdynpro.project.AServiceReferencesProjectProperties getAServiceReferencesProjectProperties()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.ide.metamodel.webdynpro.project.AServiceReferencesProjectProperties) wrapResult(getCastWrappedObject().getAServiceReferencesProjectProperties(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.ide.metamodel.webdynpro.project.AServiceReferencesProjectProperties) wrapResult(getCastWrappedObject().getAServiceReferencesProjectProperties(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.ide.metamodel.webdynpro.project.AInterfaceReferencesProjectProperties getAInterfaceReferencesProjectProperties()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.ide.metamodel.webdynpro.project.AInterfaceReferencesProjectProperties) wrapResult(getCastWrappedObject().getAInterfaceReferencesProjectProperties(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.ide.metamodel.webdynpro.project.AInterfaceReferencesProjectProperties) wrapResult(getCastWrappedObject().getAInterfaceReferencesProjectProperties(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.ide.metamodel.webdynpro.project.ASharingReferencesProjectProperties getASharingReferencesProjectProperties()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.ide.metamodel.webdynpro.project.ASharingReferencesProjectProperties) wrapResult(getCastWrappedObject().getASharingReferencesProjectProperties(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.ide.metamodel.webdynpro.project.ASharingReferencesProjectProperties) wrapResult(getCastWrappedObject().getASharingReferencesProjectProperties(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    @SuppressWarnings("unchecked")
    public java.lang.Class<com.sap.ide.metamodel.webdynpro.project.ProjectPackage> get___JmiInterface() {
        return com.sap.ide.metamodel.webdynpro.project.ProjectPackage.class;
    }
    
    protected String metaObjectToString() {
        return "com.sap.ide.metamodel.webdynpro.project.ProjectPackage (Java Type)\nWebDynpro.project (MOF Type)"; //$NON-NLS-1$
    }
}