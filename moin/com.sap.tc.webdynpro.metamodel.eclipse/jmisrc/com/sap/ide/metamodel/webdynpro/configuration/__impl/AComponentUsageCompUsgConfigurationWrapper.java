/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.ide.metamodel.webdynpro.configuration.__impl;

public class AComponentUsageCompUsgConfigurationWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<com.sap.ide.metamodel.webdynpro.configuration.AComponentUsageCompUsgConfiguration> implements com.sap.ide.metamodel.webdynpro.configuration.AComponentUsageCompUsgConfiguration,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The AComponentUsageCompUsgConfiguration wrapper
     */
    public AComponentUsageCompUsgConfigurationWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.ide.metamodel.webdynpro.configuration.__impl.AComponentUsageCompUsgConfigurationImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private com.sap.ide.metamodel.webdynpro.configuration.__impl.AComponentUsageCompUsgConfigurationImpl getCastWrappedObject() {
        return (com.sap.ide.metamodel.webdynpro.configuration.__impl.AComponentUsageCompUsgConfigurationImpl) getWrappedObject();
    }

    public com.sap.ide.metamodel.webdynpro.configuration.AComponentUsageCompUsgConfiguration unwrap() {
        return (com.sap.ide.metamodel.webdynpro.configuration.AComponentUsageCompUsgConfiguration) getWrappedObject();
    }
    
    public boolean exists(com.sap.ide.metamodel.webdynpro.component.AbstractComponentUsage _ComponentUsage, com.sap.ide.metamodel.webdynpro.configuration.CompUsgConfiguration _CompUsgConfiguration) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ComponentUsage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CompUsgConfiguration));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ComponentUsage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CompUsgConfiguration)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.ide.metamodel.webdynpro.component.AbstractComponentUsage getComponentUsage(com.sap.ide.metamodel.webdynpro.configuration.CompUsgConfiguration _CompUsgConfiguration) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.ide.metamodel.webdynpro.component.AbstractComponentUsage) wrapResult(getCastWrappedObject().getComponentUsage(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CompUsgConfiguration)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.ide.metamodel.webdynpro.component.AbstractComponentUsage) wrapResult(getCastWrappedObject().getComponentUsage(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CompUsgConfiguration))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getCompUsgConfiguration(com.sap.ide.metamodel.webdynpro.component.AbstractComponentUsage _ComponentUsage) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getCompUsgConfiguration(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ComponentUsage)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getCompUsgConfiguration(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ComponentUsage))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(com.sap.ide.metamodel.webdynpro.component.AbstractComponentUsage _ComponentUsage, com.sap.ide.metamodel.webdynpro.configuration.CompUsgConfiguration _CompUsgConfiguration) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ComponentUsage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CompUsgConfiguration));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ComponentUsage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CompUsgConfiguration)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(com.sap.ide.metamodel.webdynpro.component.AbstractComponentUsage _ComponentUsage, com.sap.ide.metamodel.webdynpro.configuration.CompUsgConfiguration _CompUsgConfiguration) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ComponentUsage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CompUsgConfiguration));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ComponentUsage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CompUsgConfiguration)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<com.sap.ide.metamodel.webdynpro.configuration.AComponentUsageCompUsgConfiguration> get___JmiInterface() {
        return com.sap.ide.metamodel.webdynpro.configuration.AComponentUsageCompUsgConfiguration.class;
    }

    protected String metaObjectToString() {
        return "com.sap.ide.metamodel.webdynpro.configuration.AComponentUsageCompUsgConfiguration (Java Type)\nWebDynpro.configuration.A_ComponentUsage_compUsgConfiguration (MOF Type)"; //$NON-NLS-1$
    }    
}