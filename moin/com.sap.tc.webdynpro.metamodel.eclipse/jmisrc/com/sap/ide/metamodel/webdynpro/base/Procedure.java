/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.ide.metamodel.webdynpro.base;

/**
 * Abstract superclass for code-carrying development objects, like methods, event handlers, error handlers, validators ...
 * This interface is not intended to be implemented by clients.
 */
public interface Procedure extends com.sap.ide.metamodel.webdynpro.base.ParameterizedFeature {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.ide.metamodel.webdynpro.base.Procedure> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.ide.metamodel.webdynpro.base.Procedure>("45DDACEED5DE8B8200F548A62BC9CE362018DDCD", "sap.com/tc/moin/webdynpro", "WebDynpro", "base", "Procedure"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // attributes
    /**
     * Enumeration: Public, Protected, Private, None
     */
    public com.sap.ide.metamodel.webdynpro.enums.VisibilityEnum getVisibility() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Enumeration: Public, Protected, Private, None
     */
    public void setVisibility(com.sap.ide.metamodel.webdynpro.enums.VisibilityEnum newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * optional, for code that is not parsable into the WDClass structure.
     */
    public java.lang.String getCodeBody() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * optional, for code that is not parsable into the WDClass structure.
     */
    public void setCodeBody(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public com.sap.ide.metamodel.common.Type getReturnType() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setReturnType(com.sap.ide.metamodel.common.Type newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.ide.metamodel.webdynpro.type.NativeType getNativeType() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setNativeType(com.sap.ide.metamodel.webdynpro.type.NativeType newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.lang.String> NAME( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.NAME( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Procedure,com.sap.ide.metamodel.webdynpro.enums.VisibilityEnum> __visibility;
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Procedure,com.sap.ide.metamodel.webdynpro.enums.VisibilityEnum> VISIBILITY( ) {
            if ( __visibility == null ) {
                __visibility = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Procedure,com.sap.ide.metamodel.webdynpro.enums.VisibilityEnum>( "45DDACEEB8851F91EBF74C791648C3D0E9606204", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "base", "Procedure", "visibility" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __visibility;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Procedure,java.lang.String> __codeBody;
        /**
         * Returns the descriptor for the <code>codeBody</code> attribute.
         * @return  the descriptor for the <code>codeBody</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Procedure,java.lang.String> CODE_BODY( ) {
            if ( __codeBody == null ) {
                __codeBody = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Procedure,java.lang.String>( "45DDACEE38B192FAE4EB4F832344B2EAF0E335EC", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "base", "Procedure", "codeBody" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __codeBody;
        }
        /**
         * Returns the descriptor for the <code>templateInstances</code> reference.
         * @return  the descriptor for the <code>templateInstances</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.util.List<com.sap.ide.metamodel.common.template.EmbeddedTemplateInstance>> TEMPLATE_INSTANCES( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.TEMPLATE_INSTANCES( );
        }
        /**
         * Returns the descriptor for the <code>diagrams</code> reference.
         * @return  the descriptor for the <code>diagrams</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.util.List<com.sap.ide.metamodel.common.diagram.EmbeddedDiagram>> DIAGRAMS( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.DIAGRAMS( );
        }
        /**
         * Returns the descriptor for the <code>documentationObject</code> reference.
         * @return  the descriptor for the <code>documentationObject</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,com.sap.ide.metamodel.common.DocumentationObject> DOCUMENTATION_OBJECT( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.DOCUMENTATION_OBJECT( );
        }
        /**
         * Returns the descriptor for the <code>parameters</code> reference.
         * @return  the descriptor for the <code>parameters</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.ParameterizedFeature,java.util.List<com.sap.ide.metamodel.webdynpro.base.Parameter>> PARAMETERS( ) {
            return com.sap.ide.metamodel.webdynpro.base.ParameterizedFeature.DESCRIPTORS.PARAMETERS( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.Procedure,com.sap.ide.metamodel.common.Type> __returnType;
        /**
         * Returns the descriptor for the <code>returnType</code> reference.
         * @return  the descriptor for the <code>returnType</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.Procedure,com.sap.ide.metamodel.common.Type> RETURN_TYPE( ) {
            if ( __returnType == null ) {
                __returnType = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.Procedure,com.sap.ide.metamodel.common.Type>( "45DDACEEC2CE7FBAD4FE4F7E1478F7A3CD5F7EA9", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "base", "Procedure", "ReturnType" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __returnType;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.Procedure,com.sap.ide.metamodel.webdynpro.type.NativeType> __nativeType;
        /**
         * Returns the descriptor for the <code>nativeType</code> reference.
         * @return  the descriptor for the <code>nativeType</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.Procedure,com.sap.ide.metamodel.webdynpro.type.NativeType> NATIVE_TYPE( ) {
            if ( __nativeType == null ) {
                __nativeType = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.Procedure,com.sap.ide.metamodel.webdynpro.type.NativeType>( "460CC65BFADE38E0FBB34CEA11C4CFE67FE5C681", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "base", "Procedure", "NativeType" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __nativeType;
        }
    }
}    