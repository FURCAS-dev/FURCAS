/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.ide.metamodel.webdynpro.component.viewset.__impl;

public class AViewsetPropertiesViewsetWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<com.sap.ide.metamodel.webdynpro.component.viewset.AViewsetPropertiesViewset> implements com.sap.ide.metamodel.webdynpro.component.viewset.AViewsetPropertiesViewset,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The AViewsetPropertiesViewset wrapper
     */
    public AViewsetPropertiesViewsetWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.ide.metamodel.webdynpro.component.viewset.__impl.AViewsetPropertiesViewsetImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private com.sap.ide.metamodel.webdynpro.component.viewset.__impl.AViewsetPropertiesViewsetImpl getCastWrappedObject() {
        return (com.sap.ide.metamodel.webdynpro.component.viewset.__impl.AViewsetPropertiesViewsetImpl) getWrappedObject();
    }

    public com.sap.ide.metamodel.webdynpro.component.viewset.AViewsetPropertiesViewset unwrap() {
        return (com.sap.ide.metamodel.webdynpro.component.viewset.AViewsetPropertiesViewset) getWrappedObject();
    }
    
    public boolean exists(com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetProperty _ViewsetProperties, com.sap.ide.metamodel.webdynpro.component.viewset.Viewset _Viewset) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ViewsetProperties), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Viewset));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ViewsetProperties), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Viewset)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.List getViewsetProperties(com.sap.ide.metamodel.webdynpro.component.viewset.Viewset _Viewset) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.List) wrapResult(getCastWrappedObject().getViewsetProperties(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Viewset)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.List) wrapResult(getCastWrappedObject().getViewsetProperties(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Viewset))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.ide.metamodel.webdynpro.component.viewset.Viewset getViewset(com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetProperty _ViewsetProperties) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.ide.metamodel.webdynpro.component.viewset.Viewset) wrapResult(getCastWrappedObject().getViewset(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ViewsetProperties)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.ide.metamodel.webdynpro.component.viewset.Viewset) wrapResult(getCastWrappedObject().getViewset(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ViewsetProperties))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetProperty _ViewsetProperties, com.sap.ide.metamodel.webdynpro.component.viewset.Viewset _Viewset) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ViewsetProperties), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Viewset));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ViewsetProperties), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Viewset)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(com.sap.ide.metamodel.webdynpro.component.viewset.ViewsetProperty _ViewsetProperties, com.sap.ide.metamodel.webdynpro.component.viewset.Viewset _Viewset) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ViewsetProperties), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Viewset));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ViewsetProperties), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Viewset)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<com.sap.ide.metamodel.webdynpro.component.viewset.AViewsetPropertiesViewset> get___JmiInterface() {
        return com.sap.ide.metamodel.webdynpro.component.viewset.AViewsetPropertiesViewset.class;
    }

    protected String metaObjectToString() {
        return "com.sap.ide.metamodel.webdynpro.component.viewset.AViewsetPropertiesViewset (Java Type)\nWebDynpro.component.viewset.A_ViewsetProperties_Viewset (MOF Type)"; //$NON-NLS-1$
    }    
}