/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.ide.metamodel.webdynpro.component.view.__impl;

public class ADictionaryBindingsViewElementWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<com.sap.ide.metamodel.webdynpro.component.view.ADictionaryBindingsViewElement> implements com.sap.ide.metamodel.webdynpro.component.view.ADictionaryBindingsViewElement,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ADictionaryBindingsViewElement wrapper
     */
    public ADictionaryBindingsViewElementWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.ide.metamodel.webdynpro.component.view.__impl.ADictionaryBindingsViewElementImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private com.sap.ide.metamodel.webdynpro.component.view.__impl.ADictionaryBindingsViewElementImpl getCastWrappedObject() {
        return (com.sap.ide.metamodel.webdynpro.component.view.__impl.ADictionaryBindingsViewElementImpl) getWrappedObject();
    }

    public com.sap.ide.metamodel.webdynpro.component.view.ADictionaryBindingsViewElement unwrap() {
        return (com.sap.ide.metamodel.webdynpro.component.view.ADictionaryBindingsViewElement) getWrappedObject();
    }
    
    public boolean exists(com.sap.ide.metamodel.webdynpro.component.view.UielementDictionaryBinding _DictionaryBindings, com.sap.ide.metamodel.webdynpro.component.view.uielement.ViewElement _ViewElement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DictionaryBindings), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ViewElement));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DictionaryBindings), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ViewElement)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.List getDictionaryBindings(com.sap.ide.metamodel.webdynpro.component.view.uielement.ViewElement _ViewElement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.List) wrapResult(getCastWrappedObject().getDictionaryBindings(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ViewElement)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.List) wrapResult(getCastWrappedObject().getDictionaryBindings(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ViewElement))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.ide.metamodel.webdynpro.component.view.uielement.ViewElement getViewElement(com.sap.ide.metamodel.webdynpro.component.view.UielementDictionaryBinding _DictionaryBindings) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.ide.metamodel.webdynpro.component.view.uielement.ViewElement) wrapResult(getCastWrappedObject().getViewElement(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DictionaryBindings)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.ide.metamodel.webdynpro.component.view.uielement.ViewElement) wrapResult(getCastWrappedObject().getViewElement(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DictionaryBindings))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(com.sap.ide.metamodel.webdynpro.component.view.UielementDictionaryBinding _DictionaryBindings, com.sap.ide.metamodel.webdynpro.component.view.uielement.ViewElement _ViewElement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DictionaryBindings), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ViewElement));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DictionaryBindings), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ViewElement)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(com.sap.ide.metamodel.webdynpro.component.view.UielementDictionaryBinding _DictionaryBindings, com.sap.ide.metamodel.webdynpro.component.view.uielement.ViewElement _ViewElement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DictionaryBindings), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ViewElement));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DictionaryBindings), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ViewElement)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<com.sap.ide.metamodel.webdynpro.component.view.ADictionaryBindingsViewElement> get___JmiInterface() {
        return com.sap.ide.metamodel.webdynpro.component.view.ADictionaryBindingsViewElement.class;
    }

    protected String metaObjectToString() {
        return "com.sap.ide.metamodel.webdynpro.component.view.ADictionaryBindingsViewElement (Java Type)\nWebDynpro.component.view.A_DictionaryBindings_ViewElement (MOF Type)"; //$NON-NLS-1$
    }    
}