/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.ide.metamodel.webdynpro.component.view.uielement;

/**
 * Tray is used to group a number of UI elements under a common header.
 * A Tray may be collapsed by setting expanded to <code>false</code>.
 * A collapsed tray displays only its header.
 * This interface is not intended to be implemented by clients.
 */
public interface Tray extends com.sap.ide.metamodel.webdynpro.component.view.uielement.ScrollContainer {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.ide.metamodel.webdynpro.component.view.uielement.Tray> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.ide.metamodel.webdynpro.component.view.uielement.Tray>("45DDACEE2C2302074963486A1964ED0A83937969", "sap.com/tc/moin/webdynpro", "WebDynpro", "component", "view", "uielement", "Tray"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ 

    
    // attributes
    /**
     * Determines the design of this tray.
     */
    public com.sap.ide.metamodel.webdynpro.component.view.uielement.TrayDesign getDesign() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Determines the design of this tray.
     */
    public void setDesign(com.sap.ide.metamodel.webdynpro.component.view.uielement.TrayDesign newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Determines if this tray is expanded.
     */
    public boolean isExpanded() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Determines if this tray is expanded.
     */
    public void setExpanded(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isHasContentPadding() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setHasContentPadding(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public com.sap.ide.metamodel.webdynpro.component.view.uielement.Caption getHeader() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setHeader(com.sap.ide.metamodel.webdynpro.component.view.uielement.Caption newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.ide.metamodel.webdynpro.component.view.uielement.ToolBar getToolBar() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setToolBar(com.sap.ide.metamodel.webdynpro.component.view.uielement.ToolBar newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.lang.String> NAME( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>enabled</code> attribute.
         * @return  the descriptor for the <code>enabled</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.component.view.uielement.Uielement,java.lang.Boolean> ENABLED( ) {
            return com.sap.ide.metamodel.webdynpro.component.view.uielement.Uielement.DESCRIPTORS.ENABLED( );
        }
        /**
         * Returns the descriptor for the <code>tooltip</code> attribute.
         * @return  the descriptor for the <code>tooltip</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.component.view.uielement.Uielement,com.sap.ide.metamodel.common.TranslatableText> TOOLTIP( ) {
            return com.sap.ide.metamodel.webdynpro.component.view.uielement.Uielement.DESCRIPTORS.TOOLTIP( );
        }
        /**
         * Returns the descriptor for the <code>tooltipIsDependent</code> attribute.
         * @return  the descriptor for the <code>tooltipIsDependent</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.component.view.uielement.Uielement,java.lang.Boolean> TOOLTIP_IS_DEPENDENT( ) {
            return com.sap.ide.metamodel.webdynpro.component.view.uielement.Uielement.DESCRIPTORS.TOOLTIP_IS_DEPENDENT( );
        }
        /**
         * Returns the descriptor for the <code>visible</code> attribute.
         * @return  the descriptor for the <code>visible</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.component.view.uielement.Uielement,com.sap.ide.metamodel.webdynpro.component.view.uielement.Visibility> VISIBLE( ) {
            return com.sap.ide.metamodel.webdynpro.component.view.uielement.Uielement.DESCRIPTORS.VISIBLE( );
        }
        /**
         * Returns the descriptor for the <code>height</code> attribute.
         * @return  the descriptor for the <code>height</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.component.view.uielement.UielementContainer,java.lang.String> HEIGHT( ) {
            return com.sap.ide.metamodel.webdynpro.component.view.uielement.UielementContainer.DESCRIPTORS.HEIGHT( );
        }
        /**
         * Returns the descriptor for the <code>width</code> attribute.
         * @return  the descriptor for the <code>width</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.component.view.uielement.UielementContainer,java.lang.String> WIDTH( ) {
            return com.sap.ide.metamodel.webdynpro.component.view.uielement.UielementContainer.DESCRIPTORS.WIDTH( );
        }
        /**
         * Returns the descriptor for the <code>scrollingMode</code> attribute.
         * @return  the descriptor for the <code>scrollingMode</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.component.view.uielement.ScrollContainer,com.sap.ide.metamodel.webdynpro.component.view.uielement.ScrollingMode> SCROLLING_MODE( ) {
            return com.sap.ide.metamodel.webdynpro.component.view.uielement.ScrollContainer.DESCRIPTORS.SCROLLING_MODE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.component.view.uielement.Tray,com.sap.ide.metamodel.webdynpro.component.view.uielement.TrayDesign> __design;
        /**
         * Returns the descriptor for the <code>design</code> attribute.
         * @return  the descriptor for the <code>design</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.component.view.uielement.Tray,com.sap.ide.metamodel.webdynpro.component.view.uielement.TrayDesign> DESIGN( ) {
            if ( __design == null ) {
                __design = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.component.view.uielement.Tray,com.sap.ide.metamodel.webdynpro.component.view.uielement.TrayDesign>( "45DDACEE96E62167DD9E422E282590CD875383E7", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "component", "view", "uielement", "Tray", "design" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ //$NON-NLS-8$ 
            }
            return __design;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.component.view.uielement.Tray,java.lang.Boolean> __expanded;
        /**
         * Returns the descriptor for the <code>expanded</code> attribute.
         * @return  the descriptor for the <code>expanded</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.component.view.uielement.Tray,java.lang.Boolean> EXPANDED( ) {
            if ( __expanded == null ) {
                __expanded = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.component.view.uielement.Tray,java.lang.Boolean>( "45DDACEEADD984CFB6FD43C50B6AFB04BFB742AB", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "component", "view", "uielement", "Tray", "expanded" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ //$NON-NLS-8$ 
            }
            return __expanded;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.component.view.uielement.Tray,java.lang.Boolean> __hasContentPadding;
        /**
         * Returns the descriptor for the <code>hasContentPadding</code> attribute.
         * @return  the descriptor for the <code>hasContentPadding</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.component.view.uielement.Tray,java.lang.Boolean> HAS_CONTENT_PADDING( ) {
            if ( __hasContentPadding == null ) {
                __hasContentPadding = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.component.view.uielement.Tray,java.lang.Boolean>( "45DDACEE1B62474866BE45060B66DFB74263AAA3", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "component", "view", "uielement", "Tray", "hasContentPadding" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ //$NON-NLS-8$ 
            }
            return __hasContentPadding;
        }
        /**
         * Returns the descriptor for the <code>templateInstances</code> reference.
         * @return  the descriptor for the <code>templateInstances</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.util.List<com.sap.ide.metamodel.common.template.EmbeddedTemplateInstance>> TEMPLATE_INSTANCES( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.TEMPLATE_INSTANCES( );
        }
        /**
         * Returns the descriptor for the <code>diagrams</code> reference.
         * @return  the descriptor for the <code>diagrams</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.util.List<com.sap.ide.metamodel.common.diagram.EmbeddedDiagram>> DIAGRAMS( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.DIAGRAMS( );
        }
        /**
         * Returns the descriptor for the <code>documentationObject</code> reference.
         * @return  the descriptor for the <code>documentationObject</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,com.sap.ide.metamodel.common.DocumentationObject> DOCUMENTATION_OBJECT( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.DOCUMENTATION_OBJECT( );
        }
        /**
         * Returns the descriptor for the <code>definition</code> reference.
         * @return  the descriptor for the <code>definition</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.view.uielement.ViewElement,com.sap.ide.metamodel.webdynpro.framework.uielib.ViewElementDefinition> DEFINITION( ) {
            return com.sap.ide.metamodel.webdynpro.component.view.uielement.ViewElement.DESCRIPTORS.DEFINITION( );
        }
        /**
         * Returns the descriptor for the <code>outgoingAggregations</code> reference.
         * @return  the descriptor for the <code>outgoingAggregations</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.view.uielement.ViewElement,java.util.List<com.sap.ide.metamodel.webdynpro.component.view.uielement.ViewElementAggregation>> OUTGOING_AGGREGATIONS( ) {
            return com.sap.ide.metamodel.webdynpro.component.view.uielement.ViewElement.DESCRIPTORS.OUTGOING_AGGREGATIONS( );
        }
        /**
         * Returns the descriptor for the <code>properties</code> reference.
         * @return  the descriptor for the <code>properties</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.view.uielement.ViewElement,java.util.List<com.sap.ide.metamodel.webdynpro.component.view.uielement.AbstractViewElementProperty>> PROPERTIES( ) {
            return com.sap.ide.metamodel.webdynpro.component.view.uielement.ViewElement.DESCRIPTORS.PROPERTIES( );
        }
        /**
         * Returns the descriptor for the <code>container</code> reference.
         * @return  the descriptor for the <code>container</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.view.uielement.Uielement,com.sap.ide.metamodel.webdynpro.component.view.uielement.UielementContainer> CONTAINER( ) {
            return com.sap.ide.metamodel.webdynpro.component.view.uielement.Uielement.DESCRIPTORS.CONTAINER( );
        }
        /**
         * Returns the descriptor for the <code>layoutData</code> reference.
         * @return  the descriptor for the <code>layoutData</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.view.uielement.Uielement,com.sap.ide.metamodel.webdynpro.component.view.uielement.LayoutData> LAYOUT_DATA( ) {
            return com.sap.ide.metamodel.webdynpro.component.view.uielement.Uielement.DESCRIPTORS.LAYOUT_DATA( );
        }
        /**
         * Returns the descriptor for the <code>children</code> reference.
         * @return  the descriptor for the <code>children</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.view.uielement.UielementContainer,java.util.List<com.sap.ide.metamodel.webdynpro.component.view.uielement.Uielement>> CHILDREN( ) {
            return com.sap.ide.metamodel.webdynpro.component.view.uielement.UielementContainer.DESCRIPTORS.CHILDREN( );
        }
        /**
         * Returns the descriptor for the <code>layout</code> reference.
         * @return  the descriptor for the <code>layout</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.view.uielement.UielementContainer,com.sap.ide.metamodel.webdynpro.component.view.uielement.Layout> LAYOUT( ) {
            return com.sap.ide.metamodel.webdynpro.component.view.uielement.UielementContainer.DESCRIPTORS.LAYOUT( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.view.uielement.Tray,com.sap.ide.metamodel.webdynpro.component.view.uielement.Caption> __header;
        /**
         * Returns the descriptor for the <code>header</code> reference.
         * @return  the descriptor for the <code>header</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.view.uielement.Tray,com.sap.ide.metamodel.webdynpro.component.view.uielement.Caption> HEADER( ) {
            if ( __header == null ) {
                __header = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.view.uielement.Tray,com.sap.ide.metamodel.webdynpro.component.view.uielement.Caption>( "45DDACEECB3504E2BE7B4F6B2739FCCA90129A8A", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "component", "view", "uielement", "Tray", "Header" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ //$NON-NLS-8$ 
            }
            return __header;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.view.uielement.Tray,com.sap.ide.metamodel.webdynpro.component.view.uielement.ToolBar> __toolBar;
        /**
         * Returns the descriptor for the <code>toolBar</code> reference.
         * @return  the descriptor for the <code>toolBar</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.view.uielement.Tray,com.sap.ide.metamodel.webdynpro.component.view.uielement.ToolBar> TOOL_BAR( ) {
            if ( __toolBar == null ) {
                __toolBar = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.component.view.uielement.Tray,com.sap.ide.metamodel.webdynpro.component.view.uielement.ToolBar>( "45DDACEE5ED904AA9854459E3B9FD4C24CDAB6CE", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "component", "view", "uielement", "Tray", "ToolBar" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ //$NON-NLS-8$ 
            }
            return __toolBar;
        }
    }
}    