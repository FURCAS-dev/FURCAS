/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.ide.metamodel.webdynpro.event;

/**
 * Used during event binding (navigation links, ui element event binding) to map parameters of differing events.
 * This interface is not intended to be implemented by clients.
 */
public interface ParameterMapping extends com.sap.ide.metamodel.common.CommonDevelopmentObject {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.ide.metamodel.webdynpro.event.ParameterMapping> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.ide.metamodel.webdynpro.event.ParameterMapping>("45DDACEECE33C9CEDB1A4BAC129684C7AD594F5E", "sap.com/tc/moin/webdynpro", "WebDynpro", "event", "ParameterMapping"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // references
    public com.sap.ide.metamodel.webdynpro.base.Parameter getFrom() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setFrom(com.sap.ide.metamodel.webdynpro.base.Parameter newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.ide.metamodel.webdynpro.base.Parameter getTo() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setTo(com.sap.ide.metamodel.webdynpro.base.Parameter newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.ide.metamodel.webdynpro.event.EventBinding getEventBinding() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setEventBinding(com.sap.ide.metamodel.webdynpro.event.EventBinding newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.lang.String> NAME( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>templateInstances</code> reference.
         * @return  the descriptor for the <code>templateInstances</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.util.List<com.sap.ide.metamodel.common.template.EmbeddedTemplateInstance>> TEMPLATE_INSTANCES( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.TEMPLATE_INSTANCES( );
        }
        /**
         * Returns the descriptor for the <code>diagrams</code> reference.
         * @return  the descriptor for the <code>diagrams</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.util.List<com.sap.ide.metamodel.common.diagram.EmbeddedDiagram>> DIAGRAMS( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.DIAGRAMS( );
        }
        /**
         * Returns the descriptor for the <code>documentationObject</code> reference.
         * @return  the descriptor for the <code>documentationObject</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,com.sap.ide.metamodel.common.DocumentationObject> DOCUMENTATION_OBJECT( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.DOCUMENTATION_OBJECT( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.event.ParameterMapping,com.sap.ide.metamodel.webdynpro.base.Parameter> __from;
        /**
         * Returns the descriptor for the <code>from</code> reference.
         * @return  the descriptor for the <code>from</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.event.ParameterMapping,com.sap.ide.metamodel.webdynpro.base.Parameter> FROM( ) {
            if ( __from == null ) {
                __from = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.event.ParameterMapping,com.sap.ide.metamodel.webdynpro.base.Parameter>( "45DDACEEA4E7306FD6214D3E3B02C72FA2DFE52E", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "event", "ParameterMapping", "From" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __from;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.event.ParameterMapping,com.sap.ide.metamodel.webdynpro.base.Parameter> __to;
        /**
         * Returns the descriptor for the <code>to</code> reference.
         * @return  the descriptor for the <code>to</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.event.ParameterMapping,com.sap.ide.metamodel.webdynpro.base.Parameter> TO( ) {
            if ( __to == null ) {
                __to = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.event.ParameterMapping,com.sap.ide.metamodel.webdynpro.base.Parameter>( "45DDACEED1CB00EC556E4C6D104C8111279394B3", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "event", "ParameterMapping", "To" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __to;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.event.ParameterMapping,com.sap.ide.metamodel.webdynpro.event.EventBinding> __eventBinding;
        /**
         * Returns the descriptor for the <code>eventBinding</code> reference.
         * @return  the descriptor for the <code>eventBinding</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.event.ParameterMapping,com.sap.ide.metamodel.webdynpro.event.EventBinding> EVENT_BINDING( ) {
            if ( __eventBinding == null ) {
                __eventBinding = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.event.ParameterMapping,com.sap.ide.metamodel.webdynpro.event.EventBinding>( "45DDACEE5E2869BFEBFC4AD71C5E8562217CE6CC", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "event", "ParameterMapping", "EventBinding" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __eventBinding;
        }
    }
}    