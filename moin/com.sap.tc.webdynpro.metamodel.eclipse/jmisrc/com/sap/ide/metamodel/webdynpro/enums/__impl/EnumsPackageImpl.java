/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.ide.metamodel.webdynpro.enums.__impl;

public final class EnumsPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{

    static {
    }

    // constructors    
    public EnumsPackageImpl()
    {
        super();
    }
    public EnumsPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    public com.sap.tc.moin.repository.mmi.reflect.RefEnum create___RefEnum(com.sap.tc.moin.repository.mmi.model.EnumerationType enumType, String name) {
        com.sap.tc.moin.repository.mmi.reflect.RefEnum result = null;
        java.lang.String enumName = enumType.getName();
          if (enumName.equals("VisibilityEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.VisibilityEnumEnum.forName(name);
          }
          else if (enumName.equals("ViewTypeEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.ViewTypeEnumEnum.forName(name);
          }
          else if (enumName.equals("CardinalityEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.CardinalityEnumEnum.forName(name);
          }
          else if (enumName.equals("ControllerTypeEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.ControllerTypeEnumEnum.forName(name);
          }
          else if (enumName.equals("TemplateViewExpansionEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.TemplateViewExpansionEnumEnum.forName(name);
          }
          else if (enumName.equals("EventTypeEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.EventTypeEnumEnum.forName(name);
          }
          else if (enumName.equals("PublicPrivateEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.PublicPrivateEnumEnum.forName(name);
          }
          else if (enumName.equals("ImplementationLanguageEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.ImplementationLanguageEnumEnum.forName(name);
          }
          else if (enumName.equals("CollectionTypeEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.CollectionTypeEnumEnum.forName(name);
          }
          else if (enumName.equals("ContextElementMappingTypeEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.ContextElementMappingTypeEnumEnum.forName(name);
          }
          else if (enumName.equals("BindableEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.BindableEnumEnum.forName(name);
          }
          else if (enumName.equals("MessageTypeEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.MessageTypeEnumEnum.forName(name);
          }
          else if (enumName.equals("AbapTypingEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.AbapTypingEnumEnum.forName(name);
          }
          else if (enumName.equals("DeclarationTypeEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.DeclarationTypeEnumEnum.forName(name);
          }
          else if (enumName.equals("ViewLifespanEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.ViewLifespanEnumEnum.forName(name);
          }
          else if (enumName.equals("ActionTypeEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.ActionTypeEnumEnum.forName(name);
          }
          else if (enumName.equals("OutboundPlugTypeEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.OutboundPlugTypeEnumEnum.forName(name);
          }
          else if (enumName.equals("InboundPlugTypeEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.InboundPlugTypeEnumEnum.forName(name);
          }
          else if (enumName.equals("TextTypeEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.TextTypeEnumEnum.forName(name);
          }
          else if (enumName.equals("BindingTypeEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.BindingTypeEnumEnum.forName(name);
          }
          else if (enumName.equals("ComponentLifecycleEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.ComponentLifecycleEnumEnum.forName(name);
          }
          else if (enumName.equals("AbapTypeFeatureEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.AbapTypeFeatureEnumEnum.forName(name);
          }
          else if (enumName.equals("DDicBindableEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.DdicBindableEnumEnum.forName(name);
          }
          else if (enumName.equals("LabelSupportEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.LabelSupportEnumEnum.forName(name);
          }
          else if (enumName.equals("ValueHelpModeEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.ValueHelpModeEnumEnum.forName(name);
          }
          else if (enumName.equals("MessageDisplayModeEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.MessageDisplayModeEnumEnum.forName(name);
          }
          else if (enumName.equals("UIElementCategoryEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.UielementCategoryEnumEnum.forName(name);
          }
          else if (enumName.equals("BackendOperationTypeEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.BackendOperationTypeEnumEnum.forName(name);
          }
          else if (enumName.equals("BackendResourceTypeEnum")) { //$NON-NLS-1$
            result = com.sap.ide.metamodel.webdynpro.enums.BackendResourceTypeEnumEnum.forName(name);
          }
        return result;
    }
    // internal structure type creators
    // nested packages
    // classes
    // associations
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$        
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<com.sap.ide.metamodel.webdynpro.enums.EnumsPackage> get___JmiInterface() {
        return com.sap.ide.metamodel.webdynpro.enums.EnumsPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(0);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefPackageAndName rpan = null;
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(0);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(0);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefAssociationAndName raan = null;
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<com.sap.ide.metamodel.webdynpro.enums.__impl.EnumsPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new com.sap.ide.metamodel.webdynpro.enums.__impl.EnumsPackageWrapper(conn, this, synchronize);
    }

}