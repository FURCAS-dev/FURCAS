/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.ide.metamodel.webdynpro.base;

/**
 * Represents standard attributes of classes.
 * This interface is not intended to be implemented by clients.
 */
public interface Property extends com.sap.ide.metamodel.common.CommonDevelopmentObject {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.ide.metamodel.webdynpro.base.Property> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.ide.metamodel.webdynpro.base.Property>("45DDACEEA62B9ACCFA6642220772C511E00DC500", "sap.com/tc/moin/webdynpro", "WebDynpro", "base", "Property"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // attributes
    /**
     * Enumeration: Public, Protected, Private, None
     */
    public com.sap.ide.metamodel.webdynpro.enums.VisibilityEnum getVisibility() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Enumeration: Public, Protected, Private, None
     */
    public void setVisibility(com.sap.ide.metamodel.webdynpro.enums.VisibilityEnum newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isReadonly() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setReadonly(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.lang.String getAbapType() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAbapType(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.ide.metamodel.webdynpro.enums.AbapTypingEnum getAbapTyping() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAbapTyping(com.sap.ide.metamodel.webdynpro.enums.AbapTypingEnum newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public com.sap.ide.metamodel.common.Type getType() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setType(com.sap.ide.metamodel.common.Type newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.ide.metamodel.webdynpro.type.NativeType getNativeType() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setNativeType(com.sap.ide.metamodel.webdynpro.type.NativeType newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.lang.String> NAME( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.NAME( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Property,com.sap.ide.metamodel.webdynpro.enums.VisibilityEnum> __visibility;
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Property,com.sap.ide.metamodel.webdynpro.enums.VisibilityEnum> VISIBILITY( ) {
            if ( __visibility == null ) {
                __visibility = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Property,com.sap.ide.metamodel.webdynpro.enums.VisibilityEnum>( "45DDACEE95FB2FCAA4334CC10B53D31532392DB2", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "base", "Property", "visibility" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __visibility;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Property,java.lang.Boolean> __readonly;
        /**
         * Returns the descriptor for the <code>readonly</code> attribute.
         * @return  the descriptor for the <code>readonly</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Property,java.lang.Boolean> READONLY( ) {
            if ( __readonly == null ) {
                __readonly = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Property,java.lang.Boolean>( "45DDACEE3EF9BA30C29C492D08FBF477EB24A449", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "base", "Property", "readonly" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __readonly;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Property,java.lang.String> __abapType;
        /**
         * Returns the descriptor for the <code>abapType</code> attribute.
         * @return  the descriptor for the <code>abapType</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Property,java.lang.String> ABAP_TYPE( ) {
            if ( __abapType == null ) {
                __abapType = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Property,java.lang.String>( "45DDACEEA7EF35914F584EA42772A72A6329501F", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "base", "Property", "abapType" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __abapType;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Property,com.sap.ide.metamodel.webdynpro.enums.AbapTypingEnum> __abapTyping;
        /**
         * Returns the descriptor for the <code>abapTyping</code> attribute.
         * @return  the descriptor for the <code>abapTyping</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Property,com.sap.ide.metamodel.webdynpro.enums.AbapTypingEnum> ABAP_TYPING( ) {
            if ( __abapTyping == null ) {
                __abapTyping = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.ide.metamodel.webdynpro.base.Property,com.sap.ide.metamodel.webdynpro.enums.AbapTypingEnum>( "45DDACEE816EEB0510E04B583091902AE159564D", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "base", "Property", "abapTyping" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __abapTyping;
        }
        /**
         * Returns the descriptor for the <code>templateInstances</code> reference.
         * @return  the descriptor for the <code>templateInstances</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.util.List<com.sap.ide.metamodel.common.template.EmbeddedTemplateInstance>> TEMPLATE_INSTANCES( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.TEMPLATE_INSTANCES( );
        }
        /**
         * Returns the descriptor for the <code>diagrams</code> reference.
         * @return  the descriptor for the <code>diagrams</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,java.util.List<com.sap.ide.metamodel.common.diagram.EmbeddedDiagram>> DIAGRAMS( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.DIAGRAMS( );
        }
        /**
         * Returns the descriptor for the <code>documentationObject</code> reference.
         * @return  the descriptor for the <code>documentationObject</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.common.CommonDevelopmentObject,com.sap.ide.metamodel.common.DocumentationObject> DOCUMENTATION_OBJECT( ) {
            return com.sap.ide.metamodel.common.CommonDevelopmentObject.DESCRIPTORS.DOCUMENTATION_OBJECT( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.Property,com.sap.ide.metamodel.common.Type> __type;
        /**
         * Returns the descriptor for the <code>type</code> reference.
         * @return  the descriptor for the <code>type</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.Property,com.sap.ide.metamodel.common.Type> TYPE( ) {
            if ( __type == null ) {
                __type = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.Property,com.sap.ide.metamodel.common.Type>( "45DDACEE8E68390C9BAB40053B04C4008A74FBE7", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "base", "Property", "Type" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __type;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.Property,com.sap.ide.metamodel.webdynpro.type.NativeType> __nativeType;
        /**
         * Returns the descriptor for the <code>nativeType</code> reference.
         * @return  the descriptor for the <code>nativeType</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.Property,com.sap.ide.metamodel.webdynpro.type.NativeType> NATIVE_TYPE( ) {
            if ( __nativeType == null ) {
                __nativeType = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.ide.metamodel.webdynpro.base.Property,com.sap.ide.metamodel.webdynpro.type.NativeType>( "460CC65B65E9A392259A44C90983DE082CB2BD82", "sap.com/tc/moin/webdynpro", new java.lang.String[] { "WebDynpro", "base", "Property", "NativeType" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __nativeType;
        }
    }
}    