/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.repository.mmi.model.__impl;

public class DependsOnWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<com.sap.tc.moin.repository.mmi.model.DependsOn> implements com.sap.tc.moin.repository.mmi.model.DependsOn,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The DependsOn wrapper
     */
    public DependsOnWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.tc.moin.repository.mmi.model.__impl.DependsOnImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private com.sap.tc.moin.repository.mmi.model.__impl.DependsOnImpl getCastWrappedObject() {
        return (com.sap.tc.moin.repository.mmi.model.__impl.DependsOnImpl) getWrappedObject();
    }

    public com.sap.tc.moin.repository.mmi.model.DependsOn unwrap() {
        return (com.sap.tc.moin.repository.mmi.model.DependsOn) getWrappedObject();
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.model.ModelElement _Dependent, com.sap.tc.moin.repository.mmi.model.ModelElement _Provider) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg(_Dependent), unwrapArg(_Provider));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg(_Dependent), unwrapArg(_Provider)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.model.ModelElement> getDependent(com.sap.tc.moin.repository.mmi.model.ModelElement _Provider) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getDependent(connection, unwrapArg(_Provider)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getDependent(connection, unwrapArg(_Provider))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.model.ModelElement> getProvider(com.sap.tc.moin.repository.mmi.model.ModelElement _Dependent) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getProvider(connection, unwrapArg(_Dependent)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getProvider(connection, unwrapArg(_Dependent))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<com.sap.tc.moin.repository.mmi.model.DependsOn> get___JmiInterface() {
        return com.sap.tc.moin.repository.mmi.model.DependsOn.class;
    }

    protected String metaObjectToString() {
        return "com.sap.tc.moin.repository.mmi.model.DependsOn (Java Type)\nModel.DependsOn (MOF Type)"; //$NON-NLS-1$
    }    
}