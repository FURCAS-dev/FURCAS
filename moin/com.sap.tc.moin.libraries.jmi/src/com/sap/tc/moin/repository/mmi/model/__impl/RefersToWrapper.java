/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.repository.mmi.model.__impl;

public class RefersToWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<com.sap.tc.moin.repository.mmi.model.RefersTo> implements com.sap.tc.moin.repository.mmi.model.RefersTo,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The RefersTo wrapper
     */
    public RefersToWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.tc.moin.repository.mmi.model.__impl.RefersToImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private com.sap.tc.moin.repository.mmi.model.__impl.RefersToImpl getCastWrappedObject() {
        return (com.sap.tc.moin.repository.mmi.model.__impl.RefersToImpl) getWrappedObject();
    }

    public com.sap.tc.moin.repository.mmi.model.RefersTo unwrap() {
        return (com.sap.tc.moin.repository.mmi.model.RefersTo) getWrappedObject();
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.model.Reference _Referent, com.sap.tc.moin.repository.mmi.model.AssociationEnd _ReferencedEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg(_Referent), unwrapArg(_ReferencedEnd));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg(_Referent), unwrapArg(_ReferencedEnd)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.model.Reference> getReferent(com.sap.tc.moin.repository.mmi.model.AssociationEnd _ReferencedEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getReferent(connection, unwrapArg(_ReferencedEnd)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getReferent(connection, unwrapArg(_ReferencedEnd))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.model.AssociationEnd getReferencedEnd(com.sap.tc.moin.repository.mmi.model.Reference _Referent) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getReferencedEnd(connection, unwrapArg(_Referent)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getReferencedEnd(connection, unwrapArg(_Referent))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(com.sap.tc.moin.repository.mmi.model.Reference _Referent, com.sap.tc.moin.repository.mmi.model.AssociationEnd _ReferencedEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg(_Referent), unwrapArg(_ReferencedEnd));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg(_Referent), unwrapArg(_ReferencedEnd)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(com.sap.tc.moin.repository.mmi.model.Reference _Referent, com.sap.tc.moin.repository.mmi.model.AssociationEnd _ReferencedEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg(_Referent), unwrapArg(_ReferencedEnd));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg(_Referent), unwrapArg(_ReferencedEnd)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<com.sap.tc.moin.repository.mmi.model.RefersTo> get___JmiInterface() {
        return com.sap.tc.moin.repository.mmi.model.RefersTo.class;
    }

    protected String metaObjectToString() {
        return "com.sap.tc.moin.repository.mmi.model.RefersTo (Java Type)\nModel.RefersTo (MOF Type)"; //$NON-NLS-1$
    }    
}