/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.repository.mmi.model.__impl;

public class GeneralizesWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<com.sap.tc.moin.repository.mmi.model.Generalizes> implements com.sap.tc.moin.repository.mmi.model.Generalizes,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The Generalizes wrapper
     */
    public GeneralizesWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.tc.moin.repository.mmi.model.__impl.GeneralizesImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private com.sap.tc.moin.repository.mmi.model.__impl.GeneralizesImpl getCastWrappedObject() {
        return (com.sap.tc.moin.repository.mmi.model.__impl.GeneralizesImpl) getWrappedObject();
    }

    public com.sap.tc.moin.repository.mmi.model.Generalizes unwrap() {
        return (com.sap.tc.moin.repository.mmi.model.Generalizes) getWrappedObject();
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.model.GeneralizableElement _Supertype, com.sap.tc.moin.repository.mmi.model.GeneralizableElement _Subtype) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg(_Supertype), unwrapArg(_Subtype));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg(_Supertype), unwrapArg(_Subtype)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.List<com.sap.tc.moin.repository.mmi.model.GeneralizableElement> getSupertype(com.sap.tc.moin.repository.mmi.model.GeneralizableElement _Subtype) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getSupertype(connection, unwrapArg(_Subtype)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getSupertype(connection, unwrapArg(_Subtype))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.model.GeneralizableElement> getSubtype(com.sap.tc.moin.repository.mmi.model.GeneralizableElement _Supertype) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getSubtype(connection, unwrapArg(_Supertype)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getSubtype(connection, unwrapArg(_Supertype))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(com.sap.tc.moin.repository.mmi.model.GeneralizableElement _Supertype, com.sap.tc.moin.repository.mmi.model.GeneralizableElement _Subtype) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg(_Supertype), unwrapArg(_Subtype));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg(_Supertype), unwrapArg(_Subtype)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(com.sap.tc.moin.repository.mmi.model.GeneralizableElement _Supertype, com.sap.tc.moin.repository.mmi.model.GeneralizableElement _Subtype) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg(_Supertype), unwrapArg(_Subtype));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg(_Supertype), unwrapArg(_Subtype)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<com.sap.tc.moin.repository.mmi.model.Generalizes> get___JmiInterface() {
        return com.sap.tc.moin.repository.mmi.model.Generalizes.class;
    }

    protected String metaObjectToString() {
        return "com.sap.tc.moin.repository.mmi.model.Generalizes (Java Type)\nModel.Generalizes (MOF Type)"; //$NON-NLS-1$
    }    
}