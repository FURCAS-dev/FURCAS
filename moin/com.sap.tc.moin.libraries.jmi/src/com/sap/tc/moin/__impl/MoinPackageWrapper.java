/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.__impl;

public class MoinPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<com.sap.tc.moin.__impl.MoinPackageImpl> implements com.sap.tc.moin.MoinPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The MoinPackage wrapper
     */
    public MoinPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.tc.moin.__impl.MoinPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private com.sap.tc.moin.__impl.MoinPackageImpl getCastWrappedObject() {
        return (com.sap.tc.moin.__impl.MoinPackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.__impl.MoinPackageImpl unwrap() {
        return (com.sap.tc.moin.__impl.MoinPackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.repository.mmi.model.ModelPackage getModel()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getModel(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getModel(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public org.omg.ocl.OclPackage getOcl()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getOcl(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getOcl(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.corbaidltypes.CorbaIdlTypesPackage getCorbaIdlTypes()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getCorbaIdlTypes(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getCorbaIdlTypes(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.primitivetypes.PrimitiveTypesPackage getPrimitiveTypes()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getPrimitiveTypes(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getPrimitiveTypes(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    public java.lang.Class<com.sap.tc.moin.MoinPackage> get___JmiInterface() {
        return com.sap.tc.moin.MoinPackage.class;
    }
    
    protected String metaObjectToString() {
        return "com.sap.tc.moin.MoinPackage (Java Type)\nMOIN (MOF Type)"; //$NON-NLS-1$
    }
}