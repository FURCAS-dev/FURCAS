/**
 * Generated by the MOIN Generator Version 3.0
 **/

package org.omg.ocl.expressions.__impl;

public interface ExpressionsPackageInternal extends com.sap.tc.moin.repository.mmi.reflect.RefPackage
{
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getOclExpression(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getPropertyCallExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getLiteralExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getIfExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getVariableExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getModelPropertyCallExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getLoopExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getIteratorExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getIterateExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getVariableDeclaration(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAttributeCallExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getNavigationCallExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getOperationCallExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAssociationEndCallExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getPrimitiveLiteralExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getStringLiteralExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getNumericLiteralExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getBooleanLiteralExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getTupleLiteralExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getCollectionLiteralExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getEnumLiteralExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getIntegerLiteralExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getRealLiteralExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getCollectionLiteralPart(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getCollectionRange(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getCollectionItem(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getLetExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getTypeExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getOclNamedElement(com.sap.tc.moin.repository.core.CoreConnection connection);
    // associations
    public org.omg.ocl.expressions.AReferredVariableVariableExp getAReferredVariableVariableExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.ALoopExprIterators getALoopExprIterators(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.ABaseExpResult getABaseExpResult(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.AAppliedPropertySource getAAppliedPropertySource(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.ALoopExpBody getALoopExpBody(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.AReferredAttributeAttributeCallExp getAReferredAttributeAttributeCallExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.AReferredAssociationEndAssociationEndCallExp getAReferredAssociationEndAssociationEndCallExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.AReferredOperationOperationCallExp getAReferredOperationOperationCallExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.AParentOperationArguments getAParentOperationArguments(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.ANavigationSourceNavigationCallExp getANavigationSourceNavigationCallExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.AConditionIfExp getAConditionIfExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.AThenExpressionIfExp getAThenExpressionIfExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.AElseExpressionIfExp getAElseExpressionIfExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.ATuplePartTupleLiteralExp getATuplePartTupleLiteralExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.AReferredEnumEnumLiteralExp getAReferredEnumEnumLiteralExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.APartsCollectionLiteralExp getAPartsCollectionLiteralExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.AItemCollectionItem getAItemCollectionItem(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.ALastCollectionRange getALastCollectionRange(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.AFirstCollectionRange getAFirstCollectionRange(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.AInLetExp getAInLetExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.AVariableLetExp getAVariableLetExp(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.AInitExpressionInitializedVariable getAInitExpressionInitializedVariable(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.ATypeCollectionLiteralPart getATypeCollectionLiteralPart(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.ATypeVariableDeclaration getATypeVariableDeclaration(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.ATypeOclExpression getATypeOclExpression(com.sap.tc.moin.repository.core.CoreConnection connection);
    public org.omg.ocl.expressions.AReferredTypeTypeExp getAReferredTypeTypeExp(com.sap.tc.moin.repository.core.CoreConnection connection);
}