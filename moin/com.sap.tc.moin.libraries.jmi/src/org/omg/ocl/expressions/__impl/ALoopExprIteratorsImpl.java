/**
 * Generated by the MOIN Generator Version 3.0
 **/

package org.omg.ocl.expressions.__impl;

public final class ALoopExprIteratorsImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationImpl implements org.omg.ocl.expressions.ALoopExprIterators,org.omg.ocl.expressions.__impl.ALoopExprIteratorsInternal
{
    // default constructor
    public ALoopExprIteratorsImpl() {
        super();
    }

    // specific constructor
    public ALoopExprIteratorsImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    
    public boolean exists(org.omg.ocl.expressions.LoopExp _LoopExpr, org.omg.ocl.expressions.VariableDeclaration _Iterators) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return exists(get___CurrentConnection(), _LoopExpr, _Iterators);
    }
    public boolean exists(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.expressions.LoopExp _LoopExpr, org.omg.ocl.expressions.VariableDeclaration _Iterators) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return ___existsMultN( connection, _LoopExpr, _Iterators, "45ED2E29BC7DA383786847AD3C5BA862923C3DBE"); //$NON-NLS-1$
    }
    public org.omg.ocl.expressions.LoopExp getLoopExpr(org.omg.ocl.expressions.VariableDeclaration _Iterators) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getLoopExpr(get___CurrentConnection(), _Iterators);
    }
    public org.omg.ocl.expressions.LoopExp getLoopExpr(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.expressions.VariableDeclaration _Iterators) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        com.sap.tc.moin.repository.core.EndAndMetaObject endAndMetaObject = get___EndAndMetaObject( 1 );
        return (org.omg.ocl.expressions.LoopExp) get___CompositeParentForEndAndMetaObject( connection, _Iterators, endAndMetaObject );
    }
    public java.util.Collection<org.omg.ocl.expressions.VariableDeclaration> getIterators(org.omg.ocl.expressions.LoopExp _LoopExpr) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getIterators(get___CurrentConnection(), _LoopExpr);
    }
    public java.util.Collection<org.omg.ocl.expressions.VariableDeclaration> getIterators(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.expressions.LoopExp _LoopExpr) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<org.omg.ocl.expressions.VariableDeclaration>) ___getElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _LoopExpr, get___EndAndMetaObject( 0 ) );
    }
    public boolean add(org.omg.ocl.expressions.LoopExp _LoopExpr, org.omg.ocl.expressions.VariableDeclaration _Iterators) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_LoopExpr, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Iterators);
    }
    public boolean add(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.expressions.LoopExp _LoopExpr, org.omg.ocl.expressions.VariableDeclaration _Iterators) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_LoopExpr, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Iterators);
    }
    public boolean remove(org.omg.ocl.expressions.LoopExp _LoopExpr, org.omg.ocl.expressions.VariableDeclaration _Iterators) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_LoopExpr, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Iterators);
    }
    public boolean remove(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.expressions.LoopExp _LoopExpr, org.omg.ocl.expressions.VariableDeclaration _Iterators) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_LoopExpr, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Iterators);
    }
    public boolean refLinkExists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefObject firstEnd, com.sap.tc.moin.repository.mmi.reflect.RefObject secondEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        if ( firstEnd == null || secondEnd == null ) { return false; }
        checkTypesForRefLinkExists( connection, firstEnd, secondEnd );
        return exists( connection, (org.omg.ocl.expressions.LoopExp) firstEnd, (org.omg.ocl.expressions.VariableDeclaration) secondEnd );
    }

    public java.lang.Class<org.omg.ocl.expressions.ALoopExprIterators> get___JmiInterface() {
        return org.omg.ocl.expressions.ALoopExprIterators.class;
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<org.omg.ocl.expressions.ALoopExprIterators> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new org.omg.ocl.expressions.__impl.ALoopExprIteratorsWrapper(conn, this, synchronize);
    }
}