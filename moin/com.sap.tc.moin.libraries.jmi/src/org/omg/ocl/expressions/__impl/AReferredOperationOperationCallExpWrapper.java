/**
 * Generated by the MOIN Generator Version 3.0
 **/

package org.omg.ocl.expressions.__impl;

public class AReferredOperationOperationCallExpWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<org.omg.ocl.expressions.AReferredOperationOperationCallExp> implements org.omg.ocl.expressions.AReferredOperationOperationCallExp,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The AReferredOperationOperationCallExp wrapper
     */
    public AReferredOperationOperationCallExpWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, org.omg.ocl.expressions.__impl.AReferredOperationOperationCallExpImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private org.omg.ocl.expressions.__impl.AReferredOperationOperationCallExpImpl getCastWrappedObject() {
        return (org.omg.ocl.expressions.__impl.AReferredOperationOperationCallExpImpl) getWrappedObject();
    }

    public org.omg.ocl.expressions.AReferredOperationOperationCallExp unwrap() {
        return (org.omg.ocl.expressions.AReferredOperationOperationCallExp) getWrappedObject();
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.model.Operation _ReferredOperation, org.omg.ocl.expressions.OperationCallExp _OperationCallExp) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg(_ReferredOperation), unwrapArg(_OperationCallExp));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg(_ReferredOperation), unwrapArg(_OperationCallExp)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.model.Operation getReferredOperation(org.omg.ocl.expressions.OperationCallExp _OperationCallExp) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getReferredOperation(connection, unwrapArg(_OperationCallExp)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getReferredOperation(connection, unwrapArg(_OperationCallExp))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection<org.omg.ocl.expressions.OperationCallExp> getOperationCallExp(com.sap.tc.moin.repository.mmi.model.Operation _ReferredOperation) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getOperationCallExp(connection, unwrapArg(_ReferredOperation)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getOperationCallExp(connection, unwrapArg(_ReferredOperation))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(com.sap.tc.moin.repository.mmi.model.Operation _ReferredOperation, org.omg.ocl.expressions.OperationCallExp _OperationCallExp) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg(_ReferredOperation), unwrapArg(_OperationCallExp));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg(_ReferredOperation), unwrapArg(_OperationCallExp)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(com.sap.tc.moin.repository.mmi.model.Operation _ReferredOperation, org.omg.ocl.expressions.OperationCallExp _OperationCallExp) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg(_ReferredOperation), unwrapArg(_OperationCallExp));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg(_ReferredOperation), unwrapArg(_OperationCallExp)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<org.omg.ocl.expressions.AReferredOperationOperationCallExp> get___JmiInterface() {
        return org.omg.ocl.expressions.AReferredOperationOperationCallExp.class;
    }

    protected String metaObjectToString() {
        return "org.omg.ocl.expressions.AReferredOperationOperationCallExp (Java Type)\nOCL.Expressions.A_referredOperation_operationCallExp (MOF Type)"; //$NON-NLS-1$
    }    
}