/**
 * Generated by the MOIN Generator Version 3.0
 **/

package org.omg.ocl.expressions.__impl;

public class AReferredAssociationEndAssociationEndCallExpWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<org.omg.ocl.expressions.AReferredAssociationEndAssociationEndCallExp> implements org.omg.ocl.expressions.AReferredAssociationEndAssociationEndCallExp,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The AReferredAssociationEndAssociationEndCallExp wrapper
     */
    public AReferredAssociationEndAssociationEndCallExpWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, org.omg.ocl.expressions.__impl.AReferredAssociationEndAssociationEndCallExpImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private org.omg.ocl.expressions.__impl.AReferredAssociationEndAssociationEndCallExpImpl getCastWrappedObject() {
        return (org.omg.ocl.expressions.__impl.AReferredAssociationEndAssociationEndCallExpImpl) getWrappedObject();
    }

    public org.omg.ocl.expressions.AReferredAssociationEndAssociationEndCallExp unwrap() {
        return (org.omg.ocl.expressions.AReferredAssociationEndAssociationEndCallExp) getWrappedObject();
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.model.AssociationEnd _ReferredAssociationEnd, org.omg.ocl.expressions.AssociationEndCallExp _AssociationEndCallExp) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg(_ReferredAssociationEnd), unwrapArg(_AssociationEndCallExp));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg(_ReferredAssociationEnd), unwrapArg(_AssociationEndCallExp)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.model.AssociationEnd getReferredAssociationEnd(org.omg.ocl.expressions.AssociationEndCallExp _AssociationEndCallExp) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getReferredAssociationEnd(connection, unwrapArg(_AssociationEndCallExp)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getReferredAssociationEnd(connection, unwrapArg(_AssociationEndCallExp))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection<org.omg.ocl.expressions.AssociationEndCallExp> getAssociationEndCallExp(com.sap.tc.moin.repository.mmi.model.AssociationEnd _ReferredAssociationEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getAssociationEndCallExp(connection, unwrapArg(_ReferredAssociationEnd)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getAssociationEndCallExp(connection, unwrapArg(_ReferredAssociationEnd))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(com.sap.tc.moin.repository.mmi.model.AssociationEnd _ReferredAssociationEnd, org.omg.ocl.expressions.AssociationEndCallExp _AssociationEndCallExp) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg(_ReferredAssociationEnd), unwrapArg(_AssociationEndCallExp));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg(_ReferredAssociationEnd), unwrapArg(_AssociationEndCallExp)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(com.sap.tc.moin.repository.mmi.model.AssociationEnd _ReferredAssociationEnd, org.omg.ocl.expressions.AssociationEndCallExp _AssociationEndCallExp) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg(_ReferredAssociationEnd), unwrapArg(_AssociationEndCallExp));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg(_ReferredAssociationEnd), unwrapArg(_AssociationEndCallExp)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<org.omg.ocl.expressions.AReferredAssociationEndAssociationEndCallExp> get___JmiInterface() {
        return org.omg.ocl.expressions.AReferredAssociationEndAssociationEndCallExp.class;
    }

    protected String metaObjectToString() {
        return "org.omg.ocl.expressions.AReferredAssociationEndAssociationEndCallExp (Java Type)\nOCL.Expressions.A_referredAssociationEnd_associationEndCallExp (MOF Type)"; //$NON-NLS-1$
    }    
}