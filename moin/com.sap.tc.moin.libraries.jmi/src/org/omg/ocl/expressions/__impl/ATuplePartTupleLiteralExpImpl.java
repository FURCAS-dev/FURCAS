/**
 * Generated by the MOIN Generator Version 3.0
 **/

package org.omg.ocl.expressions.__impl;

public final class ATuplePartTupleLiteralExpImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationImpl implements org.omg.ocl.expressions.ATuplePartTupleLiteralExp,org.omg.ocl.expressions.__impl.ATuplePartTupleLiteralExpInternal
{
    // default constructor
    public ATuplePartTupleLiteralExpImpl() {
        super();
    }

    // specific constructor
    public ATuplePartTupleLiteralExpImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    
    public boolean exists(org.omg.ocl.expressions.VariableDeclaration _TuplePart, org.omg.ocl.expressions.TupleLiteralExp _TupleLiteralExp) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return exists(get___CurrentConnection(), _TuplePart, _TupleLiteralExp);
    }
    public boolean exists(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.expressions.VariableDeclaration _TuplePart, org.omg.ocl.expressions.TupleLiteralExp _TupleLiteralExp) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return ___existsMultN( connection, _TupleLiteralExp, _TuplePart, "45ED2E29D5AC907755AF487A2AD5D4F24C272720"); //$NON-NLS-1$
    }
    public java.util.Collection<org.omg.ocl.expressions.VariableDeclaration> getTuplePart(org.omg.ocl.expressions.TupleLiteralExp _TupleLiteralExp) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getTuplePart(get___CurrentConnection(), _TupleLiteralExp);
    }
    public java.util.Collection<org.omg.ocl.expressions.VariableDeclaration> getTuplePart(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.expressions.TupleLiteralExp _TupleLiteralExp) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<org.omg.ocl.expressions.VariableDeclaration>) ___getElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _TupleLiteralExp, get___EndAndMetaObject( 1 ) );
    }
    public java.util.Collection<org.omg.ocl.expressions.TupleLiteralExp> getTupleLiteralExp(org.omg.ocl.expressions.VariableDeclaration _TuplePart) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getTupleLiteralExp(get___CurrentConnection(), _TuplePart);
    }
    public java.util.Collection<org.omg.ocl.expressions.TupleLiteralExp> getTupleLiteralExp(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.expressions.VariableDeclaration _TuplePart) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<org.omg.ocl.expressions.TupleLiteralExp>) ___queryElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _TuplePart, get___EndAndMetaObject( 0 ) );
    }
    public boolean add(org.omg.ocl.expressions.VariableDeclaration _TuplePart, org.omg.ocl.expressions.TupleLiteralExp _TupleLiteralExp) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_TuplePart, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_TupleLiteralExp);
    }
    public boolean add(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.expressions.VariableDeclaration _TuplePart, org.omg.ocl.expressions.TupleLiteralExp _TupleLiteralExp) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_TuplePart, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_TupleLiteralExp);
    }
    public boolean remove(org.omg.ocl.expressions.VariableDeclaration _TuplePart, org.omg.ocl.expressions.TupleLiteralExp _TupleLiteralExp) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_TuplePart, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_TupleLiteralExp);
    }
    public boolean remove(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.expressions.VariableDeclaration _TuplePart, org.omg.ocl.expressions.TupleLiteralExp _TupleLiteralExp) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_TuplePart, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_TupleLiteralExp);
    }
    public boolean refLinkExists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefObject firstEnd, com.sap.tc.moin.repository.mmi.reflect.RefObject secondEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        if ( firstEnd == null || secondEnd == null ) { return false; }
        checkTypesForRefLinkExists( connection, firstEnd, secondEnd );
        return exists( connection, (org.omg.ocl.expressions.VariableDeclaration) firstEnd, (org.omg.ocl.expressions.TupleLiteralExp) secondEnd );
    }

    public java.lang.Class<org.omg.ocl.expressions.ATuplePartTupleLiteralExp> get___JmiInterface() {
        return org.omg.ocl.expressions.ATuplePartTupleLiteralExp.class;
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<org.omg.ocl.expressions.ATuplePartTupleLiteralExp> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new org.omg.ocl.expressions.__impl.ATuplePartTupleLiteralExpWrapper(conn, this, synchronize);
    }
}