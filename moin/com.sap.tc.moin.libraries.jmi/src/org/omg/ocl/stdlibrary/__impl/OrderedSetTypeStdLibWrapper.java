/**
 * Generated by the MOIN Generator Version 3.0
 **/

package org.omg.ocl.stdlibrary.__impl;

public class OrderedSetTypeStdLibWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefObjectWrapperImpl<org.omg.ocl.stdlibrary.__impl.OrderedSetTypeStdLibImpl> implements org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,com.sap.tc.moin.repository.Partitionable {

        
    private static final java.util.Map<java.lang.String, java.lang.Integer> OPERATION_IDS;
    
    static {
        
        OPERATION_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>();
        OPERATION_IDS.put("findRequiredElements", Integer.valueOf(0)); //$NON-NLS-1$
        OPERATION_IDS.put("isRequiredBecause", Integer.valueOf(1)); //$NON-NLS-1$
        OPERATION_IDS.put("isFrozen", Integer.valueOf(2)); //$NON-NLS-1$
        OPERATION_IDS.put("isVisible", Integer.valueOf(3)); //$NON-NLS-1$
        OPERATION_IDS.put("lookupElement", Integer.valueOf(4)); //$NON-NLS-1$
        OPERATION_IDS.put("resolveQualifiedName", Integer.valueOf(5)); //$NON-NLS-1$
        OPERATION_IDS.put("findElementsByType", Integer.valueOf(6)); //$NON-NLS-1$
        OPERATION_IDS.put("nameIsValid", Integer.valueOf(7)); //$NON-NLS-1$
        OPERATION_IDS.put("allSupertypes", Integer.valueOf(8)); //$NON-NLS-1$
        OPERATION_IDS.put("lookupElementExtended", Integer.valueOf(9)); //$NON-NLS-1$
        OPERATION_IDS.put("findElementsByTypeExtended", Integer.valueOf(10)); //$NON-NLS-1$
        OPERATION_IDS.put("size", Integer.valueOf(11)); //$NON-NLS-1$
        OPERATION_IDS.put("includes", Integer.valueOf(12)); //$NON-NLS-1$
        OPERATION_IDS.put("excludes", Integer.valueOf(13)); //$NON-NLS-1$
        OPERATION_IDS.put("count", Integer.valueOf(14)); //$NON-NLS-1$
        OPERATION_IDS.put("includesAll", Integer.valueOf(15)); //$NON-NLS-1$
        OPERATION_IDS.put("excludesAll", Integer.valueOf(16)); //$NON-NLS-1$
        OPERATION_IDS.put("isEmpty", Integer.valueOf(17)); //$NON-NLS-1$
        OPERATION_IDS.put("notEmpty", Integer.valueOf(18)); //$NON-NLS-1$
        OPERATION_IDS.put("sum", Integer.valueOf(19)); //$NON-NLS-1$
        OPERATION_IDS.put("product", Integer.valueOf(20)); //$NON-NLS-1$
        OPERATION_IDS.put("asSet", Integer.valueOf(21)); //$NON-NLS-1$
        OPERATION_IDS.put("asBag", Integer.valueOf(22)); //$NON-NLS-1$
        OPERATION_IDS.put("asOrderedSet", Integer.valueOf(23)); //$NON-NLS-1$
        OPERATION_IDS.put("asSequence", Integer.valueOf(24)); //$NON-NLS-1$
        OPERATION_IDS.put("oclIsUndefined", Integer.valueOf(25)); //$NON-NLS-1$
        OPERATION_IDS.put("append", Integer.valueOf(26)); //$NON-NLS-1$
        OPERATION_IDS.put("prepend", Integer.valueOf(27)); //$NON-NLS-1$
        OPERATION_IDS.put("insertAt", Integer.valueOf(28)); //$NON-NLS-1$
        OPERATION_IDS.put("subOrderedSet", Integer.valueOf(29)); //$NON-NLS-1$
        OPERATION_IDS.put("at", Integer.valueOf(30)); //$NON-NLS-1$
        OPERATION_IDS.put("indexOf", Integer.valueOf(31)); //$NON-NLS-1$
        OPERATION_IDS.put("first", Integer.valueOf(32)); //$NON-NLS-1$
        OPERATION_IDS.put("last", Integer.valueOf(33)); //$NON-NLS-1$
        OPERATION_IDS.put("equalsStdLib", Integer.valueOf(34)); //$NON-NLS-1$
    }

    public OrderedSetTypeStdLibWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, org.omg.ocl.stdlibrary.__impl.OrderedSetTypeStdLibImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private org.omg.ocl.stdlibrary.__impl.OrderedSetTypeStdLibImpl getCastWrappedObject() {
        return (org.omg.ocl.stdlibrary.__impl.OrderedSetTypeStdLibImpl) getWrappedObject();
    }
    
    private org.omg.ocl.stdlibrary.__impl.OrderedSetTypeStdLibImpl getCastWrappedObject(com.sap.tc.moin.repository.core.CorePartitionable resolved) {
        return (org.omg.ocl.stdlibrary.__impl.OrderedSetTypeStdLibImpl) resolved;
    }
    
    public org.omg.ocl.stdlibrary.__impl.OrderedSetTypeStdLibImpl unwrap() {
        return (org.omg.ocl.stdlibrary.__impl.OrderedSetTypeStdLibImpl) getWrappedObject();
    }
        
    // methods for attributes
    public java.lang.String getName() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        com.sap.tc.moin.repository.core.CorePartitionable resolved = mriReference.getIfResolved();
        if (resolved != null) {
            return getCastWrappedObject(resolved).getName();
        }
            try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().getName();
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().getName(); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public void setName(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    getCastWrappedObject().setName(connection, newValue);
                }       
            }
            else {
                assertConnectionAlive();
                attachConnectionIfRequired();
                getCastWrappedObject().setName(connection, newValue);
            } 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

    public java.util.List<java.lang.String> getQualifiedName() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getQualifiedName(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getQualifiedName(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }



    public java.lang.String getAnnotation() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        com.sap.tc.moin.repository.core.CorePartitionable resolved = mriReference.getIfResolved();
        if (resolved != null) {
            return getCastWrappedObject(resolved).getAnnotation();
        }
            try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().getAnnotation();
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().getAnnotation(); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public void setAnnotation(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    getCastWrappedObject().setAnnotation(connection, newValue);
                }       
            }
            else {
                assertConnectionAlive();
                attachConnectionIfRequired();
                getCastWrappedObject().setAnnotation(connection, newValue);
            } 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

    public boolean isRoot() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        com.sap.tc.moin.repository.core.CorePartitionable resolved = mriReference.getIfResolved();
        if (resolved != null) {
            return getCastWrappedObject(resolved).isRoot();
        }
            try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().isRoot();
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().isRoot(); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public void setRoot(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    getCastWrappedObject().setRoot(connection, newValue);
                }       
            }
            else {
                assertConnectionAlive();
                attachConnectionIfRequired();
                getCastWrappedObject().setRoot(connection, newValue);
            } 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

    public boolean isLeaf() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        com.sap.tc.moin.repository.core.CorePartitionable resolved = mriReference.getIfResolved();
        if (resolved != null) {
            return getCastWrappedObject(resolved).isLeaf();
        }
            try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().isLeaf();
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().isLeaf(); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public void setLeaf(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    getCastWrappedObject().setLeaf(connection, newValue);
                }       
            }
            else {
                assertConnectionAlive();
                attachConnectionIfRequired();
                getCastWrappedObject().setLeaf(connection, newValue);
            } 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

    public boolean isAbstract() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        com.sap.tc.moin.repository.core.CorePartitionable resolved = mriReference.getIfResolved();
        if (resolved != null) {
            return getCastWrappedObject(resolved).isAbstract();
        }
            try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().isAbstract();
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().isAbstract(); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public void setAbstract(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    getCastWrappedObject().setAbstract(connection, newValue);
                }       
            }
            else {
                assertConnectionAlive();
                attachConnectionIfRequired();
                getCastWrappedObject().setAbstract(connection, newValue);
            } 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

    public com.sap.tc.moin.repository.mmi.model.VisibilityKind getVisibility() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        com.sap.tc.moin.repository.core.CorePartitionable resolved = mriReference.getIfResolved();
        if (resolved != null) {
            return getCastWrappedObject(resolved).getVisibility();
        }
            try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().getVisibility();
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().getVisibility(); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public void setVisibility(com.sap.tc.moin.repository.mmi.model.VisibilityKind newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    getCastWrappedObject().setVisibility(connection, newValue);
                }       
            }
            else {
                assertConnectionAlive();
                attachConnectionIfRequired();
                getCastWrappedObject().setVisibility(connection, newValue);
            } 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

     
    // methods for references
    public java.util.Collection<com.sap.tc.moin.repository.mmi.model.ModelElement> getRequiredElements() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getRequiredElements(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getRequiredElements(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }



    public com.sap.tc.moin.repository.mmi.model.Namespace getContainer() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getContainer(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getContainer(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

    public void setContainer(com.sap.tc.moin.repository.mmi.model.Namespace newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    getCastWrappedObject().setContainer(connection, unwrapArg(newValue));
                }       
            }
            else {
                assertConnectionAlive();
                attachConnectionIfRequired();
                getCastWrappedObject().setContainer(connection, unwrapArg(newValue));
            } 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

    public java.util.Collection<com.sap.tc.moin.repository.mmi.model.Constraint> getConstraints() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getConstraints(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getConstraints(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }



    public java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement> getContents() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getContents(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getContents(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }



    public java.util.List<com.sap.tc.moin.repository.mmi.model.GeneralizableElement> getSupertypes() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getSupertypes(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getSupertypes(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }



   
    // methods for modeled operations
    public java.util.Collection<com.sap.tc.moin.repository.mmi.model.ModelElement> findRequiredElements(java.util.Collection<? extends java.lang.String> kinds, boolean recursive) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(2);
        try {
            parameterList.add(kinds);
            parameterList.add(recursive);
            return (java.util.Collection<com.sap.tc.moin.repository.mmi.model.ModelElement>)___invokeOperation(connection, 0, "45ED2E294BCAFBE3507348AD004AFDD40264E06F", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public boolean isRequiredBecause(com.sap.tc.moin.repository.mmi.model.ModelElement otherElement, java.lang.String[] reason) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(2);
        try {
            parameterList.add(otherElement);
            parameterList.add(reason);
            return (java.lang.Boolean)___invokeOperation(connection, 1, "45ED2E297DF5E990114B49CA0CBEA8DA07C6AA4B", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public boolean isFrozen() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (java.lang.Boolean)___invokeOperation(connection, 2, "45ED2E29B53D3F263FF6443821FCFDF1E84D3C01", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public boolean isVisible(com.sap.tc.moin.repository.mmi.model.ModelElement otherElement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(1);
        try {
            parameterList.add(otherElement);
            return (java.lang.Boolean)___invokeOperation(connection, 3, "45ED2E296CA3E56677D84D5B064884CBEE6CF6C5", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public com.sap.tc.moin.repository.mmi.model.ModelElement lookupElement(java.lang.String name) throws com.sap.tc.moin.repository.mmi.model.NameNotFoundException, com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(1);
        try {
            parameterList.add(name);
            return (com.sap.tc.moin.repository.mmi.model.ModelElement)___invokeOperation(connection, 4, "45ED2E29A46B2E1F1D41471439D8EAC7374C9062", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            if (ex instanceof com.sap.tc.moin.repository.mmi.model.NameNotFoundException) {
                throw (com.sap.tc.moin.repository.mmi.model.NameNotFoundException) ex;
            }
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public com.sap.tc.moin.repository.mmi.model.ModelElement resolveQualifiedName(java.util.List<? extends java.lang.String> qualifiedName) throws com.sap.tc.moin.repository.mmi.model.NameNotResolvedException, com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(1);
        try {
            parameterList.add(qualifiedName);
            return (com.sap.tc.moin.repository.mmi.model.ModelElement)___invokeOperation(connection, 5, "45ED2E292F758C846F324B3934EACA27EDF2BA8F", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            if (ex instanceof com.sap.tc.moin.repository.mmi.model.NameNotResolvedException) {
                throw (com.sap.tc.moin.repository.mmi.model.NameNotResolvedException) ex;
            }
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement> findElementsByType(com.sap.tc.moin.repository.mmi.model.MofClass ofType, boolean includeSubtypes) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(2);
        try {
            parameterList.add(ofType);
            parameterList.add(includeSubtypes);
            return (java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement>)___invokeOperation(connection, 6, "45ED2E29FE526480A67A4FE319299BE18CA5FDAE", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public boolean nameIsValid(java.lang.String proposedName) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(1);
        try {
            parameterList.add(proposedName);
            return (java.lang.Boolean)___invokeOperation(connection, 7, "45ED2E295F11447845674A07026F84A92D9EF0C9", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public java.util.List<com.sap.tc.moin.repository.mmi.model.GeneralizableElement> allSupertypes() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (java.util.List<com.sap.tc.moin.repository.mmi.model.GeneralizableElement>)___invokeOperation(connection, 8, "45ED2E29DE792241B29746940E65C693F6378D89", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public com.sap.tc.moin.repository.mmi.model.ModelElement lookupElementExtended(java.lang.String name) throws com.sap.tc.moin.repository.mmi.model.NameNotFoundException, com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(1);
        try {
            parameterList.add(name);
            return (com.sap.tc.moin.repository.mmi.model.ModelElement)___invokeOperation(connection, 9, "45ED2E2904550ECA7F554F3A08CDBA4EAACE323A", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            if (ex instanceof com.sap.tc.moin.repository.mmi.model.NameNotFoundException) {
                throw (com.sap.tc.moin.repository.mmi.model.NameNotFoundException) ex;
            }
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement> findElementsByTypeExtended(com.sap.tc.moin.repository.mmi.model.MofClass ofType, boolean includeSubtypes) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(2);
        try {
            parameterList.add(ofType);
            parameterList.add(includeSubtypes);
            return (java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement>)___invokeOperation(connection, 10, "45ED2E2909D6D1FC5B304CE622B9899C6C573146", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public int size() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (java.lang.Integer)___invokeOperation(connection, 11, "45ED2E29476D781CFD5A4577395DDA35929AEC83", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public boolean includes(com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(1);
        try {
            parameterList.add(o);
            return (java.lang.Boolean)___invokeOperation(connection, 12, "45ED2E29F5342F8C96B0490A3CA5E629B012DB21", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public boolean excludes(com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(1);
        try {
            parameterList.add(o);
            return (java.lang.Boolean)___invokeOperation(connection, 13, "45ED2E29F77E2221DEB849E4111B8A530857572C", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public int count(com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(1);
        try {
            parameterList.add(o);
            return (java.lang.Integer)___invokeOperation(connection, 14, "45ED2E29C7F6E1AABA334E153C51C9F9F3675D17", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public boolean includesAll(org.omg.ocl.types.CollectionType c) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(1);
        try {
            parameterList.add(c);
            return (java.lang.Boolean)___invokeOperation(connection, 15, "45ED2E29216C78D5766E43C11F77E5CBB49A849E", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public boolean excludesAll(org.omg.ocl.types.CollectionType c) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(1);
        try {
            parameterList.add(c);
            return (java.lang.Boolean)___invokeOperation(connection, 16, "45ED2E29341CF1A42F4946681AF287A60C56666B", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public boolean isEmpty() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (java.lang.Boolean)___invokeOperation(connection, 17, "45ED2E29EBBCBF9D847F48CA35129E7479106AF2", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public boolean notEmpty() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (java.lang.Boolean)___invokeOperation(connection, 18, "45ED2E29A0757964E6B9452A26E89E3B3E92B04D", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public com.sap.tc.moin.repository.mmi.model.Classifier sum() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (com.sap.tc.moin.repository.mmi.model.Classifier)___invokeOperation(connection, 19, "45ED2E29325DD3A453D840E636B4FFD74D1AE452", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public org.omg.ocl.types.SetType product(org.omg.ocl.types.CollectionType c) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(1);
        try {
            parameterList.add(c);
            return (org.omg.ocl.types.SetType)___invokeOperation(connection, 20, "45ED2E29BC67A06B565B49A32F43D475BE46D9E8", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public org.omg.ocl.types.SetType asSet() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (org.omg.ocl.types.SetType)___invokeOperation(connection, 21, "45ED2E29C3699CB5A45244F71DD1AF439C99E317", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public org.omg.ocl.types.BagType asBag() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (org.omg.ocl.types.BagType)___invokeOperation(connection, 22, "45ED2E291E9A7E20670D40453A3897E40656A6BF", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public org.omg.ocl.types.OrderedSetType asOrderedSet() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (org.omg.ocl.types.OrderedSetType)___invokeOperation(connection, 23, "45ED2E299835124105F84DBD0042D05CDEA3E56F", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public org.omg.ocl.types.SequenceType asSequence() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (org.omg.ocl.types.SequenceType)___invokeOperation(connection, 24, "45ED2E299283FF8A2CDC454536E7C401B320D19A", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public boolean oclIsUndefined() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (java.lang.Boolean)___invokeOperation(connection, 25, "45ED2E29217220009B5A4A490F97C099EB0A39E0", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public org.omg.ocl.types.OrderedSetType append(com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(1);
        try {
            parameterList.add(o);
            return (org.omg.ocl.types.OrderedSetType)___invokeOperation(connection, 26, "45ED2E2986D411619FAA4AC01518F21E604B7914", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public org.omg.ocl.types.OrderedSetType prepend(com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(1);
        try {
            parameterList.add(o);
            return (org.omg.ocl.types.OrderedSetType)___invokeOperation(connection, 27, "45ED2E296E79DE1E02D74039138AEDE45B6CE247", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public org.omg.ocl.types.OrderedSetType insertAt(int index, com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(2);
        try {
            parameterList.add(index);
            parameterList.add(o);
            return (org.omg.ocl.types.OrderedSetType)___invokeOperation(connection, 28, "45ED2E296F734C71AD7C49340BDDADB3A2D3C670", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public org.omg.ocl.types.OrderedSetType subOrderedSet(int lower, int upper) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(2);
        try {
            parameterList.add(lower);
            parameterList.add(upper);
            return (org.omg.ocl.types.OrderedSetType)___invokeOperation(connection, 29, "45ED2E29EB6AA7B00EFF47072D87AA81DABC0478", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public com.sap.tc.moin.repository.mmi.model.Classifier at(int i) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(1);
        try {
            parameterList.add(i);
            return (com.sap.tc.moin.repository.mmi.model.Classifier)___invokeOperation(connection, 30, "45ED2E29DC7FA207612E4920142FCEF019265D4F", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public int indexOf(com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(1);
        try {
            parameterList.add(o);
            return (java.lang.Integer)___invokeOperation(connection, 31, "45ED2E29EAB48D05F9034707224EB8E582FBD3CD", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public com.sap.tc.moin.repository.mmi.model.Classifier first() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (com.sap.tc.moin.repository.mmi.model.Classifier)___invokeOperation(connection, 32, "45ED2E2902A735586F3548F8057C9565451FAB95", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public com.sap.tc.moin.repository.mmi.model.Classifier last() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (com.sap.tc.moin.repository.mmi.model.Classifier)___invokeOperation(connection, 33, "45ED2E29EEE0677D4C4A49F40491B5D729F94D77", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public boolean equalsStdLib(org.omg.ocl.types.OrderedSetType o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(1);
        try {
            parameterList.add(o);
            return (java.lang.Boolean)___invokeOperation(connection, 34, "45ED2E2993D699203EDF4D261C7CEC50D9748B7A", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    
    // methods for internal modeled operations
    private java.util.Collection<com.sap.tc.moin.repository.mmi.model.ModelElement> invoke__findRequiredElements(com.sap.tc.moin.repository.core.CoreConnection connection, java.util.Collection<? extends java.lang.String> kinds, boolean recursive) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // begin of implementation provided in tag org.omg.sap2mof.OperationCodeJava
        // ModelElement.findRequiredElements
        return com.sap.tc.moin.repository.core.jmi.util.MoinMetamodelCode.findRequiredElements(connection, this, this, kinds, recursive);
        // end of implementation provided in tag org.omg.sap2mof.OperationCodeJava
    }
    private boolean invoke__isRequiredBecause(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.model.ModelElement otherElement, java.lang.String[] reason) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // begin of implementation provided in tag org.omg.sap2mof.OperationCodeJava
        // ModelElement.isRequiredBecause
        return com.sap.tc.moin.repository.core.jmi.util.MoinMetamodelCode.isRequiredBecause(connection, this, this, otherElement, reason);
        // end of implementation provided in tag org.omg.sap2mof.OperationCodeJava
    }
    private boolean invoke__isFrozen(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // begin of implementation provided in tag org.omg.sap2mof.OperationCodeJava
        // ModelElement.isFrozen
        return com.sap.tc.moin.repository.core.jmi.util.MoinMetamodelCode.isFrozen(connection, this, this);

        // end of implementation provided in tag org.omg.sap2mof.OperationCodeJava
    }
    private boolean invoke__isVisible(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.model.ModelElement otherElement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // begin of implementation provided in tag org.omg.sap2mof.OperationCodeJava
        // ModelElement.isVisible
        return com.sap.tc.moin.repository.core.jmi.util.MoinMetamodelCode.isVisible(connection, this, this, otherElement);
        // end of implementation provided in tag org.omg.sap2mof.OperationCodeJava
    }
    private com.sap.tc.moin.repository.mmi.model.ModelElement invoke__lookupElement(com.sap.tc.moin.repository.core.CoreConnection connection, java.lang.String name) throws com.sap.tc.moin.repository.mmi.model.NameNotFoundException, com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // begin of implementation provided in tag org.omg.sap2mof.OperationCodeJava
        // Namespace.lookupElement
        return com.sap.tc.moin.repository.core.jmi.util.MoinMetamodelCode.lookupElement(connection, this, this, name);
        // end of implementation provided in tag org.omg.sap2mof.OperationCodeJava
    }
    private com.sap.tc.moin.repository.mmi.model.ModelElement invoke__resolveQualifiedName(com.sap.tc.moin.repository.core.CoreConnection connection, java.util.List<? extends java.lang.String> qualifiedName) throws com.sap.tc.moin.repository.mmi.model.NameNotResolvedException, com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // begin of implementation provided in tag org.omg.sap2mof.OperationCodeJava
        // Namespace.resolveQualifiedName
        return com.sap.tc.moin.repository.core.jmi.util.MoinMetamodelCode.resolveQualifiedName(connection, this, this, qualifiedName);
        // end of implementation provided in tag org.omg.sap2mof.OperationCodeJava
    }
    private java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement> invoke__findElementsByType(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.model.MofClass ofType, boolean includeSubtypes) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // begin of implementation provided in tag org.omg.sap2mof.OperationCodeJava
        // Namespace.findElementsByType
        return com.sap.tc.moin.repository.core.jmi.util.MoinMetamodelCode.findElementsByType(connection, this, this, ofType, includeSubtypes);
        // end of implementation provided in tag org.omg.sap2mof.OperationCodeJava
    }
    private boolean invoke__nameIsValid(com.sap.tc.moin.repository.core.CoreConnection connection, java.lang.String proposedName) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // begin of implementation provided in tag org.omg.sap2mof.OperationCodeJava
        // Namespace.nameIsValid
        return com.sap.tc.moin.repository.core.jmi.util.MoinMetamodelCode.nameIsValid(connection, this, this, proposedName);
        // end of implementation provided in tag org.omg.sap2mof.OperationCodeJava
    }
    private java.util.List<com.sap.tc.moin.repository.mmi.model.GeneralizableElement> invoke__allSupertypes(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // begin of implementation provided in tag org.omg.sap2mof.OperationCodeJava
        // GeneralizableElement.allSupertypes
        return com.sap.tc.moin.repository.core.jmi.util.MoinMetamodelCode.allSupertypes(connection, this, this);
        // end of implementation provided in tag org.omg.sap2mof.OperationCodeJava
    }
    private com.sap.tc.moin.repository.mmi.model.ModelElement invoke__lookupElementExtended(com.sap.tc.moin.repository.core.CoreConnection connection, java.lang.String name) throws com.sap.tc.moin.repository.mmi.model.NameNotFoundException, com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // begin of implementation provided in tag org.omg.sap2mof.OperationCodeJava
        // GeneralizableElement.lookupElementExtended
        return com.sap.tc.moin.repository.core.jmi.util.MoinMetamodelCode.lookupElementExtended(connection, this, this, name);
        // end of implementation provided in tag org.omg.sap2mof.OperationCodeJava
    }
    private java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement> invoke__findElementsByTypeExtended(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.model.MofClass ofType, boolean includeSubtypes) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // begin of implementation provided in tag org.omg.sap2mof.OperationCodeJava
        // GeneralizableElement.findElementsByTypeExtended
        return com.sap.tc.moin.repository.core.jmi.util.MoinMetamodelCode.findElementsByTypeExtended(connection, this, this, ofType, includeSubtypes);
        // end of implementation provided in tag org.omg.sap2mof.OperationCodeJava
    }
    private int invoke__size(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return 0;
    }
    private boolean invoke__includes(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return false;
    }
    private boolean invoke__excludes(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return false;
    }
    private int invoke__count(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return 0;
    }
    private boolean invoke__includesAll(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.types.CollectionType c) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return false;
    }
    private boolean invoke__excludesAll(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.types.CollectionType c) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return false;
    }
    private boolean invoke__isEmpty(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return false;
    }
    private boolean invoke__notEmpty(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return false;
    }
    private com.sap.tc.moin.repository.mmi.model.Classifier invoke__sum(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return null;
    }
    private org.omg.ocl.types.SetType invoke__product(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.types.CollectionType c) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return null;
    }
    private org.omg.ocl.types.SetType invoke__asSet(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return null;
    }
    private org.omg.ocl.types.BagType invoke__asBag(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return null;
    }
    private org.omg.ocl.types.OrderedSetType invoke__asOrderedSet(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return null;
    }
    private org.omg.ocl.types.SequenceType invoke__asSequence(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return null;
    }
    private boolean invoke__oclIsUndefined(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return false;
    }
    private org.omg.ocl.types.OrderedSetType invoke__append(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return null;
    }
    private org.omg.ocl.types.OrderedSetType invoke__prepend(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return null;
    }
    private org.omg.ocl.types.OrderedSetType invoke__insertAt(com.sap.tc.moin.repository.core.CoreConnection connection, int index, com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return null;
    }
    private org.omg.ocl.types.OrderedSetType invoke__subOrderedSet(com.sap.tc.moin.repository.core.CoreConnection connection, int lower, int upper) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return null;
    }
    private com.sap.tc.moin.repository.mmi.model.Classifier invoke__at(com.sap.tc.moin.repository.core.CoreConnection connection, int i) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return null;
    }
    private int invoke__indexOf(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return 0;
    }
    private com.sap.tc.moin.repository.mmi.model.Classifier invoke__first(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return null;
    }
    private com.sap.tc.moin.repository.mmi.model.Classifier invoke__last(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return null;
    }
    private boolean invoke__equalsStdLib(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.types.OrderedSetType o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // missing an implementation provided in either tag org.omg.sap2mof.OperationCodeJava or org.omg.sap2mof.OperationCodeOcl
        return false;
    }

    // reflective methods
    @Override
    public Object refInvokeOperation(com.sap.tc.moin.repository.core.CoreConnection connection, java.lang.String requestedOperation, java.util.List<? extends Object> args) throws com.sap.tc.moin.repository.mmi.reflect.RefException {
        if (requestedOperation == null) {
            throw new com.sap.tc.moin.repository.mmi.reflect.InvalidNameException(requestedOperation);
        }
        java.lang.Integer operationId = OPERATION_IDS.get(requestedOperation);
        if (operationId == null) {
            throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(requestedOperation, refMetaObject(), "refInvokeOperation(String)"); //$NON-NLS-1$
        }
        switch (operationId) {
                
            case 0:
                return ___invokeOperation( connection, operationId, "45ED2E294BCAFBE3507348AD004AFDD40264E06F", args ); //$NON-NLS-1$    
                
            case 1:
                return ___invokeOperation( connection, operationId, "45ED2E297DF5E990114B49CA0CBEA8DA07C6AA4B", args ); //$NON-NLS-1$    
                
            case 2:
                return ___invokeOperation( connection, operationId, "45ED2E29B53D3F263FF6443821FCFDF1E84D3C01", args ); //$NON-NLS-1$    
                
            case 3:
                return ___invokeOperation( connection, operationId, "45ED2E296CA3E56677D84D5B064884CBEE6CF6C5", args ); //$NON-NLS-1$    
                
            case 4:
                return ___invokeOperation( connection, operationId, "45ED2E29A46B2E1F1D41471439D8EAC7374C9062", args ); //$NON-NLS-1$    
                
            case 5:
                return ___invokeOperation( connection, operationId, "45ED2E292F758C846F324B3934EACA27EDF2BA8F", args ); //$NON-NLS-1$    
                
            case 6:
                return ___invokeOperation( connection, operationId, "45ED2E29FE526480A67A4FE319299BE18CA5FDAE", args ); //$NON-NLS-1$    
                
            case 7:
                return ___invokeOperation( connection, operationId, "45ED2E295F11447845674A07026F84A92D9EF0C9", args ); //$NON-NLS-1$    
                
            case 8:
                return ___invokeOperation( connection, operationId, "45ED2E29DE792241B29746940E65C693F6378D89", args ); //$NON-NLS-1$    
                
            case 9:
                return ___invokeOperation( connection, operationId, "45ED2E2904550ECA7F554F3A08CDBA4EAACE323A", args ); //$NON-NLS-1$    
                
            case 10:
                return ___invokeOperation( connection, operationId, "45ED2E2909D6D1FC5B304CE622B9899C6C573146", args ); //$NON-NLS-1$    
                
            case 11:
                return ___invokeOperation( connection, operationId, "45ED2E29476D781CFD5A4577395DDA35929AEC83", args ); //$NON-NLS-1$    
                
            case 12:
                return ___invokeOperation( connection, operationId, "45ED2E29F5342F8C96B0490A3CA5E629B012DB21", args ); //$NON-NLS-1$    
                
            case 13:
                return ___invokeOperation( connection, operationId, "45ED2E29F77E2221DEB849E4111B8A530857572C", args ); //$NON-NLS-1$    
                
            case 14:
                return ___invokeOperation( connection, operationId, "45ED2E29C7F6E1AABA334E153C51C9F9F3675D17", args ); //$NON-NLS-1$    
                
            case 15:
                return ___invokeOperation( connection, operationId, "45ED2E29216C78D5766E43C11F77E5CBB49A849E", args ); //$NON-NLS-1$    
                
            case 16:
                return ___invokeOperation( connection, operationId, "45ED2E29341CF1A42F4946681AF287A60C56666B", args ); //$NON-NLS-1$    
                
            case 17:
                return ___invokeOperation( connection, operationId, "45ED2E29EBBCBF9D847F48CA35129E7479106AF2", args ); //$NON-NLS-1$    
                
            case 18:
                return ___invokeOperation( connection, operationId, "45ED2E29A0757964E6B9452A26E89E3B3E92B04D", args ); //$NON-NLS-1$    
                
            case 19:
                return ___invokeOperation( connection, operationId, "45ED2E29325DD3A453D840E636B4FFD74D1AE452", args ); //$NON-NLS-1$    
                
            case 20:
                return ___invokeOperation( connection, operationId, "45ED2E29BC67A06B565B49A32F43D475BE46D9E8", args ); //$NON-NLS-1$    
                
            case 21:
                return ___invokeOperation( connection, operationId, "45ED2E29C3699CB5A45244F71DD1AF439C99E317", args ); //$NON-NLS-1$    
                
            case 22:
                return ___invokeOperation( connection, operationId, "45ED2E291E9A7E20670D40453A3897E40656A6BF", args ); //$NON-NLS-1$    
                
            case 23:
                return ___invokeOperation( connection, operationId, "45ED2E299835124105F84DBD0042D05CDEA3E56F", args ); //$NON-NLS-1$    
                
            case 24:
                return ___invokeOperation( connection, operationId, "45ED2E299283FF8A2CDC454536E7C401B320D19A", args ); //$NON-NLS-1$    
                
            case 25:
                return ___invokeOperation( connection, operationId, "45ED2E29217220009B5A4A490F97C099EB0A39E0", args ); //$NON-NLS-1$    
                
            case 26:
                return ___invokeOperation( connection, operationId, "45ED2E2986D411619FAA4AC01518F21E604B7914", args ); //$NON-NLS-1$    
                
            case 27:
                return ___invokeOperation( connection, operationId, "45ED2E296E79DE1E02D74039138AEDE45B6CE247", args ); //$NON-NLS-1$    
                
            case 28:
                return ___invokeOperation( connection, operationId, "45ED2E296F734C71AD7C49340BDDADB3A2D3C670", args ); //$NON-NLS-1$    
                
            case 29:
                return ___invokeOperation( connection, operationId, "45ED2E29EB6AA7B00EFF47072D87AA81DABC0478", args ); //$NON-NLS-1$    
                
            case 30:
                return ___invokeOperation( connection, operationId, "45ED2E29DC7FA207612E4920142FCEF019265D4F", args ); //$NON-NLS-1$    
                
            case 31:
                return ___invokeOperation( connection, operationId, "45ED2E29EAB48D05F9034707224EB8E582FBD3CD", args ); //$NON-NLS-1$    
                
            case 32:
                return ___invokeOperation( connection, operationId, "45ED2E2902A735586F3548F8057C9565451FAB95", args ); //$NON-NLS-1$    
                
            case 33:
                return ___invokeOperation( connection, operationId, "45ED2E29EEE0677D4C4A49F40491B5D729F94D77", args ); //$NON-NLS-1$    
                
            case 34:
                return ___invokeOperation( connection, operationId, "45ED2E2993D699203EDF4D261C7CEC50D9748B7A", args ); //$NON-NLS-1$    
            default:
                throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(requestedOperation, refMetaObject(), "refInvokeOperation(String)"); //$NON-NLS-1$
        }
    }
    
    @Override
    public Object invoke___Operation(com.sap.tc.moin.repository.core.CoreConnection connection, int operationId, java.util.List<? extends Object> args) throws com.sap.tc.moin.repository.mmi.reflect.RefException {
        switch (operationId) {
                
            case 0:
                return invoke__findRequiredElements(connection, (java.util.Collection) args.get(0), (java.lang.Boolean) args.get(1));    
                
            case 1:
                return invoke__isRequiredBecause(connection, (com.sap.tc.moin.repository.mmi.model.ModelElement) args.get(0), (java.lang.String[]) args.get(1));    
                
            case 2:
                return invoke__isFrozen(connection);    
                
            case 3:
                return invoke__isVisible(connection, (com.sap.tc.moin.repository.mmi.model.ModelElement) args.get(0));    
                
            case 4:
                return invoke__lookupElement(connection, (java.lang.String) args.get(0));    
                
            case 5:
                return invoke__resolveQualifiedName(connection, (java.util.List) args.get(0));    
                
            case 6:
                return invoke__findElementsByType(connection, (com.sap.tc.moin.repository.mmi.model.MofClass) args.get(0), (java.lang.Boolean) args.get(1));    
                
            case 7:
                return invoke__nameIsValid(connection, (java.lang.String) args.get(0));    
                
            case 8:
                return invoke__allSupertypes(connection);    
                
            case 9:
                return invoke__lookupElementExtended(connection, (java.lang.String) args.get(0));    
                
            case 10:
                return invoke__findElementsByTypeExtended(connection, (com.sap.tc.moin.repository.mmi.model.MofClass) args.get(0), (java.lang.Boolean) args.get(1));    
                
            case 11:
                return invoke__size(connection);    
                
            case 12:
                return invoke__includes(connection, (com.sap.tc.moin.repository.mmi.model.Classifier) args.get(0));    
                
            case 13:
                return invoke__excludes(connection, (com.sap.tc.moin.repository.mmi.model.Classifier) args.get(0));    
                
            case 14:
                return invoke__count(connection, (com.sap.tc.moin.repository.mmi.model.Classifier) args.get(0));    
                
            case 15:
                return invoke__includesAll(connection, (org.omg.ocl.types.CollectionType) args.get(0));    
                
            case 16:
                return invoke__excludesAll(connection, (org.omg.ocl.types.CollectionType) args.get(0));    
                
            case 17:
                return invoke__isEmpty(connection);    
                
            case 18:
                return invoke__notEmpty(connection);    
                
            case 19:
                return invoke__sum(connection);    
                
            case 20:
                return invoke__product(connection, (org.omg.ocl.types.CollectionType) args.get(0));    
                
            case 21:
                return invoke__asSet(connection);    
                
            case 22:
                return invoke__asBag(connection);    
                
            case 23:
                return invoke__asOrderedSet(connection);    
                
            case 24:
                return invoke__asSequence(connection);    
                
            case 25:
                return invoke__oclIsUndefined(connection);    
                
            case 26:
                return invoke__append(connection, (com.sap.tc.moin.repository.mmi.model.Classifier) args.get(0));    
                
            case 27:
                return invoke__prepend(connection, (com.sap.tc.moin.repository.mmi.model.Classifier) args.get(0));    
                
            case 28:
                return invoke__insertAt(connection, (java.lang.Integer) args.get(0), (com.sap.tc.moin.repository.mmi.model.Classifier) args.get(1));    
                
            case 29:
                return invoke__subOrderedSet(connection, (java.lang.Integer) args.get(0), (java.lang.Integer) args.get(1));    
                
            case 30:
                return invoke__at(connection, (java.lang.Integer) args.get(0));    
                
            case 31:
                return invoke__indexOf(connection, (com.sap.tc.moin.repository.mmi.model.Classifier) args.get(0));    
                
            case 32:
                return invoke__first(connection);    
                
            case 33:
                return invoke__last(connection);    
                
            case 34:
                return invoke__equalsStdLib(connection, (org.omg.ocl.types.OrderedSetType) args.get(0));    
            default:
                throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException( operationId, refMetaObject( ), "invoke___Operation(int)"); //$NON-NLS-1$
        }
    
    }    

    // get the JMI interface
    public java.lang.Class<org.omg.ocl.stdlibrary.OrderedSetTypeStdLib> get___JmiInterface() {
        return org.omg.ocl.stdlibrary.OrderedSetTypeStdLib.class;
    }

    // to String
    protected String metaObjectToString() {
        return "org.omg.ocl.stdlibrary.OrderedSetTypeStdLib (Java Type)\nOCL.StdLibrary.OrderedSetTypeStdLib (MOF Type)"; //$NON-NLS-1$
    }    
}