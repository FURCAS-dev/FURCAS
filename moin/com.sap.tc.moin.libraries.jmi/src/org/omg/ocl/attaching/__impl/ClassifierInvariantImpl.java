/**
 * Generated by the MOIN Generator Version 3.0
 **/

package org.omg.ocl.attaching.__impl;

public final class ClassifierInvariantImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationImpl implements org.omg.ocl.attaching.ClassifierInvariant,org.omg.ocl.attaching.__impl.ClassifierInvariantInternal
{
    // default constructor
    public ClassifierInvariantImpl() {
        super();
    }

    // specific constructor
    public ClassifierInvariantImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    
    public boolean exists(org.omg.ocl.attaching.OclConstraint _Invariants, com.sap.tc.moin.repository.mmi.model.Classifier _InvariantOf) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return exists(get___CurrentConnection(), _Invariants, _InvariantOf);
    }
    public boolean exists(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.attaching.OclConstraint _Invariants, com.sap.tc.moin.repository.mmi.model.Classifier _InvariantOf) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return ___existsMultN( connection, _Invariants, _InvariantOf, "45ED2E29777A1747A2CC4CDD19AFEDE0E0553BAE"); //$NON-NLS-1$
    }
    public java.util.Collection<org.omg.ocl.attaching.OclConstraint> getInvariants(com.sap.tc.moin.repository.mmi.model.Classifier _InvariantOf) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getInvariants(get___CurrentConnection(), _InvariantOf);
    }
    public java.util.Collection<org.omg.ocl.attaching.OclConstraint> getInvariants(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.model.Classifier _InvariantOf) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<org.omg.ocl.attaching.OclConstraint>) ___queryElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _InvariantOf, get___EndAndMetaObject( 1 ) );
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.model.Classifier> getInvariantOf(org.omg.ocl.attaching.OclConstraint _Invariants) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getInvariantOf(get___CurrentConnection(), _Invariants);
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.model.Classifier> getInvariantOf(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.attaching.OclConstraint _Invariants) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<com.sap.tc.moin.repository.mmi.model.Classifier>) ___getElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _Invariants, get___EndAndMetaObject( 0 ) );
    }
    public boolean add(org.omg.ocl.attaching.OclConstraint _Invariants, com.sap.tc.moin.repository.mmi.model.Classifier _InvariantOf) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_Invariants, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_InvariantOf);
    }
    public boolean add(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.attaching.OclConstraint _Invariants, com.sap.tc.moin.repository.mmi.model.Classifier _InvariantOf) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Invariants, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_InvariantOf);
    }
    public boolean remove(org.omg.ocl.attaching.OclConstraint _Invariants, com.sap.tc.moin.repository.mmi.model.Classifier _InvariantOf) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_Invariants, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_InvariantOf);
    }
    public boolean remove(com.sap.tc.moin.repository.core.CoreConnection connection, org.omg.ocl.attaching.OclConstraint _Invariants, com.sap.tc.moin.repository.mmi.model.Classifier _InvariantOf) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Invariants, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_InvariantOf);
    }
    public boolean refLinkExists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefObject firstEnd, com.sap.tc.moin.repository.mmi.reflect.RefObject secondEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        if ( firstEnd == null || secondEnd == null ) { return false; }
        checkTypesForRefLinkExists( connection, firstEnd, secondEnd );
        return exists( connection, (org.omg.ocl.attaching.OclConstraint) firstEnd, (com.sap.tc.moin.repository.mmi.model.Classifier) secondEnd );
    }

    public java.lang.Class<org.omg.ocl.attaching.ClassifierInvariant> get___JmiInterface() {
        return org.omg.ocl.attaching.ClassifierInvariant.class;
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<org.omg.ocl.attaching.ClassifierInvariant> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new org.omg.ocl.attaching.__impl.ClassifierInvariantWrapper(conn, this, synchronize);
    }
}