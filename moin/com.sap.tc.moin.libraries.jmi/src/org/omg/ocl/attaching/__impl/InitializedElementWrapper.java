/**
 * Generated by the MOIN Generator Version 3.0
 **/

package org.omg.ocl.attaching.__impl;

public class InitializedElementWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<org.omg.ocl.attaching.InitializedElement> implements org.omg.ocl.attaching.InitializedElement,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The InitializedElement wrapper
     */
    public InitializedElementWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, org.omg.ocl.attaching.__impl.InitializedElementImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private org.omg.ocl.attaching.__impl.InitializedElementImpl getCastWrappedObject() {
        return (org.omg.ocl.attaching.__impl.InitializedElementImpl) getWrappedObject();
    }

    public org.omg.ocl.attaching.InitializedElement unwrap() {
        return (org.omg.ocl.attaching.InitializedElement) getWrappedObject();
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.model.TypedElement _InitializedElement, org.omg.ocl.attaching.OclConstraint _Constraints) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg(_InitializedElement), unwrapArg(_Constraints));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg(_InitializedElement), unwrapArg(_Constraints)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.model.TypedElement getInitializedElement(org.omg.ocl.attaching.OclConstraint _Constraints) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getInitializedElement(connection, unwrapArg(_Constraints)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getInitializedElement(connection, unwrapArg(_Constraints))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection<org.omg.ocl.attaching.OclConstraint> getConstraints(com.sap.tc.moin.repository.mmi.model.TypedElement _InitializedElement) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return  wrapResult(getCastWrappedObject().getConstraints(connection, unwrapArg(_InitializedElement)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return  wrapResult(getCastWrappedObject().getConstraints(connection, unwrapArg(_InitializedElement))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(com.sap.tc.moin.repository.mmi.model.TypedElement _InitializedElement, org.omg.ocl.attaching.OclConstraint _Constraints) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg(_InitializedElement), unwrapArg(_Constraints));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg(_InitializedElement), unwrapArg(_Constraints)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(com.sap.tc.moin.repository.mmi.model.TypedElement _InitializedElement, org.omg.ocl.attaching.OclConstraint _Constraints) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg(_InitializedElement), unwrapArg(_Constraints));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg(_InitializedElement), unwrapArg(_Constraints)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<org.omg.ocl.attaching.InitializedElement> get___JmiInterface() {
        return org.omg.ocl.attaching.InitializedElement.class;
    }

    protected String metaObjectToString() {
        return "org.omg.ocl.attaching.InitializedElement (Java Type)\nOCL.Attaching.InitializedElement (MOF Type)"; //$NON-NLS-1$
    }    
}