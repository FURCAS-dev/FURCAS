<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<!-- <!DOCTYPE XMI SYSTEM 'Model1311.DTD' > -->
<XMI xmi.version = '1.1' xmlns:Model='omg.org/mof.Model/1.3' timestamp = 'Fri Mar 06 11:04:11 2009' >
 <XMI.header>
  <XMI.documentation>[#patched 4 times on Fri Mar 06 11:05:59 CET 2009#]
   <XMI.exporter>Unisys.JCR.1</XMI.exporter>
   <XMI.exporterVersion>1.3.2</XMI.exporterVersion>
  </XMI.documentation>
  <XMI.metamodel xmi.name = 'org.omg.mof.Model' xmi.version = '1.3'/>
 </XMI.header>
<XMI.content>
<!-- ==================== OCL    [Package] ==================== -->
<Model:Package xmi.id = 'a40D6D9F602A9' 
  name = 'OCL' annotation = 'OCL metamodel copied from OCL 2.0 final draft by Slavisa Markovic.' 
  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' >
  <Model:Namespace.contents>
    <!-- ==================== OCL.org.omg.mof.idl_prefix=org.omg    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.254' 
      name = 'org.omg.mof.idl_prefix=org.omg' annotation = '' 
      tagId = 'org.omg.mof.idl_prefix' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>org.omg</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xml:link = 'simple' href = 'OCL.xml|a40D6D9F602A9'/>
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== OCL.org.omg.xmi.namespace=OCL    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.255' 
      name = 'org.omg.xmi.namespace=OCL' annotation = '' 
      tagId = 'org.omg.xmi.namespace' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>OCL</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xml:link = 'simple' href = 'OCL.xml|a40D6D9F602A9'/>
        <Model:ModelElement xmi.idref = 'a40D6DA000067'/>  <!-- OCL.Types -->
        <Model:ModelElement xmi.idref = 'a40D6DCCD036D'/>  <!-- OCL.Expressions -->
        <Model:ModelElement xmi.idref = 'a42273A2101BE'/>  <!-- OCL.Attaching -->
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== OCL.javax.jmi.packagePrefix=org.omg    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.256' 
      name = 'javax.jmi.packagePrefix=org.omg' annotation = '' 
      tagId = 'javax.jmi.packagePrefix' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>org.omg</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xml:link = 'simple' href = 'OCL.xml|a40D6D9F602A9'/>
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== OCL.Types    [Package] ==================== -->
    <Model:Package xmi.id = 'a40D6DA000067' 
      name = 'Types' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' >
      <Model:Namespace.contents>
        <!-- ==================== OCL.Types.OclModelElementType    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DAE7039C' 
          name = 'OclModelElementType' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== OCL.Types.VoidType    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DB380109' 
          name = 'VoidType' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== OCL.Types.TupleType    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DB67032A' 
          name = 'TupleType' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xml:link = 'simple' href = 'Model.xml|a39A2BDA601CD'/>
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== OCL.Types.CollectionType    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DB7D0136' 
          name = 'CollectionType' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xml:link = 'simple' href = 'Model.xml|a39A2BDA601CD'/>
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Types.CollectionType.elementType    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF00DB' 
              name = 'elementType' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6DD0D036D'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Types.SetType    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DBC50059' 
          name = 'SetType' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DB7D0136'/>  <!-- OCL.Types.CollectionType -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== OCL.Types.SequenceType    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DBCC00F5' 
          name = 'SequenceType' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DB7D0136'/>  <!-- OCL.Types.CollectionType -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== OCL.Types.OrderedSetType    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DBDE00D5' 
          name = 'OrderedSetType' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DB7D0136'/>  <!-- OCL.Types.CollectionType -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== OCL.Types.BagType    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DBEC0171' 
          name = 'BagType' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DB7D0136'/>  <!-- OCL.Types.CollectionType -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== OCL.Types.A_collectionTypes_elementType    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6DD0A0281' 
          name = 'A_collectionTypes_elementType' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6DD0D036B' 
              name = 'collectionTypes' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DB7D0136'/>  <!-- OCL.Types.CollectionType -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6DD0D036D' 
              name = 'elementType' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
      </Model:Namespace.contents>
    </Model:Package>
    <Model:Import xmi.id = 'G.257' 
      name = 'Model' annotation = '' 
      visibility = 'public_vis' isClustered = 'false' >
      <Model:Import.importedNamespace>
        <Model:Namespace xml:link = 'simple' href = 'Model.xml|a39A2BDA60064'/>
      </Model:Import.importedNamespace>
    </Model:Import>
    <!-- ==================== OCL.Expressions    [Package] ==================== -->
    <Model:Package xmi.id = 'a40D6DCCD036D' 
      name = 'Expressions' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' >
      <Model:ModelElement.annotation>The basic structure in the package consists of the classes
OclExpression, PropertyCallExp and VariableExp. An OclExpression always has a type, which is usually not
explicitly modeled, but derived. Each PropertyCallExp has exactly one source, identified by an OclExpression. In this
section we use the term 'property', which is a generalization of Feature, AssociationEnd and predefined iterating OCL
collection operations.

A ModelPropertyCallExp generalizes all propertycalls that refer to Features or associations or AssociationEnds in
the metamodel to which the expressions are attached. 

Most of the remainder of the expressions package consists of a specification of the different subclasses of
PropertyCallExp and their specific structure. From the metamodel it can be deduced that an OCL expression always starts with a variable or literal, on which a property is recusively applied</Model:ModelElement.annotation>
      <Model:Namespace.contents>
        <!-- ==================== OCL.Expressions.OclExpression    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DD800338' 
          name = 'OclExpression' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.annotation>An OclExpression is an expression that can be evaluated in a given environment. 
OclExpression is the abstract superclass of all other expressions in the 
metamodel - except for the ExpressionInOcl container class. It is the top-level 
element of the OCL
Expressions package. Every OclExpression has a type that can be statically 
termined by analyzing the expression and its context. Evaluation of an 
expression results in a value. Expressions with boolean result can be used as 
constraints, e.g. to specify an invariant of a class. Expressions of any type 
can be used to specify queries, initial attribute values, target sets, etc..
</Model:ModelElement.annotation>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a474BE11E031C'/>  <!-- OCL.Expressions.OclNamedElement -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.OclExpression.type    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF00E5' 
              name = 'type' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6DEB30235'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Expressions.OclExpression.appliedProperty    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF0117' 
              name = 'appliedProperty' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD8D01C1'/>  <!-- OCL.Expressions.PropertyCallExp -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6DF5101C2'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Expressions.OclExpression.parentOperation    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF015D' 
              name = 'parentOperation' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6E58000B7'/>  <!-- OCL.Expressions.OperationCallExp -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6EBCC01BC'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Expressions.OclExpression.attributeForInitialValue    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a438B6F630322' 
              name = 'attributeForInitialValue' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA6021E'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a4337A9DA01F7'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Expressions.OclExpression.associationEndForInitialValue    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a438B6F6A00C9' 
              name = 'associationEndForInitialValue' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA602B7'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a4337ACCF005F'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Expressions.OclExpression.defines    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a438B70F20308' 
              name = 'defines' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA6025D'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a42DDF650004D'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Expressions.OclExpression.associationEndForDerivationExpression    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a4419880503B8' 
              name = 'associationEndForDerivationExpression' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA602B7'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a4338FE3D016E'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Expressions.OclExpression.attributeForDerivationExpression    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a4419883001E0' 
              name = 'attributeForDerivationExpression' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA6021E'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a4338FDDB0011'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.PropertyCallExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DD8D01C1' 
          name = 'PropertyCallExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.PropertyCallExp.source    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF01A3' 
              name = 'source' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6DF5101C4'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.LiteralExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DD9F0069' 
          name = 'LiteralExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== OCL.Expressions.IfExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DDA60114' 
          name = 'IfExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.IfExp.condition    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF01AE' 
              name = 'condition' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6ED61030A'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Expressions.IfExp.thenExpression    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF01C1' 
              name = 'thenExpression' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6ED9B0043'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Expressions.IfExp.elseExpression    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF01D5' 
              name = 'elseExpression' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6EDAE012B'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.VariableExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DDAD000A' 
          name = 'VariableExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.VariableExp.referredVariable    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42042D6202A8' 
              name = 'referredVariable' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDE202C8'/>  <!-- OCL.Expressions.VariableDeclaration -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6DF2102CD'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.ModelPropertyCallExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DDC10029' 
          name = 'ModelPropertyCallExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DD8D01C1'/>  <!-- OCL.Expressions.PropertyCallExp -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== OCL.Expressions.LoopExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DDCC00C5' 
          name = 'LoopExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DD8D01C1'/>  <!-- OCL.Expressions.PropertyCallExp -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.LoopExp.iterators    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF01DF' 
              name = 'iterators' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDE202C8'/>  <!-- OCL.Expressions.VariableDeclaration -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6DF2C007D'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Expressions.LoopExp.body    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF01F3' 
              name = 'body' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6DFE0021D'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.IteratorExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DDD2022C' 
          name = 'IteratorExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DDCC00C5'/>  <!-- OCL.Expressions.LoopExp -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== OCL.Expressions.IterateExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DDDA02D8' 
          name = 'IterateExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DDCC00C5'/>  <!-- OCL.Expressions.LoopExp -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.IterateExp.result    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF01FD' 
              name = 'result' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDE202C8'/>  <!-- OCL.Expressions.VariableDeclaration -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6DF3F0165'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.VariableDeclaration    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6DDE202C8' 
          name = 'VariableDeclaration' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a474BE11E031C'/>  <!-- OCL.Expressions.OclNamedElement -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.VariableDeclaration.varName    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a40D6E0BD01C6' 
              name = 'varName' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
              </Model:TypedElement.type>
            </Model:Attribute>
            <!-- ==================== OCL.Expressions.VariableDeclaration.type    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF0211' 
              name = 'type' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6DEBA00AE'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Expressions.VariableDeclaration.loopExpr    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF0225' 
              name = 'loopExpr' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDCC00C5'/>  <!-- OCL.Expressions.LoopExp -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6DF2C007B'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Expressions.VariableDeclaration.baseExp    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF0243' 
              name = 'baseExp' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDDA02D8'/>  <!-- OCL.Expressions.IterateExp -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6DF3F0155'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Expressions.VariableDeclaration.initExpression    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF0262' 
              name = 'initExpression' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D7004301F8'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.AttributeCallExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6E4B90040' 
          name = 'AttributeCallExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DDC10029'/>  <!-- OCL.Expressions.ModelPropertyCallExp -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.AttributeCallExp.referredAttribute    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF0280' 
              name = 'referredAttribute' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA6021E'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6E51F006C'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.NavigationCallExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6E4CC010A' 
          name = 'NavigationCallExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DDC10029'/>  <!-- OCL.Expressions.ModelPropertyCallExp -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.NavigationCallExp.navigationSource    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF029E' 
              name = 'navigationSource' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA602B7'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6EC3000F8'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.OperationCallExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6E58000B7' 
          name = 'OperationCallExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DDC10029'/>  <!-- OCL.Expressions.ModelPropertyCallExp -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.OperationCallExp.referredOperation    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF02B2' 
              name = 'referredOperation' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA6025D'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6EB9A0023'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Expressions.OperationCallExp.arguments    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF02C6' 
              name = 'arguments' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'true' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6EBCC01BE'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.AssociationEndCallExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6E5A303E2' 
          name = 'AssociationEndCallExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6E4CC010A'/>  <!-- OCL.Expressions.NavigationCallExp -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.AssociationEndCallExp.referredAssociationEnd    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF02D0' 
              name = 'referredAssociationEnd' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA602B7'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6EB40020B'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.PrimitiveLiteralExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6F3F10304' 
          name = 'PrimitiveLiteralExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DD9F0069'/>  <!-- OCL.Expressions.LiteralExp -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== OCL.Expressions.StringLiteralExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6F3FA0064' 
          name = 'StringLiteralExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6F3F10304'/>  <!-- OCL.Expressions.PrimitiveLiteralExp -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.StringLiteralExp.stringSymbol    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a40D6F80E030A' 
              name = 'stringSymbol' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
              </Model:TypedElement.type>
            </Model:Attribute>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.NumericLiteralExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6F4020006' 
          name = 'NumericLiteralExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6F3F10304'/>  <!-- OCL.Expressions.PrimitiveLiteralExp -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== OCL.Expressions.BooleanLiteralExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6F40803AF' 
          name = 'BooleanLiteralExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6F3F10304'/>  <!-- OCL.Expressions.PrimitiveLiteralExp -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.BooleanLiteralExp.booleanSymbol    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a40D6F7FD03E5' 
              name = 'booleanSymbol' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
              </Model:TypedElement.type>
            </Model:Attribute>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.TupleLiteralExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6F4150053' 
          name = 'TupleLiteralExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DD9F0069'/>  <!-- OCL.Expressions.LiteralExp -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.TupleLiteralExp.tuplePart    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF02E4' 
              name = 'tuplePart' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDE202C8'/>  <!-- OCL.Expressions.VariableDeclaration -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6F90802C5'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.CollectionLiteralExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6F42A00DF' 
          name = 'CollectionLiteralExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DD9F0069'/>  <!-- OCL.Expressions.LiteralExp -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.CollectionLiteralExp.kind    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a40D6F4BD0240' 
              name = 'kind' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6F4CD0329'/>  <!-- OCL.Expressions.CollectionKind -->
              </Model:TypedElement.type>
            </Model:Attribute>
            <!-- ==================== OCL.Expressions.CollectionLiteralExp.parts    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF02EE' 
              name = 'parts' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'true' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6F9E00369'/>  <!-- OCL.Expressions.CollectionLiteralPart -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6FD330091'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.EnumLiteralExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6F43D015B' 
          name = 'EnumLiteralExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DD9F0069'/>  <!-- OCL.Expressions.LiteralExp -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.EnumLiteralExp.literal    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a4202D9930029' 
              name = 'literal' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
              </Model:TypedElement.type>
            </Model:Attribute>
            <!-- ==================== OCL.Expressions.EnumLiteralExp.referredEnum    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF0302' 
              name = 'referredEnum' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a3B53996C0351'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6F994038B'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.IntegerLiteralExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6F44700DE' 
          name = 'IntegerLiteralExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6F4020006'/>  <!-- OCL.Expressions.NumericLiteralExp -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.IntegerLiteralExp.integerSymbol    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a40D6F84601F0' 
              name = 'integerSymbol' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
              </Model:TypedElement.type>
            </Model:Attribute>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.RealLiteralExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6F45003DB' 
          name = 'RealLiteralExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6F4020006'/>  <!-- OCL.Expressions.NumericLiteralExp -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.RealLiteralExp.realSymbol    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a40D6F8300396' 
              name = 'realSymbol' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
              </Model:TypedElement.type>
            </Model:Attribute>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.CollectionKind    [DataType] ==================== -->
        <Model:DataType xmi.id = 'a40D6F4CD0329' 
          name = 'CollectionKind' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' >
          <Model:DataType.typeCode>
            <XMI.CorbaTypeCode>
              <XMI.CorbaTcEnum xmi.tcName = 'CollectionKind'>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'Collection'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'Set'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'Bag'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'Sequence'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'OrderedSet'/>
              </XMI.CorbaTcEnum>
            </XMI.CorbaTypeCode>
          </Model:DataType.typeCode>
        </Model:DataType>
        <!-- ==================== OCL.Expressions.CollectionLiteralPart    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6F9E00369' 
          name = 'CollectionLiteralPart' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.CollectionLiteralPart.type    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF0316' 
              name = 'type' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6FE5003A4'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.CollectionRange    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6FE0600E7' 
          name = 'CollectionRange' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6F9E00369'/>  <!-- OCL.Expressions.CollectionLiteralPart -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.CollectionRange.last    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF032A' 
              name = 'last' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6FED500B0'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Expressions.CollectionRange.first    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF0334' 
              name = 'first' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6FED80227'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.CollectionItem    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6FE140210' 
          name = 'CollectionItem' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6F9E00369'/>  <!-- OCL.Expressions.CollectionLiteralPart -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.CollectionItem.item    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF0348' 
              name = 'item' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6FEAE013F'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.LetExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a40D6FFA602CA' 
          name = 'LetExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.LetExp.in    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF035C' 
              name = 'in' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D6FFE201EC'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Expressions.LetExp.variable    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF0370' 
              name = 'variable' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDE202C8'/>  <!-- OCL.Expressions.VariableDeclaration -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a40D70014019C'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.TypeExp    [Class] ==================== -->
        <Model:Class xmi.id = 'a43031D4E0083' 
          name = 'TypeExp' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.TypeExp.referredType    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a4303215E0015' 
              name = 'referredType' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a4303206E016F'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.OclNamedElement    [Class] ==================== -->
        <Model:Class xmi.id = 'a474BE11E031C' 
          name = 'OclNamedElement' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:Namespace.contents>
            <!-- ==================== OCL.Expressions.OclNamedElement.name    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a474BE12800BB' 
              name = 'name' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
              </Model:TypedElement.type>
            </Model:Attribute>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Expressions.A_referredVariable_variableExp    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6DF200185' 
          name = 'A_referredVariable_variableExp' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6DF2102CD' 
              name = 'referredVariable' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDE202C8'/>  <!-- OCL.Expressions.VariableDeclaration -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6DF2102CF' 
              name = 'variableExp' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDAD000A'/>  <!-- OCL.Expressions.VariableExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_loopExpr_iterators    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6DF2B01D3' 
          name = 'A_loopExpr_iterators' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6DF2C007B' 
              name = 'loopExpr' annotation = '' 
              isNavigable = 'true' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDCC00C5'/>  <!-- OCL.Expressions.LoopExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6DF2C007D' 
              name = 'iterators' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDE202C8'/>  <!-- OCL.Expressions.VariableDeclaration -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.org.omg.sap2mof.store=yes    [Tag] ==================== -->
        <Model:Tag xmi.id = 'G.259' 
          name = 'org.omg.sap2mof.store=yes' annotation = '' 
          tagId = 'org.omg.sap2mof.store' >
          <Model:Tag.values>
            <XMI.any xmi.type = 'string' xmi.name = ''>yes</XMI.any>
          </Model:Tag.values>
          <Model:Tag.elements>
            <Model:ModelElement xmi.idref = 'a40D6DF2C007B'/>
            <Model:ModelElement xmi.idref = 'a40D6DF3F0155'/>
            <Model:ModelElement xmi.idref = 'a40D6DF5101C2'/>
            <Model:ModelElement xmi.idref = 'a40D6EBCC01BC'/>
          </Model:Tag.elements>
        </Model:Tag>
        <!-- ==================== OCL.Expressions.org.omg.sap2mof.store=no    [Tag] ==================== -->
        <Model:Tag xmi.id = 'G.260' 
          name = 'org.omg.sap2mof.store=no' annotation = '' 
          tagId = 'org.omg.sap2mof.store' >
          <Model:Tag.values>
            <XMI.any xmi.type = 'string' xmi.name = ''>no</XMI.any>
          </Model:Tag.values>
          <Model:Tag.elements>
            <Model:ModelElement xmi.idref = 'a40D6DF2C007D'/>
            <Model:ModelElement xmi.idref = 'a40D6DF3F0165'/>
            <Model:ModelElement xmi.idref = 'a40D6DF5101C4'/>
            <Model:ModelElement xmi.idref = 'a40D6EBCC01BE'/>
          </Model:Tag.elements>
        </Model:Tag>
        <!-- ==================== OCL.Expressions.A_baseExp_result    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6DF3E02AD' 
          name = 'A_baseExp_result' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6DF3F0155' 
              name = 'baseExp' annotation = '' 
              isNavigable = 'true' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDDA02D8'/>  <!-- OCL.Expressions.IterateExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6DF3F0165' 
              name = 'result' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDE202C8'/>  <!-- OCL.Expressions.VariableDeclaration -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_appliedProperty_source    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6DF5000E7' 
          name = 'A_appliedProperty_source' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6DF5101C2' 
              name = 'appliedProperty' annotation = '' 
              isNavigable = 'true' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD8D01C1'/>  <!-- OCL.Expressions.PropertyCallExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6DF5101C4' 
              name = 'source' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_loopExp_body    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6DFDB0392' 
          name = 'A_loopExp_body' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6DFE0021B' 
              name = 'loopExp' annotation = '' 
              isNavigable = 'true' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDCC00C5'/>  <!-- OCL.Expressions.LoopExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6DFE0021D' 
              name = 'body' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_referredAttribute_attributeCallExp    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6E51E0231' 
          name = 'A_referredAttribute_attributeCallExp' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6E51F006C' 
              name = 'referredAttribute' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA6021E'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6E51F006E' 
              name = 'attributeCallExp' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6E4B90040'/>  <!-- OCL.Expressions.AttributeCallExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_referredAssociationEnd_associationEndCallExp    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6EB3F0278' 
          name = 'A_referredAssociationEnd_associationEndCallExp' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6EB40020B' 
              name = 'referredAssociationEnd' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA602B7'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6EB40020D' 
              name = 'associationEndCallExp' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6E5A303E2'/>  <!-- OCL.Expressions.AssociationEndCallExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_referredOperation_operationCallExp    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6EB990023' 
          name = 'A_referredOperation_operationCallExp' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6EB9A0023' 
              name = 'referredOperation' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA6025D'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6EB9A0032' 
              name = 'operationCallExp' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6E58000B7'/>  <!-- OCL.Expressions.OperationCallExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_parentOperation_arguments    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6EBCB01BC' 
          name = 'A_parentOperation_arguments' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6EBCC01BC' 
              name = 'parentOperation' annotation = '' 
              isNavigable = 'true' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6E58000B7'/>  <!-- OCL.Expressions.OperationCallExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6EBCC01BE' 
              name = 'arguments' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'true' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_navigationSource_navigationCallExp    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6EC2D02BE' 
          name = 'A_navigationSource_navigationCallExp' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6EC3000F8' 
              name = 'navigationSource' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA602B7'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6EC3000FA' 
              name = 'navigationCallExp' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6E4CC010A'/>  <!-- OCL.Expressions.NavigationCallExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_condition_ifExp    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6ED6003D5' 
          name = 'A_condition_ifExp' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6ED61030A' 
              name = 'condition' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6ED610319' 
              name = 'ifExp' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDA60114'/>  <!-- OCL.Expressions.IfExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_thenExpression_ifExp    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6ED9A016C' 
          name = 'A_thenExpression_ifExp' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6ED9B0043' 
              name = 'thenExpression' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6ED9B0053' 
              name = 'ifExp' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDA60114'/>  <!-- OCL.Expressions.IfExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_elseExpression_ifExp    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6EDAD0041' 
          name = 'A_elseExpression_ifExp' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6EDAE012B' 
              name = 'elseExpression' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6EDAE013B' 
              name = 'ifExp' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDA60114'/>  <!-- OCL.Expressions.IfExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_tuplePart_tupleLiteralExp    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6F9080025' 
          name = 'A_tuplePart_tupleLiteralExp' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6F90802C5' 
              name = 'tuplePart' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDE202C8'/>  <!-- OCL.Expressions.VariableDeclaration -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6F90802C7' 
              name = 'tupleLiteralExp' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6F4150053'/>  <!-- OCL.Expressions.TupleLiteralExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_referredEnum_enumLiteralExp    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6F99400DB' 
          name = 'A_referredEnum_enumLiteralExp' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6F994038B' 
              name = 'referredEnum' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a3B53996C0351'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6F994038D' 
              name = 'enumLiteralExp' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6F43D015B'/>  <!-- OCL.Expressions.EnumLiteralExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_parts_collectionLiteralExp    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6FD320246' 
          name = 'A_parts_collectionLiteralExp' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6FD330091' 
              name = 'parts' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'true' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6F9E00369'/>  <!-- OCL.Expressions.CollectionLiteralPart -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6FD330093' 
              name = 'collectionLiteralExp' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6F42A00DF'/>  <!-- OCL.Expressions.CollectionLiteralExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_item_collectionItem    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6FEAD0277' 
          name = 'A_item_collectionItem' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6FEAE013F' 
              name = 'item' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6FEAE0141' 
              name = 'collectionItem' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6FE140210'/>  <!-- OCL.Expressions.CollectionItem -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_last_collectionRange    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6FED3013D' 
          name = 'A_last_collectionRange' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6FED500B0' 
              name = 'last' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6FED500B2' 
              name = 'collectionRange' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6FE0600E7'/>  <!-- OCL.Expressions.CollectionRange -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_first_collectionRange    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6FED80043' 
          name = 'A_first_collectionRange' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6FED80227' 
              name = 'first' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6FED80229' 
              name = 'collectionRange' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6FE0600E7'/>  <!-- OCL.Expressions.CollectionRange -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_in_letExp    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6FFE1023B' 
          name = 'A_in_letExp' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6FFE201EC' 
              name = 'in' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6FFE201FC' 
              name = 'letExp' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6FFA602CA'/>  <!-- OCL.Expressions.LetExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_variable_letExp    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D7001301DB' 
          name = 'A_variable_letExp' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D70014019C' 
              name = 'variable' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDE202C8'/>  <!-- OCL.Expressions.VariableDeclaration -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D7001401AC' 
              name = 'letExp' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6FFA602CA'/>  <!-- OCL.Expressions.LetExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_initExpression_initializedVariable    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D7004202D3' 
          name = 'A_initExpression_initializedVariable' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D7004301F8' 
              name = 'initExpression' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D700430207' 
              name = 'initializedVariable' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDE202C8'/>  <!-- OCL.Expressions.VariableDeclaration -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_type_collectionLiteralPart    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6FE500104' 
          name = 'A_type_collectionLiteralPart' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6FE5003A4' 
              name = 'type' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6FE5003C3' 
              name = 'collectionLiteralPart' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6F9E00369'/>  <!-- OCL.Expressions.CollectionLiteralPart -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_type_variableDeclaration    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6DEB901F6' 
          name = 'A_type_variableDeclaration' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6DEBA00AE' 
              name = 'type' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6DEBA00CD' 
              name = 'variableDeclaration' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DDE202C8'/>  <!-- OCL.Expressions.VariableDeclaration -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_type_oclExpression    [Association] ==================== -->
        <Model:Association xmi.id = 'a40D6DEB20189' 
          name = 'A_type_oclExpression' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a40D6DEB30235' 
              name = 'type' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a40D6DEB30254' 
              name = 'oclExpression' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Expressions.A_referredType_typeExp    [Association] ==================== -->
        <Model:Association xmi.id = 'a4303206D0293' 
          name = 'A_referredType_typeExp' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a4303206E016F' 
              name = 'referredType' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a4303206E0179' 
              name = 'typeExp' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a43031D4E0083'/>  <!-- OCL.Expressions.TypeExp -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
      </Model:Namespace.contents>
    </Model:Package>
    <Model:Import xmi.id = 'G.258' 
      name = 'PrimitiveTypes' annotation = '' 
      visibility = 'public_vis' isClustered = 'false' >
      <Model:Import.importedNamespace>
        <Model:Namespace xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B5389EE0204'/>
      </Model:Import.importedNamespace>
    </Model:Import>
    <!-- ==================== OCL.Attaching    [Package] ==================== -->
    <Model:Package xmi.id = 'a42273A2101BE' 
      name = 'Attaching' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' >
      <Model:Namespace.contents>
        <!-- ==================== OCL.Attaching.OclConstraint    [Class] ==================== -->
        <Model:Class xmi.id = 'a42273A64027D' 
          name = 'OclConstraint' annotation = 'A specific type of constraint that has its expression given as an OclExpression. The expression and language attribute are redefined as derived attributes, returning the concrete syntax representation of the OCL expression in the getter and parsing the concrete syntax into an OclExpression, respectively, and the language attribute always returning "OCL."' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.constraints>
            <Model:Constraint xmi.idref = 'a4227412303D1'/>  <!-- OCL.Attaching.OclConstraint.ExpressionMustBeBoolean -->
            <Model:Constraint xmi.idref = 'a47CEC70E0000'/>  <!-- OCL.Attaching.OclConstraint.InitExpressionMustBePrimitiveOrEnumLiteral -->
            <Model:Constraint xmi.idref = 'a48510A68020B'/>  <!-- OCL.Attaching.OclConstraint.InitializedAttributeUpperBoundsMustBeOne -->
          </Model:ModelElement.constraints>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xml:link = 'simple' href = 'Model.xml|a39A2BDA60345'/>
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.Attaching.OclConstraint.oclExpression    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a42273FAF037A' 
              name = 'oclExpression' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a42273AD60122'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Attaching.OclConstraint.invariantOf    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a4227406B0096' 
              name = 'invariantOf' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a4227405E03BA'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Attaching.OclConstraint.preconditionFor    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a438B714302D2' 
              name = 'preconditionFor' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA6025D'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a422741DD025F'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Attaching.OclConstraint.postconditionFor    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a438B714D0254' 
              name = 'postconditionFor' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA6025D'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a422741DF02EE'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Attaching.OclConstraint.violationMessageExpression    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a465EBD7E03A9' 
              name = 'violationMessageExpression' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'true' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a465EB81001E4'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Attaching.OclConstraint.initializedAttribute    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a47CFA5140399' 
              name = 'initializedAttribute' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA6021E'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a47CFA4140000'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Attaching.OclConstraint.initializedElement    [Reference] ==================== -->
            <Model:Reference xmi.id = 'a486E15AD02AD' 
              name = 'initializedElement' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601A0'/>
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a486E14850025'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== OCL.Attaching.OclConstraint.ExpressionMustBeBoolean    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a4227412303D1' 
              name = 'ExpressionMustBeBoolean' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context OclConstraint
inv:
    self.language = 'OCL' 
      implies self.oclExpression.type = Boolean
    </XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a42273A64027D'/>  <!-- OCL.Attaching.OclConstraint -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
            <!-- ==================== OCL.Attaching.OclConstraint.InitExpressionMustBePrimitiveOrEnumLiteral    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a47CEC70E0000' 
              name = 'InitExpressionMustBePrimitiveOrEnumLiteral' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context OclConstraint
inv:
    self.language = 'OCLInit' 
      implies self.oclExpression.oclIsKindOf(PrimitiveLiteralExp) or self.oclExpression.oclIsKindOf(EnumLiteralExp)</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a42273A64027D'/>  <!-- OCL.Attaching.OclConstraint -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
            <!-- ==================== OCL.Attaching.OclConstraint.InitializedAttributeUpperBoundsMustBeOne    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a48510A68020B' 
              name = 'InitializedAttributeUpperBoundsMustBeOne' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context OclConstraint
inv:
    self.language = 'OCLInit' implies
    (
    let initializedAttribute = self.initializedAttribute in
    let initializedElementAtt = self.initializedElement.oclAsType(Model::Attribute) in
    if (not initializedAttribute.oclIsUndefined()) then   
      initializedAttribute.multiplicity.upper = 1
    else
      if (not initializedElementAtt.oclIsUndefined()) then
       initializedElementAtt.multiplicity.upper = 1
      else
         true
      endif
    endif
    )</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a42273A64027D'/>  <!-- OCL.Attaching.OclConstraint -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.Attaching.OclConstraintExpression    [Association] ==================== -->
        <Model:Association xmi.id = 'a42273AD50366' 
          name = 'OclConstraintExpression' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a42273AD60122' 
              name = 'oclExpression' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a42273AD6012C' 
              name = 'oclConstraint' annotation = '' 
              isNavigable = 'true' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a42273A64027D'/>  <!-- OCL.Attaching.OclConstraint -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Attaching.PreconditionConstraint    [Association] ==================== -->
        <Model:Association xmi.id = 'a422741DC01EE' 
          name = 'PreconditionConstraint' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a422741DD025D' 
              name = 'preconditions' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a42273A64027D'/>  <!-- OCL.Attaching.OclConstraint -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a422741DD025F' 
              name = 'preconditionFor' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA6025D'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Attaching.PostconditionConstraint    [Association] ==================== -->
        <Model:Association xmi.id = 'a422741DF001B' 
          name = 'PostconditionConstraint' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a422741DF02EC' 
              name = 'postconditions' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a42273A64027D'/>  <!-- OCL.Attaching.OclConstraint -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a422741DF02EE' 
              name = 'postconditionFor' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA6025D'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Attaching.OperationBodyDefinition    [Association] ==================== -->
        <Model:Association xmi.id = 'a42DDF64F0129' 
          name = 'OperationBodyDefinition' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a42DDF6500043' 
              name = 'body' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a42DDF650004D' 
              name = 'defines' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA6025D'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Attaching.ClassifierInvariant    [Association] ==================== -->
        <Model:Association xmi.id = 'a4227405E0141' 
          name = 'ClassifierInvariant' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a4227405E03B8' 
              name = 'invariants' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a42273A64027D'/>  <!-- OCL.Attaching.OclConstraint -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a4227405E03BA' 
              name = 'invariantOf' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Attaching.AttributeInitalValue    [Association] ==================== -->
        <Model:Association xmi.id = 'a4337A9D9037E' 
          name = 'AttributeInitalValue' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a4337A9DA01F7' 
              name = 'attributeForInitialValue' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA6021E'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a4337A9DA01F9' 
              name = 'initialValue' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Attaching.AssociationEndInitialValue    [Association] ==================== -->
        <Model:Association xmi.id = 'a4337ACCE0188' 
          name = 'AssociationEndInitialValue' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a4337ACCF004F' 
              name = 'initialValue' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a4337ACCF005F' 
              name = 'associationEndForInitialValue' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA602B7'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Attaching.AttributeDerivationExpression    [Association] ==================== -->
        <Model:Association xmi.id = 'a4338FDDA0178' 
          name = 'AttributeDerivationExpression' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a4338FDDB0002' 
              name = 'derivationExpression' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a4338FDDB0011' 
              name = 'attributeForDerivationExpression' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA6021E'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Attaching.AssociationEndDerivationExpression    [Association] ==================== -->
        <Model:Association xmi.id = 'a4338FE3C018C' 
          name = 'AssociationEndDerivationExpression' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a4338FE3D015E' 
              name = 'derivationExpression' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a4338FE3D016E' 
              name = 'associationEndForDerivationExpression' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA602B7'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Attaching.ViolationMessageExpression    [Association] ==================== -->
        <Model:Association xmi.id = 'a465EB80F038A' 
          name = 'ViolationMessageExpression' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a465EB81001E4' 
              name = 'violationMessageExpression' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'true' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a40D6DD800338'/>  <!-- OCL.Expressions.OclExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a465EB81001F4' 
              name = 'constraint' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a42273A64027D'/>  <!-- OCL.Attaching.OclConstraint -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Attaching.AttributeInitializerConstraint    [Association] ==================== -->
        <Model:Association xmi.id = 'a47CFA413003E' 
          name = 'AttributeInitializerConstraint' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a47CFA4140000' 
              name = 'initializedAttribute' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA6021E'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a47CFA4140002' 
              name = 'constraints' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a42273A64027D'/>  <!-- OCL.Attaching.OclConstraint -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== OCL.Attaching.InitializedElement    [Association] ==================== -->
        <Model:Association xmi.id = 'a486E148400C2' 
          name = 'InitializedElement' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a486E14850025' 
              name = 'initializedElement' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601A0'/>
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a486E14850044' 
              name = 'constraints' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a42273A64027D'/>  <!-- OCL.Attaching.OclConstraint -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
      </Model:Namespace.contents>
    </Model:Package>
    <!-- ==================== OCL.StdLibrary    [Package] ==================== -->
    <Model:Package xmi.id = 'a454A4F5C0022' 
      name = 'StdLibrary' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' >
      <Model:Namespace.contents>
        <!-- ==================== OCL.StdLibrary.OclAnyStdLib    [Class] ==================== -->
        <Model:Class xmi.id = 'a44EAAB4100AC' 
          name = 'OclAnyStdLib' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.StdLibrary.OclAnyStdLib.equalsStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAAF5602FE' 
              name = 'equalsStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.29' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.30' 
                  name = 'o2' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.OclAnyStdLib.notEqualsStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAAFAF01C6' 
              name = 'notEqualsStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.31' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.32' 
                  name = 'o2' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.OclAnyStdLib.oclIsNew    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAAFC100AA' 
              name = 'oclIsNew' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.33' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.OclAnyStdLib.oclIsUndefined    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAAFEF0183' 
              name = 'oclIsUndefined' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.34' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.OclAnyStdLib.oclIsInvalid    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB0290155' 
              name = 'oclIsInvalid' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.35' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.OclAnyStdLib.oclAsType    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB0410019' 
              name = 'oclAsType' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.36' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.37' 
                  name = 't' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.OclAnyStdLib.oclIsTypeOf    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB06900B7' 
              name = 'oclIsTypeOf' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.38' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.39' 
                  name = 't' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.OclAnyStdLib.oclIsKindOf    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB0D70189' 
              name = 'oclIsKindOf' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.40' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.41' 
                  name = 't' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.OclAnyStdLib.asSet    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a4552A97A01A5' 
              name = 'asSet' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.42' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBC50059'/>  <!-- OCL.Types.SetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.OclAnyStdLib.toString    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a465EBA120261' 
              name = 'toString' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'false' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.43' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
          </Model:Namespace.contents>
        </Model:Class>
        <Model:Import xmi.id = 'G.261' 
          name = 'Model' annotation = '' 
          visibility = 'public_vis' isClustered = 'false' >
          <Model:Import.importedNamespace>
            <Model:Namespace xml:link = 'simple' href = 'Model.xml|a39A2BDA60064'/>
          </Model:Import.importedNamespace>
        </Model:Import>
        <!-- ==================== OCL.StdLibrary.StringStdLib    [Class] ==================== -->
        <Model:Class xmi.id = 'a44EAAC9502AD' 
          name = 'StringStdLib' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a44EAAB4100AC'/>  <!-- OCL.StdLibrary.OclAnyStdLib -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.StdLibrary.StringStdLib.size    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB568010E' 
              name = 'size' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.44' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.StringStdLib.concat    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB58C00CA' 
              name = 'concat' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.45' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.46' 
                  name = 's' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.StringStdLib.subString    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB59B01B2' 
              name = 'subString' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.47' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.48' 
                  name = 'lower' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.49' 
                  name = 'upper' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.StringStdLib.toInteger    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB5B2021A' 
              name = 'toInteger' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.50' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.StringStdLib.toFloat    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB5C50019' 
              name = 'toFloat' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.51' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.StringStdLib.toLong    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a4552794402D1' 
              name = 'toLong' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.52' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.StringStdLib.toDouble    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a4552795C039F' 
              name = 'toDouble' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.53' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.StringStdLib.matches    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a465EBA8F008C' 
              name = 'matches' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.54' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.55' 
                  name = 'regex' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.StringStdLib.toUpperCase    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a465EBAF40251' 
              name = 'toUpperCase' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.56' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.StringStdLib.toLowerCase    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a465EBB290148' 
              name = 'toLowerCase' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.57' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
          </Model:Namespace.contents>
        </Model:Class>
        <Model:Import xmi.id = 'G.262' 
          name = 'PrimitiveTypes' annotation = '' 
          visibility = 'public_vis' isClustered = 'false' >
          <Model:Import.importedNamespace>
            <Model:Namespace xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B5389EE0204'/>
          </Model:Import.importedNamespace>
        </Model:Import>
        <!-- ==================== OCL.StdLibrary.BooleanStdLib    [Class] ==================== -->
        <Model:Class xmi.id = 'a44EAACA5018E' 
          name = 'BooleanStdLib' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a44EAAB4100AC'/>  <!-- OCL.StdLibrary.OclAnyStdLib -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.StdLibrary.BooleanStdLib.or    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB5EF0197' 
              name = 'or' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.58' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.59' 
                  name = 'b' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.BooleanStdLib.and    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB608003F' 
              name = 'and' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.60' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.61' 
                  name = 'b' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.BooleanStdLib.xor    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB614005A' 
              name = 'xor' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.62' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.63' 
                  name = 'b' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.BooleanStdLib.not    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB64801E7' 
              name = 'not' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.64' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.BooleanStdLib.implies    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB652035E' 
              name = 'implies' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.65' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.66' 
                  name = 'b' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.StdLibrary.FloatStdLib    [Class] ==================== -->
        <Model:Class xmi.id = 'a44EAAD0C033B' 
          name = 'FloatStdLib' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a44EAAB4100AC'/>  <!-- OCL.StdLibrary.OclAnyStdLib -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.StdLibrary.FloatStdLib.plusStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB2D80162' 
              name = 'plusStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.67' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.68' 
                  name = 'r' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.FloatStdLib.minusStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB2E90257' 
              name = 'minusStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.69' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.70' 
                  name = 'r' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.FloatStdLib.multStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB30A0363' 
              name = 'multStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.71' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.72' 
                  name = 'r' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.FloatStdLib.divStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB327029D' 
              name = 'divStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.73' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.74' 
                  name = 'r' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.FloatStdLib.abs    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB33B010C' 
              name = 'abs' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.75' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.FloatStdLib.floor    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB3010306' 
              name = 'floor' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.76' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.FloatStdLib.round    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB36101BB' 
              name = 'round' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.77' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.FloatStdLib.max    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB36F02A2' 
              name = 'max' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.78' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.79' 
                  name = 'r' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.FloatStdLib.min    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB2FB0235' 
              name = 'min' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.80' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.81' 
                  name = 'r' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.FloatStdLib.ltStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB38B00AE' 
              name = 'ltStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.82' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.83' 
                  name = 'r' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.FloatStdLib.gtStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB39C00EF' 
              name = 'gtStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.84' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.85' 
                  name = 'r' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.FloatStdLib.lteqStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB3A702D6' 
              name = 'lteqStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.86' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.87' 
                  name = 'r' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.FloatStdLib.gteqStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB3B9020A' 
              name = 'gteqStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.88' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.89' 
                  name = 'r' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.FloatStdLib.negStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB3C50117' 
              name = 'negStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.90' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.StdLibrary.CollectionTypeStdLib    [Class] ==================== -->
        <Model:Class xmi.id = 'a44EAAD24026E' 
          name = 'CollectionTypeStdLib' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.StdLibrary.CollectionTypeStdLib.size    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB6C80053' 
              name = 'size' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.91' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.CollectionTypeStdLib.includes    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB6D10359' 
              name = 'includes' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.92' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.93' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.CollectionTypeStdLib.excludes    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB6E60205' 
              name = 'excludes' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.94' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.95' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.CollectionTypeStdLib.count    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB700039E' 
              name = 'count' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.96' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.97' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.CollectionTypeStdLib.includesAll    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB71C038A' 
              name = 'includesAll' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.98' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.99' 
                  name = 'c' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' xmi.idref = 'a40D6DB7D0136'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.CollectionTypeStdLib.excludesAll    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB73A0199' 
              name = 'excludesAll' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.100' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.101' 
                  name = 'c' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' xmi.idref = 'a40D6DB7D0136'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.CollectionTypeStdLib.isEmpty    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB74E0152' 
              name = 'isEmpty' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.102' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.CollectionTypeStdLib.notEmpty    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB75B0007' 
              name = 'notEmpty' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.103' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.CollectionTypeStdLib.sum    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB7670177' 
              name = 'sum' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.104' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.CollectionTypeStdLib.product    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB778008B' 
              name = 'product' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.105' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBC50059'/>  <!-- OCL.Types.SetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.106' 
                  name = 'c' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' xmi.idref = 'a40D6DB7D0136'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.CollectionTypeStdLib.asSet    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB88C034B' 
              name = 'asSet' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.107' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBC50059'/>  <!-- OCL.Types.SetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.CollectionTypeStdLib.asBag    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB894032E' 
              name = 'asBag' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.108' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBEC0171'/>  <!-- OCL.Types.BagType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.CollectionTypeStdLib.asOrderedSet    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB89C0127' 
              name = 'asOrderedSet' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.109' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBDE00D5'/>  <!-- OCL.Types.OrderedSetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.CollectionTypeStdLib.asSequence    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB8AE0110' 
              name = 'asSequence' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.110' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBCC00F5'/>  <!-- OCL.Types.SequenceType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.CollectionTypeStdLib.oclIsUndefined    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a4577A6A10319' 
              name = 'oclIsUndefined' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.111' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.StdLibrary.SetTypeStdLib    [Class] ==================== -->
        <Model:Class xmi.id = 'a44EAAD500055' 
          name = 'SetTypeStdLib' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a44EAAD24026E'/>  <!-- OCL.StdLibrary.CollectionTypeStdLib -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.StdLibrary.SetTypeStdLib.union    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB81C0081' 
              name = 'union' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.112' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' xmi.idref = 'a40D6DB7D0136'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.113' 
                  name = 's' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' xmi.idref = 'a40D6DB7D0136'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SetTypeStdLib.equalsStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB84102B5' 
              name = 'equalsStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.114' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.115' 
                  name = 's' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBC50059'/>  <!-- OCL.Types.SetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SetTypeStdLib.intersection    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB8560107' 
              name = 'intersection' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.116' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' xmi.idref = 'a40D6DB7D0136'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.117' 
                  name = 's' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' xmi.idref = 'a40D6DB7D0136'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SetTypeStdLib.n    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB95800BD' 
              name = 'n' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.118' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBC50059'/>  <!-- OCL.Types.SetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.119' 
                  name = 's' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBC50059'/>  <!-- OCL.Types.SetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SetTypeStdLib.including    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB9D70086' 
              name = 'including' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.120' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBC50059'/>  <!-- OCL.Types.SetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.121' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SetTypeStdLib.excluding    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB9F602DA' 
              name = 'excluding' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.122' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBC50059'/>  <!-- OCL.Types.SetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.123' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SetTypeStdLib.symmetricDifference    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EABA0600DF' 
              name = 'symmetricDifference' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.124' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBC50059'/>  <!-- OCL.Types.SetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.125' 
                  name = 's' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBC50059'/>  <!-- OCL.Types.SetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SetTypeStdLib.flatten    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EABA25006C' 
              name = 'flatten' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.126' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBC50059'/>  <!-- OCL.Types.SetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SetTypeStdLib.minusStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a4562D431029A' 
              name = 'minusStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.127' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBC50059'/>  <!-- OCL.Types.SetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.128' 
                  name = 's' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBC50059'/>  <!-- OCL.Types.SetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
          </Model:Namespace.contents>
        </Model:Class>
        <Model:Import xmi.id = 'G.263' 
          name = 'OCL' annotation = '' 
          visibility = 'public_vis' isClustered = 'false' >
          <Model:Import.importedNamespace>
            <Model:Namespace xml:link = 'simple' href = 'OCL.xml|a40D6D9F602A9'/>
          </Model:Import.importedNamespace>
        </Model:Import>
        <!-- ==================== OCL.StdLibrary.SequenceTypeStdLib    [Class] ==================== -->
        <Model:Class xmi.id = 'a44EAAD6702CF' 
          name = 'SequenceTypeStdLib' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a44EAAD24026E'/>  <!-- OCL.StdLibrary.CollectionTypeStdLib -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.StdLibrary.SequenceTypeStdLib.equalsStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAC2F100FE' 
              name = 'equalsStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.129' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.130' 
                  name = 's' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBCC00F5'/>  <!-- OCL.Types.SequenceType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SequenceTypeStdLib.union    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAC35601C0' 
              name = 'union' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.131' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBCC00F5'/>  <!-- OCL.Types.SequenceType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.132' 
                  name = 's' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBCC00F5'/>  <!-- OCL.Types.SequenceType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SequenceTypeStdLib.flatten    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAC39A011D' 
              name = 'flatten' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.133' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBCC00F5'/>  <!-- OCL.Types.SequenceType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SequenceTypeStdLib.append    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAC3A6008E' 
              name = 'append' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.134' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBCC00F5'/>  <!-- OCL.Types.SequenceType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.135' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SequenceTypeStdLib.prepend    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EC09650092' 
              name = 'prepend' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.136' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBCC00F5'/>  <!-- OCL.Types.SequenceType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.137' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SequenceTypeStdLib.insertAt    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EC09B30094' 
              name = 'insertAt' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.138' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBCC00F5'/>  <!-- OCL.Types.SequenceType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.139' 
                  name = 'i' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.140' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SequenceTypeStdLib.subSequence    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EC09EF0086' 
              name = 'subSequence' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.141' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBCC00F5'/>  <!-- OCL.Types.SequenceType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.142' 
                  name = 'lower' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.143' 
                  name = 'upper' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SequenceTypeStdLib.at    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EC0A0B01EF' 
              name = 'at' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.144' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.145' 
                  name = 'i' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SequenceTypeStdLib.indexOf    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EC0AF5015D' 
              name = 'indexOf' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.146' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.147' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SequenceTypeStdLib.first    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EC0B160312' 
              name = 'first' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.148' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SequenceTypeStdLib.last    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EC0B25007B' 
              name = 'last' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.149' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SequenceTypeStdLib.including    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EC0B2E0365' 
              name = 'including' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.150' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBCC00F5'/>  <!-- OCL.Types.SequenceType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.151' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.SequenceTypeStdLib.excluding    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EC0B4302F5' 
              name = 'excluding' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.152' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBCC00F5'/>  <!-- OCL.Types.SequenceType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.153' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.StdLibrary.BagTypeStdLib    [Class] ==================== -->
        <Model:Class xmi.id = 'a44EAAD7702C8' 
          name = 'BagTypeStdLib' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a44EAAD24026E'/>  <!-- OCL.StdLibrary.CollectionTypeStdLib -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.StdLibrary.BagTypeStdLib.equalsStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAC0910394' 
              name = 'equalsStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.154' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.155' 
                  name = 'b' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBEC0171'/>  <!-- OCL.Types.BagType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.BagTypeStdLib.union    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAC0AA01D8' 
              name = 'union' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.156' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBEC0171'/>  <!-- OCL.Types.BagType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.157' 
                  name = 'b' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' xmi.idref = 'a40D6DB7D0136'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.BagTypeStdLib.intersection    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAC10701BF' 
              name = 'intersection' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.158' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' xmi.idref = 'a40D6DB7D0136'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.159' 
                  name = 'b' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' xmi.idref = 'a40D6DB7D0136'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.BagTypeStdLib.including    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAC14503DC' 
              name = 'including' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.160' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBEC0171'/>  <!-- OCL.Types.BagType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.161' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.BagTypeStdLib.excluding    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAC16900F0' 
              name = 'excluding' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.162' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBEC0171'/>  <!-- OCL.Types.BagType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.163' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.BagTypeStdLib.flatten    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAC2A2022A' 
              name = 'flatten' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.164' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBEC0171'/>  <!-- OCL.Types.BagType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.StdLibrary.OrderedSetTypeStdLib    [Class] ==================== -->
        <Model:Class xmi.id = 'a44EAADA800F2' 
          name = 'OrderedSetTypeStdLib' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a44EAAD24026E'/>  <!-- OCL.StdLibrary.CollectionTypeStdLib -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.StdLibrary.OrderedSetTypeStdLib.append    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EABA980056' 
              name = 'append' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.165' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBDE00D5'/>  <!-- OCL.Types.OrderedSetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.166' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.OrderedSetTypeStdLib.prepend    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EABAB00295' 
              name = 'prepend' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.167' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBDE00D5'/>  <!-- OCL.Types.OrderedSetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.168' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.OrderedSetTypeStdLib.insertAt    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EABAC502D2' 
              name = 'insertAt' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.169' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBDE00D5'/>  <!-- OCL.Types.OrderedSetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.170' 
                  name = 'index' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.171' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.OrderedSetTypeStdLib.subOrderedSet    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EABAE703C2' 
              name = 'subOrderedSet' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.172' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBDE00D5'/>  <!-- OCL.Types.OrderedSetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.173' 
                  name = 'lower' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.174' 
                  name = 'upper' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.OrderedSetTypeStdLib.at    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EABB0E0333' 
              name = 'at' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.175' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.176' 
                  name = 'i' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.OrderedSetTypeStdLib.indexOf    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EABB240367' 
              name = 'indexOf' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.177' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.178' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.OrderedSetTypeStdLib.first    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EABB5202CE' 
              name = 'first' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.179' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.OrderedSetTypeStdLib.last    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EABBA7028C' 
              name = 'last' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.180' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.OrderedSetTypeStdLib.equalsStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a4577A7EC0102' 
              name = 'equalsStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.181' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.182' 
                  name = 'o' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBDE00D5'/>  <!-- OCL.Types.OrderedSetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.StdLibrary.OclVoidStdLib    [Class] ==================== -->
        <Model:Class xmi.id = 'a44EAAECC0236' 
          name = 'OclVoidStdLib' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a44EAAB4100AC'/>  <!-- OCL.StdLibrary.OclAnyStdLib -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== OCL.StdLibrary.IntegerStdLib    [Class] ==================== -->
        <Model:Class xmi.id = 'a44EAAEDC00B2' 
          name = 'IntegerStdLib' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a44EAAB4100AC'/>  <!-- OCL.StdLibrary.OclAnyStdLib -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.StdLibrary.IntegerStdLib.plusStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB468020F' 
              name = 'plusStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.183' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.184' 
                  name = 'i' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.IntegerStdLib.minusStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB47803D5' 
              name = 'minusStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.185' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.186' 
                  name = 'i' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.IntegerStdLib.multStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB4AA0143' 
              name = 'multStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.187' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.188' 
                  name = 'i' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.IntegerStdLib.divStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB4BB0332' 
              name = 'divStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.189' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538ABB02B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.190' 
                  name = 'i' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.IntegerStdLib.abs    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB4D4005E' 
              name = 'abs' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.191' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.IntegerStdLib.intDivStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB4E6000A' 
              name = 'intDivStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.192' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.193' 
                  name = 'i' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.IntegerStdLib.mod    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB4FD020C' 
              name = 'mod' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.194' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.195' 
                  name = 'i' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.IntegerStdLib.max    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB50E00D1' 
              name = 'max' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.196' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.197' 
                  name = 'i' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.IntegerStdLib.min    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB4CE0268' 
              name = 'min' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.198' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.199' 
                  name = 'i' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.IntegerStdLib.ltStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a454939830026' 
              name = 'ltStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.200' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.201' 
                  name = 'i' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.IntegerStdLib.gtStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a4549399F00DB' 
              name = 'gtStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.202' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.203' 
                  name = 'i' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.IntegerStdLib.lteqStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a454939A303DA' 
              name = 'lteqStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.204' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.205' 
                  name = 'i' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.IntegerStdLib.gteqStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a454939A8000C' 
              name = 'gteqStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.206' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.207' 
                  name = 'i' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.IntegerStdLib.negStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB4950070' 
              name = 'negStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.208' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.StdLibrary.OclTypeStdLib    [Class] ==================== -->
        <Model:Class xmi.id = 'a44EAAF420006' 
          name = 'OclTypeStdLib' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a44EAAB4100AC'/>  <!-- OCL.StdLibrary.OclAnyStdLib -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.StdLibrary.OclTypeStdLib.allInstances    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a44EAB0EE02FF' 
              name = 'allInstances' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.209' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a40D6DBC50059'/>  <!-- OCL.Types.SetType -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.StdLibrary.TupleTypeStdLib    [Class] ==================== -->
        <Model:Class xmi.id = 'a44EAB7AB00CC' 
          name = 'TupleTypeStdLib' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xml:link = 'simple' href = 'Model.xml|a39A2BDA601B3'/>
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== OCL.StdLibrary.DoubleStdLib    [Class] ==================== -->
        <Model:Class xmi.id = 'a45493677008A' 
          name = 'DoubleStdLib' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a44EAAB4100AC'/>  <!-- OCL.StdLibrary.OclAnyStdLib -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.StdLibrary.DoubleStdLib.plusStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a4549374802E2' 
              name = 'plusStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.210' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.211' 
                  name = 'd' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.DoubleStdLib.minusStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a45493762028E' 
              name = 'minusStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.212' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.213' 
                  name = 'd' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.DoubleStdLib.multStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a454937760029' 
              name = 'multStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.214' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.215' 
                  name = 'd' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.DoubleStdLib.divStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a454937A60030' 
              name = 'divStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.216' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.217' 
                  name = 'd' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.DoubleStdLib.abs    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a454937AE0027' 
              name = 'abs' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.218' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.DoubleStdLib.floor    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a454937BD0123' 
              name = 'floor' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.219' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.DoubleStdLib.round    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a454937FF007B' 
              name = 'round' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.220' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.DoubleStdLib.max    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a4549380C0192' 
              name = 'max' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.221' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.222' 
                  name = 'd' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.DoubleStdLib.min    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a4549381302DC' 
              name = 'min' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.223' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.224' 
                  name = 'd' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.DoubleStdLib.ltStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a4549381700BB' 
              name = 'ltStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.225' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.226' 
                  name = 'd' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.DoubleStdLib.gtStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a454938300298' 
              name = 'gtStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.227' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.228' 
                  name = 'd' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.DoubleStdLib.lteqStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a4549383C020A' 
              name = 'lteqStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.229' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.230' 
                  name = 'd' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.DoubleStdLib.gteqStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a454938510138' 
              name = 'gteqStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.231' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.232' 
                  name = 'd' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.DoubleStdLib.negStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a454938580215' 
              name = 'negStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.233' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.StdLibrary.LongStdLib    [Class] ==================== -->
        <Model:Class xmi.id = 'a454936830222' 
          name = 'LongStdLib' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a44EAAB4100AC'/>  <!-- OCL.StdLibrary.OclAnyStdLib -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== OCL.StdLibrary.LongStdLib.plusStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a454939F701AB' 
              name = 'plusStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.234' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.235' 
                  name = 'l' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.LongStdLib.minusStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a45493A0C033D' 
              name = 'minusStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.236' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.237' 
                  name = 'l' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.LongStdLib.multStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a45493A200300' 
              name = 'multStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.238' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.239' 
                  name = 'l' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.LongStdLib.divStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a45493A250249' 
              name = 'divStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.240' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AE303DD'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.241' 
                  name = 'l' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.LongStdLib.abs    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a45493A460387' 
              name = 'abs' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.242' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.LongStdLib.longDivStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a45493A4E03B1' 
              name = 'longDivStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.243' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.244' 
                  name = 'l' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.LongStdLib.mod    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a45493A5E03D2' 
              name = 'mod' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.245' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.246' 
                  name = 'l' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.LongStdLib.max    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a45493A6303A8' 
              name = 'max' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.247' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.248' 
                  name = 'l' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.LongStdLib.min    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a45493A660185' 
              name = 'min' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.249' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.250' 
                  name = 'l' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.LongStdLib.ltStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a45493A68017E' 
              name = 'ltStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.251' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.252' 
                  name = 'l' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.LongStdLib.gtStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a45493A6A00E1' 
              name = 'gtStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.253' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.254' 
                  name = 'l' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.LongStdLib.lteqStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a45493A6C0383' 
              name = 'lteqStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.255' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.256' 
                  name = 'l' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.LongStdLib.gteqStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a45493A71036C' 
              name = 'gteqStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.257' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.258' 
                  name = 'l' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== OCL.StdLibrary.LongStdLib.negStdLib    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a45493A760160' 
              name = 'negStdLib' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.259' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== OCL.StdLibrary.OclInvalidStdLib    [Class] ==================== -->
        <Model:Class xmi.id = 'a4670D975000F' 
          name = 'OclInvalidStdLib' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a44EAAB4100AC'/>  <!-- OCL.StdLibrary.OclAnyStdLib -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
      </Model:Namespace.contents>
    </Model:Package>
  </Model:Namespace.contents>
</Model:Package>
</XMI.content>
</XMI>
