<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  XMI is the top-level XML element for XMI transfer text        -->
<!-- ______________________________________________________________ -->

<!ELEMENT XMI (XMI.header?, XMI.content?, XMI.difference*, XMI.extensions*) >
<!ATTLIST XMI 
	xmi.version CDATA #FIXED "1.1" 
	timestamp CDATA #IMPLIED 
	verified (true | false) #IMPLIED >

<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  XMI.header contains documentation and identifies the model,   --> 
<!--  metamodel, and metametamodel                                  --> 
<!-- ______________________________________________________________ -->

<!ELEMENT XMI.header (XMI.documentation?, XMI.model*, XMI.metamodel*, XMI.metametamodel*, XMI.import*) >

<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  documentation for transfer data                               -->
<!-- ______________________________________________________________ -->

<!ELEMENT XMI.documentation (#PCDATA | XMI.owner | XMI.contact | XMI.longDescription | XMI.shortDescription | XMI.exporter | XMI.exporterVersion | XMI.notice)* >

<!ELEMENT XMI.owner ANY > 
<!ELEMENT XMI.contact ANY > 
<!ELEMENT XMI.longDescription ANY > 
<!ELEMENT XMI.shortDescription ANY > 
<!ELEMENT XMI.exporter ANY > 
<!ELEMENT XMI.exporterVersion ANY > 
<!ELEMENT XMI.exporterID ANY > 
<!ELEMENT XMI.notice ANY >

<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  XMI.element.att defines the attributes that each XML element  -->
<!--  that corresponds to a metamodel class must have to conform to --> 
<!--  the XMI specification.                                        --> 
<!-- ______________________________________________________________ -->

<!ENTITY % XMI.element.att 
'	xmi.id ID #IMPLIED 
	xmi.label CDATA #IMPLIED 
	xmi.uuid CDATA #IMPLIED ' >

<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  XMI.link.att defines the attributes that each XML element that--> 
<!--  corresponds to a metamodel class must have to enable it to    --> 
<!--  function as a simple XLink as well as refer to model          --> 
<!--  constructs within the same XMI file.                          --> 
<!-- ______________________________________________________________ -->

<!ENTITY % XMI.link.att
'	href CDATA #IMPLIED 
	xmi.idref IDREF #IMPLIED ' >

<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  XMI.model identifies the model(s) being transferred           --> 
<!-- ______________________________________________________________ -->

<!ELEMENT XMI.model ANY > 
<!ATTLIST XMI.model 
	%XMI.link.att; 
	xmi.name CDATA #REQUIRED 
	xmi.version CDATA #IMPLIED >

<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  XMI.metamodel identifies the metamodel(s) for the transferred --> 
<!--  data                                                          -->
<!-- ______________________________________________________________ -->

<!ELEMENT XMI.metamodel ANY > 
<!ATTLIST XMI.metamodel 
	%XMI.link.att; xmi.name CDATA #REQUIRED 
	xmi.version CDATA #IMPLIED >

<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  XMI.metametamodel identifies the metametamodel(s) for the     --> 
<!--  transferred data                                              -->
<!-- ______________________________________________________________ -->

<!ELEMENT XMI.metametamodel ANY > 
<!ATTLIST XMI.metametamodel 
	%XMI.link.att; 
	xmi.name CDATA #REQUIRED 
	xmi.version CDATA #IMPLIED >

<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  XMI.import identifies imported metamodel(s)                   -->
<!-- ______________________________________________________________ -->

<!ELEMENT XMI.import ANY > 
<!ATTLIST XMI.import 
	%XMI.link.att; 
	xmi.name CDATA #REQUIRED 
	xmi.version CDATA #IMPLIED >

<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  XMI.content is the actual data being transferred              -->
<!-- ______________________________________________________________ -->

<!ELEMENT XMI.content ANY >

<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  XMI.extensions contains data to transfer that does not conform--> 
<!--  to the metamodel(s) in the header                             -->
<!-- ______________________________________________________________ -->

<!ELEMENT XMI.extensions ANY >
<!ATTLIST XMI.extensions
	xmi.extender CDATA #REQUIRED >

<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  extension contains information related to a specific model    --> 
<!--  construct that is not defined in the metamodel(s) in the      --> 
<!--  header                                                        -->
<!-- ______________________________________________________________ -->

<!ELEMENT XMI.extension ANY > 
<!ATTLIST XMI.extension 
	%XMI.element.att; 
	%XMI.link.att; 
	xmi.extender CDATA #REQUIRED 
	xmi.extenderID CDATA #IMPLIED >

<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  XMI.difference holds XML elements representing differences to --> 
<!--  a base model                                                  -->
<!-- ______________________________________________________________ -->

<!ELEMENT XMI.difference (XMI.difference | XMI.delete | XMI.add | XMI.replace)* > 
<!ATTLIST XMI.difference 
	%XMI.element.att; 
	%XMI.link.att; >

<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  XMI.delete represents a deletion from a base model            -->
<!-- ______________________________________________________________ -->

<!ELEMENT XMI.delete EMPTY > 
<!ATTLIST XMI.delete 
	%XMI.element.att; 
	%XMI.link.att; >

<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  XMI.add represents an addition to a base model                -->
<!-- ______________________________________________________________ -->

<!ELEMENT XMI.add ANY > 
<!ATTLIST XMI.add
	%XMI.element.att; 
	%XMI.link.att; 
	xmi.position CDATA "-1" >

<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  XMI.replace represents the replacement of a model construct   --> 
<!--  with another model construct in a base model                  -->
<!-- ______________________________________________________________ -->

<!ELEMENT XMI.replace ANY > 
<!ATTLIST XMI.replace 
	%XMI.element.att; 
	%XMI.link.att; 
	xmi.position CDATA "-1" >

<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  XMI.reference may be used to refer to data types not defined  --> 
<!--  in the metamodel                                              -->
<!-- ______________________________________________________________ -->

<!ELEMENT XMI.reference ANY > 
<!ATTLIST XMI.reference 
	%XMI.link.att; >

<!-- ______________________________________________________________ -->
<!--                                                                -->
<!--  This section contains the declaration of XML elements         --> 
<!--  representing data types                                       -->
<!-- ______________________________________________________________ -->

<!ELEMENT XMI.TypeDefinitions ANY > 
<!ELEMENT XMI.field ANY > 
<!ELEMENT XMI.seqItem ANY > 
<!ELEMENT XMI.octetStream (#PCDATA) > 
<!ELEMENT XMI.unionDiscrim ANY > 
<!ELEMENT XMI.enum EMPTY > 
<!ATTLIST XMI.enum 
	xmi.value CDATA #REQUIRED >

<!ELEMENT XMI.any ANY > 
<!ATTLIST XMI.any 
	%XMI.link.att; 
	xmi.type CDATA #IMPLIED 
	xmi.name CDATA #IMPLIED >

<!ELEMENT XMI.CorbaTypeCode (XMI.CorbaTcAlias | XMI.CorbaTcStruct | XMI.CorbaTcSequence | XMI.CorbaTcArray | XMI.CorbaTcEnum | XMI.CorbaTcUnion | XMI.CorbaTcExcept | XMI.CorbaTcString | XMI.CorbaTcWstring | XMI.CorbaTcShort | XMI.CorbaTcLong | XMI.CorbaTcUshort | XMI.CorbaTcUlong | XMI.CorbaTcFloat | XMI.CorbaTcDouble | XMI.CorbaTcBoolean | XMI.CorbaTcChar | XMI.CorbaTcWchar | XMI.CorbaTcOctet | XMI.CorbaTcAny | XMI.CorbaTcTypeCode | XMI.CorbaTcPrincipal | XMI.CorbaTcNull | XMI.CorbaTcVoid | XMI.CorbaTcLongLong | XMI.CorbaTcLongDouble) >
<!ATTLIST XMI.CorbaTypeCode
	 %XMI.element.att; >

<!ELEMENT XMI.CorbaTcAlias (XMI.CorbaTypeCode) > 
<!ATTLIST XMI.CorbaTcAlias 
	xmi.tcName CDATA #REQUIRED 
	xmi.tcId CDATA #IMPLIED >

<!ELEMENT XMI.CorbaTcStruct (XMI.CorbaTcField)* > 
<!ATTLIST XMI.CorbaTcStruct 
	xmi.tcName CDATA #REQUIRED 
	xmi.tcId CDATA #IMPLIED >

<!ELEMENT XMI.CorbaTcField (XMI.CorbaTypeCode) > 
<!ATTLIST XMI.CorbaTcField 
	xmi.tcName CDATA #REQUIRED >

<!ELEMENT XMI.CorbaTcSequence (XMI.CorbaTypeCode | XMI.CorbaRecursiveType) >
<!ATTLIST XMI.CorbaTcSequence 
	xmi.tcLength CDATA #REQUIRED >

<!ELEMENT XMI.CorbaRecursiveType EMPTY > 
<!ATTLIST XMI.CorbaRecursiveType 
	xmi.offset CDATA #REQUIRED >

<!ELEMENT XMI.CorbaTcArray (XMI.CorbaTypeCode) > 
<!ATTLIST XMI.CorbaTcArray 
	xmi.tcLength CDATA #REQUIRED >

<!ELEMENT XMI.CorbaTcObjRef EMPTY > 
<!ATTLIST XMI.CorbaTcObjRef 
	xmi.tcName CDATA #REQUIRED 
	xmi.tcId CDATA #IMPLIED >

<!ELEMENT XMI.CorbaTcEnum (XMI.CorbaTcEnumLabel) > 
<!ATTLIST XMI.CorbaTcEnum 
	xmi.tcName CDATA #REQUIRED
	xmi.tcId CDATA #IMPLIED >

<!ELEMENT XMI.CorbaTcEnumLabel EMPTY > 
<!ATTLIST XMI.CorbaTcEnumLabel 
	xmi.tcName CDATA #REQUIRED >

<!ELEMENT XMI.CorbaTcUnionMbr (XMI.CorbaTypeCode, XMI.any) > 
<!ATTLIST XMI.CorbaTcUnionMbr 
	xmi.tcName CDATA #REQUIRED >

<!ELEMENT XMI.CorbaTcUnion (XMI.CorbaTypeCode, XMI.CorbaTcUnionMbr*) > 
<!ATTLIST XMI.CorbaTcUnion 
	xmi.tcName CDATA #REQUIRED 
	xmi.tcId CDATA #IMPLIED >

<!ELEMENT XMI.CorbaTcExcept (XMI.CorbaTcField)* > 
<!ATTLIST XMI.CorbaTcExcept 
	xmi.tcName CDATA #REQUIRED 
	xmi.tcId CDATA #IMPLIED >

<!ELEMENT XMI.CorbaTcString EMPTY > 
<!ATTLIST XMI.CorbaTcString 
	xmi.tcLength CDATA #REQUIRED >

<!ELEMENT XMI.CorbaTcWstring EMPTY > 
<!ATTLIST XMI.CorbaTcWstring
	xmi.tcLength CDATA #REQUIRED >

<!ELEMENT XMI.CorbaTcFixed EMPTY > 
<!ATTLIST XMI.CorbaTcFixed 
	xmi.tcDigits CDATA #REQUIRED 
	xmi.tcScale CDATA #REQUIRED >

<!ELEMENT XMI.CorbaTcShort EMPTY > 
<!ELEMENT XMI.CorbaTcLong EMPTY > 
<!ELEMENT XMI.CorbaTcUshort EMPTY > 
<!ELEMENT XMI.CorbaTcUlong EMPTY > 
<!ELEMENT XMI.CorbaTcFloat EMPTY > 
<!ELEMENT XMI.CorbaTcDouble EMPTY > 
<!ELEMENT XMI.CorbaTcBoolean EMPTY > 
<!ELEMENT XMI.CorbaTcChar EMPTY > 
<!ELEMENT XMI.CorbaTcWchar EMPTY > 
<!ELEMENT XMI.CorbaTcOctet EMPTY > 
<!ELEMENT XMI.CorbaTcAny EMPTY > 
<!ELEMENT XMI.CorbaTcTypeCode EMPTY > 
<!ELEMENT XMI.CorbaTcPrincipal EMPTY > 
<!ELEMENT XMI.CorbaTcNull EMPTY > 
<!ELEMENT XMI.CorbaTcVoid EMPTY > 
<!ELEMENT XMI.CorbaTcLongLong EMPTY > 
<!ELEMENT XMI.CorbaTcLongDouble EMPTY >



<!-- ______________________________________________________________ -->
<!--                                                                -->
<!-- Beneath follows the actual model's DTD                         -->
<!-- ______________________________________________________________ -->


<!ATTLIST XMI
  xmlns:Model CDATA #IMPLIED>

<!ELEMENT Model:Model (Model:ModelElement|Model:Namespace|Model:GeneralizableElement|Model:TypedElement|Model:Classifier|Model:Class|Model:DataType|Model:PrimitiveType|Model:EnumerationType|Model:CollectionType|Model:StructureType|Model:StructureField|Model:AliasType|Model:Feature|Model:StructuralFeature|Model:Attribute|Model:Reference|Model:BehavioralFeature|Model:Operation|Model:Exception|Model:Association|Model:AssociationEnd|Model:Package|Model:Import|Model:Parameter|Model:Constraint|Model:Constant|Model:Tag|Model:AttachesTo|Model:Contains|Model:Generalizes|Model:Aliases|Model:Constrains|Model:CanRaise|Model:RefersTo|Model:IsOfType|XMI.extension)*>
<!ATTLIST Model:Model
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:ModelElement (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|XMI.extension)*>
<!ATTLIST Model:ModelElement
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:ModelElement.name (#PCDATA|XMI.reference)*>

<!ELEMENT Model:ModelElement.annotation (#PCDATA|XMI.reference)*>

<!ELEMENT Model:ModelElement.container (Model:Association|Model:StructureType|Model:Classifier|Model:CollectionType|Model:GeneralizableElement|Model:AliasType|Model:EnumerationType|Model:PrimitiveType|Model:Package|Model:BehavioralFeature|Model:Namespace|Model:DataType|Model:Exception|Model:Operation|Model:Class)*>

<!ELEMENT Model:ModelElement.constraints (Model:Constraint)*>

<!ELEMENT Model:Namespace (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|Model:Namespace.contents|XMI.extension)*>
<!ATTLIST Model:Namespace
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  contents IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Namespace.contents (Model:Association|Model:StructureField|Model:StructureType|Model:Classifier|Model:CollectionType|Model:TypedElement|Model:Attribute|Model:GeneralizableElement|Model:AliasType|Model:EnumerationType|Model:PrimitiveType|Model:ModelElement|Model:Package|Model:Reference|Model:Tag|Model:Constraint|Model:BehavioralFeature|Model:Constant|Model:Feature|Model:DataType|Model:Namespace|Model:Exception|Model:Operation|Model:StructuralFeature|Model:AssociationEnd|Model:Import|Model:Class|Model:Parameter)*>

<!ELEMENT Model:GeneralizableElement (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|Model:Namespace.contents|Model:GeneralizableElement.supertypes|XMI.extension)*>
<!ATTLIST Model:GeneralizableElement
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  isRoot (true|false) #REQUIRED
  isLeaf (true|false) #REQUIRED
  isAbstract (true|false) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  contents IDREFS #IMPLIED
  supertypes IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:GeneralizableElement.supertypes (Model:Association|Model:StructureType|Model:Classifier|Model:CollectionType|Model:GeneralizableElement|Model:AliasType|Model:EnumerationType|Model:PrimitiveType|Model:Package|Model:DataType|Model:Class)*>

<!ELEMENT Model:TypedElement (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|Model:TypedElement.type|XMI.extension)*>
<!ATTLIST Model:TypedElement
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  type IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:TypedElement.type (Model:Association|Model:StructureType|Model:Classifier|Model:CollectionType|Model:AliasType|Model:EnumerationType|Model:PrimitiveType|Model:DataType|Model:Class)*>

<!ELEMENT Model:Classifier (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|Model:Namespace.contents|Model:GeneralizableElement.supertypes|XMI.extension)*>
<!ATTLIST Model:Classifier
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  isRoot (true|false) #REQUIRED
  isLeaf (true|false) #REQUIRED
  isAbstract (true|false) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  contents IDREFS #IMPLIED
  supertypes IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Class (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|Model:Namespace.contents|Model:GeneralizableElement.supertypes|XMI.extension)*>
<!ATTLIST Model:Class
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  isRoot (true|false) #REQUIRED
  isLeaf (true|false) #REQUIRED
  isAbstract (true|false) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  isSingleton (true|false) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  contents IDREFS #IMPLIED
  supertypes IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:DataType (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|Model:Namespace.contents|Model:GeneralizableElement.supertypes|XMI.extension)*>
<!ATTLIST Model:DataType
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  isRoot (true|false) #REQUIRED
  isLeaf (true|false) #REQUIRED
  isAbstract (true|false) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  contents IDREFS #IMPLIED
  supertypes IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:PrimitiveType (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|Model:Namespace.contents|Model:GeneralizableElement.supertypes|XMI.extension)*>
<!ATTLIST Model:PrimitiveType
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  isRoot (true|false) #REQUIRED
  isLeaf (true|false) #REQUIRED
  isAbstract (true|false) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  contents IDREFS #IMPLIED
  supertypes IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:EnumerationType (Model:ModelElement.name|Model:ModelElement.annotation|Model:EnumerationType.labels|Model:ModelElement.container|Model:ModelElement.constraints|Model:Namespace.contents|Model:GeneralizableElement.supertypes|XMI.extension)*>
<!ATTLIST Model:EnumerationType
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  isRoot (true|false) #REQUIRED
  isLeaf (true|false) #REQUIRED
  isAbstract (true|false) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  contents IDREFS #IMPLIED
  supertypes IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:EnumerationType.labels (#PCDATA|XMI.reference)*>

<!ELEMENT Model:CollectionType (Model:ModelElement.name|Model:ModelElement.annotation|Model:CollectionType.multiplicity|Model:ModelElement.container|Model:ModelElement.constraints|Model:Namespace.contents|Model:GeneralizableElement.supertypes|Model:TypedElement.type|XMI.extension)*>
<!ATTLIST Model:CollectionType
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  isRoot (true|false) #REQUIRED
  isLeaf (true|false) #REQUIRED
  isAbstract (true|false) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  contents IDREFS #IMPLIED
  supertypes IDREFS #IMPLIED
  type IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:CollectionType.multiplicity (XMI.field|XMI.reference)*>

<!ELEMENT Model:StructureType (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|Model:Namespace.contents|Model:GeneralizableElement.supertypes|XMI.extension)*>
<!ATTLIST Model:StructureType
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  isRoot (true|false) #REQUIRED
  isLeaf (true|false) #REQUIRED
  isAbstract (true|false) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  contents IDREFS #IMPLIED
  supertypes IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:StructureField (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|Model:TypedElement.type|XMI.extension)*>
<!ATTLIST Model:StructureField
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  type IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:AliasType (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|Model:Namespace.contents|Model:GeneralizableElement.supertypes|Model:TypedElement.type|XMI.extension)*>
<!ATTLIST Model:AliasType
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  isRoot (true|false) #REQUIRED
  isLeaf (true|false) #REQUIRED
  isAbstract (true|false) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  contents IDREFS #IMPLIED
  supertypes IDREFS #IMPLIED
  type IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Feature (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|XMI.extension)*>
<!ATTLIST Model:Feature
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  scope (instance_level|classifier_level) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:StructuralFeature (Model:ModelElement.name|Model:ModelElement.annotation|Model:StructuralFeature.multiplicity|Model:ModelElement.container|Model:ModelElement.constraints|Model:TypedElement.type|XMI.extension)*>
<!ATTLIST Model:StructuralFeature
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  scope (instance_level|classifier_level) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  isChangeable (true|false) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  type IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:StructuralFeature.multiplicity (XMI.field|XMI.reference)*>

<!ELEMENT Model:Attribute (Model:ModelElement.name|Model:ModelElement.annotation|Model:StructuralFeature.multiplicity|Model:ModelElement.container|Model:ModelElement.constraints|Model:TypedElement.type|XMI.extension)*>
<!ATTLIST Model:Attribute
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  scope (instance_level|classifier_level) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  isChangeable (true|false) #REQUIRED
  isDerived (true|false) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  type IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Reference (Model:ModelElement.name|Model:ModelElement.annotation|Model:StructuralFeature.multiplicity|Model:ModelElement.container|Model:ModelElement.constraints|Model:TypedElement.type|Model:Reference.referencedEnd|XMI.extension)*>
<!ATTLIST Model:Reference
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  scope (instance_level|classifier_level) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  isChangeable (true|false) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  type IDREFS #IMPLIED
  referencedEnd IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Reference.referencedEnd (Model:AssociationEnd)*>

<!ELEMENT Model:BehavioralFeature (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|Model:Namespace.contents|XMI.extension)*>
<!ATTLIST Model:BehavioralFeature
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  scope (instance_level|classifier_level) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  contents IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Operation (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|Model:Namespace.contents|Model:Operation.exceptions|XMI.extension)*>
<!ATTLIST Model:Operation
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  scope (instance_level|classifier_level) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  isQuery (true|false) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  contents IDREFS #IMPLIED
  exceptions IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Operation.exceptions (Model:Exception)*>

<!ELEMENT Model:Exception (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|Model:Namespace.contents|XMI.extension)*>
<!ATTLIST Model:Exception
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  scope (instance_level|classifier_level) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  contents IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Association (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|Model:Namespace.contents|Model:GeneralizableElement.supertypes|XMI.extension)*>
<!ATTLIST Model:Association
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  isRoot (true|false) #REQUIRED
  isLeaf (true|false) #REQUIRED
  isAbstract (true|false) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  isDerived (true|false) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  contents IDREFS #IMPLIED
  supertypes IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:AssociationEnd (Model:ModelElement.name|Model:ModelElement.annotation|Model:AssociationEnd.multiplicity|Model:ModelElement.container|Model:ModelElement.constraints|Model:TypedElement.type|XMI.extension)*>
<!ATTLIST Model:AssociationEnd
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  isNavigable (true|false) #REQUIRED
  aggregation (none|shared|composite) #REQUIRED
  isChangeable (true|false) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  type IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:AssociationEnd.multiplicity (XMI.field|XMI.reference)*>

<!ELEMENT Model:Package (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|Model:Namespace.contents|Model:GeneralizableElement.supertypes|XMI.extension)*>
<!ATTLIST Model:Package
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  isRoot (true|false) #REQUIRED
  isLeaf (true|false) #REQUIRED
  isAbstract (true|false) #REQUIRED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  contents IDREFS #IMPLIED
  supertypes IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Import (Model:ModelElement.name|Model:ModelElement.annotation|Model:ModelElement.container|Model:ModelElement.constraints|Model:Import.importedNamespace|XMI.extension)*>
<!ATTLIST Model:Import
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  visibility (public_vis|protected_vis|private_vis) #REQUIRED
  isClustered (true|false) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  importedNamespace IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Import.importedNamespace (Model:Association|Model:StructureType|Model:Classifier|Model:CollectionType|Model:GeneralizableElement|Model:AliasType|Model:EnumerationType|Model:PrimitiveType|Model:Package|Model:BehavioralFeature|Model:Namespace|Model:DataType|Model:Exception|Model:Operation|Model:Class)*>

<!ELEMENT Model:Parameter (Model:ModelElement.name|Model:ModelElement.annotation|Model:Parameter.multiplicity|Model:ModelElement.container|Model:ModelElement.constraints|Model:TypedElement.type|XMI.extension)*>
<!ATTLIST Model:Parameter
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  direction (in_dir|out_dir|inout_dir|return_dir) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  type IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Parameter.multiplicity (XMI.field|XMI.reference)*>

<!ELEMENT Model:Constraint (Model:ModelElement.name|Model:ModelElement.annotation|Model:Constraint.expression|Model:Constraint.language|Model:ModelElement.container|Model:ModelElement.constraints|Model:Constraint.constrainedElements|XMI.extension)*>
<!ATTLIST Model:Constraint
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  expression CDATA #IMPLIED
  language CDATA #IMPLIED
  evaluationPolicy (immediate|deferred) #REQUIRED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  constrainedElements IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Constraint.expression (#PCDATA|XMI.reference)*>

<!ELEMENT Model:Constraint.language (#PCDATA|XMI.reference)*>

<!ELEMENT Model:Constraint.constrainedElements (Model:Association|Model:StructureField|Model:StructureType|Model:Classifier|Model:CollectionType|Model:TypedElement|Model:Attribute|Model:GeneralizableElement|Model:AliasType|Model:EnumerationType|Model:PrimitiveType|Model:ModelElement|Model:Package|Model:Reference|Model:Tag|Model:Constraint|Model:BehavioralFeature|Model:Constant|Model:Feature|Model:DataType|Model:Namespace|Model:Exception|Model:Operation|Model:StructuralFeature|Model:AssociationEnd|Model:Import|Model:Class|Model:Parameter)*>

<!ELEMENT Model:Constant (Model:ModelElement.name|Model:ModelElement.annotation|Model:Constant.value|Model:ModelElement.container|Model:ModelElement.constraints|Model:TypedElement.type|XMI.extension)*>
<!ATTLIST Model:Constant
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  value CDATA #IMPLIED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  type IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Constant.value (#PCDATA|XMI.reference)*>

<!ELEMENT Model:Tag (Model:ModelElement.name|Model:ModelElement.annotation|Model:Tag.tagId|Model:Tag.values|Model:ModelElement.container|Model:ModelElement.constraints|Model:Tag.elements|XMI.extension)*>
<!ATTLIST Model:Tag
  name CDATA #IMPLIED
  annotation CDATA #IMPLIED
  tagId CDATA #IMPLIED
  container IDREFS #IMPLIED
  constraints IDREFS #IMPLIED
  elements IDREFS #IMPLIED
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Tag.tagId (#PCDATA|XMI.reference)*>

<!ELEMENT Model:Tag.values (#PCDATA|XMI.reference)*>

<!ELEMENT Model:Tag.elements (Model:Association|Model:StructureField|Model:StructureType|Model:Classifier|Model:CollectionType|Model:TypedElement|Model:Attribute|Model:GeneralizableElement|Model:AliasType|Model:EnumerationType|Model:PrimitiveType|Model:ModelElement|Model:Package|Model:Reference|Model:Tag|Model:Constraint|Model:BehavioralFeature|Model:Constant|Model:Feature|Model:DataType|Model:Namespace|Model:Exception|Model:Operation|Model:StructuralFeature|Model:AssociationEnd|Model:Import|Model:Class|Model:Parameter)*>

<!ELEMENT Model:AttachesTo (Model:AttachesTo.modelElement|Model:AttachesTo.tag|XMI.extension)*>
<!ATTLIST Model:AttachesTo
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:AttachesTo.modelElement EMPTY>
<!ATTLIST Model:AttachesTo.modelElement
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:AttachesTo.tag EMPTY>
<!ATTLIST Model:AttachesTo.tag
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Contains (Model:Contains.container|Model:Contains.containedElement|XMI.extension)*>
<!ATTLIST Model:Contains
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Contains.container EMPTY>
<!ATTLIST Model:Contains.container
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Contains.containedElement EMPTY>
<!ATTLIST Model:Contains.containedElement
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Generalizes (Model:Generalizes.supertype|Model:Generalizes.subtype|XMI.extension)*>
<!ATTLIST Model:Generalizes
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Generalizes.supertype EMPTY>
<!ATTLIST Model:Generalizes.supertype
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Generalizes.subtype EMPTY>
<!ATTLIST Model:Generalizes.subtype
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Aliases (Model:Aliases.importer|Model:Aliases.imported|XMI.extension)*>
<!ATTLIST Model:Aliases
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Aliases.importer EMPTY>
<!ATTLIST Model:Aliases.importer
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Aliases.imported EMPTY>
<!ATTLIST Model:Aliases.imported
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Constrains (Model:Constrains.constraint|Model:Constrains.constrainedElement|XMI.extension)*>
<!ATTLIST Model:Constrains
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Constrains.constraint EMPTY>
<!ATTLIST Model:Constrains.constraint
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:Constrains.constrainedElement EMPTY>
<!ATTLIST Model:Constrains.constrainedElement
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:CanRaise (Model:CanRaise.operation|Model:CanRaise.except|XMI.extension)*>
<!ATTLIST Model:CanRaise
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:CanRaise.operation EMPTY>
<!ATTLIST Model:CanRaise.operation
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:CanRaise.except EMPTY>
<!ATTLIST Model:CanRaise.except
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:RefersTo (Model:RefersTo.referent|Model:RefersTo.referencedEnd|XMI.extension)*>
<!ATTLIST Model:RefersTo
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:RefersTo.referent EMPTY>
<!ATTLIST Model:RefersTo.referent
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:RefersTo.referencedEnd EMPTY>
<!ATTLIST Model:RefersTo.referencedEnd
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:IsOfType (Model:IsOfType.type|Model:IsOfType.typedElements|XMI.extension)*>
<!ATTLIST Model:IsOfType
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:IsOfType.type EMPTY>
<!ATTLIST Model:IsOfType.type
  %XMI.element.att; %XMI.link.att;>

<!ELEMENT Model:IsOfType.typedElements EMPTY>
<!ATTLIST Model:IsOfType.typedElements
  %XMI.element.att; %XMI.link.att;>

