/**
 * Generated by the MOIN Generator Version 3.0
 **/

package org.omg.ocl.stdlibrary;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface DoubleStdLib extends org.omg.ocl.stdlibrary.OclAnyStdLib {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, org.omg.ocl.stdlibrary.DoubleStdLib> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, org.omg.ocl.stdlibrary.DoubleStdLib>("45ED2E2A639716B339E648510C3BC4DC46A17FC2", "sap.com/tc/moin/mof_1.4", "OCL", "StdLibrary", "DoubleStdLib"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // operations
    public double plusStdLib(double d) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public double minusStdLib(double d) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public double multStdLib(double d) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public double divStdLib(double d) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public double abs() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public long floor() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public long round() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public double max(double d) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public double min(double d) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean ltStdLib(double d) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean gtStdLib(double d) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean lteqStdLib(double d) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean gteqStdLib(double d) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public double negStdLib() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.String> NAME( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>annotation</code> attribute.
         * @return  the descriptor for the <code>annotation</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.String> ANNOTATION( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.ANNOTATION( );
        }
        /**
         * Returns the descriptor for the <code>isRoot</code> attribute.
         * @return  the descriptor for the <code>isRoot</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.lang.Boolean> IS_ROOT( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.IS_ROOT( );
        }
        /**
         * Returns the descriptor for the <code>isLeaf</code> attribute.
         * @return  the descriptor for the <code>isLeaf</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.lang.Boolean> IS_LEAF( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.IS_LEAF( );
        }
        /**
         * Returns the descriptor for the <code>isAbstract</code> attribute.
         * @return  the descriptor for the <code>isAbstract</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.lang.Boolean> IS_ABSTRACT( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.IS_ABSTRACT( );
        }
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,com.sap.tc.moin.repository.mmi.model.VisibilityKind> VISIBILITY( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.VISIBILITY( );
        }
        /**
         * Returns the descriptor for the <code>requiredElements</code> reference.
         * @return  the descriptor for the <code>requiredElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.ModelElement,java.util.Collection<com.sap.tc.moin.repository.mmi.model.ModelElement>> REQUIRED_ELEMENTS( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.REQUIRED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>container</code> reference.
         * @return  the descriptor for the <code>container</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.ModelElement,com.sap.tc.moin.repository.mmi.model.Namespace> CONTAINER( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.CONTAINER( );
        }
        /**
         * Returns the descriptor for the <code>constraints</code> reference.
         * @return  the descriptor for the <code>constraints</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.ModelElement,java.util.Collection<com.sap.tc.moin.repository.mmi.model.Constraint>> CONSTRAINTS( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.CONSTRAINTS( );
        }
        /**
         * Returns the descriptor for the <code>contents</code> reference.
         * @return  the descriptor for the <code>contents</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.Namespace,java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement>> CONTENTS( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.CONTENTS( );
        }
        /**
         * Returns the descriptor for the <code>supertypes</code> reference.
         * @return  the descriptor for the <code>supertypes</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.util.List<com.sap.tc.moin.repository.mmi.model.GeneralizableElement>> SUPERTYPES( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.SUPERTYPES( );
        }
        /**
         * Returns the descriptor for the <code>findRequiredElements</code> operation.
         * @return  the descriptor for the <code>findRequiredElements</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.util.Collection<com.sap.tc.moin.repository.mmi.model.ModelElement>> FIND_REQUIRED_ELEMENTS( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.FIND_REQUIRED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>isRequiredBecause</code> operation.
         * @return  the descriptor for the <code>isRequiredBecause</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.Boolean> IS_REQUIRED_BECAUSE( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.IS_REQUIRED_BECAUSE( );
        }
        /**
         * Returns the descriptor for the <code>isFrozen</code> operation.
         * @return  the descriptor for the <code>isFrozen</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.Boolean> IS_FROZEN( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.IS_FROZEN( );
        }
        /**
         * Returns the descriptor for the <code>isVisible</code> operation.
         * @return  the descriptor for the <code>isVisible</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.Boolean> IS_VISIBLE( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.IS_VISIBLE( );
        }
        /**
         * Returns the descriptor for the <code>lookupElement</code> operation.
         * @return  the descriptor for the <code>lookupElement</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.Namespace,com.sap.tc.moin.repository.mmi.model.ModelElement> LOOKUP_ELEMENT( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.LOOKUP_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>resolveQualifiedName</code> operation.
         * @return  the descriptor for the <code>resolveQualifiedName</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.Namespace,com.sap.tc.moin.repository.mmi.model.ModelElement> RESOLVE_QUALIFIED_NAME( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.RESOLVE_QUALIFIED_NAME( );
        }
        /**
         * Returns the descriptor for the <code>findElementsByType</code> operation.
         * @return  the descriptor for the <code>findElementsByType</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.Namespace,java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement>> FIND_ELEMENTS_BY_TYPE( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.FIND_ELEMENTS_BY_TYPE( );
        }
        /**
         * Returns the descriptor for the <code>nameIsValid</code> operation.
         * @return  the descriptor for the <code>nameIsValid</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.Namespace,java.lang.Boolean> NAME_IS_VALID( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.NAME_IS_VALID( );
        }
        /**
         * Returns the descriptor for the <code>allSupertypes</code> operation.
         * @return  the descriptor for the <code>allSupertypes</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.util.List<com.sap.tc.moin.repository.mmi.model.GeneralizableElement>> ALL_SUPERTYPES( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.ALL_SUPERTYPES( );
        }
        /**
         * Returns the descriptor for the <code>lookupElementExtended</code> operation.
         * @return  the descriptor for the <code>lookupElementExtended</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,com.sap.tc.moin.repository.mmi.model.ModelElement> LOOKUP_ELEMENT_EXTENDED( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.LOOKUP_ELEMENT_EXTENDED( );
        }
        /**
         * Returns the descriptor for the <code>findElementsByTypeExtended</code> operation.
         * @return  the descriptor for the <code>findElementsByTypeExtended</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement>> FIND_ELEMENTS_BY_TYPE_EXTENDED( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.FIND_ELEMENTS_BY_TYPE_EXTENDED( );
        }
        /**
         * Returns the descriptor for the <code>equalsStdLib</code> operation.
         * @return  the descriptor for the <code>equalsStdLib</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OclAnyStdLib,java.lang.Boolean> EQUALS_STD_LIB( ) {
            return org.omg.ocl.stdlibrary.OclAnyStdLib.DESCRIPTORS.EQUALS_STD_LIB( );
        }
        /**
         * Returns the descriptor for the <code>notEqualsStdLib</code> operation.
         * @return  the descriptor for the <code>notEqualsStdLib</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OclAnyStdLib,java.lang.Boolean> NOT_EQUALS_STD_LIB( ) {
            return org.omg.ocl.stdlibrary.OclAnyStdLib.DESCRIPTORS.NOT_EQUALS_STD_LIB( );
        }
        /**
         * Returns the descriptor for the <code>oclIsNew</code> operation.
         * @return  the descriptor for the <code>oclIsNew</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OclAnyStdLib,java.lang.Boolean> OCL_IS_NEW( ) {
            return org.omg.ocl.stdlibrary.OclAnyStdLib.DESCRIPTORS.OCL_IS_NEW( );
        }
        /**
         * Returns the descriptor for the <code>oclIsUndefined</code> operation.
         * @return  the descriptor for the <code>oclIsUndefined</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OclAnyStdLib,java.lang.Boolean> OCL_IS_UNDEFINED( ) {
            return org.omg.ocl.stdlibrary.OclAnyStdLib.DESCRIPTORS.OCL_IS_UNDEFINED( );
        }
        /**
         * Returns the descriptor for the <code>oclIsInvalid</code> operation.
         * @return  the descriptor for the <code>oclIsInvalid</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OclAnyStdLib,java.lang.Boolean> OCL_IS_INVALID( ) {
            return org.omg.ocl.stdlibrary.OclAnyStdLib.DESCRIPTORS.OCL_IS_INVALID( );
        }
        /**
         * Returns the descriptor for the <code>oclAsType</code> operation.
         * @return  the descriptor for the <code>oclAsType</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OclAnyStdLib,com.sap.tc.moin.repository.mmi.model.Classifier> OCL_AS_TYPE( ) {
            return org.omg.ocl.stdlibrary.OclAnyStdLib.DESCRIPTORS.OCL_AS_TYPE( );
        }
        /**
         * Returns the descriptor for the <code>oclIsTypeOf</code> operation.
         * @return  the descriptor for the <code>oclIsTypeOf</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OclAnyStdLib,java.lang.Boolean> OCL_IS_TYPE_OF( ) {
            return org.omg.ocl.stdlibrary.OclAnyStdLib.DESCRIPTORS.OCL_IS_TYPE_OF( );
        }
        /**
         * Returns the descriptor for the <code>oclIsKindOf</code> operation.
         * @return  the descriptor for the <code>oclIsKindOf</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OclAnyStdLib,java.lang.Boolean> OCL_IS_KIND_OF( ) {
            return org.omg.ocl.stdlibrary.OclAnyStdLib.DESCRIPTORS.OCL_IS_KIND_OF( );
        }
        /**
         * Returns the descriptor for the <code>asSet</code> operation.
         * @return  the descriptor for the <code>asSet</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OclAnyStdLib,org.omg.ocl.types.SetType> AS_SET( ) {
            return org.omg.ocl.stdlibrary.OclAnyStdLib.DESCRIPTORS.AS_SET( );
        }
        /**
         * Returns the descriptor for the <code>toString</code> operation.
         * @return  the descriptor for the <code>toString</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OclAnyStdLib,java.lang.String> TO_STRING( ) {
            return org.omg.ocl.stdlibrary.OclAnyStdLib.DESCRIPTORS.TO_STRING( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double> __plusStdLib;
        /**
         * Returns the descriptor for the <code>plusStdLib</code> operation.
         * @return  the descriptor for the <code>plusStdLib</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double> PLUS_STD_LIB( ) {
            if ( __plusStdLib == null ) {
                __plusStdLib = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double>( "45ED2E29CF19ECFF701449422682CA8602002448", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "DoubleStdLib", "plusStdLib" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __plusStdLib;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double> __minusStdLib;
        /**
         * Returns the descriptor for the <code>minusStdLib</code> operation.
         * @return  the descriptor for the <code>minusStdLib</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double> MINUS_STD_LIB( ) {
            if ( __minusStdLib == null ) {
                __minusStdLib = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double>( "45ED2E2A9076CEA26C064F2125D1EF97260E8F80", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "DoubleStdLib", "minusStdLib" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __minusStdLib;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double> __multStdLib;
        /**
         * Returns the descriptor for the <code>multStdLib</code> operation.
         * @return  the descriptor for the <code>multStdLib</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double> MULT_STD_LIB( ) {
            if ( __multStdLib == null ) {
                __multStdLib = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double>( "45ED2E2AE9D164DA9A204C993772809B890ADB12", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "DoubleStdLib", "multStdLib" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __multStdLib;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double> __divStdLib;
        /**
         * Returns the descriptor for the <code>divStdLib</code> operation.
         * @return  the descriptor for the <code>divStdLib</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double> DIV_STD_LIB( ) {
            if ( __divStdLib == null ) {
                __divStdLib = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double>( "45ED2E2AAD079153630A4B3638E2F0CA8492A905", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "DoubleStdLib", "divStdLib" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __divStdLib;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double> __abs;
        /**
         * Returns the descriptor for the <code>abs</code> operation.
         * @return  the descriptor for the <code>abs</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double> ABS( ) {
            if ( __abs == null ) {
                __abs = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double>( "45ED2E2AF3C907FA8D0F4C74150FEEED102B63FF", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "DoubleStdLib", "abs" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __abs;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Long> __floor;
        /**
         * Returns the descriptor for the <code>floor</code> operation.
         * @return  the descriptor for the <code>floor</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Long> FLOOR( ) {
            if ( __floor == null ) {
                __floor = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Long>( "45ED2E2A5DF7E376EBA24B1F122FA91B0D6D5084", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "DoubleStdLib", "floor" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __floor;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Long> __round;
        /**
         * Returns the descriptor for the <code>round</code> operation.
         * @return  the descriptor for the <code>round</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Long> ROUND( ) {
            if ( __round == null ) {
                __round = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Long>( "45ED2E2AB9203073F3AE40FB3094A61AD7C420AF", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "DoubleStdLib", "round" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __round;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double> __max;
        /**
         * Returns the descriptor for the <code>max</code> operation.
         * @return  the descriptor for the <code>max</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double> MAX( ) {
            if ( __max == null ) {
                __max = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double>( "45ED2E2AF9E3C4A6FCA8477912DEC81E148C155D", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "DoubleStdLib", "max" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __max;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double> __min;
        /**
         * Returns the descriptor for the <code>min</code> operation.
         * @return  the descriptor for the <code>min</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double> MIN( ) {
            if ( __min == null ) {
                __min = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double>( "45ED2E2AFB81CCDDDE684F2E324991736F076ACD", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "DoubleStdLib", "min" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __min;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Boolean> __ltStdLib;
        /**
         * Returns the descriptor for the <code>ltStdLib</code> operation.
         * @return  the descriptor for the <code>ltStdLib</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Boolean> LT_STD_LIB( ) {
            if ( __ltStdLib == null ) {
                __ltStdLib = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Boolean>( "45ED2E2AFE37A48A37134A6D3F3F80A08D6D42B0", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "DoubleStdLib", "ltStdLib" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __ltStdLib;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Boolean> __gtStdLib;
        /**
         * Returns the descriptor for the <code>gtStdLib</code> operation.
         * @return  the descriptor for the <code>gtStdLib</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Boolean> GT_STD_LIB( ) {
            if ( __gtStdLib == null ) {
                __gtStdLib = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Boolean>( "45ED2E2A5E507E81943C48200973CF283BEF7CCE", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "DoubleStdLib", "gtStdLib" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __gtStdLib;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Boolean> __lteqStdLib;
        /**
         * Returns the descriptor for the <code>lteqStdLib</code> operation.
         * @return  the descriptor for the <code>lteqStdLib</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Boolean> LTEQ_STD_LIB( ) {
            if ( __lteqStdLib == null ) {
                __lteqStdLib = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Boolean>( "45ED2E2AF85CC2CD56BC412E0E2CE4D5A0CBA160", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "DoubleStdLib", "lteqStdLib" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __lteqStdLib;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Boolean> __gteqStdLib;
        /**
         * Returns the descriptor for the <code>gteqStdLib</code> operation.
         * @return  the descriptor for the <code>gteqStdLib</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Boolean> GTEQ_STD_LIB( ) {
            if ( __gteqStdLib == null ) {
                __gteqStdLib = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Boolean>( "45ED2E2ADDB0D1C73953400C3CF2DF3D8EFE0B5A", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "DoubleStdLib", "gteqStdLib" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __gteqStdLib;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double> __negStdLib;
        /**
         * Returns the descriptor for the <code>negStdLib</code> operation.
         * @return  the descriptor for the <code>negStdLib</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double> NEG_STD_LIB( ) {
            if ( __negStdLib == null ) {
                __negStdLib = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.DoubleStdLib,java.lang.Double>( "45ED2E2A094C7031E69743311751B0107496C745", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "DoubleStdLib", "negStdLib" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __negStdLib;
        }
    }
}    