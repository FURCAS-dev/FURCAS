/**
 * Generated by the MOIN Generator Version 3.0
 **/

package org.omg.ocl.stdlibrary;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface OrderedSetTypeStdLib extends org.omg.ocl.stdlibrary.CollectionTypeStdLib {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, org.omg.ocl.stdlibrary.OrderedSetTypeStdLib> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, org.omg.ocl.stdlibrary.OrderedSetTypeStdLib>("45ED2E290E6B723558384B7209B4C045EF349EE6", "sap.com/tc/moin/mof_1.4", "OCL", "StdLibrary", "OrderedSetTypeStdLib"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // operations
    public org.omg.ocl.types.OrderedSetType append(com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public org.omg.ocl.types.OrderedSetType prepend(com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public org.omg.ocl.types.OrderedSetType insertAt(int index, com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public org.omg.ocl.types.OrderedSetType subOrderedSet(int lower, int upper) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.tc.moin.repository.mmi.model.Classifier at(int i) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public int indexOf(com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.tc.moin.repository.mmi.model.Classifier first() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.tc.moin.repository.mmi.model.Classifier last() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean equalsStdLib(org.omg.ocl.types.OrderedSetType o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.String> NAME( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>annotation</code> attribute.
         * @return  the descriptor for the <code>annotation</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.String> ANNOTATION( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.ANNOTATION( );
        }
        /**
         * Returns the descriptor for the <code>isRoot</code> attribute.
         * @return  the descriptor for the <code>isRoot</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.lang.Boolean> IS_ROOT( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.IS_ROOT( );
        }
        /**
         * Returns the descriptor for the <code>isLeaf</code> attribute.
         * @return  the descriptor for the <code>isLeaf</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.lang.Boolean> IS_LEAF( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.IS_LEAF( );
        }
        /**
         * Returns the descriptor for the <code>isAbstract</code> attribute.
         * @return  the descriptor for the <code>isAbstract</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.lang.Boolean> IS_ABSTRACT( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.IS_ABSTRACT( );
        }
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,com.sap.tc.moin.repository.mmi.model.VisibilityKind> VISIBILITY( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.VISIBILITY( );
        }
        /**
         * Returns the descriptor for the <code>requiredElements</code> reference.
         * @return  the descriptor for the <code>requiredElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.ModelElement,java.util.Collection<com.sap.tc.moin.repository.mmi.model.ModelElement>> REQUIRED_ELEMENTS( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.REQUIRED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>container</code> reference.
         * @return  the descriptor for the <code>container</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.ModelElement,com.sap.tc.moin.repository.mmi.model.Namespace> CONTAINER( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.CONTAINER( );
        }
        /**
         * Returns the descriptor for the <code>constraints</code> reference.
         * @return  the descriptor for the <code>constraints</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.ModelElement,java.util.Collection<com.sap.tc.moin.repository.mmi.model.Constraint>> CONSTRAINTS( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.CONSTRAINTS( );
        }
        /**
         * Returns the descriptor for the <code>contents</code> reference.
         * @return  the descriptor for the <code>contents</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.Namespace,java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement>> CONTENTS( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.CONTENTS( );
        }
        /**
         * Returns the descriptor for the <code>supertypes</code> reference.
         * @return  the descriptor for the <code>supertypes</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.util.List<com.sap.tc.moin.repository.mmi.model.GeneralizableElement>> SUPERTYPES( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.SUPERTYPES( );
        }
        /**
         * Returns the descriptor for the <code>findRequiredElements</code> operation.
         * @return  the descriptor for the <code>findRequiredElements</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.util.Collection<com.sap.tc.moin.repository.mmi.model.ModelElement>> FIND_REQUIRED_ELEMENTS( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.FIND_REQUIRED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>isRequiredBecause</code> operation.
         * @return  the descriptor for the <code>isRequiredBecause</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.Boolean> IS_REQUIRED_BECAUSE( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.IS_REQUIRED_BECAUSE( );
        }
        /**
         * Returns the descriptor for the <code>isFrozen</code> operation.
         * @return  the descriptor for the <code>isFrozen</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.Boolean> IS_FROZEN( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.IS_FROZEN( );
        }
        /**
         * Returns the descriptor for the <code>isVisible</code> operation.
         * @return  the descriptor for the <code>isVisible</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.Boolean> IS_VISIBLE( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.IS_VISIBLE( );
        }
        /**
         * Returns the descriptor for the <code>lookupElement</code> operation.
         * @return  the descriptor for the <code>lookupElement</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.Namespace,com.sap.tc.moin.repository.mmi.model.ModelElement> LOOKUP_ELEMENT( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.LOOKUP_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>resolveQualifiedName</code> operation.
         * @return  the descriptor for the <code>resolveQualifiedName</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.Namespace,com.sap.tc.moin.repository.mmi.model.ModelElement> RESOLVE_QUALIFIED_NAME( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.RESOLVE_QUALIFIED_NAME( );
        }
        /**
         * Returns the descriptor for the <code>findElementsByType</code> operation.
         * @return  the descriptor for the <code>findElementsByType</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.Namespace,java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement>> FIND_ELEMENTS_BY_TYPE( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.FIND_ELEMENTS_BY_TYPE( );
        }
        /**
         * Returns the descriptor for the <code>nameIsValid</code> operation.
         * @return  the descriptor for the <code>nameIsValid</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.Namespace,java.lang.Boolean> NAME_IS_VALID( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.NAME_IS_VALID( );
        }
        /**
         * Returns the descriptor for the <code>allSupertypes</code> operation.
         * @return  the descriptor for the <code>allSupertypes</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.util.List<com.sap.tc.moin.repository.mmi.model.GeneralizableElement>> ALL_SUPERTYPES( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.ALL_SUPERTYPES( );
        }
        /**
         * Returns the descriptor for the <code>lookupElementExtended</code> operation.
         * @return  the descriptor for the <code>lookupElementExtended</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,com.sap.tc.moin.repository.mmi.model.ModelElement> LOOKUP_ELEMENT_EXTENDED( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.LOOKUP_ELEMENT_EXTENDED( );
        }
        /**
         * Returns the descriptor for the <code>findElementsByTypeExtended</code> operation.
         * @return  the descriptor for the <code>findElementsByTypeExtended</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement>> FIND_ELEMENTS_BY_TYPE_EXTENDED( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.FIND_ELEMENTS_BY_TYPE_EXTENDED( );
        }
        /**
         * Returns the descriptor for the <code>size</code> operation.
         * @return  the descriptor for the <code>size</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Integer> SIZE( ) {
            return org.omg.ocl.stdlibrary.CollectionTypeStdLib.DESCRIPTORS.SIZE( );
        }
        /**
         * Returns the descriptor for the <code>includes</code> operation.
         * @return  the descriptor for the <code>includes</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> INCLUDES( ) {
            return org.omg.ocl.stdlibrary.CollectionTypeStdLib.DESCRIPTORS.INCLUDES( );
        }
        /**
         * Returns the descriptor for the <code>excludes</code> operation.
         * @return  the descriptor for the <code>excludes</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> EXCLUDES( ) {
            return org.omg.ocl.stdlibrary.CollectionTypeStdLib.DESCRIPTORS.EXCLUDES( );
        }
        /**
         * Returns the descriptor for the <code>count</code> operation.
         * @return  the descriptor for the <code>count</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Integer> COUNT( ) {
            return org.omg.ocl.stdlibrary.CollectionTypeStdLib.DESCRIPTORS.COUNT( );
        }
        /**
         * Returns the descriptor for the <code>includesAll</code> operation.
         * @return  the descriptor for the <code>includesAll</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> INCLUDES_ALL( ) {
            return org.omg.ocl.stdlibrary.CollectionTypeStdLib.DESCRIPTORS.INCLUDES_ALL( );
        }
        /**
         * Returns the descriptor for the <code>excludesAll</code> operation.
         * @return  the descriptor for the <code>excludesAll</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> EXCLUDES_ALL( ) {
            return org.omg.ocl.stdlibrary.CollectionTypeStdLib.DESCRIPTORS.EXCLUDES_ALL( );
        }
        /**
         * Returns the descriptor for the <code>isEmpty</code> operation.
         * @return  the descriptor for the <code>isEmpty</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> IS_EMPTY( ) {
            return org.omg.ocl.stdlibrary.CollectionTypeStdLib.DESCRIPTORS.IS_EMPTY( );
        }
        /**
         * Returns the descriptor for the <code>notEmpty</code> operation.
         * @return  the descriptor for the <code>notEmpty</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> NOT_EMPTY( ) {
            return org.omg.ocl.stdlibrary.CollectionTypeStdLib.DESCRIPTORS.NOT_EMPTY( );
        }
        /**
         * Returns the descriptor for the <code>sum</code> operation.
         * @return  the descriptor for the <code>sum</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,com.sap.tc.moin.repository.mmi.model.Classifier> SUM( ) {
            return org.omg.ocl.stdlibrary.CollectionTypeStdLib.DESCRIPTORS.SUM( );
        }
        /**
         * Returns the descriptor for the <code>product</code> operation.
         * @return  the descriptor for the <code>product</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.SetType> PRODUCT( ) {
            return org.omg.ocl.stdlibrary.CollectionTypeStdLib.DESCRIPTORS.PRODUCT( );
        }
        /**
         * Returns the descriptor for the <code>asSet</code> operation.
         * @return  the descriptor for the <code>asSet</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.SetType> AS_SET( ) {
            return org.omg.ocl.stdlibrary.CollectionTypeStdLib.DESCRIPTORS.AS_SET( );
        }
        /**
         * Returns the descriptor for the <code>asBag</code> operation.
         * @return  the descriptor for the <code>asBag</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.BagType> AS_BAG( ) {
            return org.omg.ocl.stdlibrary.CollectionTypeStdLib.DESCRIPTORS.AS_BAG( );
        }
        /**
         * Returns the descriptor for the <code>asOrderedSet</code> operation.
         * @return  the descriptor for the <code>asOrderedSet</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.OrderedSetType> AS_ORDERED_SET( ) {
            return org.omg.ocl.stdlibrary.CollectionTypeStdLib.DESCRIPTORS.AS_ORDERED_SET( );
        }
        /**
         * Returns the descriptor for the <code>asSequence</code> operation.
         * @return  the descriptor for the <code>asSequence</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.SequenceType> AS_SEQUENCE( ) {
            return org.omg.ocl.stdlibrary.CollectionTypeStdLib.DESCRIPTORS.AS_SEQUENCE( );
        }
        /**
         * Returns the descriptor for the <code>oclIsUndefined</code> operation.
         * @return  the descriptor for the <code>oclIsUndefined</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> OCL_IS_UNDEFINED( ) {
            return org.omg.ocl.stdlibrary.CollectionTypeStdLib.DESCRIPTORS.OCL_IS_UNDEFINED( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,org.omg.ocl.types.OrderedSetType> __append;
        /**
         * Returns the descriptor for the <code>append</code> operation.
         * @return  the descriptor for the <code>append</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,org.omg.ocl.types.OrderedSetType> APPEND( ) {
            if ( __append == null ) {
                __append = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,org.omg.ocl.types.OrderedSetType>( "45ED2E2986D411619FAA4AC01518F21E604B7914", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "OrderedSetTypeStdLib", "append" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __append;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,org.omg.ocl.types.OrderedSetType> __prepend;
        /**
         * Returns the descriptor for the <code>prepend</code> operation.
         * @return  the descriptor for the <code>prepend</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,org.omg.ocl.types.OrderedSetType> PREPEND( ) {
            if ( __prepend == null ) {
                __prepend = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,org.omg.ocl.types.OrderedSetType>( "45ED2E296E79DE1E02D74039138AEDE45B6CE247", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "OrderedSetTypeStdLib", "prepend" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __prepend;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,org.omg.ocl.types.OrderedSetType> __insertAt;
        /**
         * Returns the descriptor for the <code>insertAt</code> operation.
         * @return  the descriptor for the <code>insertAt</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,org.omg.ocl.types.OrderedSetType> INSERT_AT( ) {
            if ( __insertAt == null ) {
                __insertAt = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,org.omg.ocl.types.OrderedSetType>( "45ED2E296F734C71AD7C49340BDDADB3A2D3C670", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "OrderedSetTypeStdLib", "insertAt" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __insertAt;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,org.omg.ocl.types.OrderedSetType> __subOrderedSet;
        /**
         * Returns the descriptor for the <code>subOrderedSet</code> operation.
         * @return  the descriptor for the <code>subOrderedSet</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,org.omg.ocl.types.OrderedSetType> SUB_ORDERED_SET( ) {
            if ( __subOrderedSet == null ) {
                __subOrderedSet = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,org.omg.ocl.types.OrderedSetType>( "45ED2E29EB6AA7B00EFF47072D87AA81DABC0478", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "OrderedSetTypeStdLib", "subOrderedSet" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __subOrderedSet;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,com.sap.tc.moin.repository.mmi.model.Classifier> __at;
        /**
         * Returns the descriptor for the <code>at</code> operation.
         * @return  the descriptor for the <code>at</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,com.sap.tc.moin.repository.mmi.model.Classifier> AT( ) {
            if ( __at == null ) {
                __at = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,com.sap.tc.moin.repository.mmi.model.Classifier>( "45ED2E29DC7FA207612E4920142FCEF019265D4F", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "OrderedSetTypeStdLib", "at" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __at;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,java.lang.Integer> __indexOf;
        /**
         * Returns the descriptor for the <code>indexOf</code> operation.
         * @return  the descriptor for the <code>indexOf</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,java.lang.Integer> INDEX_OF( ) {
            if ( __indexOf == null ) {
                __indexOf = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,java.lang.Integer>( "45ED2E29EAB48D05F9034707224EB8E582FBD3CD", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "OrderedSetTypeStdLib", "indexOf" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __indexOf;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,com.sap.tc.moin.repository.mmi.model.Classifier> __first;
        /**
         * Returns the descriptor for the <code>first</code> operation.
         * @return  the descriptor for the <code>first</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,com.sap.tc.moin.repository.mmi.model.Classifier> FIRST( ) {
            if ( __first == null ) {
                __first = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,com.sap.tc.moin.repository.mmi.model.Classifier>( "45ED2E2902A735586F3548F8057C9565451FAB95", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "OrderedSetTypeStdLib", "first" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __first;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,com.sap.tc.moin.repository.mmi.model.Classifier> __last;
        /**
         * Returns the descriptor for the <code>last</code> operation.
         * @return  the descriptor for the <code>last</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,com.sap.tc.moin.repository.mmi.model.Classifier> LAST( ) {
            if ( __last == null ) {
                __last = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,com.sap.tc.moin.repository.mmi.model.Classifier>( "45ED2E29EEE0677D4C4A49F40491B5D729F94D77", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "OrderedSetTypeStdLib", "last" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __last;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,java.lang.Boolean> __equalsStdLib;
        /**
         * Returns the descriptor for the <code>equalsStdLib</code> operation.
         * @return  the descriptor for the <code>equalsStdLib</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,java.lang.Boolean> EQUALS_STD_LIB( ) {
            if ( __equalsStdLib == null ) {
                __equalsStdLib = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.OrderedSetTypeStdLib,java.lang.Boolean>( "45ED2E2993D699203EDF4D261C7CEC50D9748B7A", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "OrderedSetTypeStdLib", "equalsStdLib" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __equalsStdLib;
        }
    }
}    