/**
 * Generated by the MOIN Generator Version 3.0
 **/

package org.omg.ocl.stdlibrary;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface CollectionTypeStdLib extends com.sap.tc.moin.repository.mmi.model.Classifier {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, org.omg.ocl.stdlibrary.CollectionTypeStdLib> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, org.omg.ocl.stdlibrary.CollectionTypeStdLib>("45ED2E29AA6650B52A0A4C141ACE8E378EC5E936", "sap.com/tc/moin/mof_1.4", "OCL", "StdLibrary", "CollectionTypeStdLib"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // operations
    public int size() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean includes(com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean excludes(com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public int count(com.sap.tc.moin.repository.mmi.model.Classifier o) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean includesAll(org.omg.ocl.types.CollectionType c) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean excludesAll(org.omg.ocl.types.CollectionType c) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isEmpty() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean notEmpty() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.tc.moin.repository.mmi.model.Classifier sum() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public org.omg.ocl.types.SetType product(org.omg.ocl.types.CollectionType c) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public org.omg.ocl.types.SetType asSet() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public org.omg.ocl.types.BagType asBag() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public org.omg.ocl.types.OrderedSetType asOrderedSet() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public org.omg.ocl.types.SequenceType asSequence() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean oclIsUndefined() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.String> NAME( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>annotation</code> attribute.
         * @return  the descriptor for the <code>annotation</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.String> ANNOTATION( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.ANNOTATION( );
        }
        /**
         * Returns the descriptor for the <code>isRoot</code> attribute.
         * @return  the descriptor for the <code>isRoot</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.lang.Boolean> IS_ROOT( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.IS_ROOT( );
        }
        /**
         * Returns the descriptor for the <code>isLeaf</code> attribute.
         * @return  the descriptor for the <code>isLeaf</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.lang.Boolean> IS_LEAF( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.IS_LEAF( );
        }
        /**
         * Returns the descriptor for the <code>isAbstract</code> attribute.
         * @return  the descriptor for the <code>isAbstract</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.lang.Boolean> IS_ABSTRACT( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.IS_ABSTRACT( );
        }
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,com.sap.tc.moin.repository.mmi.model.VisibilityKind> VISIBILITY( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.VISIBILITY( );
        }
        /**
         * Returns the descriptor for the <code>requiredElements</code> reference.
         * @return  the descriptor for the <code>requiredElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.ModelElement,java.util.Collection<com.sap.tc.moin.repository.mmi.model.ModelElement>> REQUIRED_ELEMENTS( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.REQUIRED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>container</code> reference.
         * @return  the descriptor for the <code>container</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.ModelElement,com.sap.tc.moin.repository.mmi.model.Namespace> CONTAINER( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.CONTAINER( );
        }
        /**
         * Returns the descriptor for the <code>constraints</code> reference.
         * @return  the descriptor for the <code>constraints</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.ModelElement,java.util.Collection<com.sap.tc.moin.repository.mmi.model.Constraint>> CONSTRAINTS( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.CONSTRAINTS( );
        }
        /**
         * Returns the descriptor for the <code>contents</code> reference.
         * @return  the descriptor for the <code>contents</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.Namespace,java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement>> CONTENTS( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.CONTENTS( );
        }
        /**
         * Returns the descriptor for the <code>supertypes</code> reference.
         * @return  the descriptor for the <code>supertypes</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.util.List<com.sap.tc.moin.repository.mmi.model.GeneralizableElement>> SUPERTYPES( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.SUPERTYPES( );
        }
        /**
         * Returns the descriptor for the <code>findRequiredElements</code> operation.
         * @return  the descriptor for the <code>findRequiredElements</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.util.Collection<com.sap.tc.moin.repository.mmi.model.ModelElement>> FIND_REQUIRED_ELEMENTS( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.FIND_REQUIRED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>isRequiredBecause</code> operation.
         * @return  the descriptor for the <code>isRequiredBecause</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.Boolean> IS_REQUIRED_BECAUSE( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.IS_REQUIRED_BECAUSE( );
        }
        /**
         * Returns the descriptor for the <code>isFrozen</code> operation.
         * @return  the descriptor for the <code>isFrozen</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.Boolean> IS_FROZEN( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.IS_FROZEN( );
        }
        /**
         * Returns the descriptor for the <code>isVisible</code> operation.
         * @return  the descriptor for the <code>isVisible</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.Boolean> IS_VISIBLE( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.IS_VISIBLE( );
        }
        /**
         * Returns the descriptor for the <code>lookupElement</code> operation.
         * @return  the descriptor for the <code>lookupElement</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.Namespace,com.sap.tc.moin.repository.mmi.model.ModelElement> LOOKUP_ELEMENT( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.LOOKUP_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>resolveQualifiedName</code> operation.
         * @return  the descriptor for the <code>resolveQualifiedName</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.Namespace,com.sap.tc.moin.repository.mmi.model.ModelElement> RESOLVE_QUALIFIED_NAME( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.RESOLVE_QUALIFIED_NAME( );
        }
        /**
         * Returns the descriptor for the <code>findElementsByType</code> operation.
         * @return  the descriptor for the <code>findElementsByType</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.Namespace,java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement>> FIND_ELEMENTS_BY_TYPE( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.FIND_ELEMENTS_BY_TYPE( );
        }
        /**
         * Returns the descriptor for the <code>nameIsValid</code> operation.
         * @return  the descriptor for the <code>nameIsValid</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.Namespace,java.lang.Boolean> NAME_IS_VALID( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.NAME_IS_VALID( );
        }
        /**
         * Returns the descriptor for the <code>allSupertypes</code> operation.
         * @return  the descriptor for the <code>allSupertypes</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.util.List<com.sap.tc.moin.repository.mmi.model.GeneralizableElement>> ALL_SUPERTYPES( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.ALL_SUPERTYPES( );
        }
        /**
         * Returns the descriptor for the <code>lookupElementExtended</code> operation.
         * @return  the descriptor for the <code>lookupElementExtended</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,com.sap.tc.moin.repository.mmi.model.ModelElement> LOOKUP_ELEMENT_EXTENDED( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.LOOKUP_ELEMENT_EXTENDED( );
        }
        /**
         * Returns the descriptor for the <code>findElementsByTypeExtended</code> operation.
         * @return  the descriptor for the <code>findElementsByTypeExtended</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.GeneralizableElement,java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement>> FIND_ELEMENTS_BY_TYPE_EXTENDED( ) {
            return com.sap.tc.moin.repository.mmi.model.GeneralizableElement.DESCRIPTORS.FIND_ELEMENTS_BY_TYPE_EXTENDED( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Integer> __size;
        /**
         * Returns the descriptor for the <code>size</code> operation.
         * @return  the descriptor for the <code>size</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Integer> SIZE( ) {
            if ( __size == null ) {
                __size = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Integer>( "45ED2E29476D781CFD5A4577395DDA35929AEC83", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "CollectionTypeStdLib", "size" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __size;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> __includes;
        /**
         * Returns the descriptor for the <code>includes</code> operation.
         * @return  the descriptor for the <code>includes</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> INCLUDES( ) {
            if ( __includes == null ) {
                __includes = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean>( "45ED2E29F5342F8C96B0490A3CA5E629B012DB21", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "CollectionTypeStdLib", "includes" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __includes;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> __excludes;
        /**
         * Returns the descriptor for the <code>excludes</code> operation.
         * @return  the descriptor for the <code>excludes</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> EXCLUDES( ) {
            if ( __excludes == null ) {
                __excludes = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean>( "45ED2E29F77E2221DEB849E4111B8A530857572C", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "CollectionTypeStdLib", "excludes" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __excludes;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Integer> __count;
        /**
         * Returns the descriptor for the <code>count</code> operation.
         * @return  the descriptor for the <code>count</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Integer> COUNT( ) {
            if ( __count == null ) {
                __count = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Integer>( "45ED2E29C7F6E1AABA334E153C51C9F9F3675D17", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "CollectionTypeStdLib", "count" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __count;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> __includesAll;
        /**
         * Returns the descriptor for the <code>includesAll</code> operation.
         * @return  the descriptor for the <code>includesAll</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> INCLUDES_ALL( ) {
            if ( __includesAll == null ) {
                __includesAll = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean>( "45ED2E29216C78D5766E43C11F77E5CBB49A849E", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "CollectionTypeStdLib", "includesAll" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __includesAll;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> __excludesAll;
        /**
         * Returns the descriptor for the <code>excludesAll</code> operation.
         * @return  the descriptor for the <code>excludesAll</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> EXCLUDES_ALL( ) {
            if ( __excludesAll == null ) {
                __excludesAll = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean>( "45ED2E29341CF1A42F4946681AF287A60C56666B", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "CollectionTypeStdLib", "excludesAll" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __excludesAll;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> __isEmpty;
        /**
         * Returns the descriptor for the <code>isEmpty</code> operation.
         * @return  the descriptor for the <code>isEmpty</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> IS_EMPTY( ) {
            if ( __isEmpty == null ) {
                __isEmpty = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean>( "45ED2E29EBBCBF9D847F48CA35129E7479106AF2", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "CollectionTypeStdLib", "isEmpty" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __isEmpty;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> __notEmpty;
        /**
         * Returns the descriptor for the <code>notEmpty</code> operation.
         * @return  the descriptor for the <code>notEmpty</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> NOT_EMPTY( ) {
            if ( __notEmpty == null ) {
                __notEmpty = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean>( "45ED2E29A0757964E6B9452A26E89E3B3E92B04D", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "CollectionTypeStdLib", "notEmpty" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __notEmpty;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,com.sap.tc.moin.repository.mmi.model.Classifier> __sum;
        /**
         * Returns the descriptor for the <code>sum</code> operation.
         * @return  the descriptor for the <code>sum</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,com.sap.tc.moin.repository.mmi.model.Classifier> SUM( ) {
            if ( __sum == null ) {
                __sum = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,com.sap.tc.moin.repository.mmi.model.Classifier>( "45ED2E29325DD3A453D840E636B4FFD74D1AE452", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "CollectionTypeStdLib", "sum" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __sum;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.SetType> __product;
        /**
         * Returns the descriptor for the <code>product</code> operation.
         * @return  the descriptor for the <code>product</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.SetType> PRODUCT( ) {
            if ( __product == null ) {
                __product = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.SetType>( "45ED2E29BC67A06B565B49A32F43D475BE46D9E8", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "CollectionTypeStdLib", "product" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __product;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.SetType> __asSet;
        /**
         * Returns the descriptor for the <code>asSet</code> operation.
         * @return  the descriptor for the <code>asSet</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.SetType> AS_SET( ) {
            if ( __asSet == null ) {
                __asSet = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.SetType>( "45ED2E29C3699CB5A45244F71DD1AF439C99E317", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "CollectionTypeStdLib", "asSet" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __asSet;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.BagType> __asBag;
        /**
         * Returns the descriptor for the <code>asBag</code> operation.
         * @return  the descriptor for the <code>asBag</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.BagType> AS_BAG( ) {
            if ( __asBag == null ) {
                __asBag = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.BagType>( "45ED2E291E9A7E20670D40453A3897E40656A6BF", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "CollectionTypeStdLib", "asBag" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __asBag;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.OrderedSetType> __asOrderedSet;
        /**
         * Returns the descriptor for the <code>asOrderedSet</code> operation.
         * @return  the descriptor for the <code>asOrderedSet</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.OrderedSetType> AS_ORDERED_SET( ) {
            if ( __asOrderedSet == null ) {
                __asOrderedSet = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.OrderedSetType>( "45ED2E299835124105F84DBD0042D05CDEA3E56F", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "CollectionTypeStdLib", "asOrderedSet" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __asOrderedSet;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.SequenceType> __asSequence;
        /**
         * Returns the descriptor for the <code>asSequence</code> operation.
         * @return  the descriptor for the <code>asSequence</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.SequenceType> AS_SEQUENCE( ) {
            if ( __asSequence == null ) {
                __asSequence = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,org.omg.ocl.types.SequenceType>( "45ED2E299283FF8A2CDC454536E7C401B320D19A", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "CollectionTypeStdLib", "asSequence" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __asSequence;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> __oclIsUndefined;
        /**
         * Returns the descriptor for the <code>oclIsUndefined</code> operation.
         * @return  the descriptor for the <code>oclIsUndefined</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean> OCL_IS_UNDEFINED( ) {
            if ( __oclIsUndefined == null ) {
                __oclIsUndefined = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,org.omg.ocl.stdlibrary.CollectionTypeStdLib,java.lang.Boolean>( "45ED2E29217220009B5A4A490F97C099EB0A39E0", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "OCL", "StdLibrary", "CollectionTypeStdLib", "oclIsUndefined" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __oclIsUndefined;
        }
    }
}    