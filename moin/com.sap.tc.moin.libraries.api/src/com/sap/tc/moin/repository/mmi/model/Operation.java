/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.repository.mmi.model;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface Operation extends com.sap.tc.moin.repository.mmi.model.BehavioralFeature {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.tc.moin.repository.mmi.model.Operation> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.tc.moin.repository.mmi.model.Operation>("45ED2E2948001DB42F8D441738FBAFABABE65AA3", "sap.com/tc/moin/mof_1.4", "Model", "Operation"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public boolean isQuery() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setQuery(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public java.util.List<com.sap.tc.moin.repository.mmi.model.MofException> getExceptions() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.String> NAME( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>annotation</code> attribute.
         * @return  the descriptor for the <code>annotation</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.String> ANNOTATION( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.ANNOTATION( );
        }
        /**
         * Returns the descriptor for the <code>scope</code> attribute.
         * @return  the descriptor for the <code>scope</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.Feature,com.sap.tc.moin.repository.mmi.model.ScopeKind> SCOPE( ) {
            return com.sap.tc.moin.repository.mmi.model.Feature.DESCRIPTORS.SCOPE( );
        }
        /**
         * Returns the descriptor for the <code>visibility</code> attribute.
         * @return  the descriptor for the <code>visibility</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.Feature,com.sap.tc.moin.repository.mmi.model.VisibilityKind> VISIBILITY( ) {
            return com.sap.tc.moin.repository.mmi.model.Feature.DESCRIPTORS.VISIBILITY( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.Operation,java.lang.Boolean> __isQuery;
        /**
         * Returns the descriptor for the <code>isQuery</code> attribute.
         * @return  the descriptor for the <code>isQuery</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.Operation,java.lang.Boolean> IS_QUERY( ) {
            if ( __isQuery == null ) {
                __isQuery = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.Operation,java.lang.Boolean>( "45ED2E295E819AD910324A1B28F8C8B948773E83", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "Model", "Operation", "isQuery" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isQuery;
        }
        /**
         * Returns the descriptor for the <code>requiredElements</code> reference.
         * @return  the descriptor for the <code>requiredElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.ModelElement,java.util.Collection<com.sap.tc.moin.repository.mmi.model.ModelElement>> REQUIRED_ELEMENTS( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.REQUIRED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>container</code> reference.
         * @return  the descriptor for the <code>container</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.ModelElement,com.sap.tc.moin.repository.mmi.model.Namespace> CONTAINER( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.CONTAINER( );
        }
        /**
         * Returns the descriptor for the <code>constraints</code> reference.
         * @return  the descriptor for the <code>constraints</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.ModelElement,java.util.Collection<com.sap.tc.moin.repository.mmi.model.Constraint>> CONSTRAINTS( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.CONSTRAINTS( );
        }
        /**
         * Returns the descriptor for the <code>contents</code> reference.
         * @return  the descriptor for the <code>contents</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.Namespace,java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement>> CONTENTS( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.CONTENTS( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.Operation,java.util.List<com.sap.tc.moin.repository.mmi.model.MofException>> __exceptions;
        /**
         * Returns the descriptor for the <code>exceptions</code> reference.
         * @return  the descriptor for the <code>exceptions</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.Operation,java.util.List<com.sap.tc.moin.repository.mmi.model.MofException>> EXCEPTIONS( ) {
            if ( __exceptions == null ) {
                __exceptions = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.Operation,java.util.List<com.sap.tc.moin.repository.mmi.model.MofException>>( "45ED2E291D23302D4F18464E1CE08D4D8751E91E", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "Model", "Operation", "exceptions" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __exceptions;
        }
        /**
         * Returns the descriptor for the <code>findRequiredElements</code> operation.
         * @return  the descriptor for the <code>findRequiredElements</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.util.Collection<com.sap.tc.moin.repository.mmi.model.ModelElement>> FIND_REQUIRED_ELEMENTS( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.FIND_REQUIRED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>isRequiredBecause</code> operation.
         * @return  the descriptor for the <code>isRequiredBecause</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.Boolean> IS_REQUIRED_BECAUSE( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.IS_REQUIRED_BECAUSE( );
        }
        /**
         * Returns the descriptor for the <code>isFrozen</code> operation.
         * @return  the descriptor for the <code>isFrozen</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.Boolean> IS_FROZEN( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.IS_FROZEN( );
        }
        /**
         * Returns the descriptor for the <code>isVisible</code> operation.
         * @return  the descriptor for the <code>isVisible</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.Boolean> IS_VISIBLE( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.IS_VISIBLE( );
        }
        /**
         * Returns the descriptor for the <code>lookupElement</code> operation.
         * @return  the descriptor for the <code>lookupElement</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.Namespace,com.sap.tc.moin.repository.mmi.model.ModelElement> LOOKUP_ELEMENT( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.LOOKUP_ELEMENT( );
        }
        /**
         * Returns the descriptor for the <code>resolveQualifiedName</code> operation.
         * @return  the descriptor for the <code>resolveQualifiedName</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.Namespace,com.sap.tc.moin.repository.mmi.model.ModelElement> RESOLVE_QUALIFIED_NAME( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.RESOLVE_QUALIFIED_NAME( );
        }
        /**
         * Returns the descriptor for the <code>findElementsByType</code> operation.
         * @return  the descriptor for the <code>findElementsByType</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.Namespace,java.util.List<com.sap.tc.moin.repository.mmi.model.ModelElement>> FIND_ELEMENTS_BY_TYPE( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.FIND_ELEMENTS_BY_TYPE( );
        }
        /**
         * Returns the descriptor for the <code>nameIsValid</code> operation.
         * @return  the descriptor for the <code>nameIsValid</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.Namespace,java.lang.Boolean> NAME_IS_VALID( ) {
            return com.sap.tc.moin.repository.mmi.model.Namespace.DESCRIPTORS.NAME_IS_VALID( );
        }
    }
}    