/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.repository.mmi.model;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface AssociationEnd extends com.sap.tc.moin.repository.mmi.model.TypedElement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.tc.moin.repository.mmi.model.AssociationEnd> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.tc.moin.repository.mmi.model.AssociationEnd>("45ED2E294D5F42A5B94C462B13F4F76DE1C16DBF", "sap.com/tc/moin/mof_1.4", "Model", "AssociationEnd"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public boolean isNavigable() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setNavigable(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.tc.moin.repository.mmi.model.AggregationKind getAggregation() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAggregation(com.sap.tc.moin.repository.mmi.model.AggregationKind newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.tc.moin.repository.mmi.model.MultiplicityType getMultiplicity() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setMultiplicity(com.sap.tc.moin.repository.mmi.model.MultiplicityType newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isChangeable() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setChangeable(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // operations
    public com.sap.tc.moin.repository.mmi.model.AssociationEnd otherEnd() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.String> NAME( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>annotation</code> attribute.
         * @return  the descriptor for the <code>annotation</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.String> ANNOTATION( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.ANNOTATION( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.AssociationEnd,java.lang.Boolean> __isNavigable;
        /**
         * Returns the descriptor for the <code>isNavigable</code> attribute.
         * @return  the descriptor for the <code>isNavigable</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.AssociationEnd,java.lang.Boolean> IS_NAVIGABLE( ) {
            if ( __isNavigable == null ) {
                __isNavigable = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.AssociationEnd,java.lang.Boolean>( "45ED2E29DEB728FBFC09406B1CA0A152AAF61C1F", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "Model", "AssociationEnd", "isNavigable" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isNavigable;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.AssociationEnd,com.sap.tc.moin.repository.mmi.model.AggregationKind> __aggregation;
        /**
         * Returns the descriptor for the <code>aggregation</code> attribute.
         * @return  the descriptor for the <code>aggregation</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.AssociationEnd,com.sap.tc.moin.repository.mmi.model.AggregationKind> AGGREGATION( ) {
            if ( __aggregation == null ) {
                __aggregation = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.AssociationEnd,com.sap.tc.moin.repository.mmi.model.AggregationKind>( "45ED2E29D4BDB3F99EF347B83042FF66295F4122", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "Model", "AssociationEnd", "aggregation" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __aggregation;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.AssociationEnd,com.sap.tc.moin.repository.mmi.model.MultiplicityType> __multiplicity;
        /**
         * Returns the descriptor for the <code>multiplicity</code> attribute.
         * @return  the descriptor for the <code>multiplicity</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.AssociationEnd,com.sap.tc.moin.repository.mmi.model.MultiplicityType> MULTIPLICITY( ) {
            if ( __multiplicity == null ) {
                __multiplicity = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.AssociationEnd,com.sap.tc.moin.repository.mmi.model.MultiplicityType>( "45ED2E29C7FBD27A2BCB41EE3695E4606F8C01E9", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "Model", "AssociationEnd", "multiplicity" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __multiplicity;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.AssociationEnd,java.lang.Boolean> __isChangeable;
        /**
         * Returns the descriptor for the <code>isChangeable</code> attribute.
         * @return  the descriptor for the <code>isChangeable</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.AssociationEnd,java.lang.Boolean> IS_CHANGEABLE( ) {
            if ( __isChangeable == null ) {
                __isChangeable = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.tc.moin.repository.mmi.model.AssociationEnd,java.lang.Boolean>( "45ED2E29AB3206C4C43A48232331DBA2417B770D", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "Model", "AssociationEnd", "isChangeable" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __isChangeable;
        }
        /**
         * Returns the descriptor for the <code>requiredElements</code> reference.
         * @return  the descriptor for the <code>requiredElements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.ModelElement,java.util.Collection<com.sap.tc.moin.repository.mmi.model.ModelElement>> REQUIRED_ELEMENTS( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.REQUIRED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>container</code> reference.
         * @return  the descriptor for the <code>container</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.ModelElement,com.sap.tc.moin.repository.mmi.model.Namespace> CONTAINER( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.CONTAINER( );
        }
        /**
         * Returns the descriptor for the <code>constraints</code> reference.
         * @return  the descriptor for the <code>constraints</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.ModelElement,java.util.Collection<com.sap.tc.moin.repository.mmi.model.Constraint>> CONSTRAINTS( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.CONSTRAINTS( );
        }
        /**
         * Returns the descriptor for the <code>type</code> reference.
         * @return  the descriptor for the <code>type</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.tc.moin.repository.mmi.model.TypedElement,com.sap.tc.moin.repository.mmi.model.Classifier> TYPE( ) {
            return com.sap.tc.moin.repository.mmi.model.TypedElement.DESCRIPTORS.TYPE( );
        }
        /**
         * Returns the descriptor for the <code>findRequiredElements</code> operation.
         * @return  the descriptor for the <code>findRequiredElements</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.util.Collection<com.sap.tc.moin.repository.mmi.model.ModelElement>> FIND_REQUIRED_ELEMENTS( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.FIND_REQUIRED_ELEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>isRequiredBecause</code> operation.
         * @return  the descriptor for the <code>isRequiredBecause</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.Boolean> IS_REQUIRED_BECAUSE( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.IS_REQUIRED_BECAUSE( );
        }
        /**
         * Returns the descriptor for the <code>isFrozen</code> operation.
         * @return  the descriptor for the <code>isFrozen</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.Boolean> IS_FROZEN( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.IS_FROZEN( );
        }
        /**
         * Returns the descriptor for the <code>isVisible</code> operation.
         * @return  the descriptor for the <code>isVisible</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.ModelElement,java.lang.Boolean> IS_VISIBLE( ) {
            return com.sap.tc.moin.repository.mmi.model.ModelElement.DESCRIPTORS.IS_VISIBLE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.AssociationEnd,com.sap.tc.moin.repository.mmi.model.AssociationEnd> __otherEnd;
        /**
         * Returns the descriptor for the <code>otherEnd</code> operation.
         * @return  the descriptor for the <code>otherEnd</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.AssociationEnd,com.sap.tc.moin.repository.mmi.model.AssociationEnd> OTHER_END( ) {
            if ( __otherEnd == null ) {
                __otherEnd = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,com.sap.tc.moin.repository.mmi.model.AssociationEnd,com.sap.tc.moin.repository.mmi.model.AssociationEnd>( "45ED2E293B32CD1EF0504C8D0AF6CC738EBC7AC9", "sap.com/tc/moin/mof_1.4", new java.lang.String[] { "Model", "AssociationEnd", "otherEnd" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __otherEnd;
        }
    }
}    