group xmcps;

/**
 * @param template com.sap.tc.moin.xm.generation.core.code.cps.XmCpsFactoryTemplate
 */
xmcpsfactory(template) ::= <<
$template:javaHeader()$$\n$

public final class $template.ClassName$ implements com.sap.tc.moin.repository.spi.ps.SpiXmParserSerializerConfiguration {

    public com.sap.tc.moin.repository.xm.parser.XmParserConfiguration getParserConfiguration( ) {

        return com.sap.tc.moin.repository.xm.parser.XmParserConfiguration.getInstance( new $template.parserQualifiedClassName$( ), null, null );
    }

    public com.sap.tc.moin.repository.xm.serializer.XmSerializerConfiguration getSerializerConfiguration( ) {

        return com.sap.tc.moin.repository.xm.serializer.XmSerializerConfiguration.getInstance( new $template.serializerQualifiedClassName$( ) );
    }
}
>>

/**
 * @param template com.sap.tc.moin.xm.generation.core.code.cps.XmCpsModelstorageTemplate
 */
xmcpsmodelstorage(template) ::= <<
<?xml version="1.0" encoding="UTF-8" ?>
<ModelstorageInf xmlns="http://sap.com/moin/MoinArchive"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://sap.com/moin/MoinArchive modelstorage_inf.xsd">
	<CustomSerializationFactories>
		<XmSerializationFactory
			serializationId="$template.serializationId$"
			className="$template.qualifiedFactoryClassName$" />
	</CustomSerializationFactories>
	<FilePatterns>
           <!-- The suffix defines the extension of the XML files parsed/serialized
                 by the generated XM Parser/Serializer.
                You can adapt the suffix value to your needs. -->
	   <Pattern suffix="$template.suffix$"
			serializationId="$template.serializationId$" />
	</FilePatterns>
</ModelstorageInf>
>>

javaHeader(template) ::= <<
$template.Preamble$
package $template.PackageName$;
>>
