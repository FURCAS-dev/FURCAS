/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.mi.gfw.mm.pictograms;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface FixPointAnchor extends com.sap.mi.gfw.mm.pictograms.Anchor {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.mi.gfw.mm.pictograms.FixPointAnchor> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.mi.gfw.mm.pictograms.FixPointAnchor>("45E806E35563C79C230D4CEE19FCE0CF5256B988", "sap.com/com/sap/mi/gfw/mm", "pictograms", "FixPointAnchor"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public com.sap.mi.gfw.mm.datatypes.Point getLocation() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setLocation(com.sap.mi.gfw.mm.datatypes.Point newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>properties</code> attribute.
         * @return  the descriptor for the <code>properties</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.PropertyContainer,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Property>> PROPERTIES( ) {
            return com.sap.mi.gfw.mm.pictograms.PropertyContainer.DESCRIPTORS.PROPERTIES( );
        }
        /**
         * Returns the descriptor for the <code>visible</code> attribute.
         * @return  the descriptor for the <code>visible</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.PictogramElement,java.lang.Boolean> VISIBLE( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.VISIBLE( );
        }
        /**
         * Returns the descriptor for the <code>active</code> attribute.
         * @return  the descriptor for the <code>active</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.PictogramElement,java.lang.Boolean> ACTIVE( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.ACTIVE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.FixPointAnchor,com.sap.mi.gfw.mm.datatypes.Point> __location;
        /**
         * Returns the descriptor for the <code>location</code> attribute.
         * @return  the descriptor for the <code>location</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.FixPointAnchor,com.sap.mi.gfw.mm.datatypes.Point> LOCATION( ) {
            if ( __location == null ) {
                __location = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.FixPointAnchor,com.sap.mi.gfw.mm.datatypes.Point>( "45E806E325AD2A8F55174A461CE6F7012FF0A6E8", "sap.com/com/sap/mi/gfw/mm", new java.lang.String[] { "pictograms", "FixPointAnchor", "location" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __location;
        }
        /**
         * Returns the descriptor for the <code>graphicsAlgorithm</code> reference.
         * @return  the descriptor for the <code>graphicsAlgorithm</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.PictogramElement,com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithm> GRAPHICS_ALGORITHM( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.GRAPHICS_ALGORITHM( );
        }
        /**
         * Returns the descriptor for the <code>link</code> reference.
         * @return  the descriptor for the <code>link</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.PictogramElement,com.sap.mi.gfw.mm.links.PictogramLink> LINK( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.LINK( );
        }
        /**
         * Returns the descriptor for the <code>parent</code> reference.
         * @return  the descriptor for the <code>parent</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Anchor,com.sap.mi.gfw.mm.pictograms.AnchorContainer> PARENT( ) {
            return com.sap.mi.gfw.mm.pictograms.Anchor.DESCRIPTORS.PARENT( );
        }
        /**
         * Returns the descriptor for the <code>outgoingConnections</code> reference.
         * @return  the descriptor for the <code>outgoingConnections</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Anchor,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Connection>> OUTGOING_CONNECTIONS( ) {
            return com.sap.mi.gfw.mm.pictograms.Anchor.DESCRIPTORS.OUTGOING_CONNECTIONS( );
        }
        /**
         * Returns the descriptor for the <code>incomingConnections</code> reference.
         * @return  the descriptor for the <code>incomingConnections</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Anchor,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Connection>> INCOMING_CONNECTIONS( ) {
            return com.sap.mi.gfw.mm.pictograms.Anchor.DESCRIPTORS.INCOMING_CONNECTIONS( );
        }
        /**
         * Returns the descriptor for the <code>referencedGraphicsAlgorithm</code> reference.
         * @return  the descriptor for the <code>referencedGraphicsAlgorithm</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Anchor,com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithm> REFERENCED_GRAPHICS_ALGORITHM( ) {
            return com.sap.mi.gfw.mm.pictograms.Anchor.DESCRIPTORS.REFERENCED_GRAPHICS_ALGORITHM( );
        }
    }
}    