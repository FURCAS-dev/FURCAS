/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.mi.gfw.mm.pictograms;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface LinkToDiagram extends com.sap.mi.gfw.mm.pictograms.Shape {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.mi.gfw.mm.pictograms.LinkToDiagram> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.mi.gfw.mm.pictograms.LinkToDiagram>("45E806E324E75070FD2145593F95CDF2F3811E63", "sap.com/com/sap/mi/gfw/mm", "pictograms", "LinkToDiagram"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public boolean isAsIcon() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAsIcon(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.mi.gfw.mm.datatypes.ViewPort getViewport() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setViewport(com.sap.mi.gfw.mm.datatypes.ViewPort newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public com.sap.mi.gfw.mm.pictograms.Diagram getDiagram() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setDiagram(com.sap.mi.gfw.mm.pictograms.Diagram newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>properties</code> attribute.
         * @return  the descriptor for the <code>properties</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.PropertyContainer,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Property>> PROPERTIES( ) {
            return com.sap.mi.gfw.mm.pictograms.PropertyContainer.DESCRIPTORS.PROPERTIES( );
        }
        /**
         * Returns the descriptor for the <code>visible</code> attribute.
         * @return  the descriptor for the <code>visible</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.PictogramElement,java.lang.Boolean> VISIBLE( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.VISIBLE( );
        }
        /**
         * Returns the descriptor for the <code>active</code> attribute.
         * @return  the descriptor for the <code>active</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.PictogramElement,java.lang.Boolean> ACTIVE( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.ACTIVE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.LinkToDiagram,java.lang.Boolean> __asIcon;
        /**
         * Returns the descriptor for the <code>asIcon</code> attribute.
         * @return  the descriptor for the <code>asIcon</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.LinkToDiagram,java.lang.Boolean> AS_ICON( ) {
            if ( __asIcon == null ) {
                __asIcon = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.LinkToDiagram,java.lang.Boolean>( "45E806E3653FBA87985C464410969ED7062E5CF5", "sap.com/com/sap/mi/gfw/mm", new java.lang.String[] { "pictograms", "LinkToDiagram", "asIcon" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __asIcon;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.LinkToDiagram,com.sap.mi.gfw.mm.datatypes.ViewPort> __viewport;
        /**
         * Returns the descriptor for the <code>viewport</code> attribute.
         * @return  the descriptor for the <code>viewport</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.LinkToDiagram,com.sap.mi.gfw.mm.datatypes.ViewPort> VIEWPORT( ) {
            if ( __viewport == null ) {
                __viewport = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.LinkToDiagram,com.sap.mi.gfw.mm.datatypes.ViewPort>( "45E806E31FD78E12512E47EA2D1DD8F3E74FE083", "sap.com/com/sap/mi/gfw/mm", new java.lang.String[] { "pictograms", "LinkToDiagram", "viewport" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __viewport;
        }
        /**
         * Returns the descriptor for the <code>graphicsAlgorithm</code> reference.
         * @return  the descriptor for the <code>graphicsAlgorithm</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.PictogramElement,com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithm> GRAPHICS_ALGORITHM( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.GRAPHICS_ALGORITHM( );
        }
        /**
         * Returns the descriptor for the <code>link</code> reference.
         * @return  the descriptor for the <code>link</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.PictogramElement,com.sap.mi.gfw.mm.links.PictogramLink> LINK( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.LINK( );
        }
        /**
         * Returns the descriptor for the <code>anchors</code> reference.
         * @return  the descriptor for the <code>anchors</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.AnchorContainer,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Anchor>> ANCHORS( ) {
            return com.sap.mi.gfw.mm.pictograms.AnchorContainer.DESCRIPTORS.ANCHORS( );
        }
        /**
         * Returns the descriptor for the <code>container</code> reference.
         * @return  the descriptor for the <code>container</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Shape,com.sap.mi.gfw.mm.pictograms.ContainerShape> CONTAINER( ) {
            return com.sap.mi.gfw.mm.pictograms.Shape.DESCRIPTORS.CONTAINER( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.LinkToDiagram,com.sap.mi.gfw.mm.pictograms.Diagram> __diagram;
        /**
         * Returns the descriptor for the <code>diagram</code> reference.
         * @return  the descriptor for the <code>diagram</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.LinkToDiagram,com.sap.mi.gfw.mm.pictograms.Diagram> DIAGRAM( ) {
            if ( __diagram == null ) {
                __diagram = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.LinkToDiagram,com.sap.mi.gfw.mm.pictograms.Diagram>( "45E806E3CDDCEF8E7C5C432D328CDF3E9CA92719", "sap.com/com/sap/mi/gfw/mm", new java.lang.String[] { "pictograms", "LinkToDiagram", "diagram" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __diagram;
        }
    }
}    