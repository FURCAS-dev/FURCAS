/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.mi.gfw.mm.pictograms.__impl;

public class GraphicsAlgorithmReferencesStyleWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithmReferencesStyle> implements com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithmReferencesStyle,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The GraphicsAlgorithmReferencesStyle wrapper
     */
    public GraphicsAlgorithmReferencesStyleWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.mi.gfw.mm.pictograms.__impl.GraphicsAlgorithmReferencesStyleImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private com.sap.mi.gfw.mm.pictograms.__impl.GraphicsAlgorithmReferencesStyleImpl getCastWrappedObject() {
        return (com.sap.mi.gfw.mm.pictograms.__impl.GraphicsAlgorithmReferencesStyleImpl) getWrappedObject();
    }

    public com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithmReferencesStyle unwrap() {
        return (com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithmReferencesStyle) getWrappedObject();
    }
    
    public boolean exists(com.sap.mi.gfw.mm.pictograms.Style _Style, com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithm _GraphicsAlgorithm) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Style), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _GraphicsAlgorithm));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Style), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _GraphicsAlgorithm)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.mi.gfw.mm.pictograms.Style getStyle(com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithm _GraphicsAlgorithm) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.mi.gfw.mm.pictograms.Style) wrapResult(getCastWrappedObject().getStyle(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _GraphicsAlgorithm)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.mi.gfw.mm.pictograms.Style) wrapResult(getCastWrappedObject().getStyle(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _GraphicsAlgorithm))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getGraphicsAlgorithm(com.sap.mi.gfw.mm.pictograms.Style _Style) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getGraphicsAlgorithm(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Style)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getGraphicsAlgorithm(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Style))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(com.sap.mi.gfw.mm.pictograms.Style _Style, com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithm _GraphicsAlgorithm) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Style), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _GraphicsAlgorithm));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Style), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _GraphicsAlgorithm)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(com.sap.mi.gfw.mm.pictograms.Style _Style, com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithm _GraphicsAlgorithm) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Style), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _GraphicsAlgorithm));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Style), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _GraphicsAlgorithm)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithmReferencesStyle> get___JmiInterface() {
        return com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithmReferencesStyle.class;
    }

    protected String metaObjectToString() {
        return "com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithmReferencesStyle (Java Type)\npictograms.GraphicsAlgorithmReferencesStyle (MOF Type)"; //$NON-NLS-1$
    }    
}