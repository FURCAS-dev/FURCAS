/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.mi.gfw.mm.pictograms.__impl;

public final class PictogramsPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;
    
    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(71);
        FEATURE_IDS.put("Shape", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("ContainerShape", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("Diagram", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("GraphicsAlgorithm", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("Polyline", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("Ellipse", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("PictogramElement", Integer.valueOf(6)); //$NON-NLS-1$
        FEATURE_IDS.put("Connection", Integer.valueOf(7)); //$NON-NLS-1$
        FEATURE_IDS.put("Anchor", Integer.valueOf(8)); //$NON-NLS-1$
        FEATURE_IDS.put("HorizontalConnection", Integer.valueOf(9)); //$NON-NLS-1$
        FEATURE_IDS.put("VerticalConnection", Integer.valueOf(10)); //$NON-NLS-1$
        FEATURE_IDS.put("AnchorContainer", Integer.valueOf(11)); //$NON-NLS-1$
        FEATURE_IDS.put("FixPointAnchor", Integer.valueOf(12)); //$NON-NLS-1$
        FEATURE_IDS.put("BoxRelativeAnchor", Integer.valueOf(13)); //$NON-NLS-1$
        FEATURE_IDS.put("ChopboxAnchor", Integer.valueOf(14)); //$NON-NLS-1$
        FEATURE_IDS.put("LinkToDiagram", Integer.valueOf(15)); //$NON-NLS-1$
        FEATURE_IDS.put("Text", Integer.valueOf(16)); //$NON-NLS-1$
        FEATURE_IDS.put("ConnectionDecorator", Integer.valueOf(17)); //$NON-NLS-1$
        FEATURE_IDS.put("FreeFormConnection", Integer.valueOf(18)); //$NON-NLS-1$
        FEATURE_IDS.put("DirectConnection", Integer.valueOf(19)); //$NON-NLS-1$
        FEATURE_IDS.put("ManhattanConnection", Integer.valueOf(20)); //$NON-NLS-1$
        FEATURE_IDS.put("Polygon", Integer.valueOf(21)); //$NON-NLS-1$
        FEATURE_IDS.put("Rectangle", Integer.valueOf(22)); //$NON-NLS-1$
        FEATURE_IDS.put("RoundedRectangle", Integer.valueOf(23)); //$NON-NLS-1$
        FEATURE_IDS.put("Font", Integer.valueOf(24)); //$NON-NLS-1$
        FEATURE_IDS.put("RenderingStyle", Integer.valueOf(25)); //$NON-NLS-1$
        FEATURE_IDS.put("Image", Integer.valueOf(26)); //$NON-NLS-1$
        FEATURE_IDS.put("FanConnection", Integer.valueOf(27)); //$NON-NLS-1$
        FEATURE_IDS.put("PlatformGraphicsAlgorithm", Integer.valueOf(28)); //$NON-NLS-1$
        FEATURE_IDS.put("GraphicsAlgorithmContainer", Integer.valueOf(29)); //$NON-NLS-1$
        FEATURE_IDS.put("AbstractText", Integer.valueOf(30)); //$NON-NLS-1$
        FEATURE_IDS.put("MultiText", Integer.valueOf(31)); //$NON-NLS-1$
        FEATURE_IDS.put("PropertyContainer", Integer.valueOf(32)); //$NON-NLS-1$
        FEATURE_IDS.put("ComplexGraphicsAlgorithm", Integer.valueOf(33)); //$NON-NLS-1$
        FEATURE_IDS.put("Button", Integer.valueOf(34)); //$NON-NLS-1$
        FEATURE_IDS.put("StyleContainer", Integer.valueOf(35)); //$NON-NLS-1$
        FEATURE_IDS.put("Style", Integer.valueOf(36)); //$NON-NLS-1$
        FEATURE_IDS.put("AbstractStyle", Integer.valueOf(37)); //$NON-NLS-1$
        FEATURE_IDS.put("PictogramelementContainsGraphicsalgorithm", Integer.valueOf(38)); //$NON-NLS-1$
        FEATURE_IDS.put("ContainershapeContainsShapes", Integer.valueOf(39)); //$NON-NLS-1$
        FEATURE_IDS.put("ConnectionEndsAtAnchor", Integer.valueOf(40)); //$NON-NLS-1$
        FEATURE_IDS.put("ConnectionStartsAtAnchor", Integer.valueOf(41)); //$NON-NLS-1$
        FEATURE_IDS.put("AnchorcontainerAggregatesAnchors", Integer.valueOf(42)); //$NON-NLS-1$
        FEATURE_IDS.put("DiagramlinkReferencesDiagram", Integer.valueOf(43)); //$NON-NLS-1$
        FEATURE_IDS.put("DiagramAggregatesConnections", Integer.valueOf(44)); //$NON-NLS-1$
        FEATURE_IDS.put("GraphicsAlgorithmContainsGraphicsAlgorithms", Integer.valueOf(45)); //$NON-NLS-1$
        FEATURE_IDS.put("ConnectionContainsConnectionDecorators", Integer.valueOf(46)); //$NON-NLS-1$
        FEATURE_IDS.put("DiagramContainsColors", Integer.valueOf(47)); //$NON-NLS-1$
        FEATURE_IDS.put("StyleContainerContainsStyles", Integer.valueOf(48)); //$NON-NLS-1$
        FEATURE_IDS.put("GraphicsAlgorithmReferencesStyle", Integer.valueOf(49)); //$NON-NLS-1$
        FEATURE_IDS.put("GraphicsAlgorithmHasForegroundColor", Integer.valueOf(50)); //$NON-NLS-1$
        FEATURE_IDS.put("GraphicsAlgorithmHasBackgroundColor", Integer.valueOf(51)); //$NON-NLS-1$
        FEATURE_IDS.put("GraphicsAlgorithmForAnchor", Integer.valueOf(52)); //$NON-NLS-1$
    }

    // constructors    
    public PictogramsPackageImpl()
    {
        super();
    }
    public PictogramsPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    public com.sap.tc.moin.repository.mmi.reflect.RefEnum create___RefEnum(com.sap.tc.moin.repository.mmi.model.EnumerationType enumType, String name) {
        com.sap.tc.moin.repository.mmi.reflect.RefEnum result = null;
        java.lang.String enumName = enumType.getName();
          if (enumName.equals("LineStyle")) { //$NON-NLS-1$
            result = com.sap.mi.gfw.mm.pictograms.LineStyleEnum.forName(name);
          }
          else if (enumName.equals("Orientation")) { //$NON-NLS-1$
            result = com.sap.mi.gfw.mm.pictograms.OrientationEnum.forName(name);
          }
        return result;
    }
    // internal structure type creators
    public com.sap.tc.moin.repository.mmi.reflect.RefStruct create___RefStruct(Object workspace, com.sap.tc.moin.repository.mmi.model.StructureType structType) {
        com.sap.tc.moin.repository.mmi.reflect.RefStruct result = null;
        String structName = structType.getName();
        try {
                if (structName.equals("Property")) { //$NON-NLS-1$
                  result = new com.sap.mi.gfw.mm.pictograms.__impl.PropertyImpl(workspace, structType);
                }
        return result;
        }
        catch(java.lang.Exception ex) {
           throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }
    }
    // nested packages
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getShape(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Shape"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getContainerShape(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ContainerShape"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getDiagram(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Diagram"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getGraphicsAlgorithm(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "GraphicsAlgorithm"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getPolyline(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Polyline"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getEllipse(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Ellipse"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getPictogramElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "PictogramElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getConnection(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Connection"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAnchor(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Anchor"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getHorizontalConnection(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "HorizontalConnection"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getVerticalConnection(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "VerticalConnection"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAnchorContainer(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "AnchorContainer"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getFixPointAnchor(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "FixPointAnchor"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getBoxRelativeAnchor(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "BoxRelativeAnchor"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getChopboxAnchor(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ChopboxAnchor"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getLinkToDiagram(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "LinkToDiagram"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getText(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Text"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getConnectionDecorator(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ConnectionDecorator"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getFreeFormConnection(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "FreeFormConnection"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getDirectConnection(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "DirectConnection"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getManhattanConnection(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ManhattanConnection"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getPolygon(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Polygon"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getRectangle(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Rectangle"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getRoundedRectangle(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "RoundedRectangle"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getFont(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Font"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getRenderingStyle(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "RenderingStyle"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getImage(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Image"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getFanConnection(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "FanConnection"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getPlatformGraphicsAlgorithm(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "PlatformGraphicsAlgorithm"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getGraphicsAlgorithmContainer(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "GraphicsAlgorithmContainer"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAbstractText(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "AbstractText"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getMultiText(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "MultiText"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getPropertyContainer(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "PropertyContainer"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getComplexGraphicsAlgorithm(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ComplexGraphicsAlgorithm"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getButton(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Button"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getStyleContainer(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "StyleContainer"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getStyle(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Style"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAbstractStyle(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "AbstractStyle"); //$NON-NLS-1$
    }
    // associations
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getPictogramelementContainsGraphicsalgorithm(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "PictogramelementContainsGraphicsalgorithm"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getContainershapeContainsShapes(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "ContainershapeContainsShapes"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getConnectionEndsAtAnchor(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "ConnectionEndsAtAnchor"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getConnectionStartsAtAnchor(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "ConnectionStartsAtAnchor"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAnchorcontainerAggregatesAnchors(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "AnchorcontainerAggregatesAnchors"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getDiagramlinkReferencesDiagram(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "DiagramlinkReferencesDiagram"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getDiagramAggregatesConnections(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "DiagramAggregatesConnections"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getGraphicsAlgorithmContainsGraphicsAlgorithms(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "GraphicsAlgorithmContainsGraphicsAlgorithms"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getConnectionContainsConnectionDecorators(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "ConnectionContainsConnectionDecorators"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getDiagramContainsColors(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "DiagramContainsColors"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getStyleContainerContainsStyles(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "StyleContainerContainsStyles"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getGraphicsAlgorithmReferencesStyle(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "GraphicsAlgorithmReferencesStyle"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getGraphicsAlgorithmHasForegroundColor(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "GraphicsAlgorithmHasForegroundColor"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getGraphicsAlgorithmHasBackgroundColor(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "GraphicsAlgorithmHasBackgroundColor"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getGraphicsAlgorithmForAnchor(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "GraphicsAlgorithmForAnchor"); //$NON-NLS-1$
    }
    // structure type creators
    public com.sap.mi.gfw.mm.pictograms.Property createProperty(com.sap.tc.moin.repository.mmi.descriptors.StructureFieldContainer<? super com.sap.mi.gfw.mm.pictograms.Property> structureFieldContainer) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        com.sap.mi.gfw.mm.pictograms.__impl.PropertyImpl result = new com.sap.mi.gfw.mm.pictograms.__impl.PropertyImpl(get___CurrentConnection().getSession().getWorkspace(), (com.sap.tc.moin.repository.mmi.model.ModelElement) get___MetamodelElement("473ABD0053C656A2929211DCA3AB8000600FE800")); //$NON-NLS-1$
        result.initialize___Values(get___CurrentConnection());
        if (structureFieldContainer != null) {
            java.util.Map<?, Object> fields = structureFieldContainer.getFields();
            for (java.util.Map.Entry<?, Object> field : fields.entrySet()) {
                java.lang.String fieldName = ((com.sap.tc.moin.repository.mmi.descriptors.StructureFieldDescriptor<?, ? super com.sap.mi.gfw.mm.pictograms.Property, ?>)field.getKey()).getName();
                if (com.sap.mi.gfw.mm.pictograms.__impl.PropertyImpl.FEATURE_IDS.containsKey(fieldName)) {
                    result.set___Value(fieldName, field.getValue());
                }
            }
        }
        return result;
    }
    public com.sap.mi.gfw.mm.pictograms.Property createProperty(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.descriptors.StructureFieldContainer<? super com.sap.mi.gfw.mm.pictograms.Property> structureFieldContainer) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        com.sap.mi.gfw.mm.pictograms.__impl.PropertyImpl result = new com.sap.mi.gfw.mm.pictograms.__impl.PropertyImpl(connection.getSession().getWorkspace(), (com.sap.tc.moin.repository.mmi.model.ModelElement) get___MetamodelElement("473ABD0053C656A2929211DCA3AB8000600FE800")); //$NON-NLS-1$
        result.initialize___Values(connection);
        if (structureFieldContainer != null) {
            java.util.Map<?, Object> fields = structureFieldContainer.getFields();
            for (java.util.Map.Entry<?, Object> field : fields.entrySet()) {
                java.lang.String fieldName = ((com.sap.tc.moin.repository.mmi.descriptors.StructureFieldDescriptor<?, ? super com.sap.mi.gfw.mm.pictograms.Property, ?>)field.getKey()).getName();
                if (com.sap.mi.gfw.mm.pictograms.__impl.PropertyImpl.FEATURE_IDS.containsKey(fieldName)) {
                    result.set___Value(fieldName, field.getValue());
                }
            }
        }
        return result;
    }

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.ShapeImpl")); //$NON-NLS-1$
                case 1:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.ContainerShapeImpl")); //$NON-NLS-1$
                case 2:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.DiagramImpl")); //$NON-NLS-1$
                case 3:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 4:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.PolylineImpl")); //$NON-NLS-1$
                case 5:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.EllipseImpl")); //$NON-NLS-1$
                case 6:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 7:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.ConnectionImpl")); //$NON-NLS-1$
                case 8:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 9:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.HorizontalConnectionImpl")); //$NON-NLS-1$
                case 10:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.VerticalConnectionImpl")); //$NON-NLS-1$
                case 11:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 12:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.FixPointAnchorImpl")); //$NON-NLS-1$
                case 13:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.BoxRelativeAnchorImpl")); //$NON-NLS-1$
                case 14:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.ChopboxAnchorImpl")); //$NON-NLS-1$
                case 15:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.LinkToDiagramImpl")); //$NON-NLS-1$
                case 16:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.TextImpl")); //$NON-NLS-1$
                case 17:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.ConnectionDecoratorImpl")); //$NON-NLS-1$
                case 18:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.FreeFormConnectionImpl")); //$NON-NLS-1$
                case 19:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.DirectConnectionImpl")); //$NON-NLS-1$
                case 20:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.ManhattanConnectionImpl")); //$NON-NLS-1$
                case 21:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.PolygonImpl")); //$NON-NLS-1$
                case 22:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.RectangleImpl")); //$NON-NLS-1$
                case 23:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.RoundedRectangleImpl")); //$NON-NLS-1$
                case 24:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.FontImpl")); //$NON-NLS-1$
                case 25:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.RenderingStyleImpl")); //$NON-NLS-1$
                case 26:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.ImageImpl")); //$NON-NLS-1$
                case 27:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.FanConnectionImpl")); //$NON-NLS-1$
                case 28:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.PlatformGraphicsAlgorithmImpl")); //$NON-NLS-1$
                case 29:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 30:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 31:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.MultiTextImpl")); //$NON-NLS-1$
                case 32:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 33:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 34:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.ButtonImpl")); //$NON-NLS-1$
                case 35:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 36:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.mi.gfw.mm.pictograms.__impl.StyleImpl")); //$NON-NLS-1$
                case 37:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 38:
                    return new com.sap.mi.gfw.mm.pictograms.__impl.PictogramelementContainsGraphicsalgorithmImpl(workspace, mofId, immediatePackage, metaObject);
                case 39:
                    return new com.sap.mi.gfw.mm.pictograms.__impl.ContainershapeContainsShapesImpl(workspace, mofId, immediatePackage, metaObject);
                case 40:
                    return new com.sap.mi.gfw.mm.pictograms.__impl.ConnectionEndsAtAnchorImpl(workspace, mofId, immediatePackage, metaObject);
                case 41:
                    return new com.sap.mi.gfw.mm.pictograms.__impl.ConnectionStartsAtAnchorImpl(workspace, mofId, immediatePackage, metaObject);
                case 42:
                    return new com.sap.mi.gfw.mm.pictograms.__impl.AnchorcontainerAggregatesAnchorsImpl(workspace, mofId, immediatePackage, metaObject);
                case 43:
                    return new com.sap.mi.gfw.mm.pictograms.__impl.DiagramlinkReferencesDiagramImpl(workspace, mofId, immediatePackage, metaObject);
                case 44:
                    return new com.sap.mi.gfw.mm.pictograms.__impl.DiagramAggregatesConnectionsImpl(workspace, mofId, immediatePackage, metaObject);
                case 45:
                    return new com.sap.mi.gfw.mm.pictograms.__impl.GraphicsAlgorithmContainsGraphicsAlgorithmsImpl(workspace, mofId, immediatePackage, metaObject);
                case 46:
                    return new com.sap.mi.gfw.mm.pictograms.__impl.ConnectionContainsConnectionDecoratorsImpl(workspace, mofId, immediatePackage, metaObject);
                case 47:
                    return new com.sap.mi.gfw.mm.pictograms.__impl.DiagramContainsColorsImpl(workspace, mofId, immediatePackage, metaObject);
                case 48:
                    return new com.sap.mi.gfw.mm.pictograms.__impl.StyleContainerContainsStylesImpl(workspace, mofId, immediatePackage, metaObject);
                case 49:
                    return new com.sap.mi.gfw.mm.pictograms.__impl.GraphicsAlgorithmReferencesStyleImpl(workspace, mofId, immediatePackage, metaObject);
                case 50:
                    return new com.sap.mi.gfw.mm.pictograms.__impl.GraphicsAlgorithmHasForegroundColorImpl(workspace, mofId, immediatePackage, metaObject);
                case 51:
                    return new com.sap.mi.gfw.mm.pictograms.__impl.GraphicsAlgorithmHasBackgroundColorImpl(workspace, mofId, immediatePackage, metaObject);
                case 52:
                    return new com.sap.mi.gfw.mm.pictograms.__impl.GraphicsAlgorithmForAnchorImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    public java.lang.Class<com.sap.mi.gfw.mm.pictograms.PictogramsPackage> get___JmiInterface() {
        return com.sap.mi.gfw.mm.pictograms.PictogramsPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(0);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefPackageAndName rpan = null;
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(38);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
            name = "Shape"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.Shape"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ContainerShape"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.ContainerShape"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Diagram"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.Diagram"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "GraphicsAlgorithm"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithm"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Polyline"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.Polyline"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Ellipse"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.Ellipse"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "PictogramElement"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.PictogramElement"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Connection"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.Connection"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Anchor"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.Anchor"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "HorizontalConnection"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.HorizontalConnection"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "VerticalConnection"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.VerticalConnection"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "AnchorContainer"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.AnchorContainer"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "FixPointAnchor"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.FixPointAnchor"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "BoxRelativeAnchor"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.BoxRelativeAnchor"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ChopboxAnchor"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.ChopboxAnchor"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "LinkToDiagram"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.LinkToDiagram"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Text"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.Text"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ConnectionDecorator"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.ConnectionDecorator"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "FreeFormConnection"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.FreeFormConnection"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "DirectConnection"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.DirectConnection"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ManhattanConnection"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.ManhattanConnection"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Polygon"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.Polygon"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Rectangle"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.Rectangle"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "RoundedRectangle"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.RoundedRectangle"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Font"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.Font"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "RenderingStyle"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.RenderingStyle"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Image"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.Image"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "FanConnection"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.FanConnection"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "PlatformGraphicsAlgorithm"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.PlatformGraphicsAlgorithm"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "GraphicsAlgorithmContainer"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithmContainer"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "AbstractText"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.AbstractText"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "MultiText"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.MultiText"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "PropertyContainer"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.PropertyContainer"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ComplexGraphicsAlgorithm"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.ComplexGraphicsAlgorithm"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Button"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.Button"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "StyleContainer"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.StyleContainer"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Style"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.Style"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "AbstractStyle"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.mi.gfw.mm.pictograms.AbstractStyle"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(15);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefAssociationAndName raan = null;
            name = "PictogramelementContainsGraphicsalgorithm"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.mi.gfw.mm.pictograms.PictogramelementContainsGraphicsalgorithm"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "ContainershapeContainsShapes"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.mi.gfw.mm.pictograms.ContainershapeContainsShapes"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "ConnectionEndsAtAnchor"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.mi.gfw.mm.pictograms.ConnectionEndsAtAnchor"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "ConnectionStartsAtAnchor"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.mi.gfw.mm.pictograms.ConnectionStartsAtAnchor"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "AnchorcontainerAggregatesAnchors"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.mi.gfw.mm.pictograms.AnchorcontainerAggregatesAnchors"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "DiagramlinkReferencesDiagram"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.mi.gfw.mm.pictograms.DiagramlinkReferencesDiagram"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "DiagramAggregatesConnections"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.mi.gfw.mm.pictograms.DiagramAggregatesConnections"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "GraphicsAlgorithmContainsGraphicsAlgorithms"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithmContainsGraphicsAlgorithms"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "ConnectionContainsConnectionDecorators"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.mi.gfw.mm.pictograms.ConnectionContainsConnectionDecorators"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "DiagramContainsColors"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.mi.gfw.mm.pictograms.DiagramContainsColors"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "StyleContainerContainsStyles"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.mi.gfw.mm.pictograms.StyleContainerContainsStyles"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "GraphicsAlgorithmReferencesStyle"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithmReferencesStyle"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "GraphicsAlgorithmHasForegroundColor"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithmHasForegroundColor"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "GraphicsAlgorithmHasBackgroundColor"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithmHasBackgroundColor"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "GraphicsAlgorithmForAnchor"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithmForAnchor"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<com.sap.mi.gfw.mm.pictograms.__impl.PictogramsPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new com.sap.mi.gfw.mm.pictograms.__impl.PictogramsPackageWrapper(conn, this, synchronize);
    }

}