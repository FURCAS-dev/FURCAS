/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.mi.gfw.mm.pictograms.__impl;

public class ConnectionStartsAtAnchorWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<com.sap.mi.gfw.mm.pictograms.ConnectionStartsAtAnchor> implements com.sap.mi.gfw.mm.pictograms.ConnectionStartsAtAnchor,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ConnectionStartsAtAnchor wrapper
     */
    public ConnectionStartsAtAnchorWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.mi.gfw.mm.pictograms.__impl.ConnectionStartsAtAnchorImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private com.sap.mi.gfw.mm.pictograms.__impl.ConnectionStartsAtAnchorImpl getCastWrappedObject() {
        return (com.sap.mi.gfw.mm.pictograms.__impl.ConnectionStartsAtAnchorImpl) getWrappedObject();
    }

    public com.sap.mi.gfw.mm.pictograms.ConnectionStartsAtAnchor unwrap() {
        return (com.sap.mi.gfw.mm.pictograms.ConnectionStartsAtAnchor) getWrappedObject();
    }
    
    public boolean exists(com.sap.mi.gfw.mm.pictograms.Anchor _Start, com.sap.mi.gfw.mm.pictograms.Connection _OutgoingConnections) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Start), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OutgoingConnections));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Start), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OutgoingConnections)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.mi.gfw.mm.pictograms.Anchor getStart(com.sap.mi.gfw.mm.pictograms.Connection _OutgoingConnections) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.mi.gfw.mm.pictograms.Anchor) wrapResult(getCastWrappedObject().getStart(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OutgoingConnections)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.mi.gfw.mm.pictograms.Anchor) wrapResult(getCastWrappedObject().getStart(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OutgoingConnections))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getOutgoingConnections(com.sap.mi.gfw.mm.pictograms.Anchor _Start) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getOutgoingConnections(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Start)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getOutgoingConnections(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Start))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(com.sap.mi.gfw.mm.pictograms.Anchor _Start, com.sap.mi.gfw.mm.pictograms.Connection _OutgoingConnections) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Start), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OutgoingConnections));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Start), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OutgoingConnections)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(com.sap.mi.gfw.mm.pictograms.Anchor _Start, com.sap.mi.gfw.mm.pictograms.Connection _OutgoingConnections) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Start), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OutgoingConnections));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Start), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _OutgoingConnections)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<com.sap.mi.gfw.mm.pictograms.ConnectionStartsAtAnchor> get___JmiInterface() {
        return com.sap.mi.gfw.mm.pictograms.ConnectionStartsAtAnchor.class;
    }

    protected String metaObjectToString() {
        return "com.sap.mi.gfw.mm.pictograms.ConnectionStartsAtAnchor (Java Type)\npictograms.ConnectionStartsAtAnchor (MOF Type)"; //$NON-NLS-1$
    }    
}