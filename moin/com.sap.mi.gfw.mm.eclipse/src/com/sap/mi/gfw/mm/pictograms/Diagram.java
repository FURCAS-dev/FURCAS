/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.mi.gfw.mm.pictograms;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface Diagram extends com.sap.mi.gfw.mm.pictograms.ContainerShape,com.sap.mi.gfw.mm.pictograms.StyleContainer {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.mi.gfw.mm.pictograms.Diagram> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.mi.gfw.mm.pictograms.Diagram>("45E806E3B28EF07AFA0A4F2C342AC45B58528277", "sap.com/com/sap/mi/gfw/mm", "pictograms", "Diagram"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public int getGridUnit() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setGridUnit(int newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.lang.String getDiagramTypeId() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setDiagramTypeId(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.lang.String getName() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setName(java.lang.String newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isSnapToGrid() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setSnapToGrid(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isShowGuides() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setShowGuides(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public java.util.Collection<com.sap.mi.gfw.mm.pictograms.Connection> getConnections() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<com.sap.mi.gfw.mm.datatypes.Color> getColors() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>properties</code> attribute.
         * @return  the descriptor for the <code>properties</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.PropertyContainer,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Property>> PROPERTIES( ) {
            return com.sap.mi.gfw.mm.pictograms.PropertyContainer.DESCRIPTORS.PROPERTIES( );
        }
        /**
         * Returns the descriptor for the <code>visible</code> attribute.
         * @return  the descriptor for the <code>visible</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.PictogramElement,java.lang.Boolean> VISIBLE( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.VISIBLE( );
        }
        /**
         * Returns the descriptor for the <code>active</code> attribute.
         * @return  the descriptor for the <code>active</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.PictogramElement,java.lang.Boolean> ACTIVE( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.ACTIVE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.Diagram,java.lang.Integer> __gridUnit;
        /**
         * Returns the descriptor for the <code>gridUnit</code> attribute.
         * @return  the descriptor for the <code>gridUnit</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.Diagram,java.lang.Integer> GRID_UNIT( ) {
            if ( __gridUnit == null ) {
                __gridUnit = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.Diagram,java.lang.Integer>( "45E806E3FB464600FA5842943F28CDAC42133DC7", "sap.com/com/sap/mi/gfw/mm", new java.lang.String[] { "pictograms", "Diagram", "gridUnit" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __gridUnit;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.Diagram,java.lang.String> __diagramTypeId;
        /**
         * Returns the descriptor for the <code>diagramTypeId</code> attribute.
         * @return  the descriptor for the <code>diagramTypeId</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.Diagram,java.lang.String> DIAGRAM_TYPE_ID( ) {
            if ( __diagramTypeId == null ) {
                __diagramTypeId = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.Diagram,java.lang.String>( "45E806E37D266F08E5664E611FC8B96F646ECEDC", "sap.com/com/sap/mi/gfw/mm", new java.lang.String[] { "pictograms", "Diagram", "diagramTypeId" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __diagramTypeId;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.Diagram,java.lang.String> __name;
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.Diagram,java.lang.String> NAME( ) {
            if ( __name == null ) {
                __name = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.Diagram,java.lang.String>( "45E806E39886C492C0D94F1C275FAFDD3DEA1906", "sap.com/com/sap/mi/gfw/mm", new java.lang.String[] { "pictograms", "Diagram", "name" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __name;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.Diagram,java.lang.Boolean> __snapToGrid;
        /**
         * Returns the descriptor for the <code>snapToGrid</code> attribute.
         * @return  the descriptor for the <code>snapToGrid</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.Diagram,java.lang.Boolean> SNAP_TO_GRID( ) {
            if ( __snapToGrid == null ) {
                __snapToGrid = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.Diagram,java.lang.Boolean>( "45E806E3B0815B0FD17C452200EDCF178DD45CCB", "sap.com/com/sap/mi/gfw/mm", new java.lang.String[] { "pictograms", "Diagram", "snapToGrid" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __snapToGrid;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.Diagram,java.lang.Boolean> __showGuides;
        /**
         * Returns the descriptor for the <code>showGuides</code> attribute.
         * @return  the descriptor for the <code>showGuides</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.Diagram,java.lang.Boolean> SHOW_GUIDES( ) {
            if ( __showGuides == null ) {
                __showGuides = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.Diagram,java.lang.Boolean>( "45E806E3E50790B85200417B318DB9FDB235F8A9", "sap.com/com/sap/mi/gfw/mm", new java.lang.String[] { "pictograms", "Diagram", "showGuides" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __showGuides;
        }
        /**
         * Returns the descriptor for the <code>graphicsAlgorithm</code> reference.
         * @return  the descriptor for the <code>graphicsAlgorithm</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.PictogramElement,com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithm> GRAPHICS_ALGORITHM( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.GRAPHICS_ALGORITHM( );
        }
        /**
         * Returns the descriptor for the <code>link</code> reference.
         * @return  the descriptor for the <code>link</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.PictogramElement,com.sap.mi.gfw.mm.links.PictogramLink> LINK( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.LINK( );
        }
        /**
         * Returns the descriptor for the <code>anchors</code> reference.
         * @return  the descriptor for the <code>anchors</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.AnchorContainer,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Anchor>> ANCHORS( ) {
            return com.sap.mi.gfw.mm.pictograms.AnchorContainer.DESCRIPTORS.ANCHORS( );
        }
        /**
         * Returns the descriptor for the <code>container</code> reference.
         * @return  the descriptor for the <code>container</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Shape,com.sap.mi.gfw.mm.pictograms.ContainerShape> CONTAINER( ) {
            return com.sap.mi.gfw.mm.pictograms.Shape.DESCRIPTORS.CONTAINER( );
        }
        /**
         * Returns the descriptor for the <code>children</code> reference.
         * @return  the descriptor for the <code>children</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.ContainerShape,java.util.List<com.sap.mi.gfw.mm.pictograms.Shape>> CHILDREN( ) {
            return com.sap.mi.gfw.mm.pictograms.ContainerShape.DESCRIPTORS.CHILDREN( );
        }
        /**
         * Returns the descriptor for the <code>styles</code> reference.
         * @return  the descriptor for the <code>styles</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.StyleContainer,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Style>> STYLES( ) {
            return com.sap.mi.gfw.mm.pictograms.StyleContainer.DESCRIPTORS.STYLES( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Diagram,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Connection>> __connections;
        /**
         * Returns the descriptor for the <code>connections</code> reference.
         * @return  the descriptor for the <code>connections</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Diagram,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Connection>> CONNECTIONS( ) {
            if ( __connections == null ) {
                __connections = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Diagram,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Connection>>( "45E806E332B0A1C9985B40B13A07BDC02B329B1F", "sap.com/com/sap/mi/gfw/mm", new java.lang.String[] { "pictograms", "Diagram", "connections" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __connections;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Diagram,java.util.Collection<com.sap.mi.gfw.mm.datatypes.Color>> __colors;
        /**
         * Returns the descriptor for the <code>colors</code> reference.
         * @return  the descriptor for the <code>colors</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Diagram,java.util.Collection<com.sap.mi.gfw.mm.datatypes.Color>> COLORS( ) {
            if ( __colors == null ) {
                __colors = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Diagram,java.util.Collection<com.sap.mi.gfw.mm.datatypes.Color>>( "45E806E3AADFF90E21AB47C50E5EC457DD6FB8AA", "sap.com/com/sap/mi/gfw/mm", new java.lang.String[] { "pictograms", "Diagram", "colors" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __colors;
        }
    }
}    