/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.mi.gfw.mm.pictograms;

/**
 * Anchors can have an arbitrary rendering. Expension should also be possible.
 * This interface is not intended to be implemented by clients.
 */
public interface Anchor extends com.sap.mi.gfw.mm.pictograms.PictogramElement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.mi.gfw.mm.pictograms.Anchor> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.mi.gfw.mm.pictograms.Anchor>("45E806E3CB094E300FE943ED34B7D7F3E245FB37", "sap.com/com/sap/mi/gfw/mm", "pictograms", "Anchor"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // references
    public com.sap.mi.gfw.mm.pictograms.AnchorContainer getParent() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setParent(com.sap.mi.gfw.mm.pictograms.AnchorContainer newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<com.sap.mi.gfw.mm.pictograms.Connection> getOutgoingConnections() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<com.sap.mi.gfw.mm.pictograms.Connection> getIncomingConnections() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithm getReferencedGraphicsAlgorithm() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setReferencedGraphicsAlgorithm(com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithm newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>properties</code> attribute.
         * @return  the descriptor for the <code>properties</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.PropertyContainer,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Property>> PROPERTIES( ) {
            return com.sap.mi.gfw.mm.pictograms.PropertyContainer.DESCRIPTORS.PROPERTIES( );
        }
        /**
         * Returns the descriptor for the <code>visible</code> attribute.
         * @return  the descriptor for the <code>visible</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.PictogramElement,java.lang.Boolean> VISIBLE( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.VISIBLE( );
        }
        /**
         * Returns the descriptor for the <code>active</code> attribute.
         * @return  the descriptor for the <code>active</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.PictogramElement,java.lang.Boolean> ACTIVE( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.ACTIVE( );
        }
        /**
         * Returns the descriptor for the <code>graphicsAlgorithm</code> reference.
         * @return  the descriptor for the <code>graphicsAlgorithm</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.PictogramElement,com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithm> GRAPHICS_ALGORITHM( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.GRAPHICS_ALGORITHM( );
        }
        /**
         * Returns the descriptor for the <code>link</code> reference.
         * @return  the descriptor for the <code>link</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.PictogramElement,com.sap.mi.gfw.mm.links.PictogramLink> LINK( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.LINK( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Anchor,com.sap.mi.gfw.mm.pictograms.AnchorContainer> __parent;
        /**
         * Returns the descriptor for the <code>parent</code> reference.
         * @return  the descriptor for the <code>parent</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Anchor,com.sap.mi.gfw.mm.pictograms.AnchorContainer> PARENT( ) {
            if ( __parent == null ) {
                __parent = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Anchor,com.sap.mi.gfw.mm.pictograms.AnchorContainer>( "45E806E3FBAEA58A7BBF476D13E2DD01A99E0CCA", "sap.com/com/sap/mi/gfw/mm", new java.lang.String[] { "pictograms", "Anchor", "parent" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __parent;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Anchor,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Connection>> __outgoingConnections;
        /**
         * Returns the descriptor for the <code>outgoingConnections</code> reference.
         * @return  the descriptor for the <code>outgoingConnections</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Anchor,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Connection>> OUTGOING_CONNECTIONS( ) {
            if ( __outgoingConnections == null ) {
                __outgoingConnections = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Anchor,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Connection>>( "45E806E30DF97165F707423F1757F9A7671721C4", "sap.com/com/sap/mi/gfw/mm", new java.lang.String[] { "pictograms", "Anchor", "outgoingConnections" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __outgoingConnections;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Anchor,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Connection>> __incomingConnections;
        /**
         * Returns the descriptor for the <code>incomingConnections</code> reference.
         * @return  the descriptor for the <code>incomingConnections</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Anchor,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Connection>> INCOMING_CONNECTIONS( ) {
            if ( __incomingConnections == null ) {
                __incomingConnections = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Anchor,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Connection>>( "45E806E32F8EB48D09E4402F0CB58FDB7154D0C2", "sap.com/com/sap/mi/gfw/mm", new java.lang.String[] { "pictograms", "Anchor", "incomingConnections" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __incomingConnections;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Anchor,com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithm> __referencedGraphicsAlgorithm;
        /**
         * Returns the descriptor for the <code>referencedGraphicsAlgorithm</code> reference.
         * @return  the descriptor for the <code>referencedGraphicsAlgorithm</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Anchor,com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithm> REFERENCED_GRAPHICS_ALGORITHM( ) {
            if ( __referencedGraphicsAlgorithm == null ) {
                __referencedGraphicsAlgorithm = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Anchor,com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithm>( "47DF8B0D8E978540F4CD11DC8F7300199928CEAA", "sap.com/com/sap/mi/gfw/mm", new java.lang.String[] { "pictograms", "Anchor", "referencedGraphicsAlgorithm" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __referencedGraphicsAlgorithm;
        }
    }
}    