/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.mi.gfw.mm.pictograms;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface FreeFormConnection extends com.sap.mi.gfw.mm.pictograms.Connection {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.mi.gfw.mm.pictograms.FreeFormConnection> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, com.sap.mi.gfw.mm.pictograms.FreeFormConnection>("45E806E39F302197BFF04AA81DC1DEDE91076514", "sap.com/com/sap/mi/gfw/mm", "pictograms", "FreeFormConnection"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 

    
    // attributes
    public java.util.List<com.sap.mi.gfw.mm.datatypes.Point> getBendpoints() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>properties</code> attribute.
         * @return  the descriptor for the <code>properties</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.PropertyContainer,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Property>> PROPERTIES( ) {
            return com.sap.mi.gfw.mm.pictograms.PropertyContainer.DESCRIPTORS.PROPERTIES( );
        }
        /**
         * Returns the descriptor for the <code>visible</code> attribute.
         * @return  the descriptor for the <code>visible</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.PictogramElement,java.lang.Boolean> VISIBLE( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.VISIBLE( );
        }
        /**
         * Returns the descriptor for the <code>active</code> attribute.
         * @return  the descriptor for the <code>active</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.PictogramElement,java.lang.Boolean> ACTIVE( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.ACTIVE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.FreeFormConnection,java.util.List<com.sap.mi.gfw.mm.datatypes.Point>> __bendpoints;
        /**
         * Returns the descriptor for the <code>bendpoints</code> attribute.
         * @return  the descriptor for the <code>bendpoints</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.FreeFormConnection,java.util.List<com.sap.mi.gfw.mm.datatypes.Point>> BENDPOINTS( ) {
            if ( __bendpoints == null ) {
                __bendpoints = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,com.sap.mi.gfw.mm.pictograms.FreeFormConnection,java.util.List<com.sap.mi.gfw.mm.datatypes.Point>>( "45E806E34A8CEEF1411042793FD8C6DDB18CCCAE", "sap.com/com/sap/mi/gfw/mm", new java.lang.String[] { "pictograms", "FreeFormConnection", "bendpoints" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
            }
            return __bendpoints;
        }
        /**
         * Returns the descriptor for the <code>graphicsAlgorithm</code> reference.
         * @return  the descriptor for the <code>graphicsAlgorithm</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.PictogramElement,com.sap.mi.gfw.mm.pictograms.GraphicsAlgorithm> GRAPHICS_ALGORITHM( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.GRAPHICS_ALGORITHM( );
        }
        /**
         * Returns the descriptor for the <code>link</code> reference.
         * @return  the descriptor for the <code>link</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.PictogramElement,com.sap.mi.gfw.mm.links.PictogramLink> LINK( ) {
            return com.sap.mi.gfw.mm.pictograms.PictogramElement.DESCRIPTORS.LINK( );
        }
        /**
         * Returns the descriptor for the <code>anchors</code> reference.
         * @return  the descriptor for the <code>anchors</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.AnchorContainer,java.util.Collection<com.sap.mi.gfw.mm.pictograms.Anchor>> ANCHORS( ) {
            return com.sap.mi.gfw.mm.pictograms.AnchorContainer.DESCRIPTORS.ANCHORS( );
        }
        /**
         * Returns the descriptor for the <code>start</code> reference.
         * @return  the descriptor for the <code>start</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Connection,com.sap.mi.gfw.mm.pictograms.Anchor> START( ) {
            return com.sap.mi.gfw.mm.pictograms.Connection.DESCRIPTORS.START( );
        }
        /**
         * Returns the descriptor for the <code>end</code> reference.
         * @return  the descriptor for the <code>end</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Connection,com.sap.mi.gfw.mm.pictograms.Anchor> END( ) {
            return com.sap.mi.gfw.mm.pictograms.Connection.DESCRIPTORS.END( );
        }
        /**
         * Returns the descriptor for the <code>parent</code> reference.
         * @return  the descriptor for the <code>parent</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Connection,com.sap.mi.gfw.mm.pictograms.Diagram> PARENT( ) {
            return com.sap.mi.gfw.mm.pictograms.Connection.DESCRIPTORS.PARENT( );
        }
        /**
         * Returns the descriptor for the <code>connectionDecorators</code> reference.
         * @return  the descriptor for the <code>connectionDecorators</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,com.sap.mi.gfw.mm.pictograms.Connection,java.util.Collection<com.sap.mi.gfw.mm.pictograms.ConnectionDecorator>> CONNECTION_DECORATORS( ) {
            return com.sap.mi.gfw.mm.pictograms.Connection.DESCRIPTORS.CONNECTION_DECORATORS( );
        }
    }
}    