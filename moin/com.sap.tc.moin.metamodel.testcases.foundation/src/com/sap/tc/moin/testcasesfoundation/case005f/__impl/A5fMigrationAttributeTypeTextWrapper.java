/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.testcasesfoundation.case005f.__impl;

public class A5fMigrationAttributeTypeTextWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefObjectWrapperImpl<com.sap.tc.moin.testcasesfoundation.case005f.__impl.A5fMigrationAttributeTypeTextImpl> implements com.sap.tc.moin.testcasesfoundation.case005f.A5fMigrationAttributeTypeText,com.sap.tc.moin.repository.Partitionable {

    
    static {
    }

    public A5fMigrationAttributeTypeTextWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.tc.moin.testcasesfoundation.case005f.__impl.A5fMigrationAttributeTypeTextImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private com.sap.tc.moin.testcasesfoundation.case005f.__impl.A5fMigrationAttributeTypeTextImpl getCastWrappedObject() {
        return (com.sap.tc.moin.testcasesfoundation.case005f.__impl.A5fMigrationAttributeTypeTextImpl) getWrappedObject();
    }
    
    private com.sap.tc.moin.testcasesfoundation.case005f.__impl.A5fMigrationAttributeTypeTextImpl getCastWrappedObject(com.sap.tc.moin.repository.core.CorePartitionable resolved) {
        return (com.sap.tc.moin.testcasesfoundation.case005f.__impl.A5fMigrationAttributeTypeTextImpl) resolved;
    }
    
    public com.sap.tc.moin.testcasesfoundation.case005f.__impl.A5fMigrationAttributeTypeTextImpl unwrap() {
        return (com.sap.tc.moin.testcasesfoundation.case005f.__impl.A5fMigrationAttributeTypeTextImpl) getWrappedObject();
    }
        
    // methods for attributes
    public com.sap.tc.moin.testcasesfoundation.case005f.textverticalizationf.TextF getTranslatableText() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.testcasesfoundation.case005f.textverticalizationf.TextF) wrapResult(getCastWrappedObject().getTranslatableText(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.testcasesfoundation.case005f.textverticalizationf.TextF) wrapResult(getCastWrappedObject().getTranslatableText(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

    public void setTranslatableText(com.sap.tc.moin.testcasesfoundation.case005f.textverticalizationf.TextF newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    getCastWrappedObject().setTranslatableText(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) newValue));
                }       
            }
            else {
                assertConnectionAlive();
                attachConnectionIfRequired();
                getCastWrappedObject().setTranslatableText(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) newValue));
            } 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

    public com.sap.tc.moin.testcasesfoundation.case005f.classbasedtexts.GeneralText getGeneralText() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.testcasesfoundation.case005f.classbasedtexts.GeneralText) wrapResult(getCastWrappedObject().getGeneralText(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.testcasesfoundation.case005f.classbasedtexts.GeneralText) wrapResult(getCastWrappedObject().getGeneralText(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

    public void setGeneralText(com.sap.tc.moin.testcasesfoundation.case005f.classbasedtexts.GeneralText newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    getCastWrappedObject().setGeneralText(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) newValue));
                }       
            }
            else {
                assertConnectionAlive();
                attachConnectionIfRequired();
                getCastWrappedObject().setGeneralText(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) newValue));
            } 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

    public com.sap.tc.moin.testcasesfoundation.case005f.classbasedtexts.SpecializedText getSpecializedText() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.testcasesfoundation.case005f.classbasedtexts.SpecializedText) wrapResult(getCastWrappedObject().getSpecializedText(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.testcasesfoundation.case005f.classbasedtexts.SpecializedText) wrapResult(getCastWrappedObject().getSpecializedText(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

    public void setSpecializedText(com.sap.tc.moin.testcasesfoundation.case005f.classbasedtexts.SpecializedText newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    getCastWrappedObject().setSpecializedText(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) newValue));
                }       
            }
            else {
                assertConnectionAlive();
                attachConnectionIfRequired();
                getCastWrappedObject().setSpecializedText(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) newValue));
            } 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

     
    // methods for references
   
    // methods for modeled operations
    
    // methods for internal modeled operations

    // reflective methods
    

    // get the JMI interface
    public java.lang.Class<com.sap.tc.moin.testcasesfoundation.case005f.A5fMigrationAttributeTypeText> get___JmiInterface() {
        return com.sap.tc.moin.testcasesfoundation.case005f.A5fMigrationAttributeTypeText.class;
    }

    // to String
    protected String metaObjectToString() {
        return "com.sap.tc.moin.testcasesfoundation.case005f.A5fMigrationAttributeTypeText (Java Type)\ntestcasesfoundation.case005f.A5fMigrationAttributeTypeText (MOF Type)"; //$NON-NLS-1$
    }    
}