group enum:utilities;

/*********************** The Enumeration Interface ****************/

EnumInterface(template) ::= <<
$template:javaHeader()$$\n$
$template:javaDoc()$
$javaInterfaceHeader(template)$
{
}
>>

/*********************** The Enumeration Implementation ****************/

EnumClass(template) ::= <<
$template:javaHeader()$

$javaPublicFinalClassHeader(template)$
{
    private static final long serialVersionUID = 1L;
    
    private final static String ENUMLABELNOTFOUNDPATTERN = "Enumeration label \"{0}\" is not defined for enumeration \"{1}\""; $nonnls1()$

    private static final java.util.List<String> __QUALIFIED_NAME = java.util.Collections.unmodifiableList(java.util.Arrays.asList(new String[] { $template.QualifiedNameForStringArrayInitializer$ })); $template.QualifiedName:nonnlsdyn(); separator=" "$

    $template.EnumLabels:enumLabel(label=it, classname=template.JavaName); separator="\n"$

    private static java.util.Map<String, $template.ImplementationType$> __labelIds = new java.util.HashMap<String, $template.ImplementationType$>();
    private java.lang.String __literalName;

    static {
       $template.EnumLabels:labelInitializer(); separator="\n"$
    }

    // constructor is private
    private $template.JavaName$(java.lang.String literalName){
        this.__literalName = literalName;
    }

    public static $template.ImplementationType$ forName(java.lang.String value) {
        $template.ImplementationType$ result = __labelIds.get(value);
        if(result != null) {
            return result;
        }
        String message = new java.text.MessageFormat( ENUMLABELNOTFOUNDPATTERN ).format( new String[] { value, "$template.JavaName$" } ); $nonnls1()$
        throw new java.lang.IllegalArgumentException(message);
    }

    public java.util.List<java.lang.String> refTypeName() {
        return __QUALIFIED_NAME;
    }

    @java.lang.Override
    public java.lang.String toString() {
        return this.__literalName;
    }

    /* this is required by the specification */
    protected java.lang.Object readResolve() throws java.io.ObjectStreamException {
        try {
            return forName(__literalName);
        }
        catch(java.lang.IllegalArgumentException iae) {
            java.io.InvalidObjectException ioe = new java.io.InvalidObjectException(iae.getMessage());
            ioe.initCause(iae);
            throw ioe;
        }
    }
}
>>

/***************************** Internal templates **************************/

enumLabel(label, classname) ::= <<
public static final $classname$ $label.JavaName$ = new $classname$("$label.name$"); $nonnls1()$
>>

labelInitializer(label) ::= <<
__labelIds.put("$label.name$", $label.JavaName$); $nonnls1()$
>>




