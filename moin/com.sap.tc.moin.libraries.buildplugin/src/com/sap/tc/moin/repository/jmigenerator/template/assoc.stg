group assoc:utilities;

/***************************** The Association Interface ********************/

AssociationInterface(template) ::= <<
$template:javaHeader()$
$template:javaDoc()$
$javaInterfaceHeader(template)$
{
    // association extent descriptor
    $template.AssociationExtentDescriptorConstant:constant()$ $template.AssociationExtentDescriptorConstant.components:nonnlsdyn(); separator = " "$ $\n$

    // association interface
    $template.Operations:operationInterface(); separator="\n"$
}
>>

/***************************** The internal Association Interface ********************/

AssociationInterfaceInternal(template) ::= <<
$template:javaHeader()$

$javaInterfaceHeader(template)$
{
    // internal association interface
    $template.Operations:operationInterface(); separator="\n"$
}
>>

/***************************** The Association Implementation ********************/

AssociationImpl(template) ::= <<
$template:javaHeader()$

$javaPublicFinalClassHeader(template)$
{
    // default constructor
    public $template.JavaName$() {
        super();
    }

    // specific constructor
    public $template.JavaName$(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    
    $template.Operations:operationImpl(); separator="\n"$

    $jmiInterface(template)$
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<$template.Interface.PackageName$.$template.Interface.JavaName$> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new $template.Wrapper.packageName$.$template.Wrapper.JavaName$(conn, this, synchronize);
    }
}
>>

/* ******************** The Association Wrapper ********************** */

AssociationWrapper(template) ::= <<
$template:javaHeader()$

$javaPublicClassHeader(template)$
{

    /**
     * The $template.Interface.JavaName$ wrapper
     */
    public $template.JavaName$(com.sap.tc.moin.repository.core.CoreConnection conn, $template.Implementation.PackageName$.$template.Implementation.JavaName$ baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private $template.Implementation.PackageName$.$template.Implementation.JavaName$ getCastWrappedObject() {
        return ($template.Implementation.PackageName$.$template.Implementation.JavaName$) getWrappedObject();
    }

    public $template.Interface.PackageName$.$template.Interface.JavaName$ unwrap() {
        return ($template.Interface.PackageName$.$template.Interface.JavaName$) getWrappedObject();
    }
    
    $template.Operations:operationForDelegation(); separator="\n"$   

    $jmiInterface(template)$

    protected String metaObjectToString() {
        return "$template.metaObjectToString$"; $nonnls1()$
    }    
}
>>
