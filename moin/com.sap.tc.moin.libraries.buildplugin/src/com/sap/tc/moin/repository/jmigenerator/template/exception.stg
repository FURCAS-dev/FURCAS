group exception:utilities;

/*********************** The Exception interface **************************/

ExceptionInterface(template) ::= <<
$template:javaHeader()$$\n$
$template:javaDoc()$
$javaPublicFinalClassHeader(template)$
{
    private static final long serialVersionUID = 1L;

    $template.Parameters:variables(); separator="\n"$

    public $template.JavaName$($template.Parameters:constructorParameters(); separator=","$) {
        $template.Parameters:constructorSetter(); separator="\n"$
    }

    $template.Parameters:publicGetters(); separator="\n"$

    public java.util.List<Object> get___Parameters()
    {
        java.util.List<Object> parameters = new java.util.ArrayList<Object>($length(template.Parameters)$);
        $template.Parameters:internalGetter(); separator="\n"$
        return parameters;
    }

    public void set___Parameters(java.util.List<Object> parameters)
    {
        $template.Parameters:internalSetter(); separator="\n"$
    }
}
>>

variables(parameter) ::= <<
private $parameter.Type$$if (parameter.TypeParameter)$<$parameter.TypeParameter$>$endif$ $parameter.VariableName$;
>>

constructorSetter(parameter) ::= <<
this.$parameter.VariableName$ = $if (parameter.Multiple)$($parameter.Type$)$endif$$parameter.VariableName$;
>>

internalGetter(parameter) ::= <<
parameters.add(this.$parameter.VariableName$);
>>

internalSetter(parameter) ::= <<
this.$parameter.VariableName$ = ($parameter.JavaType$$if (parameter.TypeParameter)$<$parameter.TypeParameter$>$endif$) parameters.get($i0$);
>>

constructorParameters(parameter) ::= <<
$parameter.Type$$if (parameter.TypeParameter)$<? extends $parameter.TypeParameter$>$endif$ $parameter.VariableName$
>>

publicGetters(parameter) ::= <<
public $parameter.Type$$if (parameter.TypeParameter)$<$parameter.TypeParameter$>$endif$ $parameter.AccessorName$()
{
    return this.$parameter.VariableName$;
}
>>
