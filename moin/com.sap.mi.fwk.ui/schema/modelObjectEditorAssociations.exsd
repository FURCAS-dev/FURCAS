<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.sap.mi.fwk.ui" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="com.sap.mi.fwk.ui" id="modelObjectEditorAssociations" name="Model Object Editor Associations"/>
      </appinfo>
      <documentation>
         The extension point &lt;code&gt;com.sap.mi.fwk.ui.modelObjectEditorAssociations&lt;/code&gt; is used to link model objects (identified by their JMI class) to Moin in Eclipse based editors.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="association" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="association">
      <annotation>
         <appinfo>
            <meta.element labelAttribute="objectClass"/>
         </appinfo>
         <documentation>
            This element is used to define an association between an editor and a model object class. Note that this does not replace the need for defining the editor through the &lt;code&gt;org.eclipse.ui.editors&lt;/code&gt; extension point.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="editorId" type="string" use="required">
            <annotation>
               <documentation>
                  The editor id as defined in the corresponding &lt;code&gt;org.eclipse.ui.editors&lt;/code&gt; extension.
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier" basedOn="org.eclipse.ui.editors/editor/@id"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="objectClass" type="string" use="required">
            <annotation>
               <documentation>
                  The class of the model object. Must implement &lt;code&gt;com.sap.tc.moin.repository.mmi.reflect.RefBaseObject&lt;/code&gt;. Subclasses of this class are also considered for the association.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":com.sap.tc.moin.repository.mmi.reflect.RefBaseObject"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="inputFactory" type="string">
            <annotation>
               <documentation>
                  An optional factory class used to create the editor&apos;s input. Must implement &lt;code&gt;com.sap.mi.fwk.ui.editor.IModelEditorInputFactory&lt;/code&gt;. Subclass the default implementation &lt;code&gt;com.sap.mi.fwk.ui.editor.ModelObjectElementFactory&lt;/code&gt; if necessary.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":com.sap.mi.fwk.ui.editor.IModelEditorInputFactory"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="default" type="boolean" use="default" value="false">
            <annotation>
               <documentation>
                  If &lt;code&gt;true&lt;/code&gt;, this element will be preferred among others, e.g. by opening the editor on double-click. The default is &lt;code&gt;false&lt;/code&gt;. The behavior of multiple default editors for the same object class is undefined.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="canHandleChildren" type="boolean" use="default" value="true">
            <annotation>
               <documentation>
                  Used to decide whether the editor can be opened for &lt;em&gt;composite&lt;/em&gt; children of its input object. Editors that are unable to display composite children should set this to &lt;code&gt;false&lt;/code&gt;. Default is &lt;code&gt;true&lt;/code&gt;.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         7.1.1
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         &lt;pre&gt;
   &lt;extension
         point=&quot;com.sap.mi.fwk.ui.modelObjectEditorAssociations&quot;&gt;
      &lt;association
            objectClass=&quot;com.sap.mi.gfw.mm.pictograms.Diagram&quot;
            editorId=&quot;com.sap.mi.gfw.eclipse.internal.editor.DiagramEditor&quot;
            inputFactory=&quot;com.sap.mi.gfw.eclipse.internal.editor.DiagramEditorFactory&quot;
            default=&quot;true&quot;
            canHandleChildren=&quot;true&quot;&gt;
      &lt;/association&gt;
   &lt;/extension&gt;
&lt;/pre&gt;

The example above associates instances of &lt;code&gt;com.sap.mi.gfw.mm.pictograms.Diagram&lt;/code&gt; (including subclasses) to the &lt;code&gt;com.sap.mi.gfw.eclipse.internal.editor.DiagramEditor&lt;/code&gt; editor. The editor is the default for the object class, and it will also be opened for composite children of Diagram instances (e.g. &lt;code&gt;Pictogram&lt;/code&gt; elements).
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiInfo"/>
      </appinfo>
      <documentation>
         There is no API to programmatically attach a model object class to an editor. Use the &lt;code&gt;org.eclipse.ui.IEditorRegistry&lt;/code&gt; facility provided by the platform to query for editor definitions.
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         Use &lt;code&gt;com.sap.mi.fwk.ui.editor.ModelObjectElementFactory&lt;/code&gt; as default implementation of &lt;code&gt;com.sap.mi.fwk.ui.editor.IModelEditorInputFactory&lt;/code&gt;, and subclass as needed.
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="copyright"/>
      </appinfo>
      <documentation>
         Copyright SAP AG, 2007
      </documentation>
   </annotation>

</schema>
