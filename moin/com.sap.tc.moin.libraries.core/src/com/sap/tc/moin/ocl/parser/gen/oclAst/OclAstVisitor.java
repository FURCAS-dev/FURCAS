/**
   * This file is generated for MOIN-OCL with LPG. 
   */

package com.sap.tc.moin.ocl.parser.gen.oclAst;

public interface OclAstVisitor
{
    void visit(NodeToken n);
    void visit(Ident n);
    void visit(PathNameIdent n);
    void visit(PathNames n);
    void visit(ContainerNamePrefix n);
    void visit(VariableDeclaration n);
    void visit(WithTypeExpression n);
    void visit(VariableDeclarationWithType n);
    void visit(VariableDeclarationWithTypeN n);
    void visit(PrimTypeInteger n);
    void visit(PrimTypeString n);
    void visit(PrimTypeReal n);
    void visit(PrimTypeFloat n);
    void visit(PrimTypeDouble n);
    void visit(PrimTypeBoolean n);
    void visit(PrimTypeOclAny n);
    void visit(PrimTypeOclVoid n);
    void visit(PrimTypeOclInvalid n);
    void visit(CollectionType n);
    void visit(SetKind n);
    void visit(BagKind n);
    void visit(SequenceKind n);
    void visit(OrderedSetKind n);
    void visit(CollectionKind n);
    void visit(TupleType n);
    void visit(ContextBodyOclFile n);
    void visit(OclFileOclExpression n);
    void visit(PackageDeclarations n);
    void visit(PackageDeclaration n);
    void visit(ContextDeclarations n);
    void visit(AttrOrAssocContextDecl n);
    void visit(InitOrDerValueN n);
    void visit(InitValue n);
    void visit(DeriveValue n);
    void visit(ClassifierContextDecl n);
    void visit(InvOrDefs n);
    void visit(InvDeclaration n);
    void visit(DefDeclaration n);
    void visit(ExpDeclaration n);
    void visit(OperationDefExpression n);
    void visit(OperationContextDecl n);
    void visit(PrePostOrBodyDecls n);
    void visit(PreConditionDecl n);
    void visit(PostConditionDecl n);
    void visit(BodyDecl n);
    void visit(OperationDecl n);
    void visit(LetExpression n);
    void visit(VariableAssignmentN n);
    void visit(VariableAssignment n);
    void visit(VariableAssignmentWithType n);
    void visit(Self n);
    void visit(TypeLiteral n);
    void visit(Variable n);
    void visit(LogicalExpression n);
    void visit(AndBooleanExpression n);
    void visit(OrBooleanExpression n);
    void visit(XorBooleanExpression n);
    void visit(EqualRelationalExpression n);
    void visit(NotEqualRelationalExpression n);
    void visit(GreaterRelationalExpression n);
    void visit(LessRelationalExpression n);
    void visit(GreaterEqualRelationalExpression n);
    void visit(LessEqualRelationalExpression n);
    void visit(IfExpression n);
    void visit(PlusAdditiveExpression n);
    void visit(MinusAdditiveExpression n);
    void visit(MultMultiplicativeExpression n);
    void visit(DivideMultiplicativeExpression n);
    void visit(MinusUnaryExpression n);
    void visit(NotUnaryExpression n);
    void visit(PostfixExpression n);
    void visit(ParenthesizedPrimaryExpression n);
    void visit(ObjectPropertyInvocation n);
    void visit(CollectionPropertyInvocation n);
    void visit(LoopPropertyInvocation n);
    void visit(OperationCall n);
    void visit(CallOclIsUndefined n);
    void visit(CallOclIsInvalid n);
    void visit(CallAllInstances n);
    void visit(CallOclAsType n);
    void visit(CallOclIsKindOf n);
    void visit(CallOclIsTypeOf n);
    void visit(CallEqual n);
    void visit(CallNotEqual n);
    void visit(CallPlus n);
    void visit(CallMult n);
    void visit(CallDivide n);
    void visit(CallGreater n);
    void visit(CallLess n);
    void visit(CallGreaterEqual n);
    void visit(CallLessEqual n);
    void visit(CallAnd n);
    void visit(CallOr n);
    void visit(CallXor n);
    void visit(NoArguments n);
    void visit(MultipleArguments n);
    void visit(AttrOrNavCall n);
    void visit(AssociationQualifier n);
    void visit(IteratorForAll n);
    void visit(IteratorExists n);
    void visit(IteratorIsUnique n);
    void visit(IteratorOne n);
    void visit(IteratorAny n);
    void visit(IteratorCollect n);
    void visit(IteratorSelect n);
    void visit(IteratorReject n);
    void visit(IteratorCollectNested n);
    void visit(IteratorSortedBy n);
    void visit(IteratorOneVarDecl n);
    void visit(IteratorTwoVarDecl n);
    void visit(IterateVarDecl n);
    void visit(TimeExpressionOpt n);
    void visit(CollectionLiteral n);
    void visit(CollectionLiteralParts n);
    void visit(CollectionLiteralExpression n);
    void visit(CollectionLiteralIntegerRange n);
    void visit(IntegerLiteralRange n);
    void visit(Minus n);
    void visit(CollectionRange n);
    void visit(IntegerLiteral n);
    void visit(RealLiteral n);
    void visit(StringLiteral n);
    void visit(BooleanLiteralTrue n);
    void visit(BooleanLiteralFalse n);
    void visit(NullLiteral n);
    void visit(InvalidLiteral n);
    void visit(TupleLiteral n);
    void visit(Arguments n);
    void visit(IterateVarDeclAndAcc n);
}

