package com.sap.tc.moin.repository.core.xmi.reader.parser;

import org.xml.sax.Attributes;

/**
 * This is the abstract base class for all classes representing XML elements found in the XMI document. It holds the
 * {@link com.sap.tc.moin.repository.core.xmi.reader.parser.XmiContext} instance, which is a mandatory constructor
 * parameter, and the element's parent element.
 */
abstract class XmiElement {

    /**
     * Holds the XmiContext instance used during the complete deserialization process.
     */
    protected XmiContext context;

    /**
     * Stores the parent element of this element.
     */
    protected XmiElement parent;

    /**
     * Constructor taking the parent XmiElement and the XmiContext instance.
     */
    XmiElement( XmiElement parentElement, XmiContext ctx ) {

        parent = parentElement;
        context = ctx;
    }

    /**
     * Constructor taking the XmiContext instance only.
     */
    XmiElement( XmiContext ctx ) {

        context = ctx;
    }

    /**
     * Returns the parent XmiElement.
     */
    XmiElement getParentElement( ) {

        return parent;
    }

    /**
     * Handles <em>startElement</em> events generated by the SAX parser. Usually creates a sub-element and returns it,
     * or returns itself.
     */
    XmiElement startElement( String qName, Attributes attrs ) {

        return this;
    }

    /**
     * Handles <em>endElement</em> events generated by the SAX parser. Usually passes on the collected information to
     * the parent via {@link #receiveValue(Object)}, and finally returns the parent.
     */
    XmiElement endElement( String qName ) {

        return parent;
    }

    /**
     * Handles <em>characters</em> events generated by the SAX parser. The default behaviour in this base class is to
     * ignore the event.
     */
    void characters( char buf[], int offset, int len ) {

    }

    /**
     * Method called by sub-elements to propagate values to their parent element.
     */
    void receiveValue( Object value ) {

    }
}