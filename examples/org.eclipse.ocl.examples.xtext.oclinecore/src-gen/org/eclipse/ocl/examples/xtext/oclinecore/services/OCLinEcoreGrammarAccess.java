/*
* generated by Xtext
*/

package org.eclipse.ocl.examples.xtext.oclinecore.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.ocl.examples.xtext.essentialocl.services.EssentialOCLGrammarAccess;

@Singleton
public class OCLinEcoreGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class DocumentCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DocumentCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportsImportCSParserRuleCall_0_0 = (RuleCall)cImportsAssignment_0.eContents().get(0);
		private final Assignment cPackagesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPackagesPackageCSParserRuleCall_1_0 = (RuleCall)cPackagesAssignment_1.eContents().get(0);
		
		//DocumentCS:
		//  imports+=ImportCS* packages+=PackageCS*; 
		////generate oclinEcore2 "http://www.eclipse.org/ocl/examples/xtext/oclinecore/OCLinEcore"
		public ParserRule getRule() { return rule; }

		//imports+=ImportCS* packages+=PackageCS*
		public Group getGroup() { return cGroup; }

		//imports+=ImportCS*
		public Assignment getImportsAssignment_0() { return cImportsAssignment_0; }

		//ImportCS
		public RuleCall getImportsImportCSParserRuleCall_0_0() { return cImportsImportCSParserRuleCall_0_0; }

		//packages+=PackageCS*
		public Assignment getPackagesAssignment_1() { return cPackagesAssignment_1; }

		//PackageCS
		public RuleCall getPackagesPackageCSParserRuleCall_1_0() { return cPackagesPackageCSParserRuleCall_1_0; }
	}

	public class FQNElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FQN");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIdentifierParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIdentifierParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//FQN returns ecore::EString:
		//  Identifier ("." Identifier)*;
		public ParserRule getRule() { return rule; }

		//Identifier ("." Identifier)*
		public Group getGroup() { return cGroup; }

		//Identifier
		public RuleCall getIdentifierParserRuleCall_0() { return cIdentifierParserRuleCall_0; }

		//("." Identifier)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//Identifier
		public RuleCall getIdentifierParserRuleCall_1_1() { return cIdentifierParserRuleCall_1_1; }
	}

	public class INTEGERElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "INTEGER");
		private final RuleCall cINTTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//INTEGER returns ecore::EInt:
		//  INT;
		public ParserRule getRule() { return rule; }

		//INT
		public RuleCall getINTTerminalRuleCall() { return cINTTerminalRuleCall; }
	}

	public class LOWERElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LOWER");
		private final RuleCall cINTTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//LOWER returns ecore::EInt:
		//  INT;
		public ParserRule getRule() { return rule; }

		//INT
		public RuleCall getINTTerminalRuleCall() { return cINTTerminalRuleCall; }
	}

	public class UPPERElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UPPER");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cAsteriskKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//UPPER returns ecore::EInt:
		//  INT|"*";
		public ParserRule getRule() { return rule; }

		//INT|"*"
		public Alternatives getAlternatives() { return cAlternatives; }

		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//"*"
		public Keyword getAsteriskKeyword_1() { return cAsteriskKeyword_1; }
	}

	public class RestrictedKeywordsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RestrictedKeywords");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAbstractKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cAttributeKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cBodyKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cClassKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cEnumKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cExtendsKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cIdKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cImportKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cInterfaceKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cInvariantKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cOperationKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cOrderedKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cPackageKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Keyword cPropertyKeyword_13 = (Keyword)cAlternatives.eContents().get(13);
		private final Keyword cSerializableKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		private final Keyword cTransientKeyword_15 = (Keyword)cAlternatives.eContents().get(15);
		private final Keyword cUniqueKeyword_16 = (Keyword)cAlternatives.eContents().get(16);
		private final Keyword cVolatileKeyword_17 = (Keyword)cAlternatives.eContents().get(17);
		
		//RestrictedKeywords returns ecore::EString:
		//  "abstract"|"attribute"|"body"|"class"|"enum"|"extends"|"id"|"import"|"interface"
		//  |"invariant"|"operation"|"ordered"|"package"|"property"|"serializable"|
		//  "transient"|"unique"|"volatile"; 
		//
		//    			 // For extension by derived grammars
		//	 
		////|	'annotation'
		////|	'api'
		//	 
		//	 
		//	 
		////|	'composes'
		////|	'datatype'
		////|	'derivation'
		////|	'derived'
		////|	'documentation'
		//	 
		//	 
		//	 
		//	 
		////|	'initial'
		//	 
		//	 
		//	 
		//	 
		//	 
		////|	'postcondition'
		////|	'precondition'
		//	 
		////|	'readonly'
		////|	'resolve'
		//	 
		////|	'super'
		////|	'throws'
		//	 
		//	 
		////|	'unsettable'
		public ParserRule getRule() { return rule; }

		//"abstract"|"attribute"|"body"|"class"|"enum"|"extends"|"id"|"import"|"interface"
		//|"invariant"|"operation"|"ordered"|"package"|"property"|"serializable"|
		//"transient"|"unique"|"volatile" 
		//
		//    			 // For extension by derived grammars
		//	 
		////|	'annotation'
		////|	'api'
		//	 
		//	 
		//	 
		////|	'composes'
		////|	'datatype'
		////|	'derivation'
		////|	'derived'
		////|	'documentation'
		//	 
		//	 
		//	 
		//	 
		////|	'initial'
		//	 
		//	 
		//	 
		//	 
		//	 
		////|	'postcondition'
		////|	'precondition'
		//	 
		////|	'readonly'
		////|	'resolve'
		//	 
		////|	'super'
		////|	'throws'
		//	 
		//	 
		////|	'unsettable'
		public Alternatives getAlternatives() { return cAlternatives; }

		//"abstract" 			 // For extension by derived grammars
		//	 
		////|	'annotation'
		////|	'api'
		public Keyword getAbstractKeyword_0() { return cAbstractKeyword_0; }

		//"attribute"
		public Keyword getAttributeKeyword_1() { return cAttributeKeyword_1; }

		//"body"
		public Keyword getBodyKeyword_2() { return cBodyKeyword_2; }

		//"class" 	 
		////|	'composes'
		////|	'datatype'
		////|	'derivation'
		////|	'derived'
		////|	'documentation'
		public Keyword getClassKeyword_3() { return cClassKeyword_3; }

		//"enum"
		public Keyword getEnumKeyword_4() { return cEnumKeyword_4; }

		//"extends"
		public Keyword getExtendsKeyword_5() { return cExtendsKeyword_5; }

		//"id"
		public Keyword getIdKeyword_6() { return cIdKeyword_6; }

		//"import" 	 
		////|	'initial'
		public Keyword getImportKeyword_7() { return cImportKeyword_7; }

		//"interface"
		public Keyword getInterfaceKeyword_8() { return cInterfaceKeyword_8; }

		//"invariant"
		public Keyword getInvariantKeyword_9() { return cInvariantKeyword_9; }

		//"operation"
		public Keyword getOperationKeyword_10() { return cOperationKeyword_10; }

		//"ordered"
		public Keyword getOrderedKeyword_11() { return cOrderedKeyword_11; }

		//"package" 	 
		////|	'postcondition'
		////|	'precondition'
		public Keyword getPackageKeyword_12() { return cPackageKeyword_12; }

		//"property" 	 
		////|	'readonly'
		////|	'resolve'
		public Keyword getPropertyKeyword_13() { return cPropertyKeyword_13; }

		//"serializable" 	 
		////|	'super'
		////|	'throws'
		public Keyword getSerializableKeyword_14() { return cSerializableKeyword_14; }

		//"transient"
		public Keyword getTransientKeyword_15() { return cTransientKeyword_15; }

		//"unique" 	 
		////|	'unsettable'
		public Keyword getUniqueKeyword_16() { return cUniqueKeyword_16; }

		//"volatile"
		public Keyword getVolatileKeyword_17() { return cVolatileKeyword_17; }
	}

	public class IdentifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Identifier");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cID_TERMINALTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cEKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cEKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final RuleCall cRestrictedKeywordsParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Identifier returns ecore::EString:
		//  ID_TERMINAL|"e"|"E"|RestrictedKeywords; 
		//
		//    			 // For extension by derived grammars
		public ParserRule getRule() { return rule; }

		//ID_TERMINAL|"e"|"E"|RestrictedKeywords 
		//
		//    			 // For extension by derived grammars
		public Alternatives getAlternatives() { return cAlternatives; }

		//ID_TERMINAL 			 // For extension by derived grammars
		public RuleCall getID_TERMINALTerminalRuleCall_0() { return cID_TERMINALTerminalRuleCall_0; }

		//"e"
		public Keyword getEKeyword_1() { return cEKeyword_1; }

		//"E"
		public Keyword getEKeyword_2() { return cEKeyword_2; }

		//RestrictedKeywords
		public RuleCall getRestrictedKeywordsParserRuleCall_3() { return cRestrictedKeywordsParserRuleCall_3; }
	}

	public class BodyConstraintCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BodyConstraintCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStereotypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cStereotypeBodyKeyword_0_0 = (Keyword)cStereotypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIdentifierParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cExprValueAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cExprValueOclExpressionCSParserRuleCall_3_0_0 = (RuleCall)cExprValueAssignment_3_0.eContents().get(0);
		private final Assignment cExprStringAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cExprStringURLTerminalRuleCall_3_1_0 = (RuleCall)cExprStringAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//BodyConstraintCS returns ConstraintCS:
		//  stereotype="body" name=Identifier? ":" (exprValue=OclExpressionCS|exprString=URL)?
		//  ";";
		public ParserRule getRule() { return rule; }

		//stereotype="body" name=Identifier? ":" (exprValue=OclExpressionCS|exprString=URL)?
		//";"
		public Group getGroup() { return cGroup; }

		//stereotype="body"
		public Assignment getStereotypeAssignment_0() { return cStereotypeAssignment_0; }

		//"body"
		public Keyword getStereotypeBodyKeyword_0_0() { return cStereotypeBodyKeyword_0_0; }

		//name=Identifier?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//Identifier
		public RuleCall getNameIdentifierParserRuleCall_1_0() { return cNameIdentifierParserRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//(exprValue=OclExpressionCS|exprString=URL)?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//exprValue=OclExpressionCS
		public Assignment getExprValueAssignment_3_0() { return cExprValueAssignment_3_0; }

		//OclExpressionCS
		public RuleCall getExprValueOclExpressionCSParserRuleCall_3_0_0() { return cExprValueOclExpressionCSParserRuleCall_3_0_0; }

		//exprString=URL
		public Assignment getExprStringAssignment_3_1() { return cExprStringAssignment_3_1; }

		//URL
		public RuleCall getExprStringURLTerminalRuleCall_3_1_0() { return cExprStringURLTerminalRuleCall_3_1_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class DerivedConstraintCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DerivedConstraintCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStereotypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cStereotypeDerivationKeyword_0_0 = (Keyword)cStereotypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cExprValueAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cExprValueOclExpressionCSParserRuleCall_2_0_0 = (RuleCall)cExprValueAssignment_2_0.eContents().get(0);
		private final Assignment cExprStringAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cExprStringURLTerminalRuleCall_2_1_0 = (RuleCall)cExprStringAssignment_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//DerivedConstraintCS returns ConstraintCS:
		//  stereotype="derivation" ":" (exprValue=OclExpressionCS|exprString=URL)? ";";
		public ParserRule getRule() { return rule; }

		//stereotype="derivation" ":" (exprValue=OclExpressionCS|exprString=URL)? ";"
		public Group getGroup() { return cGroup; }

		//stereotype="derivation"
		public Assignment getStereotypeAssignment_0() { return cStereotypeAssignment_0; }

		//"derivation"
		public Keyword getStereotypeDerivationKeyword_0_0() { return cStereotypeDerivationKeyword_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//(exprValue=OclExpressionCS|exprString=URL)?
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//exprValue=OclExpressionCS
		public Assignment getExprValueAssignment_2_0() { return cExprValueAssignment_2_0; }

		//OclExpressionCS
		public RuleCall getExprValueOclExpressionCSParserRuleCall_2_0_0() { return cExprValueOclExpressionCSParserRuleCall_2_0_0; }

		//exprString=URL
		public Assignment getExprStringAssignment_2_1() { return cExprStringAssignment_2_1; }

		//URL
		public RuleCall getExprStringURLTerminalRuleCall_2_1_0() { return cExprStringURLTerminalRuleCall_2_1_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class InitialConstraintCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InitialConstraintCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStereotypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cStereotypeInitialKeyword_0_0 = (Keyword)cStereotypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cExprValueAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cExprValueOclExpressionCSParserRuleCall_2_0_0 = (RuleCall)cExprValueAssignment_2_0.eContents().get(0);
		private final Assignment cExprStringAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cExprStringURLTerminalRuleCall_2_1_0 = (RuleCall)cExprStringAssignment_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//InitialConstraintCS returns ConstraintCS:
		//  stereotype="initial" ":" (exprValue=OclExpressionCS|exprString=URL)? ";";
		public ParserRule getRule() { return rule; }

		//stereotype="initial" ":" (exprValue=OclExpressionCS|exprString=URL)? ";"
		public Group getGroup() { return cGroup; }

		//stereotype="initial"
		public Assignment getStereotypeAssignment_0() { return cStereotypeAssignment_0; }

		//"initial"
		public Keyword getStereotypeInitialKeyword_0_0() { return cStereotypeInitialKeyword_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//(exprValue=OclExpressionCS|exprString=URL)?
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//exprValue=OclExpressionCS
		public Assignment getExprValueAssignment_2_0() { return cExprValueAssignment_2_0; }

		//OclExpressionCS
		public RuleCall getExprValueOclExpressionCSParserRuleCall_2_0_0() { return cExprValueOclExpressionCSParserRuleCall_2_0_0; }

		//exprString=URL
		public Assignment getExprStringAssignment_2_1() { return cExprStringAssignment_2_1; }

		//URL
		public RuleCall getExprStringURLTerminalRuleCall_2_1_0() { return cExprStringURLTerminalRuleCall_2_1_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class InvariantConstraintCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InvariantConstraintCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStereotypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cStereotypeInvariantKeyword_0_0 = (Keyword)cStereotypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIdentifierParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cExprValueAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cExprValueOclExpressionCSParserRuleCall_3_0_0 = (RuleCall)cExprValueAssignment_3_0.eContents().get(0);
		private final Assignment cExprStringAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cExprStringURLTerminalRuleCall_3_1_0 = (RuleCall)cExprStringAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//InvariantConstraintCS returns ConstraintCS:
		//  stereotype="invariant" name=Identifier? ":" (exprValue=OclExpressionCS|exprString=
		//  URL)? ";";
		public ParserRule getRule() { return rule; }

		//stereotype="invariant" name=Identifier? ":" (exprValue=OclExpressionCS|exprString=
		//URL)? ";"
		public Group getGroup() { return cGroup; }

		//stereotype="invariant"
		public Assignment getStereotypeAssignment_0() { return cStereotypeAssignment_0; }

		//"invariant"
		public Keyword getStereotypeInvariantKeyword_0_0() { return cStereotypeInvariantKeyword_0_0; }

		//name=Identifier?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//Identifier
		public RuleCall getNameIdentifierParserRuleCall_1_0() { return cNameIdentifierParserRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//(exprValue=OclExpressionCS|exprString=URL)?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//exprValue=OclExpressionCS
		public Assignment getExprValueAssignment_3_0() { return cExprValueAssignment_3_0; }

		//OclExpressionCS
		public RuleCall getExprValueOclExpressionCSParserRuleCall_3_0_0() { return cExprValueOclExpressionCSParserRuleCall_3_0_0; }

		//exprString=URL
		public Assignment getExprStringAssignment_3_1() { return cExprStringAssignment_3_1; }

		//URL
		public RuleCall getExprStringURLTerminalRuleCall_3_1_0() { return cExprStringURLTerminalRuleCall_3_1_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class PostconditionConstraintCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PostconditionConstraintCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStereotypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cStereotypePostconditionKeyword_0_0 = (Keyword)cStereotypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIdentifierParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cExprValueAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cExprValueOclExpressionCSParserRuleCall_3_0_0 = (RuleCall)cExprValueAssignment_3_0.eContents().get(0);
		private final Assignment cExprStringAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cExprStringURLTerminalRuleCall_3_1_0 = (RuleCall)cExprStringAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PostconditionConstraintCS returns ConstraintCS:
		//  stereotype="postcondition" name=Identifier? ":" (exprValue=OclExpressionCS|
		//  exprString=URL)? ";";
		public ParserRule getRule() { return rule; }

		//stereotype="postcondition" name=Identifier? ":" (exprValue=OclExpressionCS|
		//exprString=URL)? ";"
		public Group getGroup() { return cGroup; }

		//stereotype="postcondition"
		public Assignment getStereotypeAssignment_0() { return cStereotypeAssignment_0; }

		//"postcondition"
		public Keyword getStereotypePostconditionKeyword_0_0() { return cStereotypePostconditionKeyword_0_0; }

		//name=Identifier?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//Identifier
		public RuleCall getNameIdentifierParserRuleCall_1_0() { return cNameIdentifierParserRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//(exprValue=OclExpressionCS|exprString=URL)?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//exprValue=OclExpressionCS
		public Assignment getExprValueAssignment_3_0() { return cExprValueAssignment_3_0; }

		//OclExpressionCS
		public RuleCall getExprValueOclExpressionCSParserRuleCall_3_0_0() { return cExprValueOclExpressionCSParserRuleCall_3_0_0; }

		//exprString=URL
		public Assignment getExprStringAssignment_3_1() { return cExprStringAssignment_3_1; }

		//URL
		public RuleCall getExprStringURLTerminalRuleCall_3_1_0() { return cExprStringURLTerminalRuleCall_3_1_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class PreconditionConstraintCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PreconditionConstraintCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStereotypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cStereotypePreconditionKeyword_0_0 = (Keyword)cStereotypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIdentifierParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cExprValueAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cExprValueOclExpressionCSParserRuleCall_3_0_0 = (RuleCall)cExprValueAssignment_3_0.eContents().get(0);
		private final Assignment cExprStringAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cExprStringURLTerminalRuleCall_3_1_0 = (RuleCall)cExprStringAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PreconditionConstraintCS returns ConstraintCS:
		//  stereotype="precondition" name=Identifier? ":" (exprValue=OclExpressionCS|
		//  exprString=URL)? ";";
		public ParserRule getRule() { return rule; }

		//stereotype="precondition" name=Identifier? ":" (exprValue=OclExpressionCS|
		//exprString=URL)? ";"
		public Group getGroup() { return cGroup; }

		//stereotype="precondition"
		public Assignment getStereotypeAssignment_0() { return cStereotypeAssignment_0; }

		//"precondition"
		public Keyword getStereotypePreconditionKeyword_0_0() { return cStereotypePreconditionKeyword_0_0; }

		//name=Identifier?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//Identifier
		public RuleCall getNameIdentifierParserRuleCall_1_0() { return cNameIdentifierParserRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//(exprValue=OclExpressionCS|exprString=URL)?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//exprValue=OclExpressionCS
		public Assignment getExprValueAssignment_3_0() { return cExprValueAssignment_3_0; }

		//OclExpressionCS
		public RuleCall getExprValueOclExpressionCSParserRuleCall_3_0_0() { return cExprValueOclExpressionCSParserRuleCall_3_0_0; }

		//exprString=URL
		public Assignment getExprStringAssignment_3_1() { return cExprStringAssignment_3_1; }

		//URL
		public RuleCall getExprStringURLTerminalRuleCall_3_1_0() { return cExprStringURLTerminalRuleCall_3_1_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class EClassRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EClassRef");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRefEClassCrossReference_0 = (CrossReference)cRefAssignment.eContents().get(0);
		private final RuleCall cRefEClassIdentifierParserRuleCall_0_1 = (RuleCall)cRefEClassCrossReference_0.eContents().get(1);
		
		//EClassRef:
		//  ref=[ecore::EClass|Identifier];
		public ParserRule getRule() { return rule; }

		//ref=[ecore::EClass|Identifier]
		public Assignment getRefAssignment() { return cRefAssignment; }

		//[ecore::EClass|Identifier]
		public CrossReference getRefEClassCrossReference_0() { return cRefEClassCrossReference_0; }

		//Identifier
		public RuleCall getRefEClassIdentifierParserRuleCall_0_1() { return cRefEClassIdentifierParserRuleCall_0_1; }
	}

	public class EClassifierRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EClassifierRef");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRefEClassifierCrossReference_0 = (CrossReference)cRefAssignment.eContents().get(0);
		private final RuleCall cRefEClassifierIdentifierParserRuleCall_0_1 = (RuleCall)cRefEClassifierCrossReference_0.eContents().get(1);
		
		//EClassifierRef:
		//  ref=[ecore::EClassifier|Identifier];
		public ParserRule getRule() { return rule; }

		//ref=[ecore::EClassifier|Identifier]
		public Assignment getRefAssignment() { return cRefAssignment; }

		//[ecore::EClassifier|Identifier]
		public CrossReference getRefEClassifierCrossReference_0() { return cRefEClassifierCrossReference_0; }

		//Identifier
		public RuleCall getRefEClassifierIdentifierParserRuleCall_0_1() { return cRefEClassifierIdentifierParserRuleCall_0_1; }
	}

	public class EDataTypeRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EDataTypeRef");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRefEDataTypeCrossReference_0 = (CrossReference)cRefAssignment.eContents().get(0);
		private final RuleCall cRefEDataTypeIdentifierParserRuleCall_0_1 = (RuleCall)cRefEDataTypeCrossReference_0.eContents().get(1);
		
		//EDataTypeRef:
		//  ref=[ecore::EDataType|Identifier];
		public ParserRule getRule() { return rule; }

		//ref=[ecore::EDataType|Identifier]
		public Assignment getRefAssignment() { return cRefAssignment; }

		//[ecore::EDataType|Identifier]
		public CrossReference getRefEDataTypeCrossReference_0() { return cRefEDataTypeCrossReference_0; }

		//Identifier
		public RuleCall getRefEDataTypeIdentifierParserRuleCall_0_1() { return cRefEDataTypeIdentifierParserRuleCall_0_1; }
	}

	public class EReferenceRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EReferenceRef");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRefEReferenceCrossReference_0 = (CrossReference)cRefAssignment.eContents().get(0);
		private final RuleCall cRefEReferenceIdentifierParserRuleCall_0_1 = (RuleCall)cRefEReferenceCrossReference_0.eContents().get(1);
		
		//EReferenceRef:
		//  ref=[ecore::EReference|Identifier];
		public ParserRule getRule() { return rule; }

		//ref=[ecore::EReference|Identifier]
		public Assignment getRefAssignment() { return cRefAssignment; }

		//[ecore::EReference|Identifier]
		public CrossReference getRefEReferenceCrossReference_0() { return cRefEReferenceCrossReference_0; }

		//Identifier
		public RuleCall getRefEReferenceIdentifierParserRuleCall_0_1() { return cRefEReferenceIdentifierParserRuleCall_0_1; }
	}

	public class AnnotationCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnnotationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cIdSourceAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cIdSourceIdentifierParserRuleCall_1_0_0 = (RuleCall)cIdSourceAssignment_1_0.eContents().get(0);
		private final Assignment cStringSourceAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cStringSourceURLTerminalRuleCall_1_1_0 = (RuleCall)cStringSourceAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDetailsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDetailsDetailCSParserRuleCall_2_1_0 = (RuleCall)cDetailsAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cDetailsAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cDetailsDetailCSParserRuleCall_2_2_1_0 = (RuleCall)cDetailsAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Alternatives cAlternatives_3_0_1 = (Alternatives)cGroup_3_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_3_0_1_0 = (Assignment)cAlternatives_3_0_1.eContents().get(0);
		private final RuleCall cAnnotationsAnnotationElementCSParserRuleCall_3_0_1_0_0 = (RuleCall)cAnnotationsAssignment_3_0_1_0.eContents().get(0);
		private final Assignment cContentsAssignment_3_0_1_1 = (Assignment)cAlternatives_3_0_1.eContents().get(1);
		private final RuleCall cContentsModelElementCSParserRuleCall_3_0_1_1_0 = (RuleCall)cContentsAssignment_3_0_1_1.eContents().get(0);
		private final Assignment cReferencesAssignment_3_0_1_2 = (Assignment)cAlternatives_3_0_1.eContents().get(2);
		private final RuleCall cReferencesObjectRefParserRuleCall_3_0_1_2_0 = (RuleCall)cReferencesAssignment_3_0_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_3_1 = (Keyword)cAlternatives_3.eContents().get(1);
		
		//AnnotationCS:
		//  "annotation" (idSource=Identifier|stringSource=URL) ("(" details+=DetailCS (","
		//  details+=DetailCS)* ")")? ("{" (annotations+=AnnotationElementCS|contents+=
		//  ModelElementCS|references+=ObjectRef)+ "}"|";");
		public ParserRule getRule() { return rule; }

		//"annotation" (idSource=Identifier|stringSource=URL) ("(" details+=DetailCS (","
		//details+=DetailCS)* ")")? ("{" (annotations+=AnnotationElementCS|contents+=
		//ModelElementCS|references+=ObjectRef)+ "}"|";")
		public Group getGroup() { return cGroup; }

		//"annotation"
		public Keyword getAnnotationKeyword_0() { return cAnnotationKeyword_0; }

		//idSource=Identifier|stringSource=URL
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//idSource=Identifier
		public Assignment getIdSourceAssignment_1_0() { return cIdSourceAssignment_1_0; }

		//Identifier
		public RuleCall getIdSourceIdentifierParserRuleCall_1_0_0() { return cIdSourceIdentifierParserRuleCall_1_0_0; }

		//stringSource=URL
		public Assignment getStringSourceAssignment_1_1() { return cStringSourceAssignment_1_1; }

		//URL
		public RuleCall getStringSourceURLTerminalRuleCall_1_1_0() { return cStringSourceURLTerminalRuleCall_1_1_0; }

		//("(" details+=DetailCS ("," details+=DetailCS)* ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//details+=DetailCS
		public Assignment getDetailsAssignment_2_1() { return cDetailsAssignment_2_1; }

		//DetailCS
		public RuleCall getDetailsDetailCSParserRuleCall_2_1_0() { return cDetailsDetailCSParserRuleCall_2_1_0; }

		//("," details+=DetailCS)*
		public Group getGroup_2_2() { return cGroup_2_2; }

		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }

		//details+=DetailCS
		public Assignment getDetailsAssignment_2_2_1() { return cDetailsAssignment_2_2_1; }

		//DetailCS
		public RuleCall getDetailsDetailCSParserRuleCall_2_2_1_0() { return cDetailsDetailCSParserRuleCall_2_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }

		//"{" (annotations+=AnnotationElementCS|contents+=ModelElementCS|references+=
		//ObjectRef)+ "}"|";"
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//"{" (annotations+=AnnotationElementCS|contents+=ModelElementCS|references+=
		//ObjectRef)+ "}"
		public Group getGroup_3_0() { return cGroup_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0_0() { return cLeftCurlyBracketKeyword_3_0_0; }

		//(annotations+=AnnotationElementCS|contents+=ModelElementCS|references+=ObjectRef
		//)+
		public Alternatives getAlternatives_3_0_1() { return cAlternatives_3_0_1; }

		//annotations+=AnnotationElementCS
		public Assignment getAnnotationsAssignment_3_0_1_0() { return cAnnotationsAssignment_3_0_1_0; }

		//AnnotationElementCS
		public RuleCall getAnnotationsAnnotationElementCSParserRuleCall_3_0_1_0_0() { return cAnnotationsAnnotationElementCSParserRuleCall_3_0_1_0_0; }

		//contents+=ModelElementCS
		public Assignment getContentsAssignment_3_0_1_1() { return cContentsAssignment_3_0_1_1; }

		//ModelElementCS
		public RuleCall getContentsModelElementCSParserRuleCall_3_0_1_1_0() { return cContentsModelElementCSParserRuleCall_3_0_1_1_0; }

		//references+=ObjectRef
		public Assignment getReferencesAssignment_3_0_1_2() { return cReferencesAssignment_3_0_1_2; }

		//ObjectRef
		public RuleCall getReferencesObjectRefParserRuleCall_3_0_1_2_0() { return cReferencesObjectRefParserRuleCall_3_0_1_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_0_2() { return cRightCurlyBracketKeyword_3_0_2; }

		//";"
		public Keyword getSemicolonKeyword_3_1() { return cSemicolonKeyword_3_1; }
	}

	public class AnnotationElementCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationElementCS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAnnotationCSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDocumentationCSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AnnotationElementCS:
		//  AnnotationCS|DocumentationCS;
		public ParserRule getRule() { return rule; }

		//AnnotationCS|DocumentationCS
		public Alternatives getAlternatives() { return cAlternatives; }

		//AnnotationCS
		public RuleCall getAnnotationCSParserRuleCall_0() { return cAnnotationCSParserRuleCall_0; }

		//DocumentationCS
		public RuleCall getDocumentationCSParserRuleCall_1() { return cDocumentationCSParserRuleCall_1; }
	}

	public class AttributeCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttributeCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIdentifierParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTypeTypeRefCSParserRuleCall_2_1_0 = (RuleCall)cTypeAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Alternatives cAlternatives_2_2_1 = (Alternatives)cGroup_2_2.eContents().get(1);
		private final Group cGroup_2_2_1_0 = (Group)cAlternatives_2_2_1.eContents().get(0);
		private final Assignment cLowerAssignment_2_2_1_0_0 = (Assignment)cGroup_2_2_1_0.eContents().get(0);
		private final RuleCall cLowerLOWERParserRuleCall_2_2_1_0_0_0 = (RuleCall)cLowerAssignment_2_2_1_0_0.eContents().get(0);
		private final Group cGroup_2_2_1_0_1 = (Group)cGroup_2_2_1_0.eContents().get(1);
		private final Keyword cFullStopFullStopKeyword_2_2_1_0_1_0 = (Keyword)cGroup_2_2_1_0_1.eContents().get(0);
		private final Assignment cUpperAssignment_2_2_1_0_1_1 = (Assignment)cGroup_2_2_1_0_1.eContents().get(1);
		private final RuleCall cUpperUPPERParserRuleCall_2_2_1_0_1_1_0 = (RuleCall)cUpperAssignment_2_2_1_0_1_1.eContents().get(0);
		private final Assignment cMultiplicityAssignment_2_2_1_1 = (Assignment)cAlternatives_2_2_1.eContents().get(1);
		private final Alternatives cMultiplicityAlternatives_2_2_1_1_0 = (Alternatives)cMultiplicityAssignment_2_2_1_1.eContents().get(0);
		private final Keyword cMultiplicityAsteriskKeyword_2_2_1_1_0_0 = (Keyword)cMultiplicityAlternatives_2_2_1_1_0.eContents().get(0);
		private final Keyword cMultiplicityPlusSignKeyword_2_2_1_1_0_1 = (Keyword)cMultiplicityAlternatives_2_2_1_1_0.eContents().get(1);
		private final Keyword cMultiplicityQuestionMarkKeyword_2_2_1_1_0_2 = (Keyword)cMultiplicityAlternatives_2_2_1_1_0.eContents().get(2);
		private final Keyword cRightSquareBracketKeyword_2_2_2 = (Keyword)cGroup_2_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDefaultValueLiteralAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDefaultValueLiteralURLTerminalRuleCall_3_1_0 = (RuleCall)cDefaultValueLiteralAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cQualifiersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final Alternatives cQualifiersAlternatives_4_1_0 = (Alternatives)cQualifiersAssignment_4_1.eContents().get(0);
		private final Keyword cQualifiersApiKeyword_4_1_0_0 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(0);
		private final Keyword cQualifiersApiKeyword_4_1_0_1 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(1);
		private final Keyword cQualifiersDerivedKeyword_4_1_0_2 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(2);
		private final Keyword cQualifiersDerivedKeyword_4_1_0_3 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(3);
		private final Keyword cQualifiersIdKeyword_4_1_0_4 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(4);
		private final Keyword cQualifiersIdKeyword_4_1_0_5 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(5);
		private final Keyword cQualifiersOrderedKeyword_4_1_0_6 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(6);
		private final Keyword cQualifiersOrderedKeyword_4_1_0_7 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(7);
		private final Keyword cQualifiersReadonlyKeyword_4_1_0_8 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(8);
		private final Keyword cQualifiersReadonlyKeyword_4_1_0_9 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(9);
		private final Keyword cQualifiersTransientKeyword_4_1_0_10 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(10);
		private final Keyword cQualifiersTransientKeyword_4_1_0_11 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(11);
		private final Keyword cQualifiersUniqueKeyword_4_1_0_12 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(12);
		private final Keyword cQualifiersUniqueKeyword_4_1_0_13 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(13);
		private final Keyword cQualifiersUnsettableKeyword_4_1_0_14 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(14);
		private final Keyword cQualifiersUnsettableKeyword_4_1_0_15 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(15);
		private final Keyword cQualifiersVolatileKeyword_4_1_0_16 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(16);
		private final Keyword cQualifiersVolatileKeyword_4_1_0_17 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(17);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cQualifiersAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final Alternatives cQualifiersAlternatives_4_2_1_0 = (Alternatives)cQualifiersAssignment_4_2_1.eContents().get(0);
		private final Keyword cQualifiersApiKeyword_4_2_1_0_0 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(0);
		private final Keyword cQualifiersApiKeyword_4_2_1_0_1 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(1);
		private final Keyword cQualifiersDerivedKeyword_4_2_1_0_2 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(2);
		private final Keyword cQualifiersDerivedKeyword_4_2_1_0_3 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(3);
		private final Keyword cQualifiersIdKeyword_4_2_1_0_4 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(4);
		private final Keyword cQualifiersIdKeyword_4_2_1_0_5 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(5);
		private final Keyword cQualifiersOrderedKeyword_4_2_1_0_6 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(6);
		private final Keyword cQualifiersOrderedKeyword_4_2_1_0_7 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(7);
		private final Keyword cQualifiersReadonlyKeyword_4_2_1_0_8 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(8);
		private final Keyword cQualifiersReadonlyKeyword_4_2_1_0_9 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(9);
		private final Keyword cQualifiersTransientKeyword_4_2_1_0_10 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(10);
		private final Keyword cQualifiersTransientKeyword_4_2_1_0_11 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(11);
		private final Keyword cQualifiersUniqueKeyword_4_2_1_0_12 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(12);
		private final Keyword cQualifiersUniqueKeyword_4_2_1_0_13 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(13);
		private final Keyword cQualifiersUnsettableKeyword_4_2_1_0_14 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(14);
		private final Keyword cQualifiersUnsettableKeyword_4_2_1_0_15 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(15);
		private final Keyword cQualifiersVolatileKeyword_4_2_1_0_16 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(16);
		private final Keyword cQualifiersVolatileKeyword_4_2_1_0_17 = (Keyword)cQualifiersAlternatives_4_2_1_0.eContents().get(17);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Alternatives cAlternatives_5_0_1 = (Alternatives)cGroup_5_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_5_0_1_0 = (Assignment)cAlternatives_5_0_1.eContents().get(0);
		private final RuleCall cAnnotationsAnnotationElementCSParserRuleCall_5_0_1_0_0 = (RuleCall)cAnnotationsAssignment_5_0_1_0.eContents().get(0);
		private final Assignment cConstraintsAssignment_5_0_1_1 = (Assignment)cAlternatives_5_0_1.eContents().get(1);
		private final Alternatives cConstraintsAlternatives_5_0_1_1_0 = (Alternatives)cConstraintsAssignment_5_0_1_1.eContents().get(0);
		private final RuleCall cConstraintsInitialConstraintCSParserRuleCall_5_0_1_1_0_0 = (RuleCall)cConstraintsAlternatives_5_0_1_1_0.eContents().get(0);
		private final RuleCall cConstraintsDerivedConstraintCSParserRuleCall_5_0_1_1_0_1 = (RuleCall)cConstraintsAlternatives_5_0_1_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5_0_2 = (Keyword)cGroup_5_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_5_1 = (Keyword)cAlternatives_5.eContents().get(1);
		
		//AttributeCS:
		//  "attribute" name=Identifier (":" type=TypeRefCS ("[" (lower=LOWER (".." upper=UPPER)?|
		//  multiplicity=( "*" | "+" | "?" )) "]")?)? ("=" defaultValueLiteral=URL)? ("{" qualifiers+=(
		//  "api" | "!api" | "derived" | "!derived" | "id" | "!id" | "ordered" | "!ordered" | "readonly" |
		//  "!readonly" | "transient" | "!transient" | "unique" | "!unique" | "unsettable" |
		//  "!unsettable" | "volatile" | "!volatile" ) ("," qualifiers+=( "api" | "!api" | "derived" |
		//  "!derived" | "id" | "!id" | "ordered" | "!ordered" | "readonly" | "!readonly" | "transient" |
		//  "!transient" | "unique" | "!unique" | "unsettable" | "!unsettable" | "volatile" |
		//  "!volatile" ))* "}")? ("{" (annotations+=AnnotationElementCS|constraints+=(
		//  InitialConstraintCS | DerivedConstraintCS ))* "}"|";");
		public ParserRule getRule() { return rule; }

		//"attribute" name=Identifier (":" type=TypeRefCS ("[" (lower=LOWER (".." upper=UPPER)?|
		//multiplicity=( "*" | "+" | "?" )) "]")?)? ("=" defaultValueLiteral=URL)? ("{" qualifiers+=(
		//"api" | "!api" | "derived" | "!derived" | "id" | "!id" | "ordered" | "!ordered" | "readonly" |
		//"!readonly" | "transient" | "!transient" | "unique" | "!unique" | "unsettable" |
		//"!unsettable" | "volatile" | "!volatile" ) ("," qualifiers+=( "api" | "!api" | "derived" |
		//"!derived" | "id" | "!id" | "ordered" | "!ordered" | "readonly" | "!readonly" | "transient" |
		//"!transient" | "unique" | "!unique" | "unsettable" | "!unsettable" | "volatile" |
		//"!volatile" ))* "}")? ("{" (annotations+=AnnotationElementCS|constraints+=(
		//InitialConstraintCS | DerivedConstraintCS ))* "}"|";")
		public Group getGroup() { return cGroup; }

		//"attribute"
		public Keyword getAttributeKeyword_0() { return cAttributeKeyword_0; }

		//name=Identifier
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//Identifier
		public RuleCall getNameIdentifierParserRuleCall_1_0() { return cNameIdentifierParserRuleCall_1_0; }

		//(":" type=TypeRefCS ("[" (lower=LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+" | "?" ))
		//"]")?)?
		public Group getGroup_2() { return cGroup_2; }

		//":"
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }

		//type=TypeRefCS
		public Assignment getTypeAssignment_2_1() { return cTypeAssignment_2_1; }

		//TypeRefCS
		public RuleCall getTypeTypeRefCSParserRuleCall_2_1_0() { return cTypeTypeRefCSParserRuleCall_2_1_0; }

		//("[" (lower=LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+" | "?" )) "]")?
		public Group getGroup_2_2() { return cGroup_2_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2_2_0() { return cLeftSquareBracketKeyword_2_2_0; }

		//lower=LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+" | "?" )
		public Alternatives getAlternatives_2_2_1() { return cAlternatives_2_2_1; }

		//lower=LOWER (".." upper=UPPER)?
		public Group getGroup_2_2_1_0() { return cGroup_2_2_1_0; }

		//lower=LOWER
		public Assignment getLowerAssignment_2_2_1_0_0() { return cLowerAssignment_2_2_1_0_0; }

		//LOWER
		public RuleCall getLowerLOWERParserRuleCall_2_2_1_0_0_0() { return cLowerLOWERParserRuleCall_2_2_1_0_0_0; }

		//(".." upper=UPPER)?
		public Group getGroup_2_2_1_0_1() { return cGroup_2_2_1_0_1; }

		//".."
		public Keyword getFullStopFullStopKeyword_2_2_1_0_1_0() { return cFullStopFullStopKeyword_2_2_1_0_1_0; }

		//upper=UPPER
		public Assignment getUpperAssignment_2_2_1_0_1_1() { return cUpperAssignment_2_2_1_0_1_1; }

		//UPPER
		public RuleCall getUpperUPPERParserRuleCall_2_2_1_0_1_1_0() { return cUpperUPPERParserRuleCall_2_2_1_0_1_1_0; }

		//multiplicity=( "*" | "+" | "?" )
		public Assignment getMultiplicityAssignment_2_2_1_1() { return cMultiplicityAssignment_2_2_1_1; }

		//"*"|"+"|"?"
		public Alternatives getMultiplicityAlternatives_2_2_1_1_0() { return cMultiplicityAlternatives_2_2_1_1_0; }

		//"*"
		public Keyword getMultiplicityAsteriskKeyword_2_2_1_1_0_0() { return cMultiplicityAsteriskKeyword_2_2_1_1_0_0; }

		//"+"
		public Keyword getMultiplicityPlusSignKeyword_2_2_1_1_0_1() { return cMultiplicityPlusSignKeyword_2_2_1_1_0_1; }

		//"?"
		public Keyword getMultiplicityQuestionMarkKeyword_2_2_1_1_0_2() { return cMultiplicityQuestionMarkKeyword_2_2_1_1_0_2; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2_2_2() { return cRightSquareBracketKeyword_2_2_2; }

		//("=" defaultValueLiteral=URL)?
		public Group getGroup_3() { return cGroup_3; }

		//"="
		public Keyword getEqualsSignKeyword_3_0() { return cEqualsSignKeyword_3_0; }

		//defaultValueLiteral=URL
		public Assignment getDefaultValueLiteralAssignment_3_1() { return cDefaultValueLiteralAssignment_3_1; }

		//URL
		public RuleCall getDefaultValueLiteralURLTerminalRuleCall_3_1_0() { return cDefaultValueLiteralURLTerminalRuleCall_3_1_0; }

		//("{" qualifiers+=( "api" | "!api" | "derived" | "!derived" | "id" | "!id" | "ordered" |
		//"!ordered" | "readonly" | "!readonly" | "transient" | "!transient" | "unique" | "!unique" |
		//"unsettable" | "!unsettable" | "volatile" | "!volatile" ) ("," qualifiers+=( "api" | "!api" |
		//"derived" | "!derived" | "id" | "!id" | "ordered" | "!ordered" | "readonly" | "!readonly" |
		//"transient" | "!transient" | "unique" | "!unique" | "unsettable" | "!unsettable" |
		//"volatile" | "!volatile" ))* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }

		//qualifiers+=( "api" | "!api" | "derived" | "!derived" | "id" | "!id" | "ordered" | "!ordered" |
		//"readonly" | "!readonly" | "transient" | "!transient" | "unique" | "!unique" | "unsettable" |
		//"!unsettable" | "volatile" | "!volatile" )
		public Assignment getQualifiersAssignment_4_1() { return cQualifiersAssignment_4_1; }

		//"api"|"!api"|"derived"|"!derived"|"id"|"!id"|"ordered"|"!ordered"|"readonly"|
		//"!readonly"|"transient"|"!transient"|"unique"|"!unique"|"unsettable"|
		//"!unsettable"|"volatile"|"!volatile"
		public Alternatives getQualifiersAlternatives_4_1_0() { return cQualifiersAlternatives_4_1_0; }

		//"api"
		public Keyword getQualifiersApiKeyword_4_1_0_0() { return cQualifiersApiKeyword_4_1_0_0; }

		//"!api"
		public Keyword getQualifiersApiKeyword_4_1_0_1() { return cQualifiersApiKeyword_4_1_0_1; }

		//"derived"
		public Keyword getQualifiersDerivedKeyword_4_1_0_2() { return cQualifiersDerivedKeyword_4_1_0_2; }

		//"!derived"
		public Keyword getQualifiersDerivedKeyword_4_1_0_3() { return cQualifiersDerivedKeyword_4_1_0_3; }

		//"id"
		public Keyword getQualifiersIdKeyword_4_1_0_4() { return cQualifiersIdKeyword_4_1_0_4; }

		//"!id"
		public Keyword getQualifiersIdKeyword_4_1_0_5() { return cQualifiersIdKeyword_4_1_0_5; }

		//"ordered"
		public Keyword getQualifiersOrderedKeyword_4_1_0_6() { return cQualifiersOrderedKeyword_4_1_0_6; }

		//"!ordered"
		public Keyword getQualifiersOrderedKeyword_4_1_0_7() { return cQualifiersOrderedKeyword_4_1_0_7; }

		//"readonly"
		public Keyword getQualifiersReadonlyKeyword_4_1_0_8() { return cQualifiersReadonlyKeyword_4_1_0_8; }

		//"!readonly"
		public Keyword getQualifiersReadonlyKeyword_4_1_0_9() { return cQualifiersReadonlyKeyword_4_1_0_9; }

		//"transient"
		public Keyword getQualifiersTransientKeyword_4_1_0_10() { return cQualifiersTransientKeyword_4_1_0_10; }

		//"!transient"
		public Keyword getQualifiersTransientKeyword_4_1_0_11() { return cQualifiersTransientKeyword_4_1_0_11; }

		//"unique"
		public Keyword getQualifiersUniqueKeyword_4_1_0_12() { return cQualifiersUniqueKeyword_4_1_0_12; }

		//"!unique"
		public Keyword getQualifiersUniqueKeyword_4_1_0_13() { return cQualifiersUniqueKeyword_4_1_0_13; }

		//"unsettable"
		public Keyword getQualifiersUnsettableKeyword_4_1_0_14() { return cQualifiersUnsettableKeyword_4_1_0_14; }

		//"!unsettable"
		public Keyword getQualifiersUnsettableKeyword_4_1_0_15() { return cQualifiersUnsettableKeyword_4_1_0_15; }

		//"volatile"
		public Keyword getQualifiersVolatileKeyword_4_1_0_16() { return cQualifiersVolatileKeyword_4_1_0_16; }

		//"!volatile"
		public Keyword getQualifiersVolatileKeyword_4_1_0_17() { return cQualifiersVolatileKeyword_4_1_0_17; }

		//("," qualifiers+=( "api" | "!api" | "derived" | "!derived" | "id" | "!id" | "ordered" |
		//"!ordered" | "readonly" | "!readonly" | "transient" | "!transient" | "unique" | "!unique" |
		//"unsettable" | "!unsettable" | "volatile" | "!volatile" ))*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//qualifiers+=( "api" | "!api" | "derived" | "!derived" | "id" | "!id" | "ordered" | "!ordered" |
		//"readonly" | "!readonly" | "transient" | "!transient" | "unique" | "!unique" | "unsettable" |
		//"!unsettable" | "volatile" | "!volatile" )
		public Assignment getQualifiersAssignment_4_2_1() { return cQualifiersAssignment_4_2_1; }

		//"api"|"!api"|"derived"|"!derived"|"id"|"!id"|"ordered"|"!ordered"|"readonly"|
		//"!readonly"|"transient"|"!transient"|"unique"|"!unique"|"unsettable"|
		//"!unsettable"|"volatile"|"!volatile"
		public Alternatives getQualifiersAlternatives_4_2_1_0() { return cQualifiersAlternatives_4_2_1_0; }

		//"api"
		public Keyword getQualifiersApiKeyword_4_2_1_0_0() { return cQualifiersApiKeyword_4_2_1_0_0; }

		//"!api"
		public Keyword getQualifiersApiKeyword_4_2_1_0_1() { return cQualifiersApiKeyword_4_2_1_0_1; }

		//"derived"
		public Keyword getQualifiersDerivedKeyword_4_2_1_0_2() { return cQualifiersDerivedKeyword_4_2_1_0_2; }

		//"!derived"
		public Keyword getQualifiersDerivedKeyword_4_2_1_0_3() { return cQualifiersDerivedKeyword_4_2_1_0_3; }

		//"id"
		public Keyword getQualifiersIdKeyword_4_2_1_0_4() { return cQualifiersIdKeyword_4_2_1_0_4; }

		//"!id"
		public Keyword getQualifiersIdKeyword_4_2_1_0_5() { return cQualifiersIdKeyword_4_2_1_0_5; }

		//"ordered"
		public Keyword getQualifiersOrderedKeyword_4_2_1_0_6() { return cQualifiersOrderedKeyword_4_2_1_0_6; }

		//"!ordered"
		public Keyword getQualifiersOrderedKeyword_4_2_1_0_7() { return cQualifiersOrderedKeyword_4_2_1_0_7; }

		//"readonly"
		public Keyword getQualifiersReadonlyKeyword_4_2_1_0_8() { return cQualifiersReadonlyKeyword_4_2_1_0_8; }

		//"!readonly"
		public Keyword getQualifiersReadonlyKeyword_4_2_1_0_9() { return cQualifiersReadonlyKeyword_4_2_1_0_9; }

		//"transient"
		public Keyword getQualifiersTransientKeyword_4_2_1_0_10() { return cQualifiersTransientKeyword_4_2_1_0_10; }

		//"!transient"
		public Keyword getQualifiersTransientKeyword_4_2_1_0_11() { return cQualifiersTransientKeyword_4_2_1_0_11; }

		//"unique"
		public Keyword getQualifiersUniqueKeyword_4_2_1_0_12() { return cQualifiersUniqueKeyword_4_2_1_0_12; }

		//"!unique"
		public Keyword getQualifiersUniqueKeyword_4_2_1_0_13() { return cQualifiersUniqueKeyword_4_2_1_0_13; }

		//"unsettable"
		public Keyword getQualifiersUnsettableKeyword_4_2_1_0_14() { return cQualifiersUnsettableKeyword_4_2_1_0_14; }

		//"!unsettable"
		public Keyword getQualifiersUnsettableKeyword_4_2_1_0_15() { return cQualifiersUnsettableKeyword_4_2_1_0_15; }

		//"volatile"
		public Keyword getQualifiersVolatileKeyword_4_2_1_0_16() { return cQualifiersVolatileKeyword_4_2_1_0_16; }

		//"!volatile"
		public Keyword getQualifiersVolatileKeyword_4_2_1_0_17() { return cQualifiersVolatileKeyword_4_2_1_0_17; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }

		//"{" (annotations+=AnnotationElementCS|constraints+=( InitialConstraintCS |
		//DerivedConstraintCS ))* "}"|";"
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//"{" (annotations+=AnnotationElementCS|constraints+=( InitialConstraintCS |
		//DerivedConstraintCS ))* "}"
		public Group getGroup_5_0() { return cGroup_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_0_0() { return cLeftCurlyBracketKeyword_5_0_0; }

		//(annotations+=AnnotationElementCS|constraints+=( InitialConstraintCS |
		//DerivedConstraintCS ))*
		public Alternatives getAlternatives_5_0_1() { return cAlternatives_5_0_1; }

		//annotations+=AnnotationElementCS
		public Assignment getAnnotationsAssignment_5_0_1_0() { return cAnnotationsAssignment_5_0_1_0; }

		//AnnotationElementCS
		public RuleCall getAnnotationsAnnotationElementCSParserRuleCall_5_0_1_0_0() { return cAnnotationsAnnotationElementCSParserRuleCall_5_0_1_0_0; }

		//constraints+=( InitialConstraintCS | DerivedConstraintCS )
		public Assignment getConstraintsAssignment_5_0_1_1() { return cConstraintsAssignment_5_0_1_1; }

		//InitialConstraintCS|DerivedConstraintCS
		public Alternatives getConstraintsAlternatives_5_0_1_1_0() { return cConstraintsAlternatives_5_0_1_1_0; }

		//InitialConstraintCS
		public RuleCall getConstraintsInitialConstraintCSParserRuleCall_5_0_1_1_0_0() { return cConstraintsInitialConstraintCSParserRuleCall_5_0_1_1_0_0; }

		//DerivedConstraintCS
		public RuleCall getConstraintsDerivedConstraintCSParserRuleCall_5_0_1_1_0_1() { return cConstraintsDerivedConstraintCSParserRuleCall_5_0_1_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_0_2() { return cRightCurlyBracketKeyword_5_0_2; }

		//";"
		public Keyword getSemicolonKeyword_5_1() { return cSemicolonKeyword_5_1; }
	}

	public class ClassCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClassCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIdentifierParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLessThanSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTypeParametersTypeParameterCSParserRuleCall_2_1_0 = (RuleCall)cTypeParametersAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cTypeParametersTypeParameterCSParserRuleCall_2_2_1_0 = (RuleCall)cTypeParametersAssignment_2_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cExtendsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSuperTypesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSuperTypesTypeRefCSParserRuleCall_3_1_0 = (RuleCall)cSuperTypesAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cSuperTypesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cSuperTypesTypeRefCSParserRuleCall_3_2_1_0 = (RuleCall)cSuperTypesAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInstanceClassNameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cInstanceClassNameURLTerminalRuleCall_4_1_0 = (RuleCall)cInstanceClassNameAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cQualifiersAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final Alternatives cQualifiersAlternatives_5_1_0 = (Alternatives)cQualifiersAssignment_5_1.eContents().get(0);
		private final Keyword cQualifiersAbstractKeyword_5_1_0_0 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(0);
		private final Keyword cQualifiersAbstractKeyword_5_1_0_1 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(1);
		private final Keyword cQualifiersInterfaceKeyword_5_1_0_2 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(2);
		private final Keyword cQualifiersInterfaceKeyword_5_1_0_3 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(3);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cQualifiersAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final Alternatives cQualifiersAlternatives_5_2_1_0 = (Alternatives)cQualifiersAssignment_5_2_1.eContents().get(0);
		private final Keyword cQualifiersAbstractKeyword_5_2_1_0_0 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(0);
		private final Keyword cQualifiersAbstractKeyword_5_2_1_0_1 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(1);
		private final Keyword cQualifiersInterfaceKeyword_5_2_1_0_2 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(2);
		private final Keyword cQualifiersInterfaceKeyword_5_2_1_0_3 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cAlternatives_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_0_0 = (Keyword)cGroup_6_0.eContents().get(0);
		private final Alternatives cAlternatives_6_0_1 = (Alternatives)cGroup_6_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_6_0_1_0 = (Assignment)cAlternatives_6_0_1.eContents().get(0);
		private final RuleCall cAnnotationsAnnotationElementCSParserRuleCall_6_0_1_0_0 = (RuleCall)cAnnotationsAssignment_6_0_1_0.eContents().get(0);
		private final Assignment cOperationsAssignment_6_0_1_1 = (Assignment)cAlternatives_6_0_1.eContents().get(1);
		private final RuleCall cOperationsOperationCSParserRuleCall_6_0_1_1_0 = (RuleCall)cOperationsAssignment_6_0_1_1.eContents().get(0);
		private final Assignment cStructuralFeaturesAssignment_6_0_1_2 = (Assignment)cAlternatives_6_0_1.eContents().get(2);
		private final RuleCall cStructuralFeaturesStructuralFeatureCSParserRuleCall_6_0_1_2_0 = (RuleCall)cStructuralFeaturesAssignment_6_0_1_2.eContents().get(0);
		private final Assignment cConstraintsAssignment_6_0_1_3 = (Assignment)cAlternatives_6_0_1.eContents().get(3);
		private final RuleCall cConstraintsInvariantConstraintCSParserRuleCall_6_0_1_3_0 = (RuleCall)cConstraintsAssignment_6_0_1_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_0_2 = (Keyword)cGroup_6_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_6_1 = (Keyword)cAlternatives_6.eContents().get(1);
		
		//ClassCS:
		//  "class" name=Identifier ("<" typeParameters+=TypeParameterCS ("," typeParameters+=
		//  TypeParameterCS)* ">")? ("extends" superTypes+=TypeRefCS ("," superTypes+=TypeRefCS)*
		//  )? (":" instanceClassName=URL)? ("{" qualifiers+=( "abstract" | "!abstract" | "interface"
		//  | "!interface" ) ("," qualifiers+=( "abstract" | "!abstract" | "interface" | "!interface" ))
		//  * "}")? ("{" (annotations+=AnnotationElementCS|operations+=OperationCS|
		//  structuralFeatures+=StructuralFeatureCS|constraints+=InvariantConstraintCS)* "}"|
		//  ";");
		public ParserRule getRule() { return rule; }

		//"class" name=Identifier ("<" typeParameters+=TypeParameterCS ("," typeParameters+=
		//TypeParameterCS)* ">")? ("extends" superTypes+=TypeRefCS ("," superTypes+=TypeRefCS)*
		//)? (":" instanceClassName=URL)? ("{" qualifiers+=( "abstract" | "!abstract" | "interface"
		//| "!interface" ) ("," qualifiers+=( "abstract" | "!abstract" | "interface" | "!interface" ))
		// * "}")? ("{" (annotations+=AnnotationElementCS|operations+=OperationCS|
		//structuralFeatures+=StructuralFeatureCS|constraints+=InvariantConstraintCS)* "}"|
		//";")
		public Group getGroup() { return cGroup; }

		//"class"
		public Keyword getClassKeyword_0() { return cClassKeyword_0; }

		//name=Identifier
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//Identifier
		public RuleCall getNameIdentifierParserRuleCall_1_0() { return cNameIdentifierParserRuleCall_1_0; }

		//("<" typeParameters+=TypeParameterCS ("," typeParameters+=TypeParameterCS)* ">")?
		public Group getGroup_2() { return cGroup_2; }

		//"<"
		public Keyword getLessThanSignKeyword_2_0() { return cLessThanSignKeyword_2_0; }

		//typeParameters+=TypeParameterCS
		public Assignment getTypeParametersAssignment_2_1() { return cTypeParametersAssignment_2_1; }

		//TypeParameterCS
		public RuleCall getTypeParametersTypeParameterCSParserRuleCall_2_1_0() { return cTypeParametersTypeParameterCSParserRuleCall_2_1_0; }

		//("," typeParameters+=TypeParameterCS)*
		public Group getGroup_2_2() { return cGroup_2_2; }

		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }

		//typeParameters+=TypeParameterCS
		public Assignment getTypeParametersAssignment_2_2_1() { return cTypeParametersAssignment_2_2_1; }

		//TypeParameterCS
		public RuleCall getTypeParametersTypeParameterCSParserRuleCall_2_2_1_0() { return cTypeParametersTypeParameterCSParserRuleCall_2_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_2_3() { return cGreaterThanSignKeyword_2_3; }

		//("extends" superTypes+=TypeRefCS ("," superTypes+=TypeRefCS)*)?
		public Group getGroup_3() { return cGroup_3; }

		//"extends"
		public Keyword getExtendsKeyword_3_0() { return cExtendsKeyword_3_0; }

		//superTypes+=TypeRefCS
		public Assignment getSuperTypesAssignment_3_1() { return cSuperTypesAssignment_3_1; }

		//TypeRefCS
		public RuleCall getSuperTypesTypeRefCSParserRuleCall_3_1_0() { return cSuperTypesTypeRefCSParserRuleCall_3_1_0; }

		//("," superTypes+=TypeRefCS)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//superTypes+=TypeRefCS
		public Assignment getSuperTypesAssignment_3_2_1() { return cSuperTypesAssignment_3_2_1; }

		//TypeRefCS
		public RuleCall getSuperTypesTypeRefCSParserRuleCall_3_2_1_0() { return cSuperTypesTypeRefCSParserRuleCall_3_2_1_0; }

		//(":" instanceClassName=URL)?
		public Group getGroup_4() { return cGroup_4; }

		//":"
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }

		//instanceClassName=URL
		public Assignment getInstanceClassNameAssignment_4_1() { return cInstanceClassNameAssignment_4_1; }

		//URL
		public RuleCall getInstanceClassNameURLTerminalRuleCall_4_1_0() { return cInstanceClassNameURLTerminalRuleCall_4_1_0; }

		//("{" qualifiers+=( "abstract" | "!abstract" | "interface" | "!interface" ) ("," qualifiers
		//+=( "abstract" | "!abstract" | "interface" | "!interface" ))* "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_0() { return cLeftCurlyBracketKeyword_5_0; }

		//qualifiers+=( "abstract" | "!abstract" | "interface" | "!interface" )
		public Assignment getQualifiersAssignment_5_1() { return cQualifiersAssignment_5_1; }

		//"abstract"|"!abstract"|"interface"|"!interface"
		public Alternatives getQualifiersAlternatives_5_1_0() { return cQualifiersAlternatives_5_1_0; }

		//"abstract"
		public Keyword getQualifiersAbstractKeyword_5_1_0_0() { return cQualifiersAbstractKeyword_5_1_0_0; }

		//"!abstract"
		public Keyword getQualifiersAbstractKeyword_5_1_0_1() { return cQualifiersAbstractKeyword_5_1_0_1; }

		//"interface"
		public Keyword getQualifiersInterfaceKeyword_5_1_0_2() { return cQualifiersInterfaceKeyword_5_1_0_2; }

		//"!interface"
		public Keyword getQualifiersInterfaceKeyword_5_1_0_3() { return cQualifiersInterfaceKeyword_5_1_0_3; }

		//("," qualifiers+=( "abstract" | "!abstract" | "interface" | "!interface" ))*
		public Group getGroup_5_2() { return cGroup_5_2; }

		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }

		//qualifiers+=( "abstract" | "!abstract" | "interface" | "!interface" )
		public Assignment getQualifiersAssignment_5_2_1() { return cQualifiersAssignment_5_2_1; }

		//"abstract"|"!abstract"|"interface"|"!interface"
		public Alternatives getQualifiersAlternatives_5_2_1_0() { return cQualifiersAlternatives_5_2_1_0; }

		//"abstract"
		public Keyword getQualifiersAbstractKeyword_5_2_1_0_0() { return cQualifiersAbstractKeyword_5_2_1_0_0; }

		//"!abstract"
		public Keyword getQualifiersAbstractKeyword_5_2_1_0_1() { return cQualifiersAbstractKeyword_5_2_1_0_1; }

		//"interface"
		public Keyword getQualifiersInterfaceKeyword_5_2_1_0_2() { return cQualifiersInterfaceKeyword_5_2_1_0_2; }

		//"!interface"
		public Keyword getQualifiersInterfaceKeyword_5_2_1_0_3() { return cQualifiersInterfaceKeyword_5_2_1_0_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }

		//"{" (annotations+=AnnotationElementCS|operations+=OperationCS|structuralFeatures
		//+=StructuralFeatureCS|constraints+=InvariantConstraintCS)* "}"|";"
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//"{" (annotations+=AnnotationElementCS|operations+=OperationCS|structuralFeatures
		//+=StructuralFeatureCS|constraints+=InvariantConstraintCS)* "}"
		public Group getGroup_6_0() { return cGroup_6_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_0_0() { return cLeftCurlyBracketKeyword_6_0_0; }

		//(annotations+=AnnotationElementCS|operations+=OperationCS|structuralFeatures+=
		//StructuralFeatureCS|constraints+=InvariantConstraintCS)*
		public Alternatives getAlternatives_6_0_1() { return cAlternatives_6_0_1; }

		//annotations+=AnnotationElementCS
		public Assignment getAnnotationsAssignment_6_0_1_0() { return cAnnotationsAssignment_6_0_1_0; }

		//AnnotationElementCS
		public RuleCall getAnnotationsAnnotationElementCSParserRuleCall_6_0_1_0_0() { return cAnnotationsAnnotationElementCSParserRuleCall_6_0_1_0_0; }

		//operations+=OperationCS
		public Assignment getOperationsAssignment_6_0_1_1() { return cOperationsAssignment_6_0_1_1; }

		//OperationCS
		public RuleCall getOperationsOperationCSParserRuleCall_6_0_1_1_0() { return cOperationsOperationCSParserRuleCall_6_0_1_1_0; }

		//structuralFeatures+=StructuralFeatureCS
		public Assignment getStructuralFeaturesAssignment_6_0_1_2() { return cStructuralFeaturesAssignment_6_0_1_2; }

		//StructuralFeatureCS
		public RuleCall getStructuralFeaturesStructuralFeatureCSParserRuleCall_6_0_1_2_0() { return cStructuralFeaturesStructuralFeatureCSParserRuleCall_6_0_1_2_0; }

		//constraints+=InvariantConstraintCS
		public Assignment getConstraintsAssignment_6_0_1_3() { return cConstraintsAssignment_6_0_1_3; }

		//InvariantConstraintCS
		public RuleCall getConstraintsInvariantConstraintCSParserRuleCall_6_0_1_3_0() { return cConstraintsInvariantConstraintCSParserRuleCall_6_0_1_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_0_2() { return cRightCurlyBracketKeyword_6_0_2; }

		//";"
		public Keyword getSemicolonKeyword_6_1() { return cSemicolonKeyword_6_1; }
	}

	public class ClassRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClassRef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cClassCSRefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEClassRefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ClassRef:
		//  ClassCSRef|EClassRef;
		public ParserRule getRule() { return rule; }

		//ClassCSRef|EClassRef
		public Alternatives getAlternatives() { return cAlternatives; }

		//ClassCSRef
		public RuleCall getClassCSRefParserRuleCall_0() { return cClassCSRefParserRuleCall_0; }

		//EClassRef
		public RuleCall getEClassRefParserRuleCall_1() { return cEClassRefParserRuleCall_1; }
	}

	public class ClassCSRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClassCSRef");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRefClassCSCrossReference_0 = (CrossReference)cRefAssignment.eContents().get(0);
		private final RuleCall cRefClassCSIdentifierParserRuleCall_0_1 = (RuleCall)cRefClassCSCrossReference_0.eContents().get(1);
		
		//ClassCSRef:
		//  ref=[ClassCS|Identifier];
		public ParserRule getRule() { return rule; }

		//ref=[ClassCS|Identifier]
		public Assignment getRefAssignment() { return cRefAssignment; }

		//[ClassCS|Identifier]
		public CrossReference getRefClassCSCrossReference_0() { return cRefClassCSCrossReference_0; }

		//Identifier
		public RuleCall getRefClassCSIdentifierParserRuleCall_0_1() { return cRefClassCSIdentifierParserRuleCall_0_1; }
	}

	public class ClassifierCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClassifierCS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cClassCSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDataTypeCSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEnumCSParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ClassifierCS:
		//  ClassCS|DataTypeCS|EnumCS;
		public ParserRule getRule() { return rule; }

		//ClassCS|DataTypeCS|EnumCS
		public Alternatives getAlternatives() { return cAlternatives; }

		//ClassCS
		public RuleCall getClassCSParserRuleCall_0() { return cClassCSParserRuleCall_0; }

		//DataTypeCS
		public RuleCall getDataTypeCSParserRuleCall_1() { return cDataTypeCSParserRuleCall_1; }

		//EnumCS
		public RuleCall getEnumCSParserRuleCall_2() { return cEnumCSParserRuleCall_2; }
	}

	public class DataTypeCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataTypeCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDatatypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIdentifierParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLessThanSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTypeParametersTypeParameterCSParserRuleCall_2_1_0 = (RuleCall)cTypeParametersAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cTypeParametersTypeParameterCSParserRuleCall_2_2_1_0 = (RuleCall)cTypeParametersAssignment_2_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cInstanceClassNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cInstanceClassNameURLTerminalRuleCall_3_1_0 = (RuleCall)cInstanceClassNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cQualifiersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final Alternatives cQualifiersAlternatives_4_1_0 = (Alternatives)cQualifiersAssignment_4_1.eContents().get(0);
		private final Keyword cQualifiersSerializableKeyword_4_1_0_0 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(0);
		private final Keyword cQualifiersSerializableKeyword_4_1_0_1 = (Keyword)cQualifiersAlternatives_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Alternatives cAlternatives_5_0_1 = (Alternatives)cGroup_5_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_5_0_1_0 = (Assignment)cAlternatives_5_0_1.eContents().get(0);
		private final RuleCall cAnnotationsAnnotationElementCSParserRuleCall_5_0_1_0_0 = (RuleCall)cAnnotationsAssignment_5_0_1_0.eContents().get(0);
		private final Assignment cConstraintsAssignment_5_0_1_1 = (Assignment)cAlternatives_5_0_1.eContents().get(1);
		private final RuleCall cConstraintsInvariantConstraintCSParserRuleCall_5_0_1_1_0 = (RuleCall)cConstraintsAssignment_5_0_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_0_2 = (Keyword)cGroup_5_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_5_1 = (Keyword)cAlternatives_5.eContents().get(1);
		
		//DataTypeCS:
		//  "datatype" name=Identifier ("<" typeParameters+=TypeParameterCS ("," typeParameters+=
		//  TypeParameterCS)* ">")? (":" instanceClassName=URL)? ("{" qualifiers+=( "serializable"
		//  | "!serializable" ) "}")? ("{" (annotations+=AnnotationElementCS|constraints+=
		//  InvariantConstraintCS)* "}"|";");
		public ParserRule getRule() { return rule; }

		//"datatype" name=Identifier ("<" typeParameters+=TypeParameterCS ("," typeParameters+=
		//TypeParameterCS)* ">")? (":" instanceClassName=URL)? ("{" qualifiers+=( "serializable"
		//| "!serializable" ) "}")? ("{" (annotations+=AnnotationElementCS|constraints+=
		//InvariantConstraintCS)* "}"|";")
		public Group getGroup() { return cGroup; }

		//"datatype"
		public Keyword getDatatypeKeyword_0() { return cDatatypeKeyword_0; }

		//name=Identifier
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//Identifier
		public RuleCall getNameIdentifierParserRuleCall_1_0() { return cNameIdentifierParserRuleCall_1_0; }

		//("<" typeParameters+=TypeParameterCS ("," typeParameters+=TypeParameterCS)* ">")?
		public Group getGroup_2() { return cGroup_2; }

		//"<"
		public Keyword getLessThanSignKeyword_2_0() { return cLessThanSignKeyword_2_0; }

		//typeParameters+=TypeParameterCS
		public Assignment getTypeParametersAssignment_2_1() { return cTypeParametersAssignment_2_1; }

		//TypeParameterCS
		public RuleCall getTypeParametersTypeParameterCSParserRuleCall_2_1_0() { return cTypeParametersTypeParameterCSParserRuleCall_2_1_0; }

		//("," typeParameters+=TypeParameterCS)*
		public Group getGroup_2_2() { return cGroup_2_2; }

		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }

		//typeParameters+=TypeParameterCS
		public Assignment getTypeParametersAssignment_2_2_1() { return cTypeParametersAssignment_2_2_1; }

		//TypeParameterCS
		public RuleCall getTypeParametersTypeParameterCSParserRuleCall_2_2_1_0() { return cTypeParametersTypeParameterCSParserRuleCall_2_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_2_3() { return cGreaterThanSignKeyword_2_3; }

		//(":" instanceClassName=URL)?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//instanceClassName=URL
		public Assignment getInstanceClassNameAssignment_3_1() { return cInstanceClassNameAssignment_3_1; }

		//URL
		public RuleCall getInstanceClassNameURLTerminalRuleCall_3_1_0() { return cInstanceClassNameURLTerminalRuleCall_3_1_0; }

		//("{" qualifiers+=( "serializable" | "!serializable" ) "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }

		//qualifiers+=( "serializable" | "!serializable" )
		public Assignment getQualifiersAssignment_4_1() { return cQualifiersAssignment_4_1; }

		//"serializable"|"!serializable"
		public Alternatives getQualifiersAlternatives_4_1_0() { return cQualifiersAlternatives_4_1_0; }

		//"serializable"
		public Keyword getQualifiersSerializableKeyword_4_1_0_0() { return cQualifiersSerializableKeyword_4_1_0_0; }

		//"!serializable"
		public Keyword getQualifiersSerializableKeyword_4_1_0_1() { return cQualifiersSerializableKeyword_4_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_2() { return cRightCurlyBracketKeyword_4_2; }

		//"{" (annotations+=AnnotationElementCS|constraints+=InvariantConstraintCS)* "}"|";"
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//"{" (annotations+=AnnotationElementCS|constraints+=InvariantConstraintCS)* "}"
		public Group getGroup_5_0() { return cGroup_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_0_0() { return cLeftCurlyBracketKeyword_5_0_0; }

		//(annotations+=AnnotationElementCS|constraints+=InvariantConstraintCS)*
		public Alternatives getAlternatives_5_0_1() { return cAlternatives_5_0_1; }

		//annotations+=AnnotationElementCS
		public Assignment getAnnotationsAssignment_5_0_1_0() { return cAnnotationsAssignment_5_0_1_0; }

		//AnnotationElementCS
		public RuleCall getAnnotationsAnnotationElementCSParserRuleCall_5_0_1_0_0() { return cAnnotationsAnnotationElementCSParserRuleCall_5_0_1_0_0; }

		//constraints+=InvariantConstraintCS
		public Assignment getConstraintsAssignment_5_0_1_1() { return cConstraintsAssignment_5_0_1_1; }

		//InvariantConstraintCS
		public RuleCall getConstraintsInvariantConstraintCSParserRuleCall_5_0_1_1_0() { return cConstraintsInvariantConstraintCSParserRuleCall_5_0_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_0_2() { return cRightCurlyBracketKeyword_5_0_2; }

		//";"
		public Keyword getSemicolonKeyword_5_1() { return cSemicolonKeyword_5_1; }
	}

	public class DataTypeRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataTypeRef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDataTypeCSRefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEDataTypeRefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//DataTypeRef:
		//  DataTypeCSRef|EDataTypeRef;
		public ParserRule getRule() { return rule; }

		//DataTypeCSRef|EDataTypeRef
		public Alternatives getAlternatives() { return cAlternatives; }

		//DataTypeCSRef
		public RuleCall getDataTypeCSRefParserRuleCall_0() { return cDataTypeCSRefParserRuleCall_0; }

		//EDataTypeRef
		public RuleCall getEDataTypeRefParserRuleCall_1() { return cEDataTypeRefParserRuleCall_1; }
	}

	public class DataTypeCSRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataTypeCSRef");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRefDataTypeOrEnumCSCrossReference_0 = (CrossReference)cRefAssignment.eContents().get(0);
		private final RuleCall cRefDataTypeOrEnumCSIdentifierParserRuleCall_0_1 = (RuleCall)cRefDataTypeOrEnumCSCrossReference_0.eContents().get(1);
		
		//DataTypeCSRef:
		//  ref=[DataTypeOrEnumCS|Identifier];
		public ParserRule getRule() { return rule; }

		//ref=[DataTypeOrEnumCS|Identifier]
		public Assignment getRefAssignment() { return cRefAssignment; }

		//[DataTypeOrEnumCS|Identifier]
		public CrossReference getRefDataTypeOrEnumCSCrossReference_0() { return cRefDataTypeOrEnumCSCrossReference_0; }

		//Identifier
		public RuleCall getRefDataTypeOrEnumCSIdentifierParserRuleCall_0_1() { return cRefDataTypeOrEnumCSIdentifierParserRuleCall_0_1; }
	}

	public class DetailCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DetailCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cIdNameAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final RuleCall cIdNameIdentifierParserRuleCall_0_0_0 = (RuleCall)cIdNameAssignment_0_0.eContents().get(0);
		private final Assignment cStringNameAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final RuleCall cStringNameURLTerminalRuleCall_0_1_0 = (RuleCall)cStringNameAssignment_0_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSTRING_LITERALTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//DetailCS:
		//  (idName=Identifier|stringName=URL) "=" value=STRING_LITERAL;
		public ParserRule getRule() { return rule; }

		//(idName=Identifier|stringName=URL) "=" value=STRING_LITERAL
		public Group getGroup() { return cGroup; }

		//idName=Identifier|stringName=URL
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//idName=Identifier
		public Assignment getIdNameAssignment_0_0() { return cIdNameAssignment_0_0; }

		//Identifier
		public RuleCall getIdNameIdentifierParserRuleCall_0_0_0() { return cIdNameIdentifierParserRuleCall_0_0_0; }

		//stringName=URL
		public Assignment getStringNameAssignment_0_1() { return cStringNameAssignment_0_1; }

		//URL
		public RuleCall getStringNameURLTerminalRuleCall_0_1_0() { return cStringNameURLTerminalRuleCall_0_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=STRING_LITERAL
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//STRING_LITERAL
		public RuleCall getValueSTRING_LITERALTerminalRuleCall_2_0() { return cValueSTRING_LITERALTerminalRuleCall_2_0; }
	}

	public class DocumentationCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DocumentationCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDocumentationCSAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDocumentationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueURLTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDetailsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDetailsDetailCSParserRuleCall_3_1_0 = (RuleCall)cDetailsAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cDetailsAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cDetailsDetailCSParserRuleCall_3_2_1_0 = (RuleCall)cDetailsAssignment_3_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//DocumentationCS:
		//  {DocumentationCS} "documentation" value=URL? ("(" details+=DetailCS ("," details+=
		//  DetailCS)* ")")? ";";
		public ParserRule getRule() { return rule; }

		//{DocumentationCS} "documentation" value=URL? ("(" details+=DetailCS ("," details+=
		//DetailCS)* ")")? ";"
		public Group getGroup() { return cGroup; }

		//{DocumentationCS}
		public Action getDocumentationCSAction_0() { return cDocumentationCSAction_0; }

		//"documentation"
		public Keyword getDocumentationKeyword_1() { return cDocumentationKeyword_1; }

		//value=URL?
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//URL
		public RuleCall getValueURLTerminalRuleCall_2_0() { return cValueURLTerminalRuleCall_2_0; }

		//("(" details+=DetailCS ("," details+=DetailCS)* ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//details+=DetailCS
		public Assignment getDetailsAssignment_3_1() { return cDetailsAssignment_3_1; }

		//DetailCS
		public RuleCall getDetailsDetailCSParserRuleCall_3_1_0() { return cDetailsDetailCSParserRuleCall_3_1_0; }

		//("," details+=DetailCS)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//details+=DetailCS
		public Assignment getDetailsAssignment_3_2_1() { return cDetailsAssignment_3_2_1; }

		//DetailCS
		public RuleCall getDetailsDetailCSParserRuleCall_3_2_1_0() { return cDetailsDetailCSParserRuleCall_3_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_3() { return cRightParenthesisKeyword_3_3; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class EClassifierCSRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EClassifierCSRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cModelNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cModelNameIdentifierParserRuleCall_0_0 = (RuleCall)cModelNameAssignment_0.eContents().get(0);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRefAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cRefEClassifierCrossReference_2_0 = (CrossReference)cRefAssignment_2.eContents().get(0);
		private final RuleCall cRefEClassifierIdentifierParserRuleCall_2_0_1 = (RuleCall)cRefEClassifierCrossReference_2_0.eContents().get(1);
		
		//EClassifierCSRef:
		//  modelName=Identifier "::" ref=[ecore::EClassifier|Identifier];
		public ParserRule getRule() { return rule; }

		//modelName=Identifier "::" ref=[ecore::EClassifier|Identifier]
		public Group getGroup() { return cGroup; }

		//modelName=Identifier
		public Assignment getModelNameAssignment_0() { return cModelNameAssignment_0; }

		//Identifier
		public RuleCall getModelNameIdentifierParserRuleCall_0_0() { return cModelNameIdentifierParserRuleCall_0_0; }

		//"::"
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }

		//ref=[ecore::EClassifier|Identifier]
		public Assignment getRefAssignment_2() { return cRefAssignment_2; }

		//[ecore::EClassifier|Identifier]
		public CrossReference getRefEClassifierCrossReference_2_0() { return cRefEClassifierCrossReference_2_0; }

		//Identifier
		public RuleCall getRefEClassifierIdentifierParserRuleCall_2_0_1() { return cRefEClassifierIdentifierParserRuleCall_2_0_1; }
	}

	public class EnumCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnumKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIdentifierParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLessThanSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTypeParametersTypeParameterCSParserRuleCall_2_1_0 = (RuleCall)cTypeParametersAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cTypeParametersTypeParameterCSParserRuleCall_2_2_1_0 = (RuleCall)cTypeParametersAssignment_2_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cInstanceClassNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cInstanceClassNameURLTerminalRuleCall_3_1_0 = (RuleCall)cInstanceClassNameAssignment_3_1.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Alternatives cAlternatives_4_0_1 = (Alternatives)cGroup_4_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_4_0_1_0 = (Assignment)cAlternatives_4_0_1.eContents().get(0);
		private final RuleCall cAnnotationsAnnotationElementCSParserRuleCall_4_0_1_0_0 = (RuleCall)cAnnotationsAssignment_4_0_1_0.eContents().get(0);
		private final Assignment cLiteralsAssignment_4_0_1_1 = (Assignment)cAlternatives_4_0_1.eContents().get(1);
		private final RuleCall cLiteralsEnumLiteralCSParserRuleCall_4_0_1_1_0 = (RuleCall)cLiteralsAssignment_4_0_1_1.eContents().get(0);
		private final Assignment cConstraintsAssignment_4_0_1_2 = (Assignment)cAlternatives_4_0_1.eContents().get(2);
		private final RuleCall cConstraintsInvariantConstraintCSParserRuleCall_4_0_1_2_0 = (RuleCall)cConstraintsAssignment_4_0_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_0_2 = (Keyword)cGroup_4_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_4_1 = (Keyword)cAlternatives_4.eContents().get(1);
		
		//EnumCS:
		//  "enum" name=Identifier ("<" typeParameters+=TypeParameterCS ("," typeParameters+=
		//  TypeParameterCS)* ">")? (":" instanceClassName=URL)? ("{" (annotations+=
		//  AnnotationElementCS|literals+=EnumLiteralCS|constraints+=InvariantConstraintCS)*
		//  "}"|";");
		public ParserRule getRule() { return rule; }

		//"enum" name=Identifier ("<" typeParameters+=TypeParameterCS ("," typeParameters+=
		//TypeParameterCS)* ">")? (":" instanceClassName=URL)? ("{" (annotations+=
		//AnnotationElementCS|literals+=EnumLiteralCS|constraints+=InvariantConstraintCS)*
		//"}"|";")
		public Group getGroup() { return cGroup; }

		//"enum"
		public Keyword getEnumKeyword_0() { return cEnumKeyword_0; }

		//name=Identifier
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//Identifier
		public RuleCall getNameIdentifierParserRuleCall_1_0() { return cNameIdentifierParserRuleCall_1_0; }

		//("<" typeParameters+=TypeParameterCS ("," typeParameters+=TypeParameterCS)* ">")?
		public Group getGroup_2() { return cGroup_2; }

		//"<"
		public Keyword getLessThanSignKeyword_2_0() { return cLessThanSignKeyword_2_0; }

		//typeParameters+=TypeParameterCS
		public Assignment getTypeParametersAssignment_2_1() { return cTypeParametersAssignment_2_1; }

		//TypeParameterCS
		public RuleCall getTypeParametersTypeParameterCSParserRuleCall_2_1_0() { return cTypeParametersTypeParameterCSParserRuleCall_2_1_0; }

		//("," typeParameters+=TypeParameterCS)*
		public Group getGroup_2_2() { return cGroup_2_2; }

		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }

		//typeParameters+=TypeParameterCS
		public Assignment getTypeParametersAssignment_2_2_1() { return cTypeParametersAssignment_2_2_1; }

		//TypeParameterCS
		public RuleCall getTypeParametersTypeParameterCSParserRuleCall_2_2_1_0() { return cTypeParametersTypeParameterCSParserRuleCall_2_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_2_3() { return cGreaterThanSignKeyword_2_3; }

		//(":" instanceClassName=URL)?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//instanceClassName=URL
		public Assignment getInstanceClassNameAssignment_3_1() { return cInstanceClassNameAssignment_3_1; }

		//URL
		public RuleCall getInstanceClassNameURLTerminalRuleCall_3_1_0() { return cInstanceClassNameURLTerminalRuleCall_3_1_0; }

		//"{" (annotations+=AnnotationElementCS|literals+=EnumLiteralCS|constraints+=
		//InvariantConstraintCS)* "}"|";"
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//"{" (annotations+=AnnotationElementCS|literals+=EnumLiteralCS|constraints+=
		//InvariantConstraintCS)* "}"
		public Group getGroup_4_0() { return cGroup_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_0_0() { return cLeftCurlyBracketKeyword_4_0_0; }

		//(annotations+=AnnotationElementCS|literals+=EnumLiteralCS|constraints+=
		//InvariantConstraintCS)*
		public Alternatives getAlternatives_4_0_1() { return cAlternatives_4_0_1; }

		//annotations+=AnnotationElementCS
		public Assignment getAnnotationsAssignment_4_0_1_0() { return cAnnotationsAssignment_4_0_1_0; }

		//AnnotationElementCS
		public RuleCall getAnnotationsAnnotationElementCSParserRuleCall_4_0_1_0_0() { return cAnnotationsAnnotationElementCSParserRuleCall_4_0_1_0_0; }

		//literals+=EnumLiteralCS
		public Assignment getLiteralsAssignment_4_0_1_1() { return cLiteralsAssignment_4_0_1_1; }

		//EnumLiteralCS
		public RuleCall getLiteralsEnumLiteralCSParserRuleCall_4_0_1_1_0() { return cLiteralsEnumLiteralCSParserRuleCall_4_0_1_1_0; }

		//constraints+=InvariantConstraintCS
		public Assignment getConstraintsAssignment_4_0_1_2() { return cConstraintsAssignment_4_0_1_2; }

		//InvariantConstraintCS
		public RuleCall getConstraintsInvariantConstraintCSParserRuleCall_4_0_1_2_0() { return cConstraintsInvariantConstraintCSParserRuleCall_4_0_1_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_0_2() { return cRightCurlyBracketKeyword_4_0_2; }

		//";"
		public Keyword getSemicolonKeyword_4_1() { return cSemicolonKeyword_4_1; }
	}

	public class EnumLiteralCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumLiteralCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIdentifierParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cValueAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValueINTEGERParserRuleCall_1_1_0 = (RuleCall)cValueAssignment_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cAnnotationsAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cAnnotationsAnnotationElementCSParserRuleCall_2_0_1_0 = (RuleCall)cAnnotationsAssignment_2_0_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_0_2 = (Keyword)cGroup_2_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		
		//EnumLiteralCS:
		//  name=Identifier ("=" value=INTEGER)? ("{" annotations+=AnnotationElementCS* "}"|";");
		public ParserRule getRule() { return rule; }

		//name=Identifier ("=" value=INTEGER)? ("{" annotations+=AnnotationElementCS* "}"|";")
		public Group getGroup() { return cGroup; }

		//name=Identifier
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//Identifier
		public RuleCall getNameIdentifierParserRuleCall_0_0() { return cNameIdentifierParserRuleCall_0_0; }

		//("=" value=INTEGER)?
		public Group getGroup_1() { return cGroup_1; }

		//"="
		public Keyword getEqualsSignKeyword_1_0() { return cEqualsSignKeyword_1_0; }

		//value=INTEGER
		public Assignment getValueAssignment_1_1() { return cValueAssignment_1_1; }

		//INTEGER
		public RuleCall getValueINTEGERParserRuleCall_1_1_0() { return cValueINTEGERParserRuleCall_1_1_0; }

		//"{" annotations+=AnnotationElementCS* "}"|";"
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"{" annotations+=AnnotationElementCS* "}"
		public Group getGroup_2_0() { return cGroup_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0_0() { return cLeftCurlyBracketKeyword_2_0_0; }

		//annotations+=AnnotationElementCS*
		public Assignment getAnnotationsAssignment_2_0_1() { return cAnnotationsAssignment_2_0_1; }

		//AnnotationElementCS
		public RuleCall getAnnotationsAnnotationElementCSParserRuleCall_2_0_1_0() { return cAnnotationsAnnotationElementCSParserRuleCall_2_0_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_0_2() { return cRightCurlyBracketKeyword_2_0_2; }

		//";"
		public Keyword getSemicolonKeyword_2_1() { return cSemicolonKeyword_2_1; }
	}

	public class ImportCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImportCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cAliasAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cAliasIdentifierParserRuleCall_1_0_0 = (RuleCall)cAliasAssignment_1_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cEPackageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cEPackageEPackageCrossReference_2_0 = (CrossReference)cEPackageAssignment_2.eContents().get(0);
		private final RuleCall cEPackageEPackageURLTerminalRuleCall_2_0_1 = (RuleCall)cEPackageEPackageCrossReference_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ImportCS:
		//  "import" (alias=Identifier ":") ePackage=[ecore::EPackage|URL] ";";
		public ParserRule getRule() { return rule; }

		//"import" (alias=Identifier ":") ePackage=[ecore::EPackage|URL] ";"
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//alias=Identifier ":"
		public Group getGroup_1() { return cGroup_1; }

		//alias=Identifier
		public Assignment getAliasAssignment_1_0() { return cAliasAssignment_1_0; }

		//Identifier
		public RuleCall getAliasIdentifierParserRuleCall_1_0_0() { return cAliasIdentifierParserRuleCall_1_0_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//ePackage=[ecore::EPackage|URL]
		public Assignment getEPackageAssignment_2() { return cEPackageAssignment_2; }

		//[ecore::EPackage|URL]
		public CrossReference getEPackageEPackageCrossReference_2_0() { return cEPackageEPackageCrossReference_2_0; }

		//URL
		public RuleCall getEPackageEPackageURLTerminalRuleCall_2_0_1() { return cEPackageEPackageURLTerminalRuleCall_2_0_1; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class ModelElementCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelElementCS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cClassifierCSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEnumLiteralCSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cOperationCSParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPackageCSParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cStructuralFeatureCSParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//ModelElementCS:
		//  ClassifierCS|EnumLiteralCS|OperationCS|PackageCS|StructuralFeatureCS;
		public ParserRule getRule() { return rule; }

		//ClassifierCS|EnumLiteralCS|OperationCS|PackageCS|StructuralFeatureCS
		public Alternatives getAlternatives() { return cAlternatives; }

		//ClassifierCS
		public RuleCall getClassifierCSParserRuleCall_0() { return cClassifierCSParserRuleCall_0; }

		//EnumLiteralCS
		public RuleCall getEnumLiteralCSParserRuleCall_1() { return cEnumLiteralCSParserRuleCall_1; }

		//OperationCS
		public RuleCall getOperationCSParserRuleCall_2() { return cOperationCSParserRuleCall_2; }

		//PackageCS
		public RuleCall getPackageCSParserRuleCall_3() { return cPackageCSParserRuleCall_3; }

		//StructuralFeatureCS
		public RuleCall getStructuralFeatureCSParserRuleCall_4() { return cStructuralFeatureCSParserRuleCall_4; }
	}

	public class ModelElementCSRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelElementCSRef");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRefModelElementCSCrossReference_0 = (CrossReference)cRefAssignment.eContents().get(0);
		private final RuleCall cRefModelElementCSIdentifierParserRuleCall_0_1 = (RuleCall)cRefModelElementCSCrossReference_0.eContents().get(1);
		
		//ModelElementCSRef:
		//  ref=[ModelElementCS|Identifier];
		public ParserRule getRule() { return rule; }

		//ref=[ModelElementCS|Identifier]
		public Assignment getRefAssignment() { return cRefAssignment; }

		//[ModelElementCS|Identifier]
		public CrossReference getRefModelElementCSCrossReference_0() { return cRefModelElementCSCrossReference_0; }

		//Identifier
		public RuleCall getRefModelElementCSIdentifierParserRuleCall_0_1() { return cRefModelElementCSIdentifierParserRuleCall_0_1; }
	}

	public class ObjectRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ObjectRef");
		private final RuleCall cModelElementCSRefParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ObjectRef:
		//  ModelElementCSRef;
		public ParserRule getRule() { return rule; }

		//ModelElementCSRef
		public RuleCall getModelElementCSRefParserRuleCall() { return cModelElementCSRefParserRuleCall; }
	}

	public class OperationCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OperationCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOperationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIdentifierParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLessThanSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTypeParametersTypeParameterCSParserRuleCall_2_1_0 = (RuleCall)cTypeParametersAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cTypeParametersTypeParameterCSParserRuleCall_2_2_1_0 = (RuleCall)cTypeParametersAssignment_2_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cParametersAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cParametersParameterCSParserRuleCall_4_0_0 = (RuleCall)cParametersAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cParametersAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cParametersParameterCSParserRuleCall_4_1_1_0 = (RuleCall)cParametersAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTypeAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cTypeTypeRefCSParserRuleCall_6_1_0 = (RuleCall)cTypeAssignment_6_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Alternatives cAlternatives_6_2_1 = (Alternatives)cGroup_6_2.eContents().get(1);
		private final Group cGroup_6_2_1_0 = (Group)cAlternatives_6_2_1.eContents().get(0);
		private final Assignment cLowerAssignment_6_2_1_0_0 = (Assignment)cGroup_6_2_1_0.eContents().get(0);
		private final RuleCall cLowerLOWERParserRuleCall_6_2_1_0_0_0 = (RuleCall)cLowerAssignment_6_2_1_0_0.eContents().get(0);
		private final Group cGroup_6_2_1_0_1 = (Group)cGroup_6_2_1_0.eContents().get(1);
		private final Keyword cFullStopFullStopKeyword_6_2_1_0_1_0 = (Keyword)cGroup_6_2_1_0_1.eContents().get(0);
		private final Assignment cUpperAssignment_6_2_1_0_1_1 = (Assignment)cGroup_6_2_1_0_1.eContents().get(1);
		private final RuleCall cUpperUPPERParserRuleCall_6_2_1_0_1_1_0 = (RuleCall)cUpperAssignment_6_2_1_0_1_1.eContents().get(0);
		private final Assignment cMultiplicityAssignment_6_2_1_1 = (Assignment)cAlternatives_6_2_1.eContents().get(1);
		private final Alternatives cMultiplicityAlternatives_6_2_1_1_0 = (Alternatives)cMultiplicityAssignment_6_2_1_1.eContents().get(0);
		private final Keyword cMultiplicityAsteriskKeyword_6_2_1_1_0_0 = (Keyword)cMultiplicityAlternatives_6_2_1_1_0.eContents().get(0);
		private final Keyword cMultiplicityPlusSignKeyword_6_2_1_1_0_1 = (Keyword)cMultiplicityAlternatives_6_2_1_1_0.eContents().get(1);
		private final Keyword cMultiplicityQuestionMarkKeyword_6_2_1_1_0_2 = (Keyword)cMultiplicityAlternatives_6_2_1_1_0.eContents().get(2);
		private final Keyword cRightSquareBracketKeyword_6_2_2 = (Keyword)cGroup_6_2.eContents().get(2);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cThrowsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cExceptionsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cExceptionsTypeRefCSParserRuleCall_7_1_0 = (RuleCall)cExceptionsAssignment_7_1.eContents().get(0);
		private final Group cGroup_7_2 = (Group)cGroup_7.eContents().get(2);
		private final Keyword cCommaKeyword_7_2_0 = (Keyword)cGroup_7_2.eContents().get(0);
		private final Assignment cExceptionsAssignment_7_2_1 = (Assignment)cGroup_7_2.eContents().get(1);
		private final RuleCall cExceptionsTypeRefCSParserRuleCall_7_2_1_0 = (RuleCall)cExceptionsAssignment_7_2_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cQualifiersAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final Alternatives cQualifiersAlternatives_8_1_0 = (Alternatives)cQualifiersAssignment_8_1.eContents().get(0);
		private final Keyword cQualifiersApiKeyword_8_1_0_0 = (Keyword)cQualifiersAlternatives_8_1_0.eContents().get(0);
		private final Keyword cQualifiersApiKeyword_8_1_0_1 = (Keyword)cQualifiersAlternatives_8_1_0.eContents().get(1);
		private final Keyword cQualifiersDerivedKeyword_8_1_0_2 = (Keyword)cQualifiersAlternatives_8_1_0.eContents().get(2);
		private final Keyword cQualifiersDerivedKeyword_8_1_0_3 = (Keyword)cQualifiersAlternatives_8_1_0.eContents().get(3);
		private final Keyword cQualifiersOrderedKeyword_8_1_0_4 = (Keyword)cQualifiersAlternatives_8_1_0.eContents().get(4);
		private final Keyword cQualifiersOrderedKeyword_8_1_0_5 = (Keyword)cQualifiersAlternatives_8_1_0.eContents().get(5);
		private final Keyword cQualifiersUniqueKeyword_8_1_0_6 = (Keyword)cQualifiersAlternatives_8_1_0.eContents().get(6);
		private final Keyword cQualifiersUniqueKeyword_8_1_0_7 = (Keyword)cQualifiersAlternatives_8_1_0.eContents().get(7);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Keyword cCommaKeyword_8_2_0 = (Keyword)cGroup_8_2.eContents().get(0);
		private final Assignment cQualifiersAssignment_8_2_1 = (Assignment)cGroup_8_2.eContents().get(1);
		private final Alternatives cQualifiersAlternatives_8_2_1_0 = (Alternatives)cQualifiersAssignment_8_2_1.eContents().get(0);
		private final Keyword cQualifiersApiKeyword_8_2_1_0_0 = (Keyword)cQualifiersAlternatives_8_2_1_0.eContents().get(0);
		private final Keyword cQualifiersApiKeyword_8_2_1_0_1 = (Keyword)cQualifiersAlternatives_8_2_1_0.eContents().get(1);
		private final Keyword cQualifiersDerivedKeyword_8_2_1_0_2 = (Keyword)cQualifiersAlternatives_8_2_1_0.eContents().get(2);
		private final Keyword cQualifiersDerivedKeyword_8_2_1_0_3 = (Keyword)cQualifiersAlternatives_8_2_1_0.eContents().get(3);
		private final Keyword cQualifiersOrderedKeyword_8_2_1_0_4 = (Keyword)cQualifiersAlternatives_8_2_1_0.eContents().get(4);
		private final Keyword cQualifiersOrderedKeyword_8_2_1_0_5 = (Keyword)cQualifiersAlternatives_8_2_1_0.eContents().get(5);
		private final Keyword cQualifiersUniqueKeyword_8_2_1_0_6 = (Keyword)cQualifiersAlternatives_8_2_1_0.eContents().get(6);
		private final Keyword cQualifiersUniqueKeyword_8_2_1_0_7 = (Keyword)cQualifiersAlternatives_8_2_1_0.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Alternatives cAlternatives_9 = (Alternatives)cGroup.eContents().get(9);
		private final Group cGroup_9_0 = (Group)cAlternatives_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_0_0 = (Keyword)cGroup_9_0.eContents().get(0);
		private final Alternatives cAlternatives_9_0_1 = (Alternatives)cGroup_9_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_9_0_1_0 = (Assignment)cAlternatives_9_0_1.eContents().get(0);
		private final RuleCall cAnnotationsAnnotationElementCSParserRuleCall_9_0_1_0_0 = (RuleCall)cAnnotationsAssignment_9_0_1_0.eContents().get(0);
		private final Assignment cConstraintsAssignment_9_0_1_1 = (Assignment)cAlternatives_9_0_1.eContents().get(1);
		private final Alternatives cConstraintsAlternatives_9_0_1_1_0 = (Alternatives)cConstraintsAssignment_9_0_1_1.eContents().get(0);
		private final RuleCall cConstraintsPreconditionConstraintCSParserRuleCall_9_0_1_1_0_0 = (RuleCall)cConstraintsAlternatives_9_0_1_1_0.eContents().get(0);
		private final RuleCall cConstraintsBodyConstraintCSParserRuleCall_9_0_1_1_0_1 = (RuleCall)cConstraintsAlternatives_9_0_1_1_0.eContents().get(1);
		private final RuleCall cConstraintsPostconditionConstraintCSParserRuleCall_9_0_1_1_0_2 = (RuleCall)cConstraintsAlternatives_9_0_1_1_0.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_9_0_2 = (Keyword)cGroup_9_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_9_1 = (Keyword)cAlternatives_9.eContents().get(1);
		
		//OperationCS:
		//  "operation" name=Identifier ("<" typeParameters+=TypeParameterCS ("," typeParameters
		//  +=TypeParameterCS)* ">")? "(" (parameters+=ParameterCS ("," parameters+=ParameterCS)*
		//  )? ")" (":" type=TypeRefCS? ("[" (lower=LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+"
		//  | "?" )) "]")?)? ("throws" exceptions+=TypeRefCS ("," exceptions+=TypeRefCS)*)? ("{"
		//  qualifiers+=( "api" | "!api" | "derived" | "!derived" | "ordered" | "!ordered" | "unique" |
		//  "!unique" ) ("," qualifiers+=( "api" | "!api" | "derived" | "!derived" | "ordered" |
		//  "!ordered" | "unique" | "!unique" ))* "}")? ("{" (annotations+=AnnotationElementCS|
		//  constraints+=( PreconditionConstraintCS | BodyConstraintCS |
		//  PostconditionConstraintCS ))* "}"|";");
		public ParserRule getRule() { return rule; }

		//"operation" name=Identifier ("<" typeParameters+=TypeParameterCS ("," typeParameters
		//+=TypeParameterCS)* ">")? "(" (parameters+=ParameterCS ("," parameters+=ParameterCS)*
		//)? ")" (":" type=TypeRefCS? ("[" (lower=LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+"
		//| "?" )) "]")?)? ("throws" exceptions+=TypeRefCS ("," exceptions+=TypeRefCS)*)? ("{"
		//qualifiers+=( "api" | "!api" | "derived" | "!derived" | "ordered" | "!ordered" | "unique" |
		//"!unique" ) ("," qualifiers+=( "api" | "!api" | "derived" | "!derived" | "ordered" |
		//"!ordered" | "unique" | "!unique" ))* "}")? ("{" (annotations+=AnnotationElementCS|
		//constraints+=( PreconditionConstraintCS | BodyConstraintCS |
		//PostconditionConstraintCS ))* "}"|";")
		public Group getGroup() { return cGroup; }

		//"operation"
		public Keyword getOperationKeyword_0() { return cOperationKeyword_0; }

		//name=Identifier
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//Identifier
		public RuleCall getNameIdentifierParserRuleCall_1_0() { return cNameIdentifierParserRuleCall_1_0; }

		//("<" typeParameters+=TypeParameterCS ("," typeParameters+=TypeParameterCS)* ">")?
		public Group getGroup_2() { return cGroup_2; }

		//"<"
		public Keyword getLessThanSignKeyword_2_0() { return cLessThanSignKeyword_2_0; }

		//typeParameters+=TypeParameterCS
		public Assignment getTypeParametersAssignment_2_1() { return cTypeParametersAssignment_2_1; }

		//TypeParameterCS
		public RuleCall getTypeParametersTypeParameterCSParserRuleCall_2_1_0() { return cTypeParametersTypeParameterCSParserRuleCall_2_1_0; }

		//("," typeParameters+=TypeParameterCS)*
		public Group getGroup_2_2() { return cGroup_2_2; }

		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }

		//typeParameters+=TypeParameterCS
		public Assignment getTypeParametersAssignment_2_2_1() { return cTypeParametersAssignment_2_2_1; }

		//TypeParameterCS
		public RuleCall getTypeParametersTypeParameterCSParserRuleCall_2_2_1_0() { return cTypeParametersTypeParameterCSParserRuleCall_2_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_2_3() { return cGreaterThanSignKeyword_2_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//(parameters+=ParameterCS ("," parameters+=ParameterCS)*)?
		public Group getGroup_4() { return cGroup_4; }

		//parameters+=ParameterCS
		public Assignment getParametersAssignment_4_0() { return cParametersAssignment_4_0; }

		//ParameterCS
		public RuleCall getParametersParameterCSParserRuleCall_4_0_0() { return cParametersParameterCSParserRuleCall_4_0_0; }

		//("," parameters+=ParameterCS)*
		public Group getGroup_4_1() { return cGroup_4_1; }

		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }

		//parameters+=ParameterCS
		public Assignment getParametersAssignment_4_1_1() { return cParametersAssignment_4_1_1; }

		//ParameterCS
		public RuleCall getParametersParameterCSParserRuleCall_4_1_1_0() { return cParametersParameterCSParserRuleCall_4_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//(":" type=TypeRefCS? ("[" (lower=LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+" | "?" )
		//) "]")?)?
		public Group getGroup_6() { return cGroup_6; }

		//":"
		public Keyword getColonKeyword_6_0() { return cColonKeyword_6_0; }

		//type=TypeRefCS?
		public Assignment getTypeAssignment_6_1() { return cTypeAssignment_6_1; }

		//TypeRefCS
		public RuleCall getTypeTypeRefCSParserRuleCall_6_1_0() { return cTypeTypeRefCSParserRuleCall_6_1_0; }

		//("[" (lower=LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+" | "?" )) "]")?
		public Group getGroup_6_2() { return cGroup_6_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_6_2_0() { return cLeftSquareBracketKeyword_6_2_0; }

		//lower=LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+" | "?" )
		public Alternatives getAlternatives_6_2_1() { return cAlternatives_6_2_1; }

		//lower=LOWER (".." upper=UPPER)?
		public Group getGroup_6_2_1_0() { return cGroup_6_2_1_0; }

		//lower=LOWER
		public Assignment getLowerAssignment_6_2_1_0_0() { return cLowerAssignment_6_2_1_0_0; }

		//LOWER
		public RuleCall getLowerLOWERParserRuleCall_6_2_1_0_0_0() { return cLowerLOWERParserRuleCall_6_2_1_0_0_0; }

		//(".." upper=UPPER)?
		public Group getGroup_6_2_1_0_1() { return cGroup_6_2_1_0_1; }

		//".."
		public Keyword getFullStopFullStopKeyword_6_2_1_0_1_0() { return cFullStopFullStopKeyword_6_2_1_0_1_0; }

		//upper=UPPER
		public Assignment getUpperAssignment_6_2_1_0_1_1() { return cUpperAssignment_6_2_1_0_1_1; }

		//UPPER
		public RuleCall getUpperUPPERParserRuleCall_6_2_1_0_1_1_0() { return cUpperUPPERParserRuleCall_6_2_1_0_1_1_0; }

		//multiplicity=( "*" | "+" | "?" )
		public Assignment getMultiplicityAssignment_6_2_1_1() { return cMultiplicityAssignment_6_2_1_1; }

		//"*"|"+"|"?"
		public Alternatives getMultiplicityAlternatives_6_2_1_1_0() { return cMultiplicityAlternatives_6_2_1_1_0; }

		//"*"
		public Keyword getMultiplicityAsteriskKeyword_6_2_1_1_0_0() { return cMultiplicityAsteriskKeyword_6_2_1_1_0_0; }

		//"+"
		public Keyword getMultiplicityPlusSignKeyword_6_2_1_1_0_1() { return cMultiplicityPlusSignKeyword_6_2_1_1_0_1; }

		//"?"
		public Keyword getMultiplicityQuestionMarkKeyword_6_2_1_1_0_2() { return cMultiplicityQuestionMarkKeyword_6_2_1_1_0_2; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6_2_2() { return cRightSquareBracketKeyword_6_2_2; }

		//("throws" exceptions+=TypeRefCS ("," exceptions+=TypeRefCS)*)?
		public Group getGroup_7() { return cGroup_7; }

		//"throws"
		public Keyword getThrowsKeyword_7_0() { return cThrowsKeyword_7_0; }

		//exceptions+=TypeRefCS
		public Assignment getExceptionsAssignment_7_1() { return cExceptionsAssignment_7_1; }

		//TypeRefCS
		public RuleCall getExceptionsTypeRefCSParserRuleCall_7_1_0() { return cExceptionsTypeRefCSParserRuleCall_7_1_0; }

		//("," exceptions+=TypeRefCS)*
		public Group getGroup_7_2() { return cGroup_7_2; }

		//","
		public Keyword getCommaKeyword_7_2_0() { return cCommaKeyword_7_2_0; }

		//exceptions+=TypeRefCS
		public Assignment getExceptionsAssignment_7_2_1() { return cExceptionsAssignment_7_2_1; }

		//TypeRefCS
		public RuleCall getExceptionsTypeRefCSParserRuleCall_7_2_1_0() { return cExceptionsTypeRefCSParserRuleCall_7_2_1_0; }

		//("{" qualifiers+=( "api" | "!api" | "derived" | "!derived" | "ordered" | "!ordered" | "unique"
		//| "!unique" ) ("," qualifiers+=( "api" | "!api" | "derived" | "!derived" | "ordered" |
		//"!ordered" | "unique" | "!unique" ))* "}")?
		public Group getGroup_8() { return cGroup_8; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8_0() { return cLeftCurlyBracketKeyword_8_0; }

		//qualifiers+=( "api" | "!api" | "derived" | "!derived" | "ordered" | "!ordered" | "unique" |
		//"!unique" )
		public Assignment getQualifiersAssignment_8_1() { return cQualifiersAssignment_8_1; }

		//"api"|"!api"|"derived"|"!derived"|"ordered"|"!ordered"|"unique"|"!unique"
		public Alternatives getQualifiersAlternatives_8_1_0() { return cQualifiersAlternatives_8_1_0; }

		//"api"
		public Keyword getQualifiersApiKeyword_8_1_0_0() { return cQualifiersApiKeyword_8_1_0_0; }

		//"!api"
		public Keyword getQualifiersApiKeyword_8_1_0_1() { return cQualifiersApiKeyword_8_1_0_1; }

		//"derived"
		public Keyword getQualifiersDerivedKeyword_8_1_0_2() { return cQualifiersDerivedKeyword_8_1_0_2; }

		//"!derived"
		public Keyword getQualifiersDerivedKeyword_8_1_0_3() { return cQualifiersDerivedKeyword_8_1_0_3; }

		//"ordered"
		public Keyword getQualifiersOrderedKeyword_8_1_0_4() { return cQualifiersOrderedKeyword_8_1_0_4; }

		//"!ordered"
		public Keyword getQualifiersOrderedKeyword_8_1_0_5() { return cQualifiersOrderedKeyword_8_1_0_5; }

		//"unique"
		public Keyword getQualifiersUniqueKeyword_8_1_0_6() { return cQualifiersUniqueKeyword_8_1_0_6; }

		//"!unique"
		public Keyword getQualifiersUniqueKeyword_8_1_0_7() { return cQualifiersUniqueKeyword_8_1_0_7; }

		//("," qualifiers+=( "api" | "!api" | "derived" | "!derived" | "ordered" | "!ordered" | "unique"
		//| "!unique" ))*
		public Group getGroup_8_2() { return cGroup_8_2; }

		//","
		public Keyword getCommaKeyword_8_2_0() { return cCommaKeyword_8_2_0; }

		//qualifiers+=( "api" | "!api" | "derived" | "!derived" | "ordered" | "!ordered" | "unique" |
		//"!unique" )
		public Assignment getQualifiersAssignment_8_2_1() { return cQualifiersAssignment_8_2_1; }

		//"api"|"!api"|"derived"|"!derived"|"ordered"|"!ordered"|"unique"|"!unique"
		public Alternatives getQualifiersAlternatives_8_2_1_0() { return cQualifiersAlternatives_8_2_1_0; }

		//"api"
		public Keyword getQualifiersApiKeyword_8_2_1_0_0() { return cQualifiersApiKeyword_8_2_1_0_0; }

		//"!api"
		public Keyword getQualifiersApiKeyword_8_2_1_0_1() { return cQualifiersApiKeyword_8_2_1_0_1; }

		//"derived"
		public Keyword getQualifiersDerivedKeyword_8_2_1_0_2() { return cQualifiersDerivedKeyword_8_2_1_0_2; }

		//"!derived"
		public Keyword getQualifiersDerivedKeyword_8_2_1_0_3() { return cQualifiersDerivedKeyword_8_2_1_0_3; }

		//"ordered"
		public Keyword getQualifiersOrderedKeyword_8_2_1_0_4() { return cQualifiersOrderedKeyword_8_2_1_0_4; }

		//"!ordered"
		public Keyword getQualifiersOrderedKeyword_8_2_1_0_5() { return cQualifiersOrderedKeyword_8_2_1_0_5; }

		//"unique"
		public Keyword getQualifiersUniqueKeyword_8_2_1_0_6() { return cQualifiersUniqueKeyword_8_2_1_0_6; }

		//"!unique"
		public Keyword getQualifiersUniqueKeyword_8_2_1_0_7() { return cQualifiersUniqueKeyword_8_2_1_0_7; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8_3() { return cRightCurlyBracketKeyword_8_3; }

		//"{" (annotations+=AnnotationElementCS|constraints+=( PreconditionConstraintCS |
		//BodyConstraintCS | PostconditionConstraintCS ))* "}"|";"
		public Alternatives getAlternatives_9() { return cAlternatives_9; }

		//"{" (annotations+=AnnotationElementCS|constraints+=( PreconditionConstraintCS |
		//BodyConstraintCS | PostconditionConstraintCS ))* "}"
		public Group getGroup_9_0() { return cGroup_9_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9_0_0() { return cLeftCurlyBracketKeyword_9_0_0; }

		//(annotations+=AnnotationElementCS|constraints+=( PreconditionConstraintCS |
		//BodyConstraintCS | PostconditionConstraintCS ))*
		public Alternatives getAlternatives_9_0_1() { return cAlternatives_9_0_1; }

		//annotations+=AnnotationElementCS
		public Assignment getAnnotationsAssignment_9_0_1_0() { return cAnnotationsAssignment_9_0_1_0; }

		//AnnotationElementCS
		public RuleCall getAnnotationsAnnotationElementCSParserRuleCall_9_0_1_0_0() { return cAnnotationsAnnotationElementCSParserRuleCall_9_0_1_0_0; }

		//constraints+=( PreconditionConstraintCS | BodyConstraintCS |
		//PostconditionConstraintCS )
		public Assignment getConstraintsAssignment_9_0_1_1() { return cConstraintsAssignment_9_0_1_1; }

		//PreconditionConstraintCS|BodyConstraintCS|PostconditionConstraintCS
		public Alternatives getConstraintsAlternatives_9_0_1_1_0() { return cConstraintsAlternatives_9_0_1_1_0; }

		//PreconditionConstraintCS
		public RuleCall getConstraintsPreconditionConstraintCSParserRuleCall_9_0_1_1_0_0() { return cConstraintsPreconditionConstraintCSParserRuleCall_9_0_1_1_0_0; }

		//BodyConstraintCS
		public RuleCall getConstraintsBodyConstraintCSParserRuleCall_9_0_1_1_0_1() { return cConstraintsBodyConstraintCSParserRuleCall_9_0_1_1_0_1; }

		//PostconditionConstraintCS
		public RuleCall getConstraintsPostconditionConstraintCSParserRuleCall_9_0_1_1_0_2() { return cConstraintsPostconditionConstraintCSParserRuleCall_9_0_1_1_0_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9_0_2() { return cRightCurlyBracketKeyword_9_0_2; }

		//";"
		public Keyword getSemicolonKeyword_9_1() { return cSemicolonKeyword_9_1; }
	}

	public class PackageCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PackageCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIdentifierParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPrefixAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPrefixIdentifierParserRuleCall_2_1_0 = (RuleCall)cPrefixAssignment_2_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cUriAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cUriURLTerminalRuleCall_2_3_0 = (RuleCall)cUriAssignment_2_3.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Alternatives cAlternatives_3_0_1 = (Alternatives)cGroup_3_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_3_0_1_0 = (Assignment)cAlternatives_3_0_1.eContents().get(0);
		private final RuleCall cAnnotationsAnnotationElementCSParserRuleCall_3_0_1_0_0 = (RuleCall)cAnnotationsAssignment_3_0_1_0.eContents().get(0);
		private final Assignment cSubpackagesAssignment_3_0_1_1 = (Assignment)cAlternatives_3_0_1.eContents().get(1);
		private final RuleCall cSubpackagesPackageCSParserRuleCall_3_0_1_1_0 = (RuleCall)cSubpackagesAssignment_3_0_1_1.eContents().get(0);
		private final Assignment cClassifiersAssignment_3_0_1_2 = (Assignment)cAlternatives_3_0_1.eContents().get(2);
		private final RuleCall cClassifiersClassifierCSParserRuleCall_3_0_1_2_0 = (RuleCall)cClassifiersAssignment_3_0_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_3_1 = (Keyword)cAlternatives_3.eContents().get(1);
		
		//PackageCS:
		//  "package" name=Identifier (":" prefix=Identifier "=" uri=URL)? ("{" (annotations+=
		//  AnnotationElementCS|subpackages+=PackageCS|classifiers+=ClassifierCS)* "}"|";");
		public ParserRule getRule() { return rule; }

		//"package" name=Identifier (":" prefix=Identifier "=" uri=URL)? ("{" (annotations+=
		//AnnotationElementCS|subpackages+=PackageCS|classifiers+=ClassifierCS)* "}"|";")
		public Group getGroup() { return cGroup; }

		//"package"
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//name=Identifier
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//Identifier
		public RuleCall getNameIdentifierParserRuleCall_1_0() { return cNameIdentifierParserRuleCall_1_0; }

		//(":" prefix=Identifier "=" uri=URL)?
		public Group getGroup_2() { return cGroup_2; }

		//":"
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }

		//prefix=Identifier
		public Assignment getPrefixAssignment_2_1() { return cPrefixAssignment_2_1; }

		//Identifier
		public RuleCall getPrefixIdentifierParserRuleCall_2_1_0() { return cPrefixIdentifierParserRuleCall_2_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//uri=URL
		public Assignment getUriAssignment_2_3() { return cUriAssignment_2_3; }

		//URL
		public RuleCall getUriURLTerminalRuleCall_2_3_0() { return cUriURLTerminalRuleCall_2_3_0; }

		//"{" (annotations+=AnnotationElementCS|subpackages+=PackageCS|classifiers+=
		//ClassifierCS)* "}"|";"
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//"{" (annotations+=AnnotationElementCS|subpackages+=PackageCS|classifiers+=
		//ClassifierCS)* "}"
		public Group getGroup_3_0() { return cGroup_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0_0() { return cLeftCurlyBracketKeyword_3_0_0; }

		//(annotations+=AnnotationElementCS|subpackages+=PackageCS|classifiers+=
		//ClassifierCS)*
		public Alternatives getAlternatives_3_0_1() { return cAlternatives_3_0_1; }

		//annotations+=AnnotationElementCS
		public Assignment getAnnotationsAssignment_3_0_1_0() { return cAnnotationsAssignment_3_0_1_0; }

		//AnnotationElementCS
		public RuleCall getAnnotationsAnnotationElementCSParserRuleCall_3_0_1_0_0() { return cAnnotationsAnnotationElementCSParserRuleCall_3_0_1_0_0; }

		//subpackages+=PackageCS
		public Assignment getSubpackagesAssignment_3_0_1_1() { return cSubpackagesAssignment_3_0_1_1; }

		//PackageCS
		public RuleCall getSubpackagesPackageCSParserRuleCall_3_0_1_1_0() { return cSubpackagesPackageCSParserRuleCall_3_0_1_1_0; }

		//classifiers+=ClassifierCS
		public Assignment getClassifiersAssignment_3_0_1_2() { return cClassifiersAssignment_3_0_1_2; }

		//ClassifierCS
		public RuleCall getClassifiersClassifierCSParserRuleCall_3_0_1_2_0() { return cClassifiersClassifierCSParserRuleCall_3_0_1_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_0_2() { return cRightCurlyBracketKeyword_3_0_2; }

		//";"
		public Keyword getSemicolonKeyword_3_1() { return cSemicolonKeyword_3_1; }
	}

	public class ParameterCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParameterCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIdentifierParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTypeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTypeTypeRefCSParserRuleCall_1_1_0 = (RuleCall)cTypeAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Alternatives cAlternatives_1_2_1 = (Alternatives)cGroup_1_2.eContents().get(1);
		private final Group cGroup_1_2_1_0 = (Group)cAlternatives_1_2_1.eContents().get(0);
		private final Assignment cLowerAssignment_1_2_1_0_0 = (Assignment)cGroup_1_2_1_0.eContents().get(0);
		private final RuleCall cLowerLOWERParserRuleCall_1_2_1_0_0_0 = (RuleCall)cLowerAssignment_1_2_1_0_0.eContents().get(0);
		private final Group cGroup_1_2_1_0_1 = (Group)cGroup_1_2_1_0.eContents().get(1);
		private final Keyword cFullStopFullStopKeyword_1_2_1_0_1_0 = (Keyword)cGroup_1_2_1_0_1.eContents().get(0);
		private final Assignment cUpperAssignment_1_2_1_0_1_1 = (Assignment)cGroup_1_2_1_0_1.eContents().get(1);
		private final RuleCall cUpperUPPERParserRuleCall_1_2_1_0_1_1_0 = (RuleCall)cUpperAssignment_1_2_1_0_1_1.eContents().get(0);
		private final Assignment cMultiplicityAssignment_1_2_1_1 = (Assignment)cAlternatives_1_2_1.eContents().get(1);
		private final Alternatives cMultiplicityAlternatives_1_2_1_1_0 = (Alternatives)cMultiplicityAssignment_1_2_1_1.eContents().get(0);
		private final Keyword cMultiplicityAsteriskKeyword_1_2_1_1_0_0 = (Keyword)cMultiplicityAlternatives_1_2_1_1_0.eContents().get(0);
		private final Keyword cMultiplicityPlusSignKeyword_1_2_1_1_0_1 = (Keyword)cMultiplicityAlternatives_1_2_1_1_0.eContents().get(1);
		private final Keyword cMultiplicityQuestionMarkKeyword_1_2_1_1_0_2 = (Keyword)cMultiplicityAlternatives_1_2_1_1_0.eContents().get(2);
		private final Keyword cRightSquareBracketKeyword_1_2_2 = (Keyword)cGroup_1_2.eContents().get(2);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cQualifiersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final Alternatives cQualifiersAlternatives_2_1_0 = (Alternatives)cQualifiersAssignment_2_1.eContents().get(0);
		private final Keyword cQualifiersOrderedKeyword_2_1_0_0 = (Keyword)cQualifiersAlternatives_2_1_0.eContents().get(0);
		private final Keyword cQualifiersOrderedKeyword_2_1_0_1 = (Keyword)cQualifiersAlternatives_2_1_0.eContents().get(1);
		private final Keyword cQualifiersUniqueKeyword_2_1_0_2 = (Keyword)cQualifiersAlternatives_2_1_0.eContents().get(2);
		private final Keyword cQualifiersUniqueKeyword_2_1_0_3 = (Keyword)cQualifiersAlternatives_2_1_0.eContents().get(3);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cQualifiersAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final Alternatives cQualifiersAlternatives_2_2_1_0 = (Alternatives)cQualifiersAssignment_2_2_1.eContents().get(0);
		private final Keyword cQualifiersOrderedKeyword_2_2_1_0_0 = (Keyword)cQualifiersAlternatives_2_2_1_0.eContents().get(0);
		private final Keyword cQualifiersOrderedKeyword_2_2_1_0_1 = (Keyword)cQualifiersAlternatives_2_2_1_0.eContents().get(1);
		private final Keyword cQualifiersUniqueKeyword_2_2_1_0_2 = (Keyword)cQualifiersAlternatives_2_2_1_0.eContents().get(2);
		private final Keyword cQualifiersUniqueKeyword_2_2_1_0_3 = (Keyword)cQualifiersAlternatives_2_2_1_0.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAnnotationsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAnnotationsAnnotationElementCSParserRuleCall_3_1_0 = (RuleCall)cAnnotationsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//ParameterCS:
		//  name=Identifier (":" type=TypeRefCS ("[" (lower=LOWER (".." upper=UPPER)?|multiplicity
		//  =( "*" | "+" | "?" )) "]")?)? ("{" qualifiers+=( "ordered" | "!ordered" | "unique" | "!unique" ) (
		//  "," qualifiers+=( "ordered" | "!ordered" | "unique" | "!unique" ))* "}")? ("{" annotations+=
		//  AnnotationElementCS* "}")?;
		public ParserRule getRule() { return rule; }

		//name=Identifier (":" type=TypeRefCS ("[" (lower=LOWER (".." upper=UPPER)?|multiplicity
		//=( "*" | "+" | "?" )) "]")?)? ("{" qualifiers+=( "ordered" | "!ordered" | "unique" | "!unique" ) (
		//"," qualifiers+=( "ordered" | "!ordered" | "unique" | "!unique" ))* "}")? ("{" annotations+=
		//AnnotationElementCS* "}")?
		public Group getGroup() { return cGroup; }

		//name=Identifier
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//Identifier
		public RuleCall getNameIdentifierParserRuleCall_0_0() { return cNameIdentifierParserRuleCall_0_0; }

		//(":" type=TypeRefCS ("[" (lower=LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+" | "?" ))
		//"]")?)?
		public Group getGroup_1() { return cGroup_1; }

		//":"
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }

		//type=TypeRefCS
		public Assignment getTypeAssignment_1_1() { return cTypeAssignment_1_1; }

		//TypeRefCS
		public RuleCall getTypeTypeRefCSParserRuleCall_1_1_0() { return cTypeTypeRefCSParserRuleCall_1_1_0; }

		//("[" (lower=LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+" | "?" )) "]")?
		public Group getGroup_1_2() { return cGroup_1_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_2_0() { return cLeftSquareBracketKeyword_1_2_0; }

		//lower=LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+" | "?" )
		public Alternatives getAlternatives_1_2_1() { return cAlternatives_1_2_1; }

		//lower=LOWER (".." upper=UPPER)?
		public Group getGroup_1_2_1_0() { return cGroup_1_2_1_0; }

		//lower=LOWER
		public Assignment getLowerAssignment_1_2_1_0_0() { return cLowerAssignment_1_2_1_0_0; }

		//LOWER
		public RuleCall getLowerLOWERParserRuleCall_1_2_1_0_0_0() { return cLowerLOWERParserRuleCall_1_2_1_0_0_0; }

		//(".." upper=UPPER)?
		public Group getGroup_1_2_1_0_1() { return cGroup_1_2_1_0_1; }

		//".."
		public Keyword getFullStopFullStopKeyword_1_2_1_0_1_0() { return cFullStopFullStopKeyword_1_2_1_0_1_0; }

		//upper=UPPER
		public Assignment getUpperAssignment_1_2_1_0_1_1() { return cUpperAssignment_1_2_1_0_1_1; }

		//UPPER
		public RuleCall getUpperUPPERParserRuleCall_1_2_1_0_1_1_0() { return cUpperUPPERParserRuleCall_1_2_1_0_1_1_0; }

		//multiplicity=( "*" | "+" | "?" )
		public Assignment getMultiplicityAssignment_1_2_1_1() { return cMultiplicityAssignment_1_2_1_1; }

		//"*"|"+"|"?"
		public Alternatives getMultiplicityAlternatives_1_2_1_1_0() { return cMultiplicityAlternatives_1_2_1_1_0; }

		//"*"
		public Keyword getMultiplicityAsteriskKeyword_1_2_1_1_0_0() { return cMultiplicityAsteriskKeyword_1_2_1_1_0_0; }

		//"+"
		public Keyword getMultiplicityPlusSignKeyword_1_2_1_1_0_1() { return cMultiplicityPlusSignKeyword_1_2_1_1_0_1; }

		//"?"
		public Keyword getMultiplicityQuestionMarkKeyword_1_2_1_1_0_2() { return cMultiplicityQuestionMarkKeyword_1_2_1_1_0_2; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_2_2() { return cRightSquareBracketKeyword_1_2_2; }

		//("{" qualifiers+=( "ordered" | "!ordered" | "unique" | "!unique" ) ("," qualifiers+=(
		//"ordered" | "!ordered" | "unique" | "!unique" ))* "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//qualifiers+=( "ordered" | "!ordered" | "unique" | "!unique" )
		public Assignment getQualifiersAssignment_2_1() { return cQualifiersAssignment_2_1; }

		//"ordered"|"!ordered"|"unique"|"!unique"
		public Alternatives getQualifiersAlternatives_2_1_0() { return cQualifiersAlternatives_2_1_0; }

		//"ordered"
		public Keyword getQualifiersOrderedKeyword_2_1_0_0() { return cQualifiersOrderedKeyword_2_1_0_0; }

		//"!ordered"
		public Keyword getQualifiersOrderedKeyword_2_1_0_1() { return cQualifiersOrderedKeyword_2_1_0_1; }

		//"unique"
		public Keyword getQualifiersUniqueKeyword_2_1_0_2() { return cQualifiersUniqueKeyword_2_1_0_2; }

		//"!unique"
		public Keyword getQualifiersUniqueKeyword_2_1_0_3() { return cQualifiersUniqueKeyword_2_1_0_3; }

		//("," qualifiers+=( "ordered" | "!ordered" | "unique" | "!unique" ))*
		public Group getGroup_2_2() { return cGroup_2_2; }

		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }

		//qualifiers+=( "ordered" | "!ordered" | "unique" | "!unique" )
		public Assignment getQualifiersAssignment_2_2_1() { return cQualifiersAssignment_2_2_1; }

		//"ordered"|"!ordered"|"unique"|"!unique"
		public Alternatives getQualifiersAlternatives_2_2_1_0() { return cQualifiersAlternatives_2_2_1_0; }

		//"ordered"
		public Keyword getQualifiersOrderedKeyword_2_2_1_0_0() { return cQualifiersOrderedKeyword_2_2_1_0_0; }

		//"!ordered"
		public Keyword getQualifiersOrderedKeyword_2_2_1_0_1() { return cQualifiersOrderedKeyword_2_2_1_0_1; }

		//"unique"
		public Keyword getQualifiersUniqueKeyword_2_2_1_0_2() { return cQualifiersUniqueKeyword_2_2_1_0_2; }

		//"!unique"
		public Keyword getQualifiersUniqueKeyword_2_2_1_0_3() { return cQualifiersUniqueKeyword_2_2_1_0_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_3() { return cRightCurlyBracketKeyword_2_3; }

		//("{" annotations+=AnnotationElementCS* "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }

		//annotations+=AnnotationElementCS*
		public Assignment getAnnotationsAssignment_3_1() { return cAnnotationsAssignment_3_1; }

		//AnnotationElementCS
		public RuleCall getAnnotationsAnnotationElementCSParserRuleCall_3_1_0() { return cAnnotationsAnnotationElementCSParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_2() { return cRightCurlyBracketKeyword_3_2; }
	}

	public class ReferenceCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReferenceCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPropertyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIdentifierParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cNumberSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOppositeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOppositeReferenceRefParserRuleCall_2_1_0 = (RuleCall)cOppositeAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTypeTypeRefCSParserRuleCall_3_1_0 = (RuleCall)cTypeAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Alternatives cAlternatives_3_2_1 = (Alternatives)cGroup_3_2.eContents().get(1);
		private final Group cGroup_3_2_1_0 = (Group)cAlternatives_3_2_1.eContents().get(0);
		private final Assignment cLowerAssignment_3_2_1_0_0 = (Assignment)cGroup_3_2_1_0.eContents().get(0);
		private final RuleCall cLowerLOWERParserRuleCall_3_2_1_0_0_0 = (RuleCall)cLowerAssignment_3_2_1_0_0.eContents().get(0);
		private final Group cGroup_3_2_1_0_1 = (Group)cGroup_3_2_1_0.eContents().get(1);
		private final Keyword cFullStopFullStopKeyword_3_2_1_0_1_0 = (Keyword)cGroup_3_2_1_0_1.eContents().get(0);
		private final Assignment cUpperAssignment_3_2_1_0_1_1 = (Assignment)cGroup_3_2_1_0_1.eContents().get(1);
		private final RuleCall cUpperUPPERParserRuleCall_3_2_1_0_1_1_0 = (RuleCall)cUpperAssignment_3_2_1_0_1_1.eContents().get(0);
		private final Assignment cMultiplicityAssignment_3_2_1_1 = (Assignment)cAlternatives_3_2_1.eContents().get(1);
		private final Alternatives cMultiplicityAlternatives_3_2_1_1_0 = (Alternatives)cMultiplicityAssignment_3_2_1_1.eContents().get(0);
		private final Keyword cMultiplicityAsteriskKeyword_3_2_1_1_0_0 = (Keyword)cMultiplicityAlternatives_3_2_1_1_0.eContents().get(0);
		private final Keyword cMultiplicityPlusSignKeyword_3_2_1_1_0_1 = (Keyword)cMultiplicityAlternatives_3_2_1_1_0.eContents().get(1);
		private final Keyword cMultiplicityQuestionMarkKeyword_3_2_1_1_0_2 = (Keyword)cMultiplicityAlternatives_3_2_1_1_0.eContents().get(2);
		private final Keyword cRightSquareBracketKeyword_3_2_2 = (Keyword)cGroup_3_2.eContents().get(2);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDefaultValueLiteralAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDefaultValueLiteralURLTerminalRuleCall_4_1_0 = (RuleCall)cDefaultValueLiteralAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cQualifiersAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final Alternatives cQualifiersAlternatives_5_1_0 = (Alternatives)cQualifiersAssignment_5_1.eContents().get(0);
		private final Keyword cQualifiersApiKeyword_5_1_0_0 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(0);
		private final Keyword cQualifiersApiKeyword_5_1_0_1 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(1);
		private final Keyword cQualifiersComposesKeyword_5_1_0_2 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(2);
		private final Keyword cQualifiersComposesKeyword_5_1_0_3 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(3);
		private final Keyword cQualifiersDerivedKeyword_5_1_0_4 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(4);
		private final Keyword cQualifiersDerivedKeyword_5_1_0_5 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(5);
		private final Keyword cQualifiersOrderedKeyword_5_1_0_6 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(6);
		private final Keyword cQualifiersOrderedKeyword_5_1_0_7 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(7);
		private final Keyword cQualifiersReadonlyKeyword_5_1_0_8 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(8);
		private final Keyword cQualifiersReadonlyKeyword_5_1_0_9 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(9);
		private final Keyword cQualifiersResolveKeyword_5_1_0_10 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(10);
		private final Keyword cQualifiersResolveKeyword_5_1_0_11 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(11);
		private final Keyword cQualifiersTransientKeyword_5_1_0_12 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(12);
		private final Keyword cQualifiersTransientKeyword_5_1_0_13 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(13);
		private final Keyword cQualifiersUniqueKeyword_5_1_0_14 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(14);
		private final Keyword cQualifiersUniqueKeyword_5_1_0_15 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(15);
		private final Keyword cQualifiersUnsettableKeyword_5_1_0_16 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(16);
		private final Keyword cQualifiersUnsettableKeyword_5_1_0_17 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(17);
		private final Keyword cQualifiersVolatileKeyword_5_1_0_18 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(18);
		private final Keyword cQualifiersVolatileKeyword_5_1_0_19 = (Keyword)cQualifiersAlternatives_5_1_0.eContents().get(19);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cQualifiersAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final Alternatives cQualifiersAlternatives_5_2_1_0 = (Alternatives)cQualifiersAssignment_5_2_1.eContents().get(0);
		private final Keyword cQualifiersApiKeyword_5_2_1_0_0 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(0);
		private final Keyword cQualifiersApiKeyword_5_2_1_0_1 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(1);
		private final Keyword cQualifiersComposesKeyword_5_2_1_0_2 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(2);
		private final Keyword cQualifiersComposesKeyword_5_2_1_0_3 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(3);
		private final Keyword cQualifiersDerivedKeyword_5_2_1_0_4 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(4);
		private final Keyword cQualifiersDerivedKeyword_5_2_1_0_5 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(5);
		private final Keyword cQualifiersOrderedKeyword_5_2_1_0_6 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(6);
		private final Keyword cQualifiersOrderedKeyword_5_2_1_0_7 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(7);
		private final Keyword cQualifiersReadonlyKeyword_5_2_1_0_8 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(8);
		private final Keyword cQualifiersReadonlyKeyword_5_2_1_0_9 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(9);
		private final Keyword cQualifiersResolveKeyword_5_2_1_0_10 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(10);
		private final Keyword cQualifiersResolveKeyword_5_2_1_0_11 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(11);
		private final Keyword cQualifiersTransientKeyword_5_2_1_0_12 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(12);
		private final Keyword cQualifiersTransientKeyword_5_2_1_0_13 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(13);
		private final Keyword cQualifiersUniqueKeyword_5_2_1_0_14 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(14);
		private final Keyword cQualifiersUniqueKeyword_5_2_1_0_15 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(15);
		private final Keyword cQualifiersUnsettableKeyword_5_2_1_0_16 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(16);
		private final Keyword cQualifiersUnsettableKeyword_5_2_1_0_17 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(17);
		private final Keyword cQualifiersVolatileKeyword_5_2_1_0_18 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(18);
		private final Keyword cQualifiersVolatileKeyword_5_2_1_0_19 = (Keyword)cQualifiersAlternatives_5_2_1_0.eContents().get(19);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cAlternatives_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_0_0 = (Keyword)cGroup_6_0.eContents().get(0);
		private final Alternatives cAlternatives_6_0_1 = (Alternatives)cGroup_6_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_6_0_1_0 = (Assignment)cAlternatives_6_0_1.eContents().get(0);
		private final RuleCall cAnnotationsAnnotationElementCSParserRuleCall_6_0_1_0_0 = (RuleCall)cAnnotationsAssignment_6_0_1_0.eContents().get(0);
		private final Assignment cConstraintsAssignment_6_0_1_1 = (Assignment)cAlternatives_6_0_1.eContents().get(1);
		private final Alternatives cConstraintsAlternatives_6_0_1_1_0 = (Alternatives)cConstraintsAssignment_6_0_1_1.eContents().get(0);
		private final RuleCall cConstraintsInitialConstraintCSParserRuleCall_6_0_1_1_0_0 = (RuleCall)cConstraintsAlternatives_6_0_1_1_0.eContents().get(0);
		private final RuleCall cConstraintsDerivedConstraintCSParserRuleCall_6_0_1_1_0_1 = (RuleCall)cConstraintsAlternatives_6_0_1_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6_0_2 = (Keyword)cGroup_6_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_6_1 = (Keyword)cAlternatives_6.eContents().get(1);
		
		//ReferenceCS:
		//  "property" name=Identifier ("#" opposite=ReferenceRef)? (":" type=TypeRefCS ("[" (lower
		//  =LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+" | "?" )) "]")?)? ("="
		//  defaultValueLiteral=URL)? ("{" qualifiers+=( "api" | "!api" | "composes" | "!composes" |
		//  "derived" | "!derived" | "ordered" | "!ordered" | "readonly" | "!readonly" | "resolve" |
		//  "!resolve" | "transient" | "!transient" | "unique" | "!unique" | "unsettable" |
		//  "!unsettable" | "volatile" | "!volatile" ) ("," qualifiers+=( "api" | "!api" | "composes" |
		//  "!composes" | "derived" | "!derived" | "ordered" | "!ordered" | "readonly" | "!readonly" |
		//  "resolve" | "!resolve" | "transient" | "!transient" | "unique" | "!unique" | "unsettable" |
		//  "!unsettable" | "volatile" | "!volatile" ))* "}")? ("{" (annotations+=
		//  AnnotationElementCS|constraints+=( InitialConstraintCS | DerivedConstraintCS ))* "}"|
		//  ";");
		public ParserRule getRule() { return rule; }

		//"property" name=Identifier ("#" opposite=ReferenceRef)? (":" type=TypeRefCS ("[" (lower
		//=LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+" | "?" )) "]")?)? ("="
		//defaultValueLiteral=URL)? ("{" qualifiers+=( "api" | "!api" | "composes" | "!composes" |
		//"derived" | "!derived" | "ordered" | "!ordered" | "readonly" | "!readonly" | "resolve" |
		//"!resolve" | "transient" | "!transient" | "unique" | "!unique" | "unsettable" |
		//"!unsettable" | "volatile" | "!volatile" ) ("," qualifiers+=( "api" | "!api" | "composes" |
		//"!composes" | "derived" | "!derived" | "ordered" | "!ordered" | "readonly" | "!readonly" |
		//"resolve" | "!resolve" | "transient" | "!transient" | "unique" | "!unique" | "unsettable" |
		//"!unsettable" | "volatile" | "!volatile" ))* "}")? ("{" (annotations+=
		//AnnotationElementCS|constraints+=( InitialConstraintCS | DerivedConstraintCS ))* "}"|
		//";")
		public Group getGroup() { return cGroup; }

		//"property"
		public Keyword getPropertyKeyword_0() { return cPropertyKeyword_0; }

		//name=Identifier
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//Identifier
		public RuleCall getNameIdentifierParserRuleCall_1_0() { return cNameIdentifierParserRuleCall_1_0; }

		//("#" opposite=ReferenceRef)?
		public Group getGroup_2() { return cGroup_2; }

		//"#"
		public Keyword getNumberSignKeyword_2_0() { return cNumberSignKeyword_2_0; }

		//opposite=ReferenceRef
		public Assignment getOppositeAssignment_2_1() { return cOppositeAssignment_2_1; }

		//ReferenceRef
		public RuleCall getOppositeReferenceRefParserRuleCall_2_1_0() { return cOppositeReferenceRefParserRuleCall_2_1_0; }

		//(":" type=TypeRefCS ("[" (lower=LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+" | "?" ))
		//"]")?)?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//type=TypeRefCS
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }

		//TypeRefCS
		public RuleCall getTypeTypeRefCSParserRuleCall_3_1_0() { return cTypeTypeRefCSParserRuleCall_3_1_0; }

		//("[" (lower=LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+" | "?" )) "]")?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_2_0() { return cLeftSquareBracketKeyword_3_2_0; }

		//lower=LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+" | "?" )
		public Alternatives getAlternatives_3_2_1() { return cAlternatives_3_2_1; }

		//lower=LOWER (".." upper=UPPER)?
		public Group getGroup_3_2_1_0() { return cGroup_3_2_1_0; }

		//lower=LOWER
		public Assignment getLowerAssignment_3_2_1_0_0() { return cLowerAssignment_3_2_1_0_0; }

		//LOWER
		public RuleCall getLowerLOWERParserRuleCall_3_2_1_0_0_0() { return cLowerLOWERParserRuleCall_3_2_1_0_0_0; }

		//(".." upper=UPPER)?
		public Group getGroup_3_2_1_0_1() { return cGroup_3_2_1_0_1; }

		//".."
		public Keyword getFullStopFullStopKeyword_3_2_1_0_1_0() { return cFullStopFullStopKeyword_3_2_1_0_1_0; }

		//upper=UPPER
		public Assignment getUpperAssignment_3_2_1_0_1_1() { return cUpperAssignment_3_2_1_0_1_1; }

		//UPPER
		public RuleCall getUpperUPPERParserRuleCall_3_2_1_0_1_1_0() { return cUpperUPPERParserRuleCall_3_2_1_0_1_1_0; }

		//multiplicity=( "*" | "+" | "?" )
		public Assignment getMultiplicityAssignment_3_2_1_1() { return cMultiplicityAssignment_3_2_1_1; }

		//"*"|"+"|"?"
		public Alternatives getMultiplicityAlternatives_3_2_1_1_0() { return cMultiplicityAlternatives_3_2_1_1_0; }

		//"*"
		public Keyword getMultiplicityAsteriskKeyword_3_2_1_1_0_0() { return cMultiplicityAsteriskKeyword_3_2_1_1_0_0; }

		//"+"
		public Keyword getMultiplicityPlusSignKeyword_3_2_1_1_0_1() { return cMultiplicityPlusSignKeyword_3_2_1_1_0_1; }

		//"?"
		public Keyword getMultiplicityQuestionMarkKeyword_3_2_1_1_0_2() { return cMultiplicityQuestionMarkKeyword_3_2_1_1_0_2; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_2_2() { return cRightSquareBracketKeyword_3_2_2; }

		//("=" defaultValueLiteral=URL)?
		public Group getGroup_4() { return cGroup_4; }

		//"="
		public Keyword getEqualsSignKeyword_4_0() { return cEqualsSignKeyword_4_0; }

		//defaultValueLiteral=URL
		public Assignment getDefaultValueLiteralAssignment_4_1() { return cDefaultValueLiteralAssignment_4_1; }

		//URL
		public RuleCall getDefaultValueLiteralURLTerminalRuleCall_4_1_0() { return cDefaultValueLiteralURLTerminalRuleCall_4_1_0; }

		//("{" qualifiers+=( "api" | "!api" | "composes" | "!composes" | "derived" | "!derived" |
		//"ordered" | "!ordered" | "readonly" | "!readonly" | "resolve" | "!resolve" | "transient" |
		//"!transient" | "unique" | "!unique" | "unsettable" | "!unsettable" | "volatile" |
		//"!volatile" ) ("," qualifiers+=( "api" | "!api" | "composes" | "!composes" | "derived" |
		//"!derived" | "ordered" | "!ordered" | "readonly" | "!readonly" | "resolve" | "!resolve" |
		//"transient" | "!transient" | "unique" | "!unique" | "unsettable" | "!unsettable" |
		//"volatile" | "!volatile" ))* "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_0() { return cLeftCurlyBracketKeyword_5_0; }

		//qualifiers+=( "api" | "!api" | "composes" | "!composes" | "derived" | "!derived" | "ordered" |
		//"!ordered" | "readonly" | "!readonly" | "resolve" | "!resolve" | "transient" | "!transient" |
		//"unique" | "!unique" | "unsettable" | "!unsettable" | "volatile" | "!volatile" )
		public Assignment getQualifiersAssignment_5_1() { return cQualifiersAssignment_5_1; }

		//"api"|"!api"|"composes"|"!composes"|"derived"|"!derived"|"ordered"|"!ordered"|
		//"readonly"|"!readonly"|"resolve"|"!resolve"|"transient"|"!transient"|"unique"|
		//"!unique"|"unsettable"|"!unsettable"|"volatile"|"!volatile"
		public Alternatives getQualifiersAlternatives_5_1_0() { return cQualifiersAlternatives_5_1_0; }

		//"api"
		public Keyword getQualifiersApiKeyword_5_1_0_0() { return cQualifiersApiKeyword_5_1_0_0; }

		//"!api"
		public Keyword getQualifiersApiKeyword_5_1_0_1() { return cQualifiersApiKeyword_5_1_0_1; }

		//"composes"
		public Keyword getQualifiersComposesKeyword_5_1_0_2() { return cQualifiersComposesKeyword_5_1_0_2; }

		//"!composes"
		public Keyword getQualifiersComposesKeyword_5_1_0_3() { return cQualifiersComposesKeyword_5_1_0_3; }

		//"derived"
		public Keyword getQualifiersDerivedKeyword_5_1_0_4() { return cQualifiersDerivedKeyword_5_1_0_4; }

		//"!derived"
		public Keyword getQualifiersDerivedKeyword_5_1_0_5() { return cQualifiersDerivedKeyword_5_1_0_5; }

		//"ordered"
		public Keyword getQualifiersOrderedKeyword_5_1_0_6() { return cQualifiersOrderedKeyword_5_1_0_6; }

		//"!ordered"
		public Keyword getQualifiersOrderedKeyword_5_1_0_7() { return cQualifiersOrderedKeyword_5_1_0_7; }

		//"readonly"
		public Keyword getQualifiersReadonlyKeyword_5_1_0_8() { return cQualifiersReadonlyKeyword_5_1_0_8; }

		//"!readonly"
		public Keyword getQualifiersReadonlyKeyword_5_1_0_9() { return cQualifiersReadonlyKeyword_5_1_0_9; }

		//"resolve"
		public Keyword getQualifiersResolveKeyword_5_1_0_10() { return cQualifiersResolveKeyword_5_1_0_10; }

		//"!resolve"
		public Keyword getQualifiersResolveKeyword_5_1_0_11() { return cQualifiersResolveKeyword_5_1_0_11; }

		//"transient"
		public Keyword getQualifiersTransientKeyword_5_1_0_12() { return cQualifiersTransientKeyword_5_1_0_12; }

		//"!transient"
		public Keyword getQualifiersTransientKeyword_5_1_0_13() { return cQualifiersTransientKeyword_5_1_0_13; }

		//"unique"
		public Keyword getQualifiersUniqueKeyword_5_1_0_14() { return cQualifiersUniqueKeyword_5_1_0_14; }

		//"!unique"
		public Keyword getQualifiersUniqueKeyword_5_1_0_15() { return cQualifiersUniqueKeyword_5_1_0_15; }

		//"unsettable"
		public Keyword getQualifiersUnsettableKeyword_5_1_0_16() { return cQualifiersUnsettableKeyword_5_1_0_16; }

		//"!unsettable"
		public Keyword getQualifiersUnsettableKeyword_5_1_0_17() { return cQualifiersUnsettableKeyword_5_1_0_17; }

		//"volatile"
		public Keyword getQualifiersVolatileKeyword_5_1_0_18() { return cQualifiersVolatileKeyword_5_1_0_18; }

		//"!volatile"
		public Keyword getQualifiersVolatileKeyword_5_1_0_19() { return cQualifiersVolatileKeyword_5_1_0_19; }

		//("," qualifiers+=( "api" | "!api" | "composes" | "!composes" | "derived" | "!derived" |
		//"ordered" | "!ordered" | "readonly" | "!readonly" | "resolve" | "!resolve" | "transient" |
		//"!transient" | "unique" | "!unique" | "unsettable" | "!unsettable" | "volatile" |
		//"!volatile" ))*
		public Group getGroup_5_2() { return cGroup_5_2; }

		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }

		//qualifiers+=( "api" | "!api" | "composes" | "!composes" | "derived" | "!derived" | "ordered" |
		//"!ordered" | "readonly" | "!readonly" | "resolve" | "!resolve" | "transient" | "!transient" |
		//"unique" | "!unique" | "unsettable" | "!unsettable" | "volatile" | "!volatile" )
		public Assignment getQualifiersAssignment_5_2_1() { return cQualifiersAssignment_5_2_1; }

		//"api"|"!api"|"composes"|"!composes"|"derived"|"!derived"|"ordered"|"!ordered"|
		//"readonly"|"!readonly"|"resolve"|"!resolve"|"transient"|"!transient"|"unique"|
		//"!unique"|"unsettable"|"!unsettable"|"volatile"|"!volatile"
		public Alternatives getQualifiersAlternatives_5_2_1_0() { return cQualifiersAlternatives_5_2_1_0; }

		//"api"
		public Keyword getQualifiersApiKeyword_5_2_1_0_0() { return cQualifiersApiKeyword_5_2_1_0_0; }

		//"!api"
		public Keyword getQualifiersApiKeyword_5_2_1_0_1() { return cQualifiersApiKeyword_5_2_1_0_1; }

		//"composes"
		public Keyword getQualifiersComposesKeyword_5_2_1_0_2() { return cQualifiersComposesKeyword_5_2_1_0_2; }

		//"!composes"
		public Keyword getQualifiersComposesKeyword_5_2_1_0_3() { return cQualifiersComposesKeyword_5_2_1_0_3; }

		//"derived"
		public Keyword getQualifiersDerivedKeyword_5_2_1_0_4() { return cQualifiersDerivedKeyword_5_2_1_0_4; }

		//"!derived"
		public Keyword getQualifiersDerivedKeyword_5_2_1_0_5() { return cQualifiersDerivedKeyword_5_2_1_0_5; }

		//"ordered"
		public Keyword getQualifiersOrderedKeyword_5_2_1_0_6() { return cQualifiersOrderedKeyword_5_2_1_0_6; }

		//"!ordered"
		public Keyword getQualifiersOrderedKeyword_5_2_1_0_7() { return cQualifiersOrderedKeyword_5_2_1_0_7; }

		//"readonly"
		public Keyword getQualifiersReadonlyKeyword_5_2_1_0_8() { return cQualifiersReadonlyKeyword_5_2_1_0_8; }

		//"!readonly"
		public Keyword getQualifiersReadonlyKeyword_5_2_1_0_9() { return cQualifiersReadonlyKeyword_5_2_1_0_9; }

		//"resolve"
		public Keyword getQualifiersResolveKeyword_5_2_1_0_10() { return cQualifiersResolveKeyword_5_2_1_0_10; }

		//"!resolve"
		public Keyword getQualifiersResolveKeyword_5_2_1_0_11() { return cQualifiersResolveKeyword_5_2_1_0_11; }

		//"transient"
		public Keyword getQualifiersTransientKeyword_5_2_1_0_12() { return cQualifiersTransientKeyword_5_2_1_0_12; }

		//"!transient"
		public Keyword getQualifiersTransientKeyword_5_2_1_0_13() { return cQualifiersTransientKeyword_5_2_1_0_13; }

		//"unique"
		public Keyword getQualifiersUniqueKeyword_5_2_1_0_14() { return cQualifiersUniqueKeyword_5_2_1_0_14; }

		//"!unique"
		public Keyword getQualifiersUniqueKeyword_5_2_1_0_15() { return cQualifiersUniqueKeyword_5_2_1_0_15; }

		//"unsettable"
		public Keyword getQualifiersUnsettableKeyword_5_2_1_0_16() { return cQualifiersUnsettableKeyword_5_2_1_0_16; }

		//"!unsettable"
		public Keyword getQualifiersUnsettableKeyword_5_2_1_0_17() { return cQualifiersUnsettableKeyword_5_2_1_0_17; }

		//"volatile"
		public Keyword getQualifiersVolatileKeyword_5_2_1_0_18() { return cQualifiersVolatileKeyword_5_2_1_0_18; }

		//"!volatile"
		public Keyword getQualifiersVolatileKeyword_5_2_1_0_19() { return cQualifiersVolatileKeyword_5_2_1_0_19; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }

		//"{" (annotations+=AnnotationElementCS|constraints+=( InitialConstraintCS |
		//DerivedConstraintCS ))* "}"|";"
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//"{" (annotations+=AnnotationElementCS|constraints+=( InitialConstraintCS |
		//DerivedConstraintCS ))* "}"
		public Group getGroup_6_0() { return cGroup_6_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_0_0() { return cLeftCurlyBracketKeyword_6_0_0; }

		//(annotations+=AnnotationElementCS|constraints+=( InitialConstraintCS |
		//DerivedConstraintCS ))*
		public Alternatives getAlternatives_6_0_1() { return cAlternatives_6_0_1; }

		//annotations+=AnnotationElementCS
		public Assignment getAnnotationsAssignment_6_0_1_0() { return cAnnotationsAssignment_6_0_1_0; }

		//AnnotationElementCS
		public RuleCall getAnnotationsAnnotationElementCSParserRuleCall_6_0_1_0_0() { return cAnnotationsAnnotationElementCSParserRuleCall_6_0_1_0_0; }

		//constraints+=( InitialConstraintCS | DerivedConstraintCS )
		public Assignment getConstraintsAssignment_6_0_1_1() { return cConstraintsAssignment_6_0_1_1; }

		//InitialConstraintCS|DerivedConstraintCS
		public Alternatives getConstraintsAlternatives_6_0_1_1_0() { return cConstraintsAlternatives_6_0_1_1_0; }

		//InitialConstraintCS
		public RuleCall getConstraintsInitialConstraintCSParserRuleCall_6_0_1_1_0_0() { return cConstraintsInitialConstraintCSParserRuleCall_6_0_1_1_0_0; }

		//DerivedConstraintCS
		public RuleCall getConstraintsDerivedConstraintCSParserRuleCall_6_0_1_1_0_1() { return cConstraintsDerivedConstraintCSParserRuleCall_6_0_1_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_0_2() { return cRightCurlyBracketKeyword_6_0_2; }

		//";"
		public Keyword getSemicolonKeyword_6_1() { return cSemicolonKeyword_6_1; }
	}

	public class ReferenceRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReferenceRef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReferenceCSRefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEReferenceRefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ReferenceRef:
		//  ReferenceCSRef|EReferenceRef;
		public ParserRule getRule() { return rule; }

		//ReferenceCSRef|EReferenceRef
		public Alternatives getAlternatives() { return cAlternatives; }

		//ReferenceCSRef
		public RuleCall getReferenceCSRefParserRuleCall_0() { return cReferenceCSRefParserRuleCall_0; }

		//EReferenceRef
		public RuleCall getEReferenceRefParserRuleCall_1() { return cEReferenceRefParserRuleCall_1; }
	}

	public class ReferenceCSRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReferenceCSRef");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRefReferenceCSCrossReference_0 = (CrossReference)cRefAssignment.eContents().get(0);
		private final RuleCall cRefReferenceCSIdentifierParserRuleCall_0_1 = (RuleCall)cRefReferenceCSCrossReference_0.eContents().get(1);
		
		//ReferenceCSRef:
		//  ref=[ReferenceCS|Identifier];
		public ParserRule getRule() { return rule; }

		//ref=[ReferenceCS|Identifier]
		public Assignment getRefAssignment() { return cRefAssignment; }

		//[ReferenceCS|Identifier]
		public CrossReference getRefReferenceCSCrossReference_0() { return cRefReferenceCSCrossReference_0; }

		//Identifier
		public RuleCall getRefReferenceCSIdentifierParserRuleCall_0_1() { return cRefReferenceCSIdentifierParserRuleCall_0_1; }
	}

	public class StructuralFeatureCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StructuralFeatureCS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeCSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cReferenceCSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//StructuralFeatureCS:
		//  AttributeCS|ReferenceCS;
		public ParserRule getRule() { return rule; }

		//AttributeCS|ReferenceCS
		public Alternatives getAlternatives() { return cAlternatives; }

		//AttributeCS
		public RuleCall getAttributeCSParserRuleCall_0() { return cAttributeCSParserRuleCall_0; }

		//ReferenceCS
		public RuleCall getReferenceCSParserRuleCall_1() { return cReferenceCSParserRuleCall_1; }
	}

	public class TypeCSRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeCSRef");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRefTypeCSCrossReference_0 = (CrossReference)cRefAssignment.eContents().get(0);
		private final RuleCall cRefTypeCSIdentifierParserRuleCall_0_1 = (RuleCall)cRefTypeCSCrossReference_0.eContents().get(1);
		
		//TypeCSRef:
		//  ref=[TypeCS|Identifier];
		public ParserRule getRule() { return rule; }

		//ref=[TypeCS|Identifier]
		public Assignment getRefAssignment() { return cRefAssignment; }

		//[TypeCS|Identifier]
		public CrossReference getRefTypeCSCrossReference_0() { return cRefTypeCSCrossReference_0; }

		//Identifier
		public RuleCall getRefTypeCSIdentifierParserRuleCall_0_1() { return cRefTypeCSIdentifierParserRuleCall_0_1; }
	}

	public class TypeParameterCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeParameterCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIdentifierParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cExtendsKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cExtendsAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cExtendsTypeRefCSParserRuleCall_1_0_1_0 = (RuleCall)cExtendsAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_0_2 = (Group)cGroup_1_0.eContents().get(2);
		private final Keyword cAmpersandAmpersandKeyword_1_0_2_0 = (Keyword)cGroup_1_0_2.eContents().get(0);
		private final Assignment cExtendsAssignment_1_0_2_1 = (Assignment)cGroup_1_0_2.eContents().get(1);
		private final RuleCall cExtendsTypeRefCSParserRuleCall_1_0_2_1_0 = (RuleCall)cExtendsAssignment_1_0_2_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cSuperKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cSuperAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cSuperTypeRefCSParserRuleCall_1_1_1_0 = (RuleCall)cSuperAssignment_1_1_1.eContents().get(0);
		
		//TypeParameterCS:
		//  name=Identifier ("extends" extends+=TypeRefCS ("&&" extends+=TypeRefCS)*|"super"
		//  super=TypeRefCS)?;
		public ParserRule getRule() { return rule; }

		//name=Identifier ("extends" extends+=TypeRefCS ("&&" extends+=TypeRefCS)*|"super"
		//super=TypeRefCS)?
		public Group getGroup() { return cGroup; }

		//name=Identifier
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//Identifier
		public RuleCall getNameIdentifierParserRuleCall_0_0() { return cNameIdentifierParserRuleCall_0_0; }

		//("extends" extends+=TypeRefCS ("&&" extends+=TypeRefCS)*|"super" super=TypeRefCS)?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"extends" extends+=TypeRefCS ("&&" extends+=TypeRefCS)*
		public Group getGroup_1_0() { return cGroup_1_0; }

		//"extends"
		public Keyword getExtendsKeyword_1_0_0() { return cExtendsKeyword_1_0_0; }

		//extends+=TypeRefCS
		public Assignment getExtendsAssignment_1_0_1() { return cExtendsAssignment_1_0_1; }

		//TypeRefCS
		public RuleCall getExtendsTypeRefCSParserRuleCall_1_0_1_0() { return cExtendsTypeRefCSParserRuleCall_1_0_1_0; }

		//("&&" extends+=TypeRefCS)*
		public Group getGroup_1_0_2() { return cGroup_1_0_2; }

		//"&&"
		public Keyword getAmpersandAmpersandKeyword_1_0_2_0() { return cAmpersandAmpersandKeyword_1_0_2_0; }

		//extends+=TypeRefCS
		public Assignment getExtendsAssignment_1_0_2_1() { return cExtendsAssignment_1_0_2_1; }

		//TypeRefCS
		public RuleCall getExtendsTypeRefCSParserRuleCall_1_0_2_1_0() { return cExtendsTypeRefCSParserRuleCall_1_0_2_1_0; }

		//"super" super=TypeRefCS
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"super"
		public Keyword getSuperKeyword_1_1_0() { return cSuperKeyword_1_1_0; }

		//super=TypeRefCS
		public Assignment getSuperAssignment_1_1_1() { return cSuperAssignment_1_1_1; }

		//TypeRefCS
		public RuleCall getSuperTypeRefCSParserRuleCall_1_1_1_0() { return cSuperTypeRefCSParserRuleCall_1_1_1_0; }
	}

	public class TypeRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeRef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTypeCSRefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEClassifierRefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEClassifierCSRefParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//TypeRef:
		//  TypeCSRef|EClassifierRef|EClassifierCSRef;
		public ParserRule getRule() { return rule; }

		//TypeCSRef|EClassifierRef|EClassifierCSRef
		public Alternatives getAlternatives() { return cAlternatives; }

		//TypeCSRef
		public RuleCall getTypeCSRefParserRuleCall_0() { return cTypeCSRefParserRuleCall_0; }

		//EClassifierRef
		public RuleCall getEClassifierRefParserRuleCall_1() { return cEClassifierRefParserRuleCall_1; }

		//EClassifierCSRef
		public RuleCall getEClassifierCSRefParserRuleCall_2() { return cEClassifierCSRefParserRuleCall_2; }
	}

	public class TypeRefCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeRefCS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTypedTypeRefCSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWildcardTypeRefCSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TypeRefCS:
		//  TypedTypeRefCS|WildcardTypeRefCS;
		public ParserRule getRule() { return rule; }

		//TypedTypeRefCS|WildcardTypeRefCS
		public Alternatives getAlternatives() { return cAlternatives; }

		//TypedTypeRefCS
		public RuleCall getTypedTypeRefCSParserRuleCall_0() { return cTypedTypeRefCSParserRuleCall_0; }

		//WildcardTypeRefCS
		public RuleCall getWildcardTypeRefCSParserRuleCall_1() { return cWildcardTypeRefCSParserRuleCall_1; }
	}

	public class TypedTypeRefCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypedTypeRefCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeTypeRefParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLessThanSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTypeArgumentsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTypeArgumentsTypeRefCSParserRuleCall_1_1_0 = (RuleCall)cTypeArgumentsAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cTypeArgumentsAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cTypeArgumentsTypeRefCSParserRuleCall_1_2_1_0 = (RuleCall)cTypeArgumentsAssignment_1_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//TypedTypeRefCS:
		//  type=TypeRef ("<" typeArguments+=TypeRefCS ("," typeArguments+=TypeRefCS)* ">")?;
		public ParserRule getRule() { return rule; }

		//type=TypeRef ("<" typeArguments+=TypeRefCS ("," typeArguments+=TypeRefCS)* ">")?
		public Group getGroup() { return cGroup; }

		//type=TypeRef
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//TypeRef
		public RuleCall getTypeTypeRefParserRuleCall_0_0() { return cTypeTypeRefParserRuleCall_0_0; }

		//("<" typeArguments+=TypeRefCS ("," typeArguments+=TypeRefCS)* ">")?
		public Group getGroup_1() { return cGroup_1; }

		//"<"
		public Keyword getLessThanSignKeyword_1_0() { return cLessThanSignKeyword_1_0; }

		//typeArguments+=TypeRefCS
		public Assignment getTypeArgumentsAssignment_1_1() { return cTypeArgumentsAssignment_1_1; }

		//TypeRefCS
		public RuleCall getTypeArgumentsTypeRefCSParserRuleCall_1_1_0() { return cTypeArgumentsTypeRefCSParserRuleCall_1_1_0; }

		//("," typeArguments+=TypeRefCS)*
		public Group getGroup_1_2() { return cGroup_1_2; }

		//","
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }

		//typeArguments+=TypeRefCS
		public Assignment getTypeArgumentsAssignment_1_2_1() { return cTypeArgumentsAssignment_1_2_1; }

		//TypeRefCS
		public RuleCall getTypeArgumentsTypeRefCSParserRuleCall_1_2_1_0() { return cTypeArgumentsTypeRefCSParserRuleCall_1_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_1_3() { return cGreaterThanSignKeyword_1_3; }
	}

	public class WildcardTypeRefCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "WildcardTypeRefCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cWildcardTypeRefCSAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cQuestionMarkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cExtendsKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cExtendsAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cExtendsTypeRefCSParserRuleCall_2_0_1_0 = (RuleCall)cExtendsAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cSuperKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cSuperAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cSuperTypeRefCSParserRuleCall_2_1_1_0 = (RuleCall)cSuperAssignment_2_1_1.eContents().get(0);
		
		//WildcardTypeRefCS:
		//  {WildcardTypeRefCS} "?" ("extends" extends=TypeRefCS|"super" super=TypeRefCS)?;
		public ParserRule getRule() { return rule; }

		//{WildcardTypeRefCS} "?" ("extends" extends=TypeRefCS|"super" super=TypeRefCS)?
		public Group getGroup() { return cGroup; }

		//{WildcardTypeRefCS}
		public Action getWildcardTypeRefCSAction_0() { return cWildcardTypeRefCSAction_0; }

		//"?"
		public Keyword getQuestionMarkKeyword_1() { return cQuestionMarkKeyword_1; }

		//("extends" extends=TypeRefCS|"super" super=TypeRefCS)?
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"extends" extends=TypeRefCS
		public Group getGroup_2_0() { return cGroup_2_0; }

		//"extends"
		public Keyword getExtendsKeyword_2_0_0() { return cExtendsKeyword_2_0_0; }

		//extends=TypeRefCS
		public Assignment getExtendsAssignment_2_0_1() { return cExtendsAssignment_2_0_1; }

		//TypeRefCS
		public RuleCall getExtendsTypeRefCSParserRuleCall_2_0_1_0() { return cExtendsTypeRefCSParserRuleCall_2_0_1_0; }

		//"super" super=TypeRefCS
		public Group getGroup_2_1() { return cGroup_2_1; }

		//"super"
		public Keyword getSuperKeyword_2_1_0() { return cSuperKeyword_2_1_0; }

		//super=TypeRefCS
		public Assignment getSuperAssignment_2_1_1() { return cSuperAssignment_2_1_1; }

		//TypeRefCS
		public RuleCall getSuperTypeRefCSParserRuleCall_2_1_1_0() { return cSuperTypeRefCSParserRuleCall_2_1_1_0; }
	}
	
	
	private DocumentCSElements pDocumentCS;
	private TerminalRule tURL;
	private FQNElements pFQN;
	private INTEGERElements pINTEGER;
	private LOWERElements pLOWER;
	private UPPERElements pUPPER;
	private RestrictedKeywordsElements pRestrictedKeywords;
	private IdentifierElements pIdentifier;
	private BodyConstraintCSElements pBodyConstraintCS;
	private DerivedConstraintCSElements pDerivedConstraintCS;
	private InitialConstraintCSElements pInitialConstraintCS;
	private InvariantConstraintCSElements pInvariantConstraintCS;
	private PostconditionConstraintCSElements pPostconditionConstraintCS;
	private PreconditionConstraintCSElements pPreconditionConstraintCS;
	private EClassRefElements pEClassRef;
	private EClassifierRefElements pEClassifierRef;
	private EDataTypeRefElements pEDataTypeRef;
	private EReferenceRefElements pEReferenceRef;
	private AnnotationCSElements pAnnotationCS;
	private AnnotationElementCSElements pAnnotationElementCS;
	private AttributeCSElements pAttributeCS;
	private ClassCSElements pClassCS;
	private ClassRefElements pClassRef;
	private ClassCSRefElements pClassCSRef;
	private ClassifierCSElements pClassifierCS;
	private DataTypeCSElements pDataTypeCS;
	private DataTypeRefElements pDataTypeRef;
	private DataTypeCSRefElements pDataTypeCSRef;
	private DetailCSElements pDetailCS;
	private DocumentationCSElements pDocumentationCS;
	private EClassifierCSRefElements pEClassifierCSRef;
	private EnumCSElements pEnumCS;
	private EnumLiteralCSElements pEnumLiteralCS;
	private ImportCSElements pImportCS;
	private ModelElementCSElements pModelElementCS;
	private ModelElementCSRefElements pModelElementCSRef;
	private ObjectRefElements pObjectRef;
	private OperationCSElements pOperationCS;
	private PackageCSElements pPackageCS;
	private ParameterCSElements pParameterCS;
	private ReferenceCSElements pReferenceCS;
	private ReferenceRefElements pReferenceRef;
	private ReferenceCSRefElements pReferenceCSRef;
	private StructuralFeatureCSElements pStructuralFeatureCS;
	private TypeCSRefElements pTypeCSRef;
	private TypeParameterCSElements pTypeParameterCS;
	private TypeRefElements pTypeRef;
	private TypeRefCSElements pTypeRefCS;
	private TypedTypeRefCSElements pTypedTypeRefCS;
	private WildcardTypeRefCSElements pWildcardTypeRefCS;
	
	private final GrammarProvider grammarProvider;

	private EssentialOCLGrammarAccess gaEssentialOCL;

	@Inject
	public OCLinEcoreGrammarAccess(GrammarProvider grammarProvider,
		EssentialOCLGrammarAccess gaEssentialOCL) {
		this.grammarProvider = grammarProvider;
		this.gaEssentialOCL = gaEssentialOCL;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public EssentialOCLGrammarAccess getEssentialOCLGrammarAccess() {
		return gaEssentialOCL;
	}

	
	//DocumentCS:
	//  imports+=ImportCS* packages+=PackageCS*; 
	////generate oclinEcore2 "http://www.eclipse.org/ocl/examples/xtext/oclinecore/OCLinEcore"
	public DocumentCSElements getDocumentCSAccess() {
		return (pDocumentCS != null) ? pDocumentCS : (pDocumentCS = new DocumentCSElements());
	}
	
	public ParserRule getDocumentCSRule() {
		return getDocumentCSAccess().getRule();
	}

	//terminal URL:
	//  "\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"";
	public TerminalRule getURLRule() {
		return (tURL != null) ? tURL : (tURL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "URL"));
	} 

	//FQN returns ecore::EString:
	//  Identifier ("." Identifier)*;
	public FQNElements getFQNAccess() {
		return (pFQN != null) ? pFQN : (pFQN = new FQNElements());
	}
	
	public ParserRule getFQNRule() {
		return getFQNAccess().getRule();
	}

	//INTEGER returns ecore::EInt:
	//  INT;
	public INTEGERElements getINTEGERAccess() {
		return (pINTEGER != null) ? pINTEGER : (pINTEGER = new INTEGERElements());
	}
	
	public ParserRule getINTEGERRule() {
		return getINTEGERAccess().getRule();
	}

	//LOWER returns ecore::EInt:
	//  INT;
	public LOWERElements getLOWERAccess() {
		return (pLOWER != null) ? pLOWER : (pLOWER = new LOWERElements());
	}
	
	public ParserRule getLOWERRule() {
		return getLOWERAccess().getRule();
	}

	//UPPER returns ecore::EInt:
	//  INT|"*";
	public UPPERElements getUPPERAccess() {
		return (pUPPER != null) ? pUPPER : (pUPPER = new UPPERElements());
	}
	
	public ParserRule getUPPERRule() {
		return getUPPERAccess().getRule();
	}

	//RestrictedKeywords returns ecore::EString:
	//  "abstract"|"attribute"|"body"|"class"|"enum"|"extends"|"id"|"import"|"interface"
	//  |"invariant"|"operation"|"ordered"|"package"|"property"|"serializable"|
	//  "transient"|"unique"|"volatile"; 
	//
	//    			 // For extension by derived grammars
	//	 
	////|	'annotation'
	////|	'api'
	//	 
	//	 
	//	 
	////|	'composes'
	////|	'datatype'
	////|	'derivation'
	////|	'derived'
	////|	'documentation'
	//	 
	//	 
	//	 
	//	 
	////|	'initial'
	//	 
	//	 
	//	 
	//	 
	//	 
	////|	'postcondition'
	////|	'precondition'
	//	 
	////|	'readonly'
	////|	'resolve'
	//	 
	////|	'super'
	////|	'throws'
	//	 
	//	 
	////|	'unsettable'
	public RestrictedKeywordsElements getRestrictedKeywordsAccess() {
		return (pRestrictedKeywords != null) ? pRestrictedKeywords : (pRestrictedKeywords = new RestrictedKeywordsElements());
	}
	
	public ParserRule getRestrictedKeywordsRule() {
		return getRestrictedKeywordsAccess().getRule();
	}

	//Identifier returns ecore::EString:
	//  ID_TERMINAL|"e"|"E"|RestrictedKeywords; 
	//
	//    			 // For extension by derived grammars
	public IdentifierElements getIdentifierAccess() {
		return (pIdentifier != null) ? pIdentifier : (pIdentifier = new IdentifierElements());
	}
	
	public ParserRule getIdentifierRule() {
		return getIdentifierAccess().getRule();
	}

	//BodyConstraintCS returns ConstraintCS:
	//  stereotype="body" name=Identifier? ":" (exprValue=OclExpressionCS|exprString=URL)?
	//  ";";
	public BodyConstraintCSElements getBodyConstraintCSAccess() {
		return (pBodyConstraintCS != null) ? pBodyConstraintCS : (pBodyConstraintCS = new BodyConstraintCSElements());
	}
	
	public ParserRule getBodyConstraintCSRule() {
		return getBodyConstraintCSAccess().getRule();
	}

	//DerivedConstraintCS returns ConstraintCS:
	//  stereotype="derivation" ":" (exprValue=OclExpressionCS|exprString=URL)? ";";
	public DerivedConstraintCSElements getDerivedConstraintCSAccess() {
		return (pDerivedConstraintCS != null) ? pDerivedConstraintCS : (pDerivedConstraintCS = new DerivedConstraintCSElements());
	}
	
	public ParserRule getDerivedConstraintCSRule() {
		return getDerivedConstraintCSAccess().getRule();
	}

	//InitialConstraintCS returns ConstraintCS:
	//  stereotype="initial" ":" (exprValue=OclExpressionCS|exprString=URL)? ";";
	public InitialConstraintCSElements getInitialConstraintCSAccess() {
		return (pInitialConstraintCS != null) ? pInitialConstraintCS : (pInitialConstraintCS = new InitialConstraintCSElements());
	}
	
	public ParserRule getInitialConstraintCSRule() {
		return getInitialConstraintCSAccess().getRule();
	}

	//InvariantConstraintCS returns ConstraintCS:
	//  stereotype="invariant" name=Identifier? ":" (exprValue=OclExpressionCS|exprString=
	//  URL)? ";";
	public InvariantConstraintCSElements getInvariantConstraintCSAccess() {
		return (pInvariantConstraintCS != null) ? pInvariantConstraintCS : (pInvariantConstraintCS = new InvariantConstraintCSElements());
	}
	
	public ParserRule getInvariantConstraintCSRule() {
		return getInvariantConstraintCSAccess().getRule();
	}

	//PostconditionConstraintCS returns ConstraintCS:
	//  stereotype="postcondition" name=Identifier? ":" (exprValue=OclExpressionCS|
	//  exprString=URL)? ";";
	public PostconditionConstraintCSElements getPostconditionConstraintCSAccess() {
		return (pPostconditionConstraintCS != null) ? pPostconditionConstraintCS : (pPostconditionConstraintCS = new PostconditionConstraintCSElements());
	}
	
	public ParserRule getPostconditionConstraintCSRule() {
		return getPostconditionConstraintCSAccess().getRule();
	}

	//PreconditionConstraintCS returns ConstraintCS:
	//  stereotype="precondition" name=Identifier? ":" (exprValue=OclExpressionCS|
	//  exprString=URL)? ";";
	public PreconditionConstraintCSElements getPreconditionConstraintCSAccess() {
		return (pPreconditionConstraintCS != null) ? pPreconditionConstraintCS : (pPreconditionConstraintCS = new PreconditionConstraintCSElements());
	}
	
	public ParserRule getPreconditionConstraintCSRule() {
		return getPreconditionConstraintCSAccess().getRule();
	}

	//EClassRef:
	//  ref=[ecore::EClass|Identifier];
	public EClassRefElements getEClassRefAccess() {
		return (pEClassRef != null) ? pEClassRef : (pEClassRef = new EClassRefElements());
	}
	
	public ParserRule getEClassRefRule() {
		return getEClassRefAccess().getRule();
	}

	//EClassifierRef:
	//  ref=[ecore::EClassifier|Identifier];
	public EClassifierRefElements getEClassifierRefAccess() {
		return (pEClassifierRef != null) ? pEClassifierRef : (pEClassifierRef = new EClassifierRefElements());
	}
	
	public ParserRule getEClassifierRefRule() {
		return getEClassifierRefAccess().getRule();
	}

	//EDataTypeRef:
	//  ref=[ecore::EDataType|Identifier];
	public EDataTypeRefElements getEDataTypeRefAccess() {
		return (pEDataTypeRef != null) ? pEDataTypeRef : (pEDataTypeRef = new EDataTypeRefElements());
	}
	
	public ParserRule getEDataTypeRefRule() {
		return getEDataTypeRefAccess().getRule();
	}

	//EReferenceRef:
	//  ref=[ecore::EReference|Identifier];
	public EReferenceRefElements getEReferenceRefAccess() {
		return (pEReferenceRef != null) ? pEReferenceRef : (pEReferenceRef = new EReferenceRefElements());
	}
	
	public ParserRule getEReferenceRefRule() {
		return getEReferenceRefAccess().getRule();
	}

	//AnnotationCS:
	//  "annotation" (idSource=Identifier|stringSource=URL) ("(" details+=DetailCS (","
	//  details+=DetailCS)* ")")? ("{" (annotations+=AnnotationElementCS|contents+=
	//  ModelElementCS|references+=ObjectRef)+ "}"|";");
	public AnnotationCSElements getAnnotationCSAccess() {
		return (pAnnotationCS != null) ? pAnnotationCS : (pAnnotationCS = new AnnotationCSElements());
	}
	
	public ParserRule getAnnotationCSRule() {
		return getAnnotationCSAccess().getRule();
	}

	//AnnotationElementCS:
	//  AnnotationCS|DocumentationCS;
	public AnnotationElementCSElements getAnnotationElementCSAccess() {
		return (pAnnotationElementCS != null) ? pAnnotationElementCS : (pAnnotationElementCS = new AnnotationElementCSElements());
	}
	
	public ParserRule getAnnotationElementCSRule() {
		return getAnnotationElementCSAccess().getRule();
	}

	//AttributeCS:
	//  "attribute" name=Identifier (":" type=TypeRefCS ("[" (lower=LOWER (".." upper=UPPER)?|
	//  multiplicity=( "*" | "+" | "?" )) "]")?)? ("=" defaultValueLiteral=URL)? ("{" qualifiers+=(
	//  "api" | "!api" | "derived" | "!derived" | "id" | "!id" | "ordered" | "!ordered" | "readonly" |
	//  "!readonly" | "transient" | "!transient" | "unique" | "!unique" | "unsettable" |
	//  "!unsettable" | "volatile" | "!volatile" ) ("," qualifiers+=( "api" | "!api" | "derived" |
	//  "!derived" | "id" | "!id" | "ordered" | "!ordered" | "readonly" | "!readonly" | "transient" |
	//  "!transient" | "unique" | "!unique" | "unsettable" | "!unsettable" | "volatile" |
	//  "!volatile" ))* "}")? ("{" (annotations+=AnnotationElementCS|constraints+=(
	//  InitialConstraintCS | DerivedConstraintCS ))* "}"|";");
	public AttributeCSElements getAttributeCSAccess() {
		return (pAttributeCS != null) ? pAttributeCS : (pAttributeCS = new AttributeCSElements());
	}
	
	public ParserRule getAttributeCSRule() {
		return getAttributeCSAccess().getRule();
	}

	//ClassCS:
	//  "class" name=Identifier ("<" typeParameters+=TypeParameterCS ("," typeParameters+=
	//  TypeParameterCS)* ">")? ("extends" superTypes+=TypeRefCS ("," superTypes+=TypeRefCS)*
	//  )? (":" instanceClassName=URL)? ("{" qualifiers+=( "abstract" | "!abstract" | "interface"
	//  | "!interface" ) ("," qualifiers+=( "abstract" | "!abstract" | "interface" | "!interface" ))
	//  * "}")? ("{" (annotations+=AnnotationElementCS|operations+=OperationCS|
	//  structuralFeatures+=StructuralFeatureCS|constraints+=InvariantConstraintCS)* "}"|
	//  ";");
	public ClassCSElements getClassCSAccess() {
		return (pClassCS != null) ? pClassCS : (pClassCS = new ClassCSElements());
	}
	
	public ParserRule getClassCSRule() {
		return getClassCSAccess().getRule();
	}

	//ClassRef:
	//  ClassCSRef|EClassRef;
	public ClassRefElements getClassRefAccess() {
		return (pClassRef != null) ? pClassRef : (pClassRef = new ClassRefElements());
	}
	
	public ParserRule getClassRefRule() {
		return getClassRefAccess().getRule();
	}

	//ClassCSRef:
	//  ref=[ClassCS|Identifier];
	public ClassCSRefElements getClassCSRefAccess() {
		return (pClassCSRef != null) ? pClassCSRef : (pClassCSRef = new ClassCSRefElements());
	}
	
	public ParserRule getClassCSRefRule() {
		return getClassCSRefAccess().getRule();
	}

	//ClassifierCS:
	//  ClassCS|DataTypeCS|EnumCS;
	public ClassifierCSElements getClassifierCSAccess() {
		return (pClassifierCS != null) ? pClassifierCS : (pClassifierCS = new ClassifierCSElements());
	}
	
	public ParserRule getClassifierCSRule() {
		return getClassifierCSAccess().getRule();
	}

	//DataTypeCS:
	//  "datatype" name=Identifier ("<" typeParameters+=TypeParameterCS ("," typeParameters+=
	//  TypeParameterCS)* ">")? (":" instanceClassName=URL)? ("{" qualifiers+=( "serializable"
	//  | "!serializable" ) "}")? ("{" (annotations+=AnnotationElementCS|constraints+=
	//  InvariantConstraintCS)* "}"|";");
	public DataTypeCSElements getDataTypeCSAccess() {
		return (pDataTypeCS != null) ? pDataTypeCS : (pDataTypeCS = new DataTypeCSElements());
	}
	
	public ParserRule getDataTypeCSRule() {
		return getDataTypeCSAccess().getRule();
	}

	//DataTypeRef:
	//  DataTypeCSRef|EDataTypeRef;
	public DataTypeRefElements getDataTypeRefAccess() {
		return (pDataTypeRef != null) ? pDataTypeRef : (pDataTypeRef = new DataTypeRefElements());
	}
	
	public ParserRule getDataTypeRefRule() {
		return getDataTypeRefAccess().getRule();
	}

	//DataTypeCSRef:
	//  ref=[DataTypeOrEnumCS|Identifier];
	public DataTypeCSRefElements getDataTypeCSRefAccess() {
		return (pDataTypeCSRef != null) ? pDataTypeCSRef : (pDataTypeCSRef = new DataTypeCSRefElements());
	}
	
	public ParserRule getDataTypeCSRefRule() {
		return getDataTypeCSRefAccess().getRule();
	}

	//DetailCS:
	//  (idName=Identifier|stringName=URL) "=" value=STRING_LITERAL;
	public DetailCSElements getDetailCSAccess() {
		return (pDetailCS != null) ? pDetailCS : (pDetailCS = new DetailCSElements());
	}
	
	public ParserRule getDetailCSRule() {
		return getDetailCSAccess().getRule();
	}

	//DocumentationCS:
	//  {DocumentationCS} "documentation" value=URL? ("(" details+=DetailCS ("," details+=
	//  DetailCS)* ")")? ";";
	public DocumentationCSElements getDocumentationCSAccess() {
		return (pDocumentationCS != null) ? pDocumentationCS : (pDocumentationCS = new DocumentationCSElements());
	}
	
	public ParserRule getDocumentationCSRule() {
		return getDocumentationCSAccess().getRule();
	}

	//EClassifierCSRef:
	//  modelName=Identifier "::" ref=[ecore::EClassifier|Identifier];
	public EClassifierCSRefElements getEClassifierCSRefAccess() {
		return (pEClassifierCSRef != null) ? pEClassifierCSRef : (pEClassifierCSRef = new EClassifierCSRefElements());
	}
	
	public ParserRule getEClassifierCSRefRule() {
		return getEClassifierCSRefAccess().getRule();
	}

	//EnumCS:
	//  "enum" name=Identifier ("<" typeParameters+=TypeParameterCS ("," typeParameters+=
	//  TypeParameterCS)* ">")? (":" instanceClassName=URL)? ("{" (annotations+=
	//  AnnotationElementCS|literals+=EnumLiteralCS|constraints+=InvariantConstraintCS)*
	//  "}"|";");
	public EnumCSElements getEnumCSAccess() {
		return (pEnumCS != null) ? pEnumCS : (pEnumCS = new EnumCSElements());
	}
	
	public ParserRule getEnumCSRule() {
		return getEnumCSAccess().getRule();
	}

	//EnumLiteralCS:
	//  name=Identifier ("=" value=INTEGER)? ("{" annotations+=AnnotationElementCS* "}"|";");
	public EnumLiteralCSElements getEnumLiteralCSAccess() {
		return (pEnumLiteralCS != null) ? pEnumLiteralCS : (pEnumLiteralCS = new EnumLiteralCSElements());
	}
	
	public ParserRule getEnumLiteralCSRule() {
		return getEnumLiteralCSAccess().getRule();
	}

	//ImportCS:
	//  "import" (alias=Identifier ":") ePackage=[ecore::EPackage|URL] ";";
	public ImportCSElements getImportCSAccess() {
		return (pImportCS != null) ? pImportCS : (pImportCS = new ImportCSElements());
	}
	
	public ParserRule getImportCSRule() {
		return getImportCSAccess().getRule();
	}

	//ModelElementCS:
	//  ClassifierCS|EnumLiteralCS|OperationCS|PackageCS|StructuralFeatureCS;
	public ModelElementCSElements getModelElementCSAccess() {
		return (pModelElementCS != null) ? pModelElementCS : (pModelElementCS = new ModelElementCSElements());
	}
	
	public ParserRule getModelElementCSRule() {
		return getModelElementCSAccess().getRule();
	}

	//ModelElementCSRef:
	//  ref=[ModelElementCS|Identifier];
	public ModelElementCSRefElements getModelElementCSRefAccess() {
		return (pModelElementCSRef != null) ? pModelElementCSRef : (pModelElementCSRef = new ModelElementCSRefElements());
	}
	
	public ParserRule getModelElementCSRefRule() {
		return getModelElementCSRefAccess().getRule();
	}

	//ObjectRef:
	//  ModelElementCSRef;
	public ObjectRefElements getObjectRefAccess() {
		return (pObjectRef != null) ? pObjectRef : (pObjectRef = new ObjectRefElements());
	}
	
	public ParserRule getObjectRefRule() {
		return getObjectRefAccess().getRule();
	}

	//OperationCS:
	//  "operation" name=Identifier ("<" typeParameters+=TypeParameterCS ("," typeParameters
	//  +=TypeParameterCS)* ">")? "(" (parameters+=ParameterCS ("," parameters+=ParameterCS)*
	//  )? ")" (":" type=TypeRefCS? ("[" (lower=LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+"
	//  | "?" )) "]")?)? ("throws" exceptions+=TypeRefCS ("," exceptions+=TypeRefCS)*)? ("{"
	//  qualifiers+=( "api" | "!api" | "derived" | "!derived" | "ordered" | "!ordered" | "unique" |
	//  "!unique" ) ("," qualifiers+=( "api" | "!api" | "derived" | "!derived" | "ordered" |
	//  "!ordered" | "unique" | "!unique" ))* "}")? ("{" (annotations+=AnnotationElementCS|
	//  constraints+=( PreconditionConstraintCS | BodyConstraintCS |
	//  PostconditionConstraintCS ))* "}"|";");
	public OperationCSElements getOperationCSAccess() {
		return (pOperationCS != null) ? pOperationCS : (pOperationCS = new OperationCSElements());
	}
	
	public ParserRule getOperationCSRule() {
		return getOperationCSAccess().getRule();
	}

	//PackageCS:
	//  "package" name=Identifier (":" prefix=Identifier "=" uri=URL)? ("{" (annotations+=
	//  AnnotationElementCS|subpackages+=PackageCS|classifiers+=ClassifierCS)* "}"|";");
	public PackageCSElements getPackageCSAccess() {
		return (pPackageCS != null) ? pPackageCS : (pPackageCS = new PackageCSElements());
	}
	
	public ParserRule getPackageCSRule() {
		return getPackageCSAccess().getRule();
	}

	//ParameterCS:
	//  name=Identifier (":" type=TypeRefCS ("[" (lower=LOWER (".." upper=UPPER)?|multiplicity
	//  =( "*" | "+" | "?" )) "]")?)? ("{" qualifiers+=( "ordered" | "!ordered" | "unique" | "!unique" ) (
	//  "," qualifiers+=( "ordered" | "!ordered" | "unique" | "!unique" ))* "}")? ("{" annotations+=
	//  AnnotationElementCS* "}")?;
	public ParameterCSElements getParameterCSAccess() {
		return (pParameterCS != null) ? pParameterCS : (pParameterCS = new ParameterCSElements());
	}
	
	public ParserRule getParameterCSRule() {
		return getParameterCSAccess().getRule();
	}

	//ReferenceCS:
	//  "property" name=Identifier ("#" opposite=ReferenceRef)? (":" type=TypeRefCS ("[" (lower
	//  =LOWER (".." upper=UPPER)?|multiplicity=( "*" | "+" | "?" )) "]")?)? ("="
	//  defaultValueLiteral=URL)? ("{" qualifiers+=( "api" | "!api" | "composes" | "!composes" |
	//  "derived" | "!derived" | "ordered" | "!ordered" | "readonly" | "!readonly" | "resolve" |
	//  "!resolve" | "transient" | "!transient" | "unique" | "!unique" | "unsettable" |
	//  "!unsettable" | "volatile" | "!volatile" ) ("," qualifiers+=( "api" | "!api" | "composes" |
	//  "!composes" | "derived" | "!derived" | "ordered" | "!ordered" | "readonly" | "!readonly" |
	//  "resolve" | "!resolve" | "transient" | "!transient" | "unique" | "!unique" | "unsettable" |
	//  "!unsettable" | "volatile" | "!volatile" ))* "}")? ("{" (annotations+=
	//  AnnotationElementCS|constraints+=( InitialConstraintCS | DerivedConstraintCS ))* "}"|
	//  ";");
	public ReferenceCSElements getReferenceCSAccess() {
		return (pReferenceCS != null) ? pReferenceCS : (pReferenceCS = new ReferenceCSElements());
	}
	
	public ParserRule getReferenceCSRule() {
		return getReferenceCSAccess().getRule();
	}

	//ReferenceRef:
	//  ReferenceCSRef|EReferenceRef;
	public ReferenceRefElements getReferenceRefAccess() {
		return (pReferenceRef != null) ? pReferenceRef : (pReferenceRef = new ReferenceRefElements());
	}
	
	public ParserRule getReferenceRefRule() {
		return getReferenceRefAccess().getRule();
	}

	//ReferenceCSRef:
	//  ref=[ReferenceCS|Identifier];
	public ReferenceCSRefElements getReferenceCSRefAccess() {
		return (pReferenceCSRef != null) ? pReferenceCSRef : (pReferenceCSRef = new ReferenceCSRefElements());
	}
	
	public ParserRule getReferenceCSRefRule() {
		return getReferenceCSRefAccess().getRule();
	}

	//StructuralFeatureCS:
	//  AttributeCS|ReferenceCS;
	public StructuralFeatureCSElements getStructuralFeatureCSAccess() {
		return (pStructuralFeatureCS != null) ? pStructuralFeatureCS : (pStructuralFeatureCS = new StructuralFeatureCSElements());
	}
	
	public ParserRule getStructuralFeatureCSRule() {
		return getStructuralFeatureCSAccess().getRule();
	}

	//TypeCSRef:
	//  ref=[TypeCS|Identifier];
	public TypeCSRefElements getTypeCSRefAccess() {
		return (pTypeCSRef != null) ? pTypeCSRef : (pTypeCSRef = new TypeCSRefElements());
	}
	
	public ParserRule getTypeCSRefRule() {
		return getTypeCSRefAccess().getRule();
	}

	//TypeParameterCS:
	//  name=Identifier ("extends" extends+=TypeRefCS ("&&" extends+=TypeRefCS)*|"super"
	//  super=TypeRefCS)?;
	public TypeParameterCSElements getTypeParameterCSAccess() {
		return (pTypeParameterCS != null) ? pTypeParameterCS : (pTypeParameterCS = new TypeParameterCSElements());
	}
	
	public ParserRule getTypeParameterCSRule() {
		return getTypeParameterCSAccess().getRule();
	}

	//TypeRef:
	//  TypeCSRef|EClassifierRef|EClassifierCSRef;
	public TypeRefElements getTypeRefAccess() {
		return (pTypeRef != null) ? pTypeRef : (pTypeRef = new TypeRefElements());
	}
	
	public ParserRule getTypeRefRule() {
		return getTypeRefAccess().getRule();
	}

	//TypeRefCS:
	//  TypedTypeRefCS|WildcardTypeRefCS;
	public TypeRefCSElements getTypeRefCSAccess() {
		return (pTypeRefCS != null) ? pTypeRefCS : (pTypeRefCS = new TypeRefCSElements());
	}
	
	public ParserRule getTypeRefCSRule() {
		return getTypeRefCSAccess().getRule();
	}

	//TypedTypeRefCS:
	//  type=TypeRef ("<" typeArguments+=TypeRefCS ("," typeArguments+=TypeRefCS)* ">")?;
	public TypedTypeRefCSElements getTypedTypeRefCSAccess() {
		return (pTypedTypeRefCS != null) ? pTypedTypeRefCS : (pTypedTypeRefCS = new TypedTypeRefCSElements());
	}
	
	public ParserRule getTypedTypeRefCSRule() {
		return getTypedTypeRefCSAccess().getRule();
	}

	//WildcardTypeRefCS:
	//  {WildcardTypeRefCS} "?" ("extends" extends=TypeRefCS|"super" super=TypeRefCS)?;
	public WildcardTypeRefCSElements getWildcardTypeRefCSAccess() {
		return (pWildcardTypeRefCS != null) ? pWildcardTypeRefCS : (pWildcardTypeRefCS = new WildcardTypeRefCSElements());
	}
	
	public ParserRule getWildcardTypeRefCSRule() {
		return getWildcardTypeRefCSAccess().getRule();
	}

	//Model returns OclExpressionCS:
	//  OclExpressionCS;  
	////generate essentialOCLCST "http://www.eclipse.org/ocl/3.0.0/EssentialOCLCST"
	public EssentialOCLGrammarAccess.ModelElements getModelAccess() {
		return gaEssentialOCL.getModelAccess();
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//terminal STRING_LITERAL:
	//  "\'" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRING_LITERALRule() {
		return gaEssentialOCL.getSTRING_LITERALRule();
	} 

	//terminal ID_TERMINAL:
	//  ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")* | "_" STRING_LITERAL;  
	//	
	//    		 // NB not "ID" to ensure implicit use of ID is an error
	//	   
	////| 	("_'" ( '\\' ('b'|'t'|'n'|'f'|'r'|'"'|"'"|'\\') | !('\\'|"'") )* "'")
	public TerminalRule getID_TERMINALRule() {
		return gaEssentialOCL.getID_TERMINALRule();
	} 

	//terminal INT:
	//  "0".."9"+; 
	//
	//  											 // String to allow diverse re-use
	public TerminalRule getINTRule() {
		return gaEssentialOCL.getINTRule();
	} 

	//REAL_LITERAL returns ecore::EBigDecimal:
	//  INT ("." INT|("." INT)? ("e"|"E") ("+"|"-")? INT); 
	//
	//    				 // Not terminal to allow parser backtracking to sort out "5..7"
	public EssentialOCLGrammarAccess.REAL_LITERALElements getREAL_LITERALAccess() {
		return gaEssentialOCL.getREAL_LITERALAccess();
	}
	
	public ParserRule getREAL_LITERALRule() {
		return getREAL_LITERALAccess().getRule();
	}

	//INTEGER_LITERAL returns ecore::EBigInteger:
	//  INT;
	public EssentialOCLGrammarAccess.INTEGER_LITERALElements getINTEGER_LITERALAccess() {
		return gaEssentialOCL.getINTEGER_LITERALAccess();
	}
	
	public ParserRule getINTEGER_LITERALRule() {
		return getINTEGER_LITERALAccess().getRule();
	}

	//terminal ML_COMMENT:
	//  "/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaEssentialOCL.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//  "--" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaEssentialOCL.getSL_COMMENTRule();
	} 

	//terminal WS:
	//  (" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaEssentialOCL.getWSRule();
	} 

	//terminal ANY_OTHER:
	//  .;
	public TerminalRule getANY_OTHERRule() {
		return gaEssentialOCL.getANY_OTHERRule();
	} 

	//reservedKeywordCS returns SimpleNameCS:
	//  value="and"|value="else"|value="endif"|value="if"|value="implies"|value="in"|
	//  value="let"|value="not"|value="or"|value="then"|value="xor"; 
	//
	////---------------------------------------------------------------------
	////  Names
	////---------------------------------------------------------------------
	/// *  Temporary backward compatibility support for 7.4.8 conceptual usage 
	//conceptualOperationName returns SimpleNameCS:
	//	value='and'
	//	| value='implies'
	//	| value='not'
	//	| value='or'
	//	| value='xor'
	//	| value='<'
	//	| value='<='
	//	| value='>='
	//	| value='>'
	//	| value='='
	//	| value='<>'
	//	| value='+'
	//	| value='-'
	//	| value='*'
	//	| value='/';
	//conceptualOperationNameCS returns SimpleNameCS:
	//	conceptualOperationName; * /
	public EssentialOCLGrammarAccess.ReservedKeywordCSElements getReservedKeywordCSAccess() {
		return gaEssentialOCL.getReservedKeywordCSAccess();
	}
	
	public ParserRule getReservedKeywordCSRule() {
		return getReservedKeywordCSAccess().getRule();
	}

	//tupleKeywordCS returns SimpleNameCS:
	//  value="Tuple";
	public EssentialOCLGrammarAccess.TupleKeywordCSElements getTupleKeywordCSAccess() {
		return gaEssentialOCL.getTupleKeywordCSAccess();
	}
	
	public ParserRule getTupleKeywordCSRule() {
		return getTupleKeywordCSAccess().getRule();
	}

	//restrictedKeywordCS returns SimpleNameCS:
	//  CollectionTypeIdentifierCS|primitiveTypeCS|tupleKeywordCS; 
	//
	//     
	//	
	////  restrictedKeywordCS -> BooleanLiteralExpCS
	////  restrictedKeywordCS -> InvalidLiteralExpCS
	////  restrictedKeywordCS -> NullLiteralExpCS
	////-  restrictedKeywordCS -> selfKeywordCS
	public EssentialOCLGrammarAccess.RestrictedKeywordCSElements getRestrictedKeywordCSAccess() {
		return gaEssentialOCL.getRestrictedKeywordCSAccess();
	}
	
	public ParserRule getRestrictedKeywordCSRule() {
		return getRestrictedKeywordCSAccess().getRule();
	}

	//selfKeywordCS returns SimpleNameCS:
	//  value="self";
	public EssentialOCLGrammarAccess.SelfKeywordCSElements getSelfKeywordCSAccess() {
		return gaEssentialOCL.getSelfKeywordCSAccess();
	}
	
	public ParserRule getSelfKeywordCSRule() {
		return getSelfKeywordCSAccess().getRule();
	}

	//simpleNameCS returns SimpleNameCS:
	//  value=Identifier;
	public EssentialOCLGrammarAccess.SimpleNameCSElements getSimpleNameCSAccess() {
		return gaEssentialOCL.getSimpleNameCSAccess();
	}
	
	public ParserRule getSimpleNameCSRule() {
		return getSimpleNameCSAccess().getRule();
	}

	//unreservedSimpleNameCS returns SimpleNameCS:
	//  simpleNameCS|restrictedKeywordCS;
	public EssentialOCLGrammarAccess.UnreservedSimpleNameCSElements getUnreservedSimpleNameCSAccess() {
		return gaEssentialOCL.getUnreservedSimpleNameCSAccess();
	}
	
	public ParserRule getUnreservedSimpleNameCSRule() {
		return getUnreservedSimpleNameCSAccess().getRule();
	}

	//pathNameCS returns PathNameCS:
	//  simpleNames+=simpleNameCS ("::" simpleNames+=unreservedSimpleNameCS)*; 
	//
	//    
	//	    
	//
	//        
	////---------------------------------------------------------------------
	////  Types
	////---------------------------------------------------------------------
	public EssentialOCLGrammarAccess.PathNameCSElements getPathNameCSAccess() {
		return gaEssentialOCL.getPathNameCSAccess();
	}
	
	public ParserRule getPathNameCSRule() {
		return getPathNameCSAccess().getRule();
	}

	//primitiveTypeCS returns SimpleNameCS:
	//  value="Boolean"|value="Integer"|value="Real"|value="String"|value=
	//  "UnlimitedNatural"|value="OclAny"|value="OclInvalid"|value="OclVoid"; 
	//
	//        
	////---------------------------------------------------------------------
	////  Types
	////---------------------------------------------------------------------
	public EssentialOCLGrammarAccess.PrimitiveTypeCSElements getPrimitiveTypeCSAccess() {
		return gaEssentialOCL.getPrimitiveTypeCSAccess();
	}
	
	public ParserRule getPrimitiveTypeCSRule() {
		return getPrimitiveTypeCSAccess().getRule();
	}

	//CollectionTypeIdentifierCS returns SimpleNameCS:
	//  value="Set"|value="Bag"|value="Sequence"|value="Collection"|value="OrderedSet";
	public EssentialOCLGrammarAccess.CollectionTypeIdentifierCSElements getCollectionTypeIdentifierCSAccess() {
		return gaEssentialOCL.getCollectionTypeIdentifierCSAccess();
	}
	
	public ParserRule getCollectionTypeIdentifierCSRule() {
		return getCollectionTypeIdentifierCSAccess().getRule();
	}

	//typeCS returns TypeCS:
	//  primitiveTypeCS|pathNameCS|collectionTypeCS|tupleTypeCS;
	public EssentialOCLGrammarAccess.TypeCSElements getTypeCSAccess() {
		return gaEssentialOCL.getTypeCSAccess();
	}
	
	public ParserRule getTypeCSRule() {
		return getTypeCSAccess().getRule();
	}

	//collectionTypeCS returns CollectionTypeCS:
	//  value=CollectionTypeIdentifierCS ("(" typeCS=typeCS ")")?;
	public EssentialOCLGrammarAccess.CollectionTypeCSElements getCollectionTypeCSAccess() {
		return gaEssentialOCL.getCollectionTypeCSAccess();
	}
	
	public ParserRule getCollectionTypeCSRule() {
		return getCollectionTypeCSAccess().getRule();
	}

	//tupleTypeCS returns TupleTypeCS:
	//  value="Tuple" "(" (part+=tuplePartCS ("," part+=tuplePartCS)*)? ")";
	public EssentialOCLGrammarAccess.TupleTypeCSElements getTupleTypeCSAccess() {
		return gaEssentialOCL.getTupleTypeCSAccess();
	}
	
	public ParserRule getTupleTypeCSRule() {
		return getTupleTypeCSAccess().getRule();
	}

	//tuplePartCS returns VariableCS:
	//  name=simpleNameCS ":" type=typeCS; 
	//        
	//    
	//	    
	//
	//
	////---------------------------------------------------------------------
	////  Literals
	////---------------------------------------------------------------------
	//// EnumLiteralExpCS is parsed as a PropertyCallExpCS[C]
	////  LiteralExpCS -> EnumLiteralExpCS
	public EssentialOCLGrammarAccess.TuplePartCSElements getTuplePartCSAccess() {
		return gaEssentialOCL.getTuplePartCSAccess();
	}
	
	public ParserRule getTuplePartCSRule() {
		return getTuplePartCSAccess().getRule();
	}

	//LiteralExpCS:
	//  CollectionLiteralExpCS|TupleLiteralExpCS|PrimitiveLiteralExpCS|TypeLiteralExpCS; 
	//
	////---------------------------------------------------------------------
	////  Literals
	////---------------------------------------------------------------------
	//// EnumLiteralExpCS is parsed as a PropertyCallExpCS[C]
	////  LiteralExpCS -> EnumLiteralExpCS
	public EssentialOCLGrammarAccess.LiteralExpCSElements getLiteralExpCSAccess() {
		return gaEssentialOCL.getLiteralExpCSAccess();
	}
	
	public ParserRule getLiteralExpCSRule() {
		return getLiteralExpCSAccess().getRule();
	}

	//CollectionLiteralExpCS:
	//  collectionTypeCS ("{" (collectionLiteralParts+=CollectionLiteralPartCS (","
	//  collectionLiteralParts+=CollectionLiteralPartCS)*)? "}")?; 
	//
	//    	 // or CollectionTypeLiteral
	public EssentialOCLGrammarAccess.CollectionLiteralExpCSElements getCollectionLiteralExpCSAccess() {
		return gaEssentialOCL.getCollectionLiteralExpCSAccess();
	}
	
	public ParserRule getCollectionLiteralExpCSRule() {
		return getCollectionLiteralExpCSAccess().getRule();
	}

	//CollectionLiteralPartCS:
	//  expressionCS=OclExpressionCS (".." lastExpressionCS=OclExpressionCS)?;
	public EssentialOCLGrammarAccess.CollectionLiteralPartCSElements getCollectionLiteralPartCSAccess() {
		return gaEssentialOCL.getCollectionLiteralPartCSAccess();
	}
	
	public ParserRule getCollectionLiteralPartCSRule() {
		return getCollectionLiteralPartCSAccess().getRule();
	}

	//PrimitiveLiteralExpCS:
	//  IntegerLiteralExpCS|RealLiteralExpCS|StringLiteralExpCS|BooleanLiteralExpCS|
	//  UnlimitedNaturalLiteralExpCS|InvalidLiteralExpCS|NullLiteralExpCS;
	public EssentialOCLGrammarAccess.PrimitiveLiteralExpCSElements getPrimitiveLiteralExpCSAccess() {
		return gaEssentialOCL.getPrimitiveLiteralExpCSAccess();
	}
	
	public ParserRule getPrimitiveLiteralExpCSRule() {
		return getPrimitiveLiteralExpCSAccess().getRule();
	}

	//TupleLiteralExpCS:
	//  {TupleLiteralExpCS} "Tuple" ("{" part+=TupleLiteralPartCS ("," part+=
	//  TupleLiteralPartCS)* "}")?; 
	//
	//      // or TupleTypeLiteral
	public EssentialOCLGrammarAccess.TupleLiteralExpCSElements getTupleLiteralExpCSAccess() {
		return gaEssentialOCL.getTupleLiteralExpCSAccess();
	}
	
	public ParserRule getTupleLiteralExpCSRule() {
		return getTupleLiteralExpCSAccess().getRule();
	}

	//TupleLiteralPartCS returns VariableCS:
	//  name=simpleNameCS (":" type=typeCS)? "=" initExpression=OclExpressionCS;
	public EssentialOCLGrammarAccess.TupleLiteralPartCSElements getTupleLiteralPartCSAccess() {
		return gaEssentialOCL.getTupleLiteralPartCSAccess();
	}
	
	public ParserRule getTupleLiteralPartCSRule() {
		return getTupleLiteralPartCSAccess().getRule();
	}

	//IntegerLiteralExpCS:
	//  integerSymbol=INTEGER_LITERAL;
	public EssentialOCLGrammarAccess.IntegerLiteralExpCSElements getIntegerLiteralExpCSAccess() {
		return gaEssentialOCL.getIntegerLiteralExpCSAccess();
	}
	
	public ParserRule getIntegerLiteralExpCSRule() {
		return getIntegerLiteralExpCSAccess().getRule();
	}

	//RealLiteralExpCS:
	//  realSymbol=REAL_LITERAL;
	public EssentialOCLGrammarAccess.RealLiteralExpCSElements getRealLiteralExpCSAccess() {
		return gaEssentialOCL.getRealLiteralExpCSAccess();
	}
	
	public ParserRule getRealLiteralExpCSRule() {
		return getRealLiteralExpCSAccess().getRule();
	}

	//StringLiteralExpCS:
	//  stringSymbol+=STRING_LITERAL+;
	public EssentialOCLGrammarAccess.StringLiteralExpCSElements getStringLiteralExpCSAccess() {
		return gaEssentialOCL.getStringLiteralExpCSAccess();
	}
	
	public ParserRule getStringLiteralExpCSRule() {
		return getStringLiteralExpCSAccess().getRule();
	}

	//BooleanLiteralExpCS:
	//  value="true"|value="false";
	public EssentialOCLGrammarAccess.BooleanLiteralExpCSElements getBooleanLiteralExpCSAccess() {
		return gaEssentialOCL.getBooleanLiteralExpCSAccess();
	}
	
	public ParserRule getBooleanLiteralExpCSRule() {
		return getBooleanLiteralExpCSAccess().getRule();
	}

	//UnlimitedNaturalLiteralExpCS:
	//  {UnlimitedNaturalLiteralExpCS} "*";
	public EssentialOCLGrammarAccess.UnlimitedNaturalLiteralExpCSElements getUnlimitedNaturalLiteralExpCSAccess() {
		return gaEssentialOCL.getUnlimitedNaturalLiteralExpCSAccess();
	}
	
	public ParserRule getUnlimitedNaturalLiteralExpCSRule() {
		return getUnlimitedNaturalLiteralExpCSAccess().getRule();
	}

	//InvalidLiteralExpCS:
	//  {InvalidLiteralExpCS} "invalid";
	public EssentialOCLGrammarAccess.InvalidLiteralExpCSElements getInvalidLiteralExpCSAccess() {
		return gaEssentialOCL.getInvalidLiteralExpCSAccess();
	}
	
	public ParserRule getInvalidLiteralExpCSRule() {
		return getInvalidLiteralExpCSAccess().getRule();
	}

	//NullLiteralExpCS:
	//  {NullLiteralExpCS} "null";
	public EssentialOCLGrammarAccess.NullLiteralExpCSElements getNullLiteralExpCSAccess() {
		return gaEssentialOCL.getNullLiteralExpCSAccess();
	}
	
	public ParserRule getNullLiteralExpCSRule() {
		return getNullLiteralExpCSAccess().getRule();
	}

	//TypeLiteralExpCS:
	//  pathNameCS|primitiveTypeCS|tupleTypeCS; 
	//    
	//    
	//	
	//	 
	////|	collectionTypeCS
	//	 
	//
	////---------------------------------------------------------------------
	////  Expressions
	////---------------------------------------------------------------------
	//// An OclExpressionCS comprising one or more LetExpCS is kept separate to ensure
	////  that let is right associative, whereas infix operators are left associative.
	////   a = 64 / 16 / let b : Integer in 8 / let c : Integer in 4 
	//// is
	////   a = (64 / 16) / (let b : Integer in 8 / (let c : Integer in 4 ))
	public EssentialOCLGrammarAccess.TypeLiteralExpCSElements getTypeLiteralExpCSAccess() {
		return gaEssentialOCL.getTypeLiteralExpCSAccess();
	}
	
	public ParserRule getTypeLiteralExpCSRule() {
		return getTypeLiteralExpCSAccess().getRule();
	}

	//OclExpressionCS:
	//  impliesCS|LetExpCS; 
	//
	////---------------------------------------------------------------------
	////  Expressions
	////---------------------------------------------------------------------
	//// An OclExpressionCS comprising one or more LetExpCS is kept separate to ensure
	////  that let is right associative, whereas infix operators are left associative.
	////   a = 64 / 16 / let b : Integer in 8 / let c : Integer in 4 
	//// is
	////   a = (64 / 16) / (let b : Integer in 8 / (let c : Integer in 4 ))
	public EssentialOCLGrammarAccess.OclExpressionCSElements getOclExpressionCSAccess() {
		return gaEssentialOCL.getOclExpressionCSAccess();
	}
	
	public ParserRule getOclExpressionCSRule() {
		return getOclExpressionCSAccess().getRule();
	}

	//impliesCS returns OclExpressionCS:
	//  xorCS ({BinaryExpressionCS.source=current} op="implies" argument=( impliesCS |
	//  LetExpCS ))?;
	public EssentialOCLGrammarAccess.ImpliesCSElements getImpliesCSAccess() {
		return gaEssentialOCL.getImpliesCSAccess();
	}
	
	public ParserRule getImpliesCSRule() {
		return getImpliesCSAccess().getRule();
	}

	//xorCS returns OclExpressionCS:
	//  orCS ({BinaryExpressionCS.source=current} op="xor" argument=( xorCS | LetExpCS ))?;
	public EssentialOCLGrammarAccess.XorCSElements getXorCSAccess() {
		return gaEssentialOCL.getXorCSAccess();
	}
	
	public ParserRule getXorCSRule() {
		return getXorCSAccess().getRule();
	}

	//orCS returns OclExpressionCS:
	//  andCS ({BinaryExpressionCS.source=current} op="or" argument=( orCS | LetExpCS ))?;
	public EssentialOCLGrammarAccess.OrCSElements getOrCSAccess() {
		return gaEssentialOCL.getOrCSAccess();
	}
	
	public ParserRule getOrCSRule() {
		return getOrCSAccess().getRule();
	}

	//andCS returns OclExpressionCS:
	//  equalityCS ({BinaryExpressionCS.source=current} op="and" argument=( andCS | LetExpCS ))
	//  ?;
	public EssentialOCLGrammarAccess.AndCSElements getAndCSAccess() {
		return gaEssentialOCL.getAndCSAccess();
	}
	
	public ParserRule getAndCSRule() {
		return getAndCSAccess().getRule();
	}

	//equalityCS returns OclExpressionCS:
	//  relationalCS ({BinaryExpressionCS.source=current} op=( "=" | "<>" ) argument=(
	//  equalityCS | LetExpCS ))?;
	public EssentialOCLGrammarAccess.EqualityCSElements getEqualityCSAccess() {
		return gaEssentialOCL.getEqualityCSAccess();
	}
	
	public ParserRule getEqualityCSRule() {
		return getEqualityCSAccess().getRule();
	}

	//relationalCS returns OclExpressionCS:
	//  additiveCS ({BinaryExpressionCS.source=current} op=( ">" | "<" | ">=" | "<=" ) argument=(
	//  relationalCS | LetExpCS ))?;
	public EssentialOCLGrammarAccess.RelationalCSElements getRelationalCSAccess() {
		return gaEssentialOCL.getRelationalCSAccess();
	}
	
	public ParserRule getRelationalCSRule() {
		return getRelationalCSAccess().getRule();
	}

	//additiveCS returns OclExpressionCS:
	//  multiplicativeCS ({BinaryExpressionCS.source=current} op=( "+" | "-" ) argument=(
	//  additiveCS | LetExpCS ))?;
	public EssentialOCLGrammarAccess.AdditiveCSElements getAdditiveCSAccess() {
		return gaEssentialOCL.getAdditiveCSAccess();
	}
	
	public ParserRule getAdditiveCSRule() {
		return getAdditiveCSAccess().getRule();
	}

	//multiplicativeCS returns OclExpressionCS:
	//  unaryCS ({BinaryExpressionCS.source=current} op=( "*" | "/" ) argument=(
	//  multiplicativeCS | LetExpCS ))?;
	public EssentialOCLGrammarAccess.MultiplicativeCSElements getMultiplicativeCSAccess() {
		return gaEssentialOCL.getMultiplicativeCSAccess();
	}
	
	public ParserRule getMultiplicativeCSRule() {
		return getMultiplicativeCSAccess().getRule();
	}

	//unaryCS returns OclExpressionCS:
	//  callingExpCS|{UnaryExpressionCS} op=( "-" | "not" ) source=unaryCS;
	public EssentialOCLGrammarAccess.UnaryCSElements getUnaryCSAccess() {
		return gaEssentialOCL.getUnaryCSAccess();
	}
	
	public ParserRule getUnaryCSRule() {
		return getUnaryCSAccess().getRule();
	}

	//callingExpCS returns OclExpressionCS:
	//  callExpCS ({BinaryExpressionCS.source=current} op=( "." | "->" ) argument=callingExpCS)
	//  ?;
	public EssentialOCLGrammarAccess.CallingExpCSElements getCallingExpCSAccess() {
		return gaEssentialOCL.getCallingExpCSAccess();
	}
	
	public ParserRule getCallingExpCSRule() {
		return getCallingExpCSAccess().getRule();
	}

	//iteratorVariableCS returns VariableCS:
	//  name=simpleNameCS (":" type=typeCS)?;
	public EssentialOCLGrammarAccess.IteratorVariableCSElements getIteratorVariableCSAccess() {
		return gaEssentialOCL.getIteratorVariableCSAccess();
	}
	
	public ParserRule getIteratorVariableCSRule() {
		return getIteratorVariableCSAccess().getRule();
	}

	//iteratorAccumulatorCS returns VariableCS:
	//  name=simpleNameCS ":" type=typeCS "=" initExpression=OclExpressionCS;
	public EssentialOCLGrammarAccess.IteratorAccumulatorCSElements getIteratorAccumulatorCSAccess() {
		return gaEssentialOCL.getIteratorAccumulatorCSAccess();
	}
	
	public ParserRule getIteratorAccumulatorCSRule() {
		return getIteratorAccumulatorCSAccess().getRule();
	}

	//callExpCS returns OclExpressionCS:
	//  preExpCS ({CallExpCS.source=current} "(" (variable1=iteratorVariableCS ("," variable2
	//  =iteratorVariableCS|";" variable2=iteratorAccumulatorCS)? "|")? (arguments+=
	//  OclExpressionCS ("," arguments+=OclExpressionCS)*)? ")")?;
	public EssentialOCLGrammarAccess.CallExpCSElements getCallExpCSAccess() {
		return gaEssentialOCL.getCallExpCSAccess();
	}
	
	public ParserRule getCallExpCSRule() {
		return getCallExpCSAccess().getRule();
	}

	//preExpCS returns OclExpressionCS:
	//  indexExpCS; 
	//
	//    
	//	
	////  ({UnaryExpressionCS.source=current} '@' op='pre')?
	public EssentialOCLGrammarAccess.PreExpCSElements getPreExpCSAccess() {
		return gaEssentialOCL.getPreExpCSAccess();
	}
	
	public ParserRule getPreExpCSRule() {
		return getPreExpCSAccess().getRule();
	}

	//indexExpCS returns OclExpressionCS:
	//  messageExpCS ({IndexExpCS.source=current} "[" indexes+=OclExpressionCS ("," indexes+=
	//  OclExpressionCS)* "]")?;
	public EssentialOCLGrammarAccess.IndexExpCSElements getIndexExpCSAccess() {
		return gaEssentialOCL.getIndexExpCSAccess();
	}
	
	public ParserRule getIndexExpCSRule() {
		return getIndexExpCSAccess().getRule();
	}

	//messageExpCS returns OclExpressionCS:
	//  primaryExpCS; 
	//    
	//    
	//	
	////|	OclMessageExpCS // OclExpressionCS[E] is added by CompleteOCL
	public EssentialOCLGrammarAccess.MessageExpCSElements getMessageExpCSAccess() {
		return gaEssentialOCL.getMessageExpCSAccess();
	}
	
	public ParserRule getMessageExpCSRule() {
		return getMessageExpCSAccess().getRule();
	}

	//primaryExpCS returns OclExpressionCS:
	//  selfKeywordCS|LiteralExpCS|IfExpCS|"(" OclExpressionCS ")"; 
	//
	//    
	//	
	////|	restrictedKeywordCS
	//	      // OclExpressionCS[C]
	//	           // OclExpressionCS[F]
	public EssentialOCLGrammarAccess.PrimaryExpCSElements getPrimaryExpCSAccess() {
		return gaEssentialOCL.getPrimaryExpCSAccess();
	}
	
	public ParserRule getPrimaryExpCSRule() {
		return getPrimaryExpCSAccess().getRule();
	}

	//IfExpCS:
	//  "if" condition=OclExpressionCS "then" thenExpression=OclExpressionCS "else"
	//  elseExpression=OclExpressionCS "endif";
	public EssentialOCLGrammarAccess.IfExpCSElements getIfExpCSAccess() {
		return gaEssentialOCL.getIfExpCSAccess();
	}
	
	public ParserRule getIfExpCSRule() {
		return getIfExpCSAccess().getRule();
	}

	//LetExpCS:
	//  "let" variable+=LetVariableCS ("," variable+=LetVariableCS)* "in" in=OclExpressionCS;
	public EssentialOCLGrammarAccess.LetExpCSElements getLetExpCSAccess() {
		return gaEssentialOCL.getLetExpCSAccess();
	}
	
	public ParserRule getLetExpCSRule() {
		return getLetExpCSAccess().getRule();
	}

	//LetVariableCS returns VariableCS:
	//  name=simpleNameCS ":" type=typeCS "=" initExpression=OclExpressionCS;
	public EssentialOCLGrammarAccess.LetVariableCSElements getLetVariableCSAccess() {
		return gaEssentialOCL.getLetVariableCSAccess();
	}
	
	public ParserRule getLetVariableCSRule() {
		return getLetVariableCSAccess().getRule();
	}
}
