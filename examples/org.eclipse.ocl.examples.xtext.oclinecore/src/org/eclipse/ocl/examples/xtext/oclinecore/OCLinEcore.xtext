grammar org.eclipse.ocl.examples.xtext.oclinecore.OCLinEcore with org.eclipse.ocl.examples.xtext.essentialocl.EssentialOCL

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "platform:/resource/org.eclipse.ocl.examples.xtext.essentialocl/model/EssentialOCLCST.ecore" as essentialocl
import "platform:/resource/org.eclipse.ocl.examples.xtext.oclinecore/model/OCLinEcoreCST.ecore"
//generate oclinEcore2 "http://www.eclipse.org/ocl/examples/xtext/oclinecore/OCLinEcore"

DocumentCS returns DocumentCS:
	(imports+=ImportCS)*
	(packages+=PackageCS)*
;

terminal URL	:
	'"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'"'|"'"|'\\') | !('\\'|'"') )* '"'
; 

FQN:
	Identifier ('.' Identifier)*
;

INTEGER returns ecore::EInt:
	INT
;

LOWER returns ecore::EInt:
	INT
;

UPPER returns ecore::EInt:
	INT | '*'
;

RestrictedKeywords returns ecore::EString:			// For extension by derived grammars
	'abstract'
//|	'annotation'
//|	'api'
|	'attribute'
|	'body'
|	'class'
//|	'composes'
//|	'datatype'
//|	'derivation'
//|	'derived'
//|	'documentation'
|	'enum'
|	'extends'
|	'id'
|	'import'
//|	'initial'
|	'interface'
|	'invariant'
|	'operation'
|	'ordered'
|	'package'
//|	'postcondition'
//|	'precondition'
|	'property'
//|	'readonly'
//|	'resolve'
|	'serializable'
//|	'super'
//|	'throws'
|	'transient'
|	'unique'
//|	'unsettable'
|	'volatile'
;

Identifier returns ecore::EString:			// For extension by derived grammars
	ID_TERMINAL
|	'e'
|	'E'
|	RestrictedKeywords
;

BodyConstraintCS returns ConstraintCS:
	stereotype='body' name=Identifier? ':' (exprValue=OclExpressionCS|exprString=URL)? ';'
;

DerivedConstraintCS returns ConstraintCS:
	stereotype='derivation' ':' (exprValue=OclExpressionCS|exprString=URL)? ';'
;

InitialConstraintCS returns ConstraintCS:
	stereotype='initial' ':' (exprValue=OclExpressionCS|exprString=URL)? ';'
;

InvariantConstraintCS returns ConstraintCS:
	stereotype='invariant' name=Identifier? ':' (exprValue=OclExpressionCS|exprString=URL)? ';'
;

PostconditionConstraintCS returns ConstraintCS:
	stereotype='postcondition' name=Identifier? ':' (exprValue=OclExpressionCS|exprString=URL)? ';'
;

PreconditionConstraintCS returns ConstraintCS:
	stereotype='precondition' name=Identifier? ':' (exprValue=OclExpressionCS|exprString=URL)? ';'
;

EClassRef returns EClassRef:
	ref=[ecore::EClass|Identifier]
; 

EClassifierRef returns EClassifierRef:
	ref=[ecore::EClassifier|Identifier]
; 

EDataTypeRef returns EDataTypeRef:
	ref=[ecore::EDataType|Identifier]
; 

EReferenceRef returns EReferenceRef:
	ref=[ecore::EReference|Identifier]
; 

AnnotationCS returns AnnotationCS:
	'annotation' (idSource=Identifier|stringSource=URL)
	('(' details+=DetailCS (',' details+=DetailCS)* ')')?
	(('{' (annotations+=AnnotationElementCS
	     | contents+=ModelElementCS
	     | references+=ObjectRef)+
	  '}')
	|';'
	)
;

AnnotationElementCS returns AnnotationElementCS:
	AnnotationCS | DocumentationCS
;

AttributeCS returns AttributeCS:
	'attribute' name=Identifier
	(':' type=TypeRefCS
		('[' ((lower=LOWER ('..' upper=UPPER)?) | (multiplicity=('*'|'+'|'?'))) ']' )?)?
	('=' defaultValueLiteral=URL)?
	('{' qualifiers+=('api'|'!api'|'derived'|'!derived'|'id'|'!id'|'ordered'|'!ordered'|'readonly'|'!readonly'|'transient'|'!transient'|'unique'|'!unique'|'unsettable'|'!unsettable'|'volatile'|'!volatile')
	 (',' qualifiers+=('api'|'!api'|'derived'|'!derived'|'id'|'!id'|'ordered'|'!ordered'|'readonly'|'!readonly'|'transient'|'!transient'|'unique'|'!unique'|'unsettable'|'!unsettable'|'volatile'|'!volatile'))*
	 '}')?
	(	('{' (annotations+=AnnotationElementCS  | constraints+=(InitialConstraintCS|DerivedConstraintCS))* '}')
	|	';'
	)
;

ClassCS returns ClassCS:
	'class' name=Identifier
	('<' typeParameters+=TypeParameterCS (',' typeParameters+=TypeParameterCS)*'>')?
	('extends' superTypes+=TypeRefCS (',' superTypes+=TypeRefCS)*)?
	(':' instanceClassName=URL)?
	('{' qualifiers+=('abstract'|'!abstract'|'interface'|'!interface')
	 (',' qualifiers+=('abstract'|'!abstract'|'interface'|'!interface'))*
	 '}')?
	(	('{' (annotations+=AnnotationElementCS | operations+=OperationCS | structuralFeatures+=StructuralFeatureCS | constraints+=InvariantConstraintCS)* '}')
	|	';'
	)
;

ClassRef returns ClassRef:
	ClassCSRef | EClassRef
; 

ClassCSRef returns ClassCSRef:
	ref=[ClassCS|Identifier]
; 

ClassifierCS returns ClassifierCS:
	ClassCS | DataTypeCS | EnumCS 
;

DataTypeCS returns DataTypeCS:
	'datatype' name=Identifier
	('<' typeParameters+=TypeParameterCS (',' typeParameters+=TypeParameterCS)*'>')?	
	(':' instanceClassName=URL)?
	('{' qualifiers+=('serializable'|'!serializable') '}')?
	(	('{' (annotations+=AnnotationElementCS | constraints+=InvariantConstraintCS)* '}')
	|	';'
	)
;

DataTypeRef returns DataTypeRef:
	DataTypeCSRef | EDataTypeRef
; 

DataTypeCSRef returns DataTypeCSRef:
	ref=[DataTypeOrEnumCS|Identifier]
; 

DetailCS returns DetailCS:
	(idName=Identifier|stringName=URL) '=' value=STRING_LITERAL
;

DocumentationCS returns DocumentationCS:
	{DocumentationCS} 'documentation' value=URL?
	('(' details+=DetailCS (',' details+=DetailCS)* ')')?
	 ';'
;

EClassifierCSRef returns EClassifierCSRef:
	modelName=Identifier "::" ref=[ecore::EClassifier|Identifier]
; 

EnumCS returns EnumCS:
	'enum' name=Identifier
	('<' typeParameters+=TypeParameterCS (',' typeParameters+=TypeParameterCS)*'>')?	
	(':' instanceClassName=URL)?
	(	('{' (annotations+=AnnotationElementCS | literals+=EnumLiteralCS | constraints+=InvariantConstraintCS)* '}')
	| 	';'
	)
;

EnumLiteralCS returns EnumLiteralCS:
	name=Identifier ('=' value=INTEGER)?
	(('{' annotations+=AnnotationElementCS* '}')
	|';'
	)
;

ImportCS returns ImportCS:
	'import' (alias=Identifier ':') ePackage=[ecore::EPackage|URL] ';'
;

ModelElementCS returns ModelElementCS:
	ClassifierCS | EnumLiteralCS | OperationCS | PackageCS | StructuralFeatureCS
;

ModelElementCSRef returns ModelElementCSRef:
	ref=[ModelElementCS|Identifier]
; 

ObjectRef returns ObjectRef:
	ModelElementCSRef
; 

OperationCS returns OperationCS:
	'operation' name=Identifier
	('<' typeParameters+=TypeParameterCS (',' typeParameters+=TypeParameterCS)*'>')?	
	'(' (parameters+=ParameterCS (',' parameters+=ParameterCS)*)? ')'
	(':' type=TypeRefCS?
		('[' ((lower=LOWER ('..' upper=UPPER)?) | (multiplicity=('*'|'+'|'?'))) ']' )?)?
	('throws' exceptions+=TypeRefCS (',' exceptions+=TypeRefCS)*)?
	('{' qualifiers+=('api'|'!api'|'derived'|'!derived'|'ordered'|'!ordered'|'unique'|'!unique')
	 (',' qualifiers+=('api'|'!api'|'derived'|'!derived'|'ordered'|'!ordered'|'unique'|'!unique'))*
	 '}')?
	(	('{' (annotations+=AnnotationElementCS | constraints+=(PreconditionConstraintCS | BodyConstraintCS | PostconditionConstraintCS))* '}')
	|	';'
	)
;
	
PackageCS returns PackageCS:
	'package' name=Identifier
	(':' prefix=Identifier '=' uri=URL)?
	(('{'
		(annotations+=AnnotationElementCS | subpackages+=PackageCS | classifiers+=ClassifierCS)*
		'}')
	|';'
	)
;

ParameterCS returns ParameterCS:
	name=Identifier
	(':' type=TypeRefCS
		('[' ((lower=LOWER ('..' upper=UPPER)?) | (multiplicity=('*'|'+'|'?'))) ']' )?)?
	('{' qualifiers+=('ordered'|'!ordered'|'unique'|'!unique')
	 (',' qualifiers+=('ordered'|'!ordered'|'unique'|'!unique'))*
	 '}')?
	('{' annotations+=AnnotationElementCS* '}')?
;

ReferenceCS returns ReferenceCS:
	'property' name=Identifier
	('#' opposite=ReferenceRef)?	
	(':' type=TypeRefCS
		('[' ((lower=LOWER ('..' upper=UPPER)?) | (multiplicity=('*'|'+'|'?'))) ']' )?)?
	('=' defaultValueLiteral=URL)?
	('{' qualifiers+=('api'|'!api'|'composes'|'!composes'|'derived'|'!derived'|'ordered'|'!ordered'|'readonly'|'!readonly'|'resolve'|'!resolve'|'transient'|'!transient'|'unique'|'!unique'|'unsettable'|'!unsettable'|'volatile'|'!volatile')
	 (',' qualifiers+=('api'|'!api'|'composes'|'!composes'|'derived'|'!derived'|'ordered'|'!ordered'|'readonly'|'!readonly'|'resolve'|'!resolve'|'transient'|'!transient'|'unique'|'!unique'|'unsettable'|'!unsettable'|'volatile'|'!volatile'))*
	 '}')?
	(	('{' (annotations+=AnnotationElementCS | constraints+=(InitialConstraintCS|DerivedConstraintCS))* '}')
	|	';'
	)
;

ReferenceRef returns ReferenceRef:
	ReferenceCSRef | EReferenceRef
; 

ReferenceCSRef returns ReferenceCSRef:
	ref=[ReferenceCS|Identifier]
; 

StructuralFeatureCS returns StructuralFeatureCS:
	AttributeCS | ReferenceCS
;

TypeCSRef returns TypeCSRef:
	ref=[TypeCS|Identifier]
; 

TypeParameterCS returns TypeParameterCS:
	name=Identifier
	( ('extends' extends+=TypeRefCS ('&&' extends+=TypeRefCS)*)
	| ('super' super=TypeRefCS)
	)?
;

TypeRef returns TypeRef:
	TypeCSRef | EClassifierRef | EClassifierCSRef
; 

TypeRefCS returns TypeRefCS:
	TypedTypeRefCS | WildcardTypeRefCS;

TypedTypeRefCS returns TypedTypeRefCS:
	type=TypeRef
	('<' typeArguments+=TypeRefCS (',' typeArguments+=TypeRefCS)* '>')?	
;

WildcardTypeRefCS returns WildcardTypeRefCS:
	{WildcardTypeRefCS} '?'
	( ('extends' extends=TypeRefCS)
	| ('super' super=TypeRefCS)
	)?
;