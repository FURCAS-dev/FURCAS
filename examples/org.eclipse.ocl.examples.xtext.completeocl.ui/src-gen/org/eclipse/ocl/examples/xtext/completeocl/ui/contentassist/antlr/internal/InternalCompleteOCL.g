/*
* generated by Xtext
*/
grammar InternalCompleteOCL;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.eclipse.ocl.examples.xtext.completeocl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.ocl.examples.xtext.completeocl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.ocl.examples.xtext.completeocl.services.CompleteOCLGrammarAccess;

}

@parser::members {
 
 	private CompleteOCLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CompleteOCLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFQN
entryRuleFQN 
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFQNAccess().getGroup()); }
(rule__FQN__Group__0)
{ after(grammarAccess.getFQNAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleimportCS
entryRuleimportCS 
:
{ before(grammarAccess.getImportCSRule()); }
	 ruleimportCS
{ after(grammarAccess.getImportCSRule()); } 
	 EOF 
;

// Rule importCS
ruleimportCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportCSAccess().getGroup()); }
(rule__ImportCS__Group__0)
{ after(grammarAccess.getImportCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepackageDeclarationCS
entryRulepackageDeclarationCS 
:
{ before(grammarAccess.getPackageDeclarationCSRule()); }
	 rulepackageDeclarationCS
{ after(grammarAccess.getPackageDeclarationCSRule()); } 
	 EOF 
;

// Rule packageDeclarationCS
rulepackageDeclarationCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDeclarationCSAccess().getGroup()); }
(rule__PackageDeclarationCS__Group__0)
{ after(grammarAccess.getPackageDeclarationCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecontextDeclCS
entryRulecontextDeclCS 
:
{ before(grammarAccess.getContextDeclCSRule()); }
	 rulecontextDeclCS
{ after(grammarAccess.getContextDeclCSRule()); } 
	 EOF 
;

// Rule contextDeclCS
rulecontextDeclCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContextDeclCSAccess().getAlternatives()); }
(rule__ContextDeclCS__Alternatives)
{ after(grammarAccess.getContextDeclCSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepropertyContextDeclCS
entryRulepropertyContextDeclCS 
:
{ before(grammarAccess.getPropertyContextDeclCSRule()); }
	 rulepropertyContextDeclCS
{ after(grammarAccess.getPropertyContextDeclCSRule()); } 
	 EOF 
;

// Rule propertyContextDeclCS
rulepropertyContextDeclCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getGroup()); }
(rule__PropertyContextDeclCS__Group__0)
{ after(grammarAccess.getPropertyContextDeclCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleinitCS
entryRuleinitCS 
:
{ before(grammarAccess.getInitCSRule()); }
	 ruleinitCS
{ after(grammarAccess.getInitCSRule()); } 
	 EOF 
;

// Rule initCS
ruleinitCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitCSAccess().getGroup()); }
(rule__InitCS__Group__0)
{ after(grammarAccess.getInitCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulederCS
entryRulederCS 
:
{ before(grammarAccess.getDerCSRule()); }
	 rulederCS
{ after(grammarAccess.getDerCSRule()); } 
	 EOF 
;

// Rule derCS
rulederCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDerCSAccess().getGroup()); }
(rule__DerCS__Group__0)
{ after(grammarAccess.getDerCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleclassifierContextDeclCS
entryRuleclassifierContextDeclCS 
:
{ before(grammarAccess.getClassifierContextDeclCSRule()); }
	 ruleclassifierContextDeclCS
{ after(grammarAccess.getClassifierContextDeclCSRule()); } 
	 EOF 
;

// Rule classifierContextDeclCS
ruleclassifierContextDeclCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassifierContextDeclCSAccess().getGroup()); }
(rule__ClassifierContextDeclCS__Group__0)
{ after(grammarAccess.getClassifierContextDeclCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleinvCS
entryRuleinvCS 
:
{ before(grammarAccess.getInvCSRule()); }
	 ruleinvCS
{ after(grammarAccess.getInvCSRule()); } 
	 EOF 
;

// Rule invCS
ruleinvCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInvCSAccess().getGroup()); }
(rule__InvCS__Group__0)
{ after(grammarAccess.getInvCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledefCS
entryRuledefCS 
:
{ before(grammarAccess.getDefCSRule()); }
	 ruledefCS
{ after(grammarAccess.getDefCSRule()); } 
	 EOF 
;

// Rule defCS
ruledefCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefCSAccess().getGroup()); }
(rule__DefCS__Group__0)
{ after(grammarAccess.getDefCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleoperationContextDeclCS
entryRuleoperationContextDeclCS 
:
{ before(grammarAccess.getOperationContextDeclCSRule()); }
	 ruleoperationContextDeclCS
{ after(grammarAccess.getOperationContextDeclCSRule()); } 
	 EOF 
;

// Rule operationContextDeclCS
ruleoperationContextDeclCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getGroup()); }
(rule__OperationContextDeclCS__Group__0)
{ after(grammarAccess.getOperationContextDeclCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleparameterCS
entryRuleparameterCS 
:
{ before(grammarAccess.getParameterCSRule()); }
	 ruleparameterCS
{ after(grammarAccess.getParameterCSRule()); } 
	 EOF 
;

// Rule parameterCS
ruleparameterCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterCSAccess().getGroup()); }
(rule__ParameterCS__Group__0)
{ after(grammarAccess.getParameterCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepreCS
entryRulepreCS 
:
{ before(grammarAccess.getPreCSRule()); }
	 rulepreCS
{ after(grammarAccess.getPreCSRule()); } 
	 EOF 
;

// Rule preCS
rulepreCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPreCSAccess().getGroup()); }
(rule__PreCS__Group__0)
{ after(grammarAccess.getPreCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepostCS
entryRulepostCS 
:
{ before(grammarAccess.getPostCSRule()); }
	 rulepostCS
{ after(grammarAccess.getPostCSRule()); } 
	 EOF 
;

// Rule postCS
rulepostCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostCSAccess().getGroup()); }
(rule__PostCS__Group__0)
{ after(grammarAccess.getPostCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulebodyCS
entryRulebodyCS 
:
{ before(grammarAccess.getBodyCSRule()); }
	 rulebodyCS
{ after(grammarAccess.getBodyCSRule()); } 
	 EOF 
;

// Rule bodyCS
rulebodyCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBodyCSAccess().getGroup()); }
(rule__BodyCS__Group__0)
{ after(grammarAccess.getBodyCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRulenamedConstraintCS
entryRulenamedConstraintCS 
:
{ before(grammarAccess.getNamedConstraintCSRule()); }
	 rulenamedConstraintCS
{ after(grammarAccess.getNamedConstraintCSRule()); } 
	 EOF 
;

// Rule namedConstraintCS
rulenamedConstraintCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedConstraintCSAccess().getAlternatives()); }
(rule__NamedConstraintCS__Alternatives)
{ after(grammarAccess.getNamedConstraintCSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemessageExpCS
entryRulemessageExpCS 
:
{ before(grammarAccess.getMessageExpCSRule()); }
	 rulemessageExpCS
{ after(grammarAccess.getMessageExpCSRule()); } 
	 EOF 
;

// Rule messageExpCS
rulemessageExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageExpCSAccess().getAlternatives()); }
(rule__MessageExpCS__Alternatives)
{ after(grammarAccess.getMessageExpCSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepreExpCS
entryRulepreExpCS 
:
{ before(grammarAccess.getPreExpCSRule()); }
	 rulepreExpCS
{ after(grammarAccess.getPreExpCSRule()); } 
	 EOF 
;

// Rule preExpCS
rulepreExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPreExpCSAccess().getGroup()); }
(rule__PreExpCS__Group__0)
{ after(grammarAccess.getPreExpCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOclMessageExpCS
entryRuleOclMessageExpCS 
:
{ before(grammarAccess.getOclMessageExpCSRule()); }
	 ruleOclMessageExpCS
{ after(grammarAccess.getOclMessageExpCSRule()); } 
	 EOF 
;

// Rule OclMessageExpCS
ruleOclMessageExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOclMessageExpCSAccess().getGroup()); }
(rule__OclMessageExpCS__Group__0)
{ after(grammarAccess.getOclMessageExpCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOclMessageArgCS
entryRuleOclMessageArgCS 
:
{ before(grammarAccess.getOclMessageArgCSRule()); }
	 ruleOclMessageArgCS
{ after(grammarAccess.getOclMessageArgCSRule()); } 
	 EOF 
;

// Rule OclMessageArgCS
ruleOclMessageArgCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOclMessageArgCSAccess().getAlternatives()); }
(rule__OclMessageArgCS__Alternatives)
{ after(grammarAccess.getOclMessageArgCSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleREAL_LITERAL
entryRuleREAL_LITERAL 
:
{ before(grammarAccess.getREAL_LITERALRule()); }
	 ruleREAL_LITERAL
{ after(grammarAccess.getREAL_LITERALRule()); } 
	 EOF 
;

// Rule REAL_LITERAL
ruleREAL_LITERAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getREAL_LITERALAccess().getGroup()); }
(rule__REAL_LITERAL__Group__0)
{ after(grammarAccess.getREAL_LITERALAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleINTEGER_LITERAL
entryRuleINTEGER_LITERAL 
:
{ before(grammarAccess.getINTEGER_LITERALRule()); }
	 ruleINTEGER_LITERAL
{ after(grammarAccess.getINTEGER_LITERALRule()); } 
	 EOF 
;

// Rule INTEGER_LITERAL
ruleINTEGER_LITERAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getINTEGER_LITERALAccess().getINTTerminalRuleCall()); }
	RULE_INT
{ after(grammarAccess.getINTEGER_LITERALAccess().getINTTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuletupleKeywordCS
entryRuletupleKeywordCS 
:
{ before(grammarAccess.getTupleKeywordCSRule()); }
	 ruletupleKeywordCS
{ after(grammarAccess.getTupleKeywordCSRule()); } 
	 EOF 
;

// Rule tupleKeywordCS
ruletupleKeywordCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTupleKeywordCSAccess().getValueAssignment()); }
(rule__TupleKeywordCS__ValueAssignment)
{ after(grammarAccess.getTupleKeywordCSAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerestrictedKeywordCS
entryRulerestrictedKeywordCS 
:
{ before(grammarAccess.getRestrictedKeywordCSRule()); }
	 rulerestrictedKeywordCS
{ after(grammarAccess.getRestrictedKeywordCSRule()); } 
	 EOF 
;

// Rule restrictedKeywordCS
rulerestrictedKeywordCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRestrictedKeywordCSAccess().getAlternatives()); }
(rule__RestrictedKeywordCS__Alternatives)
{ after(grammarAccess.getRestrictedKeywordCSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleselfKeywordCS
entryRuleselfKeywordCS 
:
{ before(grammarAccess.getSelfKeywordCSRule()); }
	 ruleselfKeywordCS
{ after(grammarAccess.getSelfKeywordCSRule()); } 
	 EOF 
;

// Rule selfKeywordCS
ruleselfKeywordCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelfKeywordCSAccess().getValueAssignment()); }
(rule__SelfKeywordCS__ValueAssignment)
{ after(grammarAccess.getSelfKeywordCSAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesimpleNameCS
entryRulesimpleNameCS 
:
{ before(grammarAccess.getSimpleNameCSRule()); }
	 rulesimpleNameCS
{ after(grammarAccess.getSimpleNameCSRule()); } 
	 EOF 
;

// Rule simpleNameCS
rulesimpleNameCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleNameCSAccess().getValueAssignment()); }
(rule__SimpleNameCS__ValueAssignment)
{ after(grammarAccess.getSimpleNameCSAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleunreservedSimpleNameCS
entryRuleunreservedSimpleNameCS 
:
{ before(grammarAccess.getUnreservedSimpleNameCSRule()); }
	 ruleunreservedSimpleNameCS
{ after(grammarAccess.getUnreservedSimpleNameCSRule()); } 
	 EOF 
;

// Rule unreservedSimpleNameCS
ruleunreservedSimpleNameCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnreservedSimpleNameCSAccess().getAlternatives()); }
(rule__UnreservedSimpleNameCS__Alternatives)
{ after(grammarAccess.getUnreservedSimpleNameCSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepathNameCS
entryRulepathNameCS 
:
{ before(grammarAccess.getPathNameCSRule()); }
	 rulepathNameCS
{ after(grammarAccess.getPathNameCSRule()); } 
	 EOF 
;

// Rule pathNameCS
rulepathNameCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathNameCSAccess().getGroup()); }
(rule__PathNameCS__Group__0)
{ after(grammarAccess.getPathNameCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleprimitiveTypeCS
entryRuleprimitiveTypeCS 
:
{ before(grammarAccess.getPrimitiveTypeCSRule()); }
	 ruleprimitiveTypeCS
{ after(grammarAccess.getPrimitiveTypeCSRule()); } 
	 EOF 
;

// Rule primitiveTypeCS
ruleprimitiveTypeCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getAlternatives()); }
(rule__PrimitiveTypeCS__Alternatives)
{ after(grammarAccess.getPrimitiveTypeCSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCollectionTypeIdentifierCS
entryRuleCollectionTypeIdentifierCS 
:
{ before(grammarAccess.getCollectionTypeIdentifierCSRule()); }
	 ruleCollectionTypeIdentifierCS
{ after(grammarAccess.getCollectionTypeIdentifierCSRule()); } 
	 EOF 
;

// Rule CollectionTypeIdentifierCS
ruleCollectionTypeIdentifierCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectionTypeIdentifierCSAccess().getAlternatives()); }
(rule__CollectionTypeIdentifierCS__Alternatives)
{ after(grammarAccess.getCollectionTypeIdentifierCSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletypeCS
entryRuletypeCS 
:
{ before(grammarAccess.getTypeCSRule()); }
	 ruletypeCS
{ after(grammarAccess.getTypeCSRule()); } 
	 EOF 
;

// Rule typeCS
ruletypeCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeCSAccess().getAlternatives()); }
(rule__TypeCS__Alternatives)
{ after(grammarAccess.getTypeCSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecollectionTypeCS
entryRulecollectionTypeCS 
:
{ before(grammarAccess.getCollectionTypeCSRule()); }
	 rulecollectionTypeCS
{ after(grammarAccess.getCollectionTypeCSRule()); } 
	 EOF 
;

// Rule collectionTypeCS
rulecollectionTypeCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectionTypeCSAccess().getGroup()); }
(rule__CollectionTypeCS__Group__0)
{ after(grammarAccess.getCollectionTypeCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletupleTypeCS
entryRuletupleTypeCS 
:
{ before(grammarAccess.getTupleTypeCSRule()); }
	 ruletupleTypeCS
{ after(grammarAccess.getTupleTypeCSRule()); } 
	 EOF 
;

// Rule tupleTypeCS
ruletupleTypeCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTupleTypeCSAccess().getGroup()); }
(rule__TupleTypeCS__Group__0)
{ after(grammarAccess.getTupleTypeCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletuplePartCS
entryRuletuplePartCS 
:
{ before(grammarAccess.getTuplePartCSRule()); }
	 ruletuplePartCS
{ after(grammarAccess.getTuplePartCSRule()); } 
	 EOF 
;

// Rule tuplePartCS
ruletuplePartCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTuplePartCSAccess().getGroup()); }
(rule__TuplePartCS__Group__0)
{ after(grammarAccess.getTuplePartCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralExpCS
entryRuleLiteralExpCS 
:
{ before(grammarAccess.getLiteralExpCSRule()); }
	 ruleLiteralExpCS
{ after(grammarAccess.getLiteralExpCSRule()); } 
	 EOF 
;

// Rule LiteralExpCS
ruleLiteralExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralExpCSAccess().getAlternatives()); }
(rule__LiteralExpCS__Alternatives)
{ after(grammarAccess.getLiteralExpCSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCollectionLiteralExpCS
entryRuleCollectionLiteralExpCS 
:
{ before(grammarAccess.getCollectionLiteralExpCSRule()); }
	 ruleCollectionLiteralExpCS
{ after(grammarAccess.getCollectionLiteralExpCSRule()); } 
	 EOF 
;

// Rule CollectionLiteralExpCS
ruleCollectionLiteralExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectionLiteralExpCSAccess().getGroup()); }
(rule__CollectionLiteralExpCS__Group__0)
{ after(grammarAccess.getCollectionLiteralExpCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCollectionLiteralPartCS
entryRuleCollectionLiteralPartCS 
:
{ before(grammarAccess.getCollectionLiteralPartCSRule()); }
	 ruleCollectionLiteralPartCS
{ after(grammarAccess.getCollectionLiteralPartCSRule()); } 
	 EOF 
;

// Rule CollectionLiteralPartCS
ruleCollectionLiteralPartCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectionLiteralPartCSAccess().getGroup()); }
(rule__CollectionLiteralPartCS__Group__0)
{ after(grammarAccess.getCollectionLiteralPartCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimitiveLiteralExpCS
entryRulePrimitiveLiteralExpCS 
:
{ before(grammarAccess.getPrimitiveLiteralExpCSRule()); }
	 rulePrimitiveLiteralExpCS
{ after(grammarAccess.getPrimitiveLiteralExpCSRule()); } 
	 EOF 
;

// Rule PrimitiveLiteralExpCS
rulePrimitiveLiteralExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimitiveLiteralExpCSAccess().getAlternatives()); }
(rule__PrimitiveLiteralExpCS__Alternatives)
{ after(grammarAccess.getPrimitiveLiteralExpCSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTupleLiteralExpCS
entryRuleTupleLiteralExpCS 
:
{ before(grammarAccess.getTupleLiteralExpCSRule()); }
	 ruleTupleLiteralExpCS
{ after(grammarAccess.getTupleLiteralExpCSRule()); } 
	 EOF 
;

// Rule TupleLiteralExpCS
ruleTupleLiteralExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTupleLiteralExpCSAccess().getGroup()); }
(rule__TupleLiteralExpCS__Group__0)
{ after(grammarAccess.getTupleLiteralExpCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTupleLiteralPartCS
entryRuleTupleLiteralPartCS 
:
{ before(grammarAccess.getTupleLiteralPartCSRule()); }
	 ruleTupleLiteralPartCS
{ after(grammarAccess.getTupleLiteralPartCSRule()); } 
	 EOF 
;

// Rule TupleLiteralPartCS
ruleTupleLiteralPartCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTupleLiteralPartCSAccess().getGroup()); }
(rule__TupleLiteralPartCS__Group__0)
{ after(grammarAccess.getTupleLiteralPartCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerLiteralExpCS
entryRuleIntegerLiteralExpCS 
:
{ before(grammarAccess.getIntegerLiteralExpCSRule()); }
	 ruleIntegerLiteralExpCS
{ after(grammarAccess.getIntegerLiteralExpCSRule()); } 
	 EOF 
;

// Rule IntegerLiteralExpCS
ruleIntegerLiteralExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerLiteralExpCSAccess().getIntegerSymbolAssignment()); }
(rule__IntegerLiteralExpCS__IntegerSymbolAssignment)
{ after(grammarAccess.getIntegerLiteralExpCSAccess().getIntegerSymbolAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealLiteralExpCS
entryRuleRealLiteralExpCS 
:
{ before(grammarAccess.getRealLiteralExpCSRule()); }
	 ruleRealLiteralExpCS
{ after(grammarAccess.getRealLiteralExpCSRule()); } 
	 EOF 
;

// Rule RealLiteralExpCS
ruleRealLiteralExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRealLiteralExpCSAccess().getRealSymbolAssignment()); }
(rule__RealLiteralExpCS__RealSymbolAssignment)
{ after(grammarAccess.getRealLiteralExpCSAccess().getRealSymbolAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteralExpCS
entryRuleStringLiteralExpCS 
:
{ before(grammarAccess.getStringLiteralExpCSRule()); }
	 ruleStringLiteralExpCS
{ after(grammarAccess.getStringLiteralExpCSRule()); } 
	 EOF 
;

// Rule StringLiteralExpCS
ruleStringLiteralExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getStringLiteralExpCSAccess().getStringSymbolAssignment()); }
(rule__StringLiteralExpCS__StringSymbolAssignment)
{ after(grammarAccess.getStringLiteralExpCSAccess().getStringSymbolAssignment()); }
)
(
{ before(grammarAccess.getStringLiteralExpCSAccess().getStringSymbolAssignment()); }
(rule__StringLiteralExpCS__StringSymbolAssignment)*
{ after(grammarAccess.getStringLiteralExpCSAccess().getStringSymbolAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteralExpCS
entryRuleBooleanLiteralExpCS 
:
{ before(grammarAccess.getBooleanLiteralExpCSRule()); }
	 ruleBooleanLiteralExpCS
{ after(grammarAccess.getBooleanLiteralExpCSRule()); } 
	 EOF 
;

// Rule BooleanLiteralExpCS
ruleBooleanLiteralExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralExpCSAccess().getAlternatives()); }
(rule__BooleanLiteralExpCS__Alternatives)
{ after(grammarAccess.getBooleanLiteralExpCSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnlimitedNaturalLiteralExpCS
entryRuleUnlimitedNaturalLiteralExpCS 
:
{ before(grammarAccess.getUnlimitedNaturalLiteralExpCSRule()); }
	 ruleUnlimitedNaturalLiteralExpCS
{ after(grammarAccess.getUnlimitedNaturalLiteralExpCSRule()); } 
	 EOF 
;

// Rule UnlimitedNaturalLiteralExpCS
ruleUnlimitedNaturalLiteralExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getGroup()); }
(rule__UnlimitedNaturalLiteralExpCS__Group__0)
{ after(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInvalidLiteralExpCS
entryRuleInvalidLiteralExpCS 
:
{ before(grammarAccess.getInvalidLiteralExpCSRule()); }
	 ruleInvalidLiteralExpCS
{ after(grammarAccess.getInvalidLiteralExpCSRule()); } 
	 EOF 
;

// Rule InvalidLiteralExpCS
ruleInvalidLiteralExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInvalidLiteralExpCSAccess().getGroup()); }
(rule__InvalidLiteralExpCS__Group__0)
{ after(grammarAccess.getInvalidLiteralExpCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullLiteralExpCS
entryRuleNullLiteralExpCS 
:
{ before(grammarAccess.getNullLiteralExpCSRule()); }
	 ruleNullLiteralExpCS
{ after(grammarAccess.getNullLiteralExpCSRule()); } 
	 EOF 
;

// Rule NullLiteralExpCS
ruleNullLiteralExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullLiteralExpCSAccess().getGroup()); }
(rule__NullLiteralExpCS__Group__0)
{ after(grammarAccess.getNullLiteralExpCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeLiteralExpCS
entryRuleTypeLiteralExpCS 
:
{ before(grammarAccess.getTypeLiteralExpCSRule()); }
	 ruleTypeLiteralExpCS
{ after(grammarAccess.getTypeLiteralExpCSRule()); } 
	 EOF 
;

// Rule TypeLiteralExpCS
ruleTypeLiteralExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeLiteralExpCSAccess().getAlternatives()); }
(rule__TypeLiteralExpCS__Alternatives)
{ after(grammarAccess.getTypeLiteralExpCSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOclExpressionCS
entryRuleOclExpressionCS 
:
{ before(grammarAccess.getOclExpressionCSRule()); }
	 ruleOclExpressionCS
{ after(grammarAccess.getOclExpressionCSRule()); } 
	 EOF 
;

// Rule OclExpressionCS
ruleOclExpressionCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOclExpressionCSAccess().getAlternatives()); }
(rule__OclExpressionCS__Alternatives)
{ after(grammarAccess.getOclExpressionCSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleimpliesCS
entryRuleimpliesCS 
:
{ before(grammarAccess.getImpliesCSRule()); }
	 ruleimpliesCS
{ after(grammarAccess.getImpliesCSRule()); } 
	 EOF 
;

// Rule impliesCS
ruleimpliesCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImpliesCSAccess().getGroup()); }
(rule__ImpliesCS__Group__0)
{ after(grammarAccess.getImpliesCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulexorCS
entryRulexorCS 
:
{ before(grammarAccess.getXorCSRule()); }
	 rulexorCS
{ after(grammarAccess.getXorCSRule()); } 
	 EOF 
;

// Rule xorCS
rulexorCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXorCSAccess().getGroup()); }
(rule__XorCS__Group__0)
{ after(grammarAccess.getXorCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleorCS
entryRuleorCS 
:
{ before(grammarAccess.getOrCSRule()); }
	 ruleorCS
{ after(grammarAccess.getOrCSRule()); } 
	 EOF 
;

// Rule orCS
ruleorCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrCSAccess().getGroup()); }
(rule__OrCS__Group__0)
{ after(grammarAccess.getOrCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleandCS
entryRuleandCS 
:
{ before(grammarAccess.getAndCSRule()); }
	 ruleandCS
{ after(grammarAccess.getAndCSRule()); } 
	 EOF 
;

// Rule andCS
ruleandCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndCSAccess().getGroup()); }
(rule__AndCS__Group__0)
{ after(grammarAccess.getAndCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleequalityCS
entryRuleequalityCS 
:
{ before(grammarAccess.getEqualityCSRule()); }
	 ruleequalityCS
{ after(grammarAccess.getEqualityCSRule()); } 
	 EOF 
;

// Rule equalityCS
ruleequalityCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualityCSAccess().getGroup()); }
(rule__EqualityCS__Group__0)
{ after(grammarAccess.getEqualityCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerelationalCS
entryRulerelationalCS 
:
{ before(grammarAccess.getRelationalCSRule()); }
	 rulerelationalCS
{ after(grammarAccess.getRelationalCSRule()); } 
	 EOF 
;

// Rule relationalCS
rulerelationalCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalCSAccess().getGroup()); }
(rule__RelationalCS__Group__0)
{ after(grammarAccess.getRelationalCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleadditiveCS
entryRuleadditiveCS 
:
{ before(grammarAccess.getAdditiveCSRule()); }
	 ruleadditiveCS
{ after(grammarAccess.getAdditiveCSRule()); } 
	 EOF 
;

// Rule additiveCS
ruleadditiveCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveCSAccess().getGroup()); }
(rule__AdditiveCS__Group__0)
{ after(grammarAccess.getAdditiveCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemultiplicativeCS
entryRulemultiplicativeCS 
:
{ before(grammarAccess.getMultiplicativeCSRule()); }
	 rulemultiplicativeCS
{ after(grammarAccess.getMultiplicativeCSRule()); } 
	 EOF 
;

// Rule multiplicativeCS
rulemultiplicativeCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeCSAccess().getGroup()); }
(rule__MultiplicativeCS__Group__0)
{ after(grammarAccess.getMultiplicativeCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleunaryCS
entryRuleunaryCS 
:
{ before(grammarAccess.getUnaryCSRule()); }
	 ruleunaryCS
{ after(grammarAccess.getUnaryCSRule()); } 
	 EOF 
;

// Rule unaryCS
ruleunaryCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryCSAccess().getAlternatives()); }
(rule__UnaryCS__Alternatives)
{ after(grammarAccess.getUnaryCSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecallingExpCS
entryRulecallingExpCS 
:
{ before(grammarAccess.getCallingExpCSRule()); }
	 rulecallingExpCS
{ after(grammarAccess.getCallingExpCSRule()); } 
	 EOF 
;

// Rule callingExpCS
rulecallingExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallingExpCSAccess().getGroup()); }
(rule__CallingExpCS__Group__0)
{ after(grammarAccess.getCallingExpCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleiteratorVariableCS
entryRuleiteratorVariableCS 
:
{ before(grammarAccess.getIteratorVariableCSRule()); }
	 ruleiteratorVariableCS
{ after(grammarAccess.getIteratorVariableCSRule()); } 
	 EOF 
;

// Rule iteratorVariableCS
ruleiteratorVariableCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIteratorVariableCSAccess().getGroup()); }
(rule__IteratorVariableCS__Group__0)
{ after(grammarAccess.getIteratorVariableCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleiteratorAccumulatorCS
entryRuleiteratorAccumulatorCS 
:
{ before(grammarAccess.getIteratorAccumulatorCSRule()); }
	 ruleiteratorAccumulatorCS
{ after(grammarAccess.getIteratorAccumulatorCSRule()); } 
	 EOF 
;

// Rule iteratorAccumulatorCS
ruleiteratorAccumulatorCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIteratorAccumulatorCSAccess().getGroup()); }
(rule__IteratorAccumulatorCS__Group__0)
{ after(grammarAccess.getIteratorAccumulatorCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecallExpCS
entryRulecallExpCS 
:
{ before(grammarAccess.getCallExpCSRule()); }
	 rulecallExpCS
{ after(grammarAccess.getCallExpCSRule()); } 
	 EOF 
;

// Rule callExpCS
rulecallExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallExpCSAccess().getGroup()); }
(rule__CallExpCS__Group__0)
{ after(grammarAccess.getCallExpCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleindexExpCS
entryRuleindexExpCS 
:
{ before(grammarAccess.getIndexExpCSRule()); }
	 ruleindexExpCS
{ after(grammarAccess.getIndexExpCSRule()); } 
	 EOF 
;

// Rule indexExpCS
ruleindexExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexExpCSAccess().getGroup()); }
(rule__IndexExpCS__Group__0)
{ after(grammarAccess.getIndexExpCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleprimaryExpCS
entryRuleprimaryExpCS 
:
{ before(grammarAccess.getPrimaryExpCSRule()); }
	 ruleprimaryExpCS
{ after(grammarAccess.getPrimaryExpCSRule()); } 
	 EOF 
;

// Rule primaryExpCS
ruleprimaryExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpCSAccess().getAlternatives()); }
(rule__PrimaryExpCS__Alternatives)
{ after(grammarAccess.getPrimaryExpCSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfExpCS
entryRuleIfExpCS 
:
{ before(grammarAccess.getIfExpCSRule()); }
	 ruleIfExpCS
{ after(grammarAccess.getIfExpCSRule()); } 
	 EOF 
;

// Rule IfExpCS
ruleIfExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfExpCSAccess().getGroup()); }
(rule__IfExpCS__Group__0)
{ after(grammarAccess.getIfExpCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLetExpCS
entryRuleLetExpCS 
:
{ before(grammarAccess.getLetExpCSRule()); }
	 ruleLetExpCS
{ after(grammarAccess.getLetExpCSRule()); } 
	 EOF 
;

// Rule LetExpCS
ruleLetExpCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLetExpCSAccess().getGroup()); }
(rule__LetExpCS__Group__0)
{ after(grammarAccess.getLetExpCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLetVariableCS
entryRuleLetVariableCS 
:
{ before(grammarAccess.getLetVariableCSRule()); }
	 ruleLetVariableCS
{ after(grammarAccess.getLetVariableCSRule()); } 
	 EOF 
;

// Rule LetVariableCS
ruleLetVariableCS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLetVariableCSAccess().getGroup()); }
(rule__LetVariableCS__Group__0)
{ after(grammarAccess.getLetVariableCSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Model__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackagesAssignment_1_0()); }
(rule__Model__PackagesAssignment_1_0)
{ after(grammarAccess.getModelAccess().getPackagesAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getContextsAssignment_1_1()); }
(rule__Model__ContextsAssignment_1_1)
{ after(grammarAccess.getModelAccess().getContextsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContextDeclCS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextDeclCSAccess().getPropertyContextDeclCSParserRuleCall_0()); }
	rulepropertyContextDeclCS
{ after(grammarAccess.getContextDeclCSAccess().getPropertyContextDeclCSParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getContextDeclCSAccess().getClassifierContextDeclCSParserRuleCall_1()); }
	ruleclassifierContextDeclCS
{ after(grammarAccess.getContextDeclCSAccess().getClassifierContextDeclCSParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getContextDeclCSAccess().getOperationContextDeclCSParserRuleCall_2()); }
	ruleoperationContextDeclCS
{ after(grammarAccess.getContextDeclCSAccess().getOperationContextDeclCSParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyContextDeclCS__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getGroup_4_0()); }
(rule__PropertyContextDeclCS__Group_4_0__0)?
{ after(grammarAccess.getPropertyContextDeclCSAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getGroup_4_1()); }
(rule__PropertyContextDeclCS__Group_4_1__0)
{ after(grammarAccess.getPropertyContextDeclCSAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierContextDeclCS__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierContextDeclCSAccess().getInvsAssignment_3_0()); }
(rule__ClassifierContextDeclCS__InvsAssignment_3_0)
{ after(grammarAccess.getClassifierContextDeclCSAccess().getInvsAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getClassifierContextDeclCSAccess().getDefsAssignment_3_1()); }
(rule__ClassifierContextDeclCS__DefsAssignment_3_1)
{ after(grammarAccess.getClassifierContextDeclCSAccess().getDefsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContextDeclCS__Alternatives_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getPresAssignment_7_0()); }
(rule__OperationContextDeclCS__PresAssignment_7_0)
{ after(grammarAccess.getOperationContextDeclCSAccess().getPresAssignment_7_0()); }
)

    |(
{ before(grammarAccess.getOperationContextDeclCSAccess().getPostsAssignment_7_1()); }
(rule__OperationContextDeclCS__PostsAssignment_7_1)
{ after(grammarAccess.getOperationContextDeclCSAccess().getPostsAssignment_7_1()); }
)

    |(
{ before(grammarAccess.getOperationContextDeclCSAccess().getBodiesAssignment_7_2()); }
(rule__OperationContextDeclCS__BodiesAssignment_7_2)
{ after(grammarAccess.getOperationContextDeclCSAccess().getBodiesAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedConstraintCS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedConstraintCSAccess().getBodyCSParserRuleCall_0()); }
	rulebodyCS
{ after(grammarAccess.getNamedConstraintCSAccess().getBodyCSParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNamedConstraintCSAccess().getDefCSParserRuleCall_1()); }
	ruledefCS
{ after(grammarAccess.getNamedConstraintCSAccess().getDefCSParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNamedConstraintCSAccess().getInvCSParserRuleCall_2()); }
	ruleinvCS
{ after(grammarAccess.getNamedConstraintCSAccess().getInvCSParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getNamedConstraintCSAccess().getPostCSParserRuleCall_3()); }
	rulepostCS
{ after(grammarAccess.getNamedConstraintCSAccess().getPostCSParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getNamedConstraintCSAccess().getPreCSParserRuleCall_4()); }
	rulepreCS
{ after(grammarAccess.getNamedConstraintCSAccess().getPreCSParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageExpCS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageExpCSAccess().getPrimaryExpCSParserRuleCall_0()); }
	ruleprimaryExpCS
{ after(grammarAccess.getMessageExpCSAccess().getPrimaryExpCSParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMessageExpCSAccess().getOclMessageExpCSParserRuleCall_1()); }
	ruleOclMessageExpCS
{ after(grammarAccess.getMessageExpCSAccess().getOclMessageExpCSParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OclMessageExpCS__OpAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageExpCSAccess().getOpCircumflexAccentCircumflexAccentKeyword_1_0_0()); }

	'^^' 

{ after(grammarAccess.getOclMessageExpCSAccess().getOpCircumflexAccentCircumflexAccentKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getOclMessageExpCSAccess().getOpCircumflexAccentKeyword_1_0_1()); }

	'^' 

{ after(grammarAccess.getOclMessageExpCSAccess().getOpCircumflexAccentKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OclMessageArgCS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageArgCSAccess().getGroup_0()); }
(rule__OclMessageArgCS__Group_0__0)
{ after(grammarAccess.getOclMessageArgCSAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getOclMessageArgCSAccess().getOclExpressionCSParserRuleCall_1()); }
	ruleOclExpressionCS
{ after(grammarAccess.getOclMessageArgCSAccess().getOclExpressionCSParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__REAL_LITERAL__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREAL_LITERALAccess().getGroup_1_0()); }
(rule__REAL_LITERAL__Group_1_0__0)
{ after(grammarAccess.getREAL_LITERALAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getREAL_LITERALAccess().getGroup_1_1()); }
(rule__REAL_LITERAL__Group_1_1__0)
{ after(grammarAccess.getREAL_LITERALAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__REAL_LITERAL__Alternatives_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREAL_LITERALAccess().getEKeyword_1_1_1_0()); }

	'e' 

{ after(grammarAccess.getREAL_LITERALAccess().getEKeyword_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getREAL_LITERALAccess().getEKeyword_1_1_1_1()); }

	'E' 

{ after(grammarAccess.getREAL_LITERALAccess().getEKeyword_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__REAL_LITERAL__Alternatives_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREAL_LITERALAccess().getPlusSignKeyword_1_1_2_0()); }

	'+' 

{ after(grammarAccess.getREAL_LITERALAccess().getPlusSignKeyword_1_1_2_0()); }
)

    |(
{ before(grammarAccess.getREAL_LITERALAccess().getHyphenMinusKeyword_1_1_2_1()); }

	'-' 

{ after(grammarAccess.getREAL_LITERALAccess().getHyphenMinusKeyword_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RestrictedKeywordCS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedKeywordCSAccess().getCollectionTypeIdentifierCSParserRuleCall_0()); }
	ruleCollectionTypeIdentifierCS
{ after(grammarAccess.getRestrictedKeywordCSAccess().getCollectionTypeIdentifierCSParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRestrictedKeywordCSAccess().getPrimitiveTypeCSParserRuleCall_1()); }
	ruleprimitiveTypeCS
{ after(grammarAccess.getRestrictedKeywordCSAccess().getPrimitiveTypeCSParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRestrictedKeywordCSAccess().getTupleKeywordCSParserRuleCall_2()); }
	ruletupleKeywordCS
{ after(grammarAccess.getRestrictedKeywordCSAccess().getTupleKeywordCSParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnreservedSimpleNameCS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnreservedSimpleNameCSAccess().getSimpleNameCSParserRuleCall_0()); }
	rulesimpleNameCS
{ after(grammarAccess.getUnreservedSimpleNameCSAccess().getSimpleNameCSParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnreservedSimpleNameCSAccess().getRestrictedKeywordCSParserRuleCall_1()); }
	rulerestrictedKeywordCS
{ after(grammarAccess.getUnreservedSimpleNameCSAccess().getRestrictedKeywordCSParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeCS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueAssignment_0()); }
(rule__PrimitiveTypeCS__ValueAssignment_0)
{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueAssignment_1()); }
(rule__PrimitiveTypeCS__ValueAssignment_1)
{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueAssignment_1()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueAssignment_2()); }
(rule__PrimitiveTypeCS__ValueAssignment_2)
{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueAssignment_2()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueAssignment_3()); }
(rule__PrimitiveTypeCS__ValueAssignment_3)
{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueAssignment_3()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueAssignment_4()); }
(rule__PrimitiveTypeCS__ValueAssignment_4)
{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueAssignment_4()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueAssignment_5()); }
(rule__PrimitiveTypeCS__ValueAssignment_5)
{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueAssignment_5()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueAssignment_6()); }
(rule__PrimitiveTypeCS__ValueAssignment_6)
{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueAssignment_6()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueAssignment_7()); }
(rule__PrimitiveTypeCS__ValueAssignment_7)
{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeIdentifierCS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueAssignment_0()); }
(rule__CollectionTypeIdentifierCS__ValueAssignment_0)
{ after(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueAssignment_1()); }
(rule__CollectionTypeIdentifierCS__ValueAssignment_1)
{ after(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueAssignment_1()); }
)

    |(
{ before(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueAssignment_2()); }
(rule__CollectionTypeIdentifierCS__ValueAssignment_2)
{ after(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueAssignment_2()); }
)

    |(
{ before(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueAssignment_3()); }
(rule__CollectionTypeIdentifierCS__ValueAssignment_3)
{ after(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueAssignment_3()); }
)

    |(
{ before(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueAssignment_4()); }
(rule__CollectionTypeIdentifierCS__ValueAssignment_4)
{ after(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeCSAccess().getPrimitiveTypeCSParserRuleCall_0()); }
	ruleprimitiveTypeCS
{ after(grammarAccess.getTypeCSAccess().getPrimitiveTypeCSParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeCSAccess().getPathNameCSParserRuleCall_1()); }
	rulepathNameCS
{ after(grammarAccess.getTypeCSAccess().getPathNameCSParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeCSAccess().getCollectionTypeCSParserRuleCall_2()); }
	rulecollectionTypeCS
{ after(grammarAccess.getTypeCSAccess().getCollectionTypeCSParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypeCSAccess().getTupleTypeCSParserRuleCall_3()); }
	ruletupleTypeCS
{ after(grammarAccess.getTypeCSAccess().getTupleTypeCSParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpCS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpCSAccess().getCollectionLiteralExpCSParserRuleCall_0()); }
	ruleCollectionLiteralExpCS
{ after(grammarAccess.getLiteralExpCSAccess().getCollectionLiteralExpCSParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralExpCSAccess().getTupleLiteralExpCSParserRuleCall_1()); }
	ruleTupleLiteralExpCS
{ after(grammarAccess.getLiteralExpCSAccess().getTupleLiteralExpCSParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralExpCSAccess().getPrimitiveLiteralExpCSParserRuleCall_2()); }
	rulePrimitiveLiteralExpCS
{ after(grammarAccess.getLiteralExpCSAccess().getPrimitiveLiteralExpCSParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralExpCSAccess().getTypeLiteralExpCSParserRuleCall_3()); }
	ruleTypeLiteralExpCS
{ after(grammarAccess.getLiteralExpCSAccess().getTypeLiteralExpCSParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveLiteralExpCS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveLiteralExpCSAccess().getIntegerLiteralExpCSParserRuleCall_0()); }
	ruleIntegerLiteralExpCS
{ after(grammarAccess.getPrimitiveLiteralExpCSAccess().getIntegerLiteralExpCSParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimitiveLiteralExpCSAccess().getRealLiteralExpCSParserRuleCall_1()); }
	ruleRealLiteralExpCS
{ after(grammarAccess.getPrimitiveLiteralExpCSAccess().getRealLiteralExpCSParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimitiveLiteralExpCSAccess().getStringLiteralExpCSParserRuleCall_2()); }
	ruleStringLiteralExpCS
{ after(grammarAccess.getPrimitiveLiteralExpCSAccess().getStringLiteralExpCSParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPrimitiveLiteralExpCSAccess().getBooleanLiteralExpCSParserRuleCall_3()); }
	ruleBooleanLiteralExpCS
{ after(grammarAccess.getPrimitiveLiteralExpCSAccess().getBooleanLiteralExpCSParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPrimitiveLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSParserRuleCall_4()); }
	ruleUnlimitedNaturalLiteralExpCS
{ after(grammarAccess.getPrimitiveLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPrimitiveLiteralExpCSAccess().getInvalidLiteralExpCSParserRuleCall_5()); }
	ruleInvalidLiteralExpCS
{ after(grammarAccess.getPrimitiveLiteralExpCSAccess().getInvalidLiteralExpCSParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getPrimitiveLiteralExpCSAccess().getNullLiteralExpCSParserRuleCall_6()); }
	ruleNullLiteralExpCS
{ after(grammarAccess.getPrimitiveLiteralExpCSAccess().getNullLiteralExpCSParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralExpCS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralExpCSAccess().getValueAssignment_0()); }
(rule__BooleanLiteralExpCS__ValueAssignment_0)
{ after(grammarAccess.getBooleanLiteralExpCSAccess().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getBooleanLiteralExpCSAccess().getValueAssignment_1()); }
(rule__BooleanLiteralExpCS__ValueAssignment_1)
{ after(grammarAccess.getBooleanLiteralExpCSAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteralExpCS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeLiteralExpCSAccess().getPathNameCSParserRuleCall_0()); }
	rulepathNameCS
{ after(grammarAccess.getTypeLiteralExpCSAccess().getPathNameCSParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeLiteralExpCSAccess().getPrimitiveTypeCSParserRuleCall_1()); }
	ruleprimitiveTypeCS
{ after(grammarAccess.getTypeLiteralExpCSAccess().getPrimitiveTypeCSParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeLiteralExpCSAccess().getTupleTypeCSParserRuleCall_2()); }
	ruletupleTypeCS
{ after(grammarAccess.getTypeLiteralExpCSAccess().getTupleTypeCSParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OclExpressionCS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclExpressionCSAccess().getImpliesCSParserRuleCall_0()); }
	ruleimpliesCS
{ after(grammarAccess.getOclExpressionCSAccess().getImpliesCSParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOclExpressionCSAccess().getLetExpCSParserRuleCall_1()); }
	ruleLetExpCS
{ after(grammarAccess.getOclExpressionCSAccess().getLetExpCSParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesCS__ArgumentAlternatives_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesCSAccess().getArgumentImpliesCSParserRuleCall_1_2_0_0()); }
	ruleimpliesCS
{ after(grammarAccess.getImpliesCSAccess().getArgumentImpliesCSParserRuleCall_1_2_0_0()); }
)

    |(
{ before(grammarAccess.getImpliesCSAccess().getArgumentLetExpCSParserRuleCall_1_2_0_1()); }
	ruleLetExpCS
{ after(grammarAccess.getImpliesCSAccess().getArgumentLetExpCSParserRuleCall_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XorCS__ArgumentAlternatives_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorCSAccess().getArgumentXorCSParserRuleCall_1_2_0_0()); }
	rulexorCS
{ after(grammarAccess.getXorCSAccess().getArgumentXorCSParserRuleCall_1_2_0_0()); }
)

    |(
{ before(grammarAccess.getXorCSAccess().getArgumentLetExpCSParserRuleCall_1_2_0_1()); }
	ruleLetExpCS
{ after(grammarAccess.getXorCSAccess().getArgumentLetExpCSParserRuleCall_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrCS__ArgumentAlternatives_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrCSAccess().getArgumentOrCSParserRuleCall_1_2_0_0()); }
	ruleorCS
{ after(grammarAccess.getOrCSAccess().getArgumentOrCSParserRuleCall_1_2_0_0()); }
)

    |(
{ before(grammarAccess.getOrCSAccess().getArgumentLetExpCSParserRuleCall_1_2_0_1()); }
	ruleLetExpCS
{ after(grammarAccess.getOrCSAccess().getArgumentLetExpCSParserRuleCall_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndCS__ArgumentAlternatives_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndCSAccess().getArgumentAndCSParserRuleCall_1_2_0_0()); }
	ruleandCS
{ after(grammarAccess.getAndCSAccess().getArgumentAndCSParserRuleCall_1_2_0_0()); }
)

    |(
{ before(grammarAccess.getAndCSAccess().getArgumentLetExpCSParserRuleCall_1_2_0_1()); }
	ruleLetExpCS
{ after(grammarAccess.getAndCSAccess().getArgumentLetExpCSParserRuleCall_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityCS__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityCSAccess().getOpEqualsSignKeyword_1_1_0_0()); }

	'=' 

{ after(grammarAccess.getEqualityCSAccess().getOpEqualsSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getEqualityCSAccess().getOpLessThanSignGreaterThanSignKeyword_1_1_0_1()); }

	'<>' 

{ after(grammarAccess.getEqualityCSAccess().getOpLessThanSignGreaterThanSignKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityCS__ArgumentAlternatives_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityCSAccess().getArgumentEqualityCSParserRuleCall_1_2_0_0()); }
	ruleequalityCS
{ after(grammarAccess.getEqualityCSAccess().getArgumentEqualityCSParserRuleCall_1_2_0_0()); }
)

    |(
{ before(grammarAccess.getEqualityCSAccess().getArgumentLetExpCSParserRuleCall_1_2_0_1()); }
	ruleLetExpCS
{ after(grammarAccess.getEqualityCSAccess().getArgumentLetExpCSParserRuleCall_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalCS__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalCSAccess().getOpGreaterThanSignKeyword_1_1_0_0()); }

	'>' 

{ after(grammarAccess.getRelationalCSAccess().getOpGreaterThanSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getRelationalCSAccess().getOpLessThanSignKeyword_1_1_0_1()); }

	'<' 

{ after(grammarAccess.getRelationalCSAccess().getOpLessThanSignKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getRelationalCSAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_2()); }

	'>=' 

{ after(grammarAccess.getRelationalCSAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getRelationalCSAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_3()); }

	'<=' 

{ after(grammarAccess.getRelationalCSAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalCS__ArgumentAlternatives_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalCSAccess().getArgumentRelationalCSParserRuleCall_1_2_0_0()); }
	rulerelationalCS
{ after(grammarAccess.getRelationalCSAccess().getArgumentRelationalCSParserRuleCall_1_2_0_0()); }
)

    |(
{ before(grammarAccess.getRelationalCSAccess().getArgumentLetExpCSParserRuleCall_1_2_0_1()); }
	ruleLetExpCS
{ after(grammarAccess.getRelationalCSAccess().getArgumentLetExpCSParserRuleCall_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveCS__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveCSAccess().getOpPlusSignKeyword_1_1_0_0()); }

	'+' 

{ after(grammarAccess.getAdditiveCSAccess().getOpPlusSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAdditiveCSAccess().getOpHyphenMinusKeyword_1_1_0_1()); }

	'-' 

{ after(grammarAccess.getAdditiveCSAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveCS__ArgumentAlternatives_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveCSAccess().getArgumentAdditiveCSParserRuleCall_1_2_0_0()); }
	ruleadditiveCS
{ after(grammarAccess.getAdditiveCSAccess().getArgumentAdditiveCSParserRuleCall_1_2_0_0()); }
)

    |(
{ before(grammarAccess.getAdditiveCSAccess().getArgumentLetExpCSParserRuleCall_1_2_0_1()); }
	ruleLetExpCS
{ after(grammarAccess.getAdditiveCSAccess().getArgumentLetExpCSParserRuleCall_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeCS__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeCSAccess().getOpAsteriskKeyword_1_1_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicativeCSAccess().getOpAsteriskKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicativeCSAccess().getOpSolidusKeyword_1_1_0_1()); }

	'/' 

{ after(grammarAccess.getMultiplicativeCSAccess().getOpSolidusKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeCS__ArgumentAlternatives_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeCSAccess().getArgumentMultiplicativeCSParserRuleCall_1_2_0_0()); }
	rulemultiplicativeCS
{ after(grammarAccess.getMultiplicativeCSAccess().getArgumentMultiplicativeCSParserRuleCall_1_2_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicativeCSAccess().getArgumentLetExpCSParserRuleCall_1_2_0_1()); }
	ruleLetExpCS
{ after(grammarAccess.getMultiplicativeCSAccess().getArgumentLetExpCSParserRuleCall_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryCSAccess().getCallingExpCSParserRuleCall_0()); }
	rulecallingExpCS
{ after(grammarAccess.getUnaryCSAccess().getCallingExpCSParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnaryCSAccess().getGroup_1()); }
(rule__UnaryCS__Group_1__0)
{ after(grammarAccess.getUnaryCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCS__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryCSAccess().getOpHyphenMinusKeyword_1_1_0_0()); }

	'-' 

{ after(grammarAccess.getUnaryCSAccess().getOpHyphenMinusKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getUnaryCSAccess().getOpNotKeyword_1_1_0_1()); }

	'not' 

{ after(grammarAccess.getUnaryCSAccess().getOpNotKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallingExpCS__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallingExpCSAccess().getOpFullStopKeyword_1_1_0_0()); }

	'.' 

{ after(grammarAccess.getCallingExpCSAccess().getOpFullStopKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getCallingExpCSAccess().getOpHyphenMinusGreaterThanSignKeyword_1_1_0_1()); }

	'->' 

{ after(grammarAccess.getCallingExpCSAccess().getOpHyphenMinusGreaterThanSignKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpCS__Alternatives_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getGroup_1_2_1_0()); }
(rule__CallExpCS__Group_1_2_1_0__0)
{ after(grammarAccess.getCallExpCSAccess().getGroup_1_2_1_0()); }
)

    |(
{ before(grammarAccess.getCallExpCSAccess().getGroup_1_2_1_1()); }
(rule__CallExpCS__Group_1_2_1_1__0)
{ after(grammarAccess.getCallExpCSAccess().getGroup_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpCS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpCSAccess().getSelfKeywordCSParserRuleCall_0()); }
	ruleselfKeywordCS
{ after(grammarAccess.getPrimaryExpCSAccess().getSelfKeywordCSParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpCSAccess().getLiteralExpCSParserRuleCall_1()); }
	ruleLiteralExpCS
{ after(grammarAccess.getPrimaryExpCSAccess().getLiteralExpCSParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpCSAccess().getIfExpCSParserRuleCall_2()); }
	ruleIfExpCS
{ after(grammarAccess.getPrimaryExpCSAccess().getIfExpCSParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpCSAccess().getGroup_3()); }
(rule__PrimaryExpCS__Group_3__0)
{ after(grammarAccess.getPrimaryExpCSAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_0()); }
(rule__Model__ImportsAssignment_0)*
{ after(grammarAccess.getModelAccess().getImportsAssignment_0()); }
)

	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAlternatives_1()); }
(rule__Model__Alternatives_1)*
{ after(grammarAccess.getModelAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)

	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getGroup_1()); }
(rule__FQN__Group_1__0)*
{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)

	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportCSAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportCSAccess().getImportKeyword_0()); }
)

	rule__ImportCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportCSAccess().getImportedNamespaceAssignment_1()); }
(rule__ImportCS__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportCSAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageDeclarationCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationCSAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageDeclarationCSAccess().getPackageKeyword_0()); }
)

	rule__PackageDeclarationCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclarationCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationCSAccess().getNameAssignment_1()); }
(rule__PackageDeclarationCS__NameAssignment_1)
{ after(grammarAccess.getPackageDeclarationCSAccess().getNameAssignment_1()); }
)

	rule__PackageDeclarationCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclarationCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationCSAccess().getContextsAssignment_2()); }
(rule__PackageDeclarationCS__ContextsAssignment_2)*
{ after(grammarAccess.getPackageDeclarationCSAccess().getContextsAssignment_2()); }
)

	rule__PackageDeclarationCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclarationCS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationCSAccess().getEndpackageKeyword_3()); }

	'endpackage' 

{ after(grammarAccess.getPackageDeclarationCSAccess().getEndpackageKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PropertyContextDeclCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getContextKeyword_0()); }

	'context' 

{ after(grammarAccess.getPropertyContextDeclCSAccess().getContextKeyword_0()); }
)

	rule__PropertyContextDeclCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyContextDeclCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getContextNameAssignment_1()); }
(rule__PropertyContextDeclCS__ContextNameAssignment_1)
{ after(grammarAccess.getPropertyContextDeclCSAccess().getContextNameAssignment_1()); }
)

	rule__PropertyContextDeclCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyContextDeclCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getPropertyContextDeclCSAccess().getColonKeyword_2()); }
)

	rule__PropertyContextDeclCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyContextDeclCS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getTypeAssignment_3()); }
(rule__PropertyContextDeclCS__TypeAssignment_3)
{ after(grammarAccess.getPropertyContextDeclCSAccess().getTypeAssignment_3()); }
)

	rule__PropertyContextDeclCS__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyContextDeclCS__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getAlternatives_4()); }
(rule__PropertyContextDeclCS__Alternatives_4)
{ after(grammarAccess.getPropertyContextDeclCSAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PropertyContextDeclCS__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getInitAssignment_4_0_0()); }
(rule__PropertyContextDeclCS__InitAssignment_4_0_0)
{ after(grammarAccess.getPropertyContextDeclCSAccess().getInitAssignment_4_0_0()); }
)

	rule__PropertyContextDeclCS__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyContextDeclCS__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getDerAssignment_4_0_1()); }
(rule__PropertyContextDeclCS__DerAssignment_4_0_1)?
{ after(grammarAccess.getPropertyContextDeclCSAccess().getDerAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyContextDeclCS__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getDerAssignment_4_1_0()); }
(rule__PropertyContextDeclCS__DerAssignment_4_1_0)
{ after(grammarAccess.getPropertyContextDeclCSAccess().getDerAssignment_4_1_0()); }
)

	rule__PropertyContextDeclCS__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyContextDeclCS__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getInitAssignment_4_1_1()); }
(rule__PropertyContextDeclCS__InitAssignment_4_1_1)?
{ after(grammarAccess.getPropertyContextDeclCSAccess().getInitAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InitCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitCSAccess().getInitKeyword_0()); }

	'init' 

{ after(grammarAccess.getInitCSAccess().getInitKeyword_0()); }
)

	rule__InitCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InitCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitCSAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getInitCSAccess().getColonKeyword_1()); }
)

	rule__InitCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__InitCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitCSAccess().getExpressionAssignment_2()); }
(rule__InitCS__ExpressionAssignment_2)
{ after(grammarAccess.getInitCSAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DerCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDerCSAccess().getDeriveKeyword_0()); }

	'derive' 

{ after(grammarAccess.getDerCSAccess().getDeriveKeyword_0()); }
)

	rule__DerCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DerCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDerCSAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getDerCSAccess().getColonKeyword_1()); }
)

	rule__DerCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__DerCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDerCSAccess().getExpressionAssignment_2()); }
(rule__DerCS__ExpressionAssignment_2)
{ after(grammarAccess.getDerCSAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassifierContextDeclCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierContextDeclCSAccess().getContextKeyword_0()); }

	'context' 

{ after(grammarAccess.getClassifierContextDeclCSAccess().getContextKeyword_0()); }
)

	rule__ClassifierContextDeclCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierContextDeclCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierContextDeclCSAccess().getGroup_1()); }
(rule__ClassifierContextDeclCS__Group_1__0)?
{ after(grammarAccess.getClassifierContextDeclCSAccess().getGroup_1()); }
)

	rule__ClassifierContextDeclCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierContextDeclCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierContextDeclCSAccess().getContextNameAssignment_2()); }
(rule__ClassifierContextDeclCS__ContextNameAssignment_2)
{ after(grammarAccess.getClassifierContextDeclCSAccess().getContextNameAssignment_2()); }
)

	rule__ClassifierContextDeclCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierContextDeclCS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierContextDeclCSAccess().getAlternatives_3()); }
(rule__ClassifierContextDeclCS__Alternatives_3)*
{ after(grammarAccess.getClassifierContextDeclCSAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClassifierContextDeclCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierContextDeclCSAccess().getSelfNameAssignment_1_0()); }
(rule__ClassifierContextDeclCS__SelfNameAssignment_1_0)
{ after(grammarAccess.getClassifierContextDeclCSAccess().getSelfNameAssignment_1_0()); }
)

	rule__ClassifierContextDeclCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierContextDeclCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierContextDeclCSAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getClassifierContextDeclCSAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InvCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvCSAccess().getInvKeyword_0()); }

	'inv' 

{ after(grammarAccess.getInvCSAccess().getInvKeyword_0()); }
)

	rule__InvCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InvCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvCSAccess().getConstraintNameAssignment_1()); }
(rule__InvCS__ConstraintNameAssignment_1)?
{ after(grammarAccess.getInvCSAccess().getConstraintNameAssignment_1()); }
)

	rule__InvCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__InvCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvCSAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getInvCSAccess().getColonKeyword_2()); }
)

	rule__InvCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__InvCS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvCSAccess().getExpressionAssignment_3()); }
(rule__InvCS__ExpressionAssignment_3)
{ after(grammarAccess.getInvCSAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DefCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getStaticAssignment_0()); }
(rule__DefCS__StaticAssignment_0)?
{ after(grammarAccess.getDefCSAccess().getStaticAssignment_0()); }
)

	rule__DefCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DefCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getDefKeyword_1()); }

	'def' 

{ after(grammarAccess.getDefCSAccess().getDefKeyword_1()); }
)

	rule__DefCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__DefCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getConstraintNameAssignment_2()); }
(rule__DefCS__ConstraintNameAssignment_2)?
{ after(grammarAccess.getDefCSAccess().getConstraintNameAssignment_2()); }
)

	rule__DefCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__DefCS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getDefCSAccess().getColonKeyword_3()); }
)

	rule__DefCS__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__DefCS__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getConstrainedNameAssignment_4()); }
(rule__DefCS__ConstrainedNameAssignment_4)
{ after(grammarAccess.getDefCSAccess().getConstrainedNameAssignment_4()); }
)

	rule__DefCS__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__DefCS__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getGroup_5()); }
(rule__DefCS__Group_5__0)?
{ after(grammarAccess.getDefCSAccess().getGroup_5()); }
)

	rule__DefCS__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__DefCS__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getColonKeyword_6()); }

	':' 

{ after(grammarAccess.getDefCSAccess().getColonKeyword_6()); }
)

	rule__DefCS__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__DefCS__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getTypeAssignment_7()); }
(rule__DefCS__TypeAssignment_7)?
{ after(grammarAccess.getDefCSAccess().getTypeAssignment_7()); }
)

	rule__DefCS__Group__8
;
finally {
	restoreStackSize(stackSize);
}


rule__DefCS__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getEqualsSignKeyword_8()); }

	'=' 

{ after(grammarAccess.getDefCSAccess().getEqualsSignKeyword_8()); }
)

	rule__DefCS__Group__9
;
finally {
	restoreStackSize(stackSize);
}


rule__DefCS__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getExpressionAssignment_9()); }
(rule__DefCS__ExpressionAssignment_9)
{ after(grammarAccess.getDefCSAccess().getExpressionAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__DefCS__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getLeftParenthesisKeyword_5_0()); }

	'(' 

{ after(grammarAccess.getDefCSAccess().getLeftParenthesisKeyword_5_0()); }
)

	rule__DefCS__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DefCS__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getGroup_5_1()); }
(rule__DefCS__Group_5_1__0)?
{ after(grammarAccess.getDefCSAccess().getGroup_5_1()); }
)

	rule__DefCS__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}


rule__DefCS__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getRightParenthesisKeyword_5_2()); }

	')' 

{ after(grammarAccess.getDefCSAccess().getRightParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DefCS__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getParametersAssignment_5_1_0()); }
(rule__DefCS__ParametersAssignment_5_1_0)
{ after(grammarAccess.getDefCSAccess().getParametersAssignment_5_1_0()); }
)

	rule__DefCS__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DefCS__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getGroup_5_1_1()); }
(rule__DefCS__Group_5_1_1__0)*
{ after(grammarAccess.getDefCSAccess().getGroup_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefCS__Group_5_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getCommaKeyword_5_1_1_0()); }

	',' 

{ after(grammarAccess.getDefCSAccess().getCommaKeyword_5_1_1_0()); }
)

	rule__DefCS__Group_5_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DefCS__Group_5_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getParametersAssignment_5_1_1_1()); }
(rule__DefCS__ParametersAssignment_5_1_1_1)
{ after(grammarAccess.getDefCSAccess().getParametersAssignment_5_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationContextDeclCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getContextKeyword_0()); }

	'context' 

{ after(grammarAccess.getOperationContextDeclCSAccess().getContextKeyword_0()); }
)

	rule__OperationContextDeclCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContextDeclCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getContextNameAssignment_1()); }
(rule__OperationContextDeclCS__ContextNameAssignment_1)
{ after(grammarAccess.getOperationContextDeclCSAccess().getContextNameAssignment_1()); }
)

	rule__OperationContextDeclCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContextDeclCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getOperationContextDeclCSAccess().getLeftParenthesisKeyword_2()); }
)

	rule__OperationContextDeclCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContextDeclCS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getGroup_3()); }
(rule__OperationContextDeclCS__Group_3__0)?
{ after(grammarAccess.getOperationContextDeclCSAccess().getGroup_3()); }
)

	rule__OperationContextDeclCS__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContextDeclCS__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getOperationContextDeclCSAccess().getRightParenthesisKeyword_4()); }
)

	rule__OperationContextDeclCS__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContextDeclCS__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getColonKeyword_5()); }

	':' 

{ after(grammarAccess.getOperationContextDeclCSAccess().getColonKeyword_5()); }
)

	rule__OperationContextDeclCS__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContextDeclCS__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getTypeAssignment_6()); }
(rule__OperationContextDeclCS__TypeAssignment_6)?
{ after(grammarAccess.getOperationContextDeclCSAccess().getTypeAssignment_6()); }
)

	rule__OperationContextDeclCS__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContextDeclCS__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getAlternatives_7()); }
(rule__OperationContextDeclCS__Alternatives_7)*
{ after(grammarAccess.getOperationContextDeclCSAccess().getAlternatives_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__OperationContextDeclCS__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getParametersAssignment_3_0()); }
(rule__OperationContextDeclCS__ParametersAssignment_3_0)
{ after(grammarAccess.getOperationContextDeclCSAccess().getParametersAssignment_3_0()); }
)

	rule__OperationContextDeclCS__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContextDeclCS__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getGroup_3_1()); }
(rule__OperationContextDeclCS__Group_3_1__0)*
{ after(grammarAccess.getOperationContextDeclCSAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationContextDeclCS__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getOperationContextDeclCSAccess().getCommaKeyword_3_1_0()); }
)

	rule__OperationContextDeclCS__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContextDeclCS__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getParametersAssignment_3_1_1()); }
(rule__OperationContextDeclCS__ParametersAssignment_3_1_1)
{ after(grammarAccess.getOperationContextDeclCSAccess().getParametersAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterCSAccess().getNameAssignment_0()); }
(rule__ParameterCS__NameAssignment_0)
{ after(grammarAccess.getParameterCSAccess().getNameAssignment_0()); }
)

	rule__ParameterCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterCSAccess().getGroup_1()); }
(rule__ParameterCS__Group_1__0)?
{ after(grammarAccess.getParameterCSAccess().getGroup_1()); }
)

	rule__ParameterCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterCSAccess().getGroup_2()); }
(rule__ParameterCS__Group_2__0)?
{ after(grammarAccess.getParameterCSAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParameterCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterCSAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getParameterCSAccess().getColonKeyword_1_0()); }
)

	rule__ParameterCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterCSAccess().getTypeAssignment_1_1()); }
(rule__ParameterCS__TypeAssignment_1_1)
{ after(grammarAccess.getParameterCSAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterCS__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterCSAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getParameterCSAccess().getEqualsSignKeyword_2_0()); }
)

	rule__ParameterCS__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterCS__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterCSAccess().getInitExpressionAssignment_2_1()); }
(rule__ParameterCS__InitExpressionAssignment_2_1)
{ after(grammarAccess.getParameterCSAccess().getInitExpressionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PreCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreCSAccess().getPreKeyword_0()); }

	'pre' 

{ after(grammarAccess.getPreCSAccess().getPreKeyword_0()); }
)

	rule__PreCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PreCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreCSAccess().getConstraintNameAssignment_1()); }
(rule__PreCS__ConstraintNameAssignment_1)?
{ after(grammarAccess.getPreCSAccess().getConstraintNameAssignment_1()); }
)

	rule__PreCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PreCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreCSAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getPreCSAccess().getColonKeyword_2()); }
)

	rule__PreCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__PreCS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreCSAccess().getExpressionAssignment_3()); }
(rule__PreCS__ExpressionAssignment_3)
{ after(grammarAccess.getPreCSAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PostCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCSAccess().getPostKeyword_0()); }

	'post' 

{ after(grammarAccess.getPostCSAccess().getPostKeyword_0()); }
)

	rule__PostCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PostCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCSAccess().getConstraintNameAssignment_1()); }
(rule__PostCS__ConstraintNameAssignment_1)?
{ after(grammarAccess.getPostCSAccess().getConstraintNameAssignment_1()); }
)

	rule__PostCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PostCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCSAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getPostCSAccess().getColonKeyword_2()); }
)

	rule__PostCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__PostCS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCSAccess().getExpressionAssignment_3()); }
(rule__PostCS__ExpressionAssignment_3)
{ after(grammarAccess.getPostCSAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BodyCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyCSAccess().getBodyKeyword_0()); }

	'body' 

{ after(grammarAccess.getBodyCSAccess().getBodyKeyword_0()); }
)

	rule__BodyCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BodyCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyCSAccess().getConstraintNameAssignment_1()); }
(rule__BodyCS__ConstraintNameAssignment_1)?
{ after(grammarAccess.getBodyCSAccess().getConstraintNameAssignment_1()); }
)

	rule__BodyCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__BodyCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyCSAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getBodyCSAccess().getColonKeyword_2()); }
)

	rule__BodyCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__BodyCS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyCSAccess().getExpressionAssignment_3()); }
(rule__BodyCS__ExpressionAssignment_3)
{ after(grammarAccess.getBodyCSAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PreExpCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreExpCSAccess().getIndexExpCSParserRuleCall_0()); }
	ruleindexExpCS
{ after(grammarAccess.getPreExpCSAccess().getIndexExpCSParserRuleCall_0()); }
)

	rule__PreExpCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PreExpCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreExpCSAccess().getGroup_1()); }
(rule__PreExpCS__Group_1__0)?
{ after(grammarAccess.getPreExpCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PreExpCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreExpCSAccess().getUnaryExpressionCSSourceAction_1_0()); }
(

)
{ after(grammarAccess.getPreExpCSAccess().getUnaryExpressionCSSourceAction_1_0()); }
)

	rule__PreExpCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PreExpCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreExpCSAccess().getCommercialAtKeyword_1_1()); }

	'@' 

{ after(grammarAccess.getPreExpCSAccess().getCommercialAtKeyword_1_1()); }
)

	rule__PreExpCS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PreExpCS__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreExpCSAccess().getOpAssignment_1_2()); }
(rule__PreExpCS__OpAssignment_1_2)
{ after(grammarAccess.getPreExpCSAccess().getOpAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OclMessageExpCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageExpCSAccess().getSourceAssignment_0()); }
(rule__OclMessageExpCS__SourceAssignment_0)
{ after(grammarAccess.getOclMessageExpCSAccess().getSourceAssignment_0()); }
)

	rule__OclMessageExpCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OclMessageExpCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageExpCSAccess().getOpAssignment_1()); }
(rule__OclMessageExpCS__OpAssignment_1)
{ after(grammarAccess.getOclMessageExpCSAccess().getOpAssignment_1()); }
)

	rule__OclMessageExpCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OclMessageExpCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageExpCSAccess().getMessageNameAssignment_2()); }
(rule__OclMessageExpCS__MessageNameAssignment_2)
{ after(grammarAccess.getOclMessageExpCSAccess().getMessageNameAssignment_2()); }
)

	rule__OclMessageExpCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__OclMessageExpCS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageExpCSAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getOclMessageExpCSAccess().getLeftParenthesisKeyword_3()); }
)

	rule__OclMessageExpCS__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__OclMessageExpCS__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageExpCSAccess().getGroup_4()); }
(rule__OclMessageExpCS__Group_4__0)?
{ after(grammarAccess.getOclMessageExpCSAccess().getGroup_4()); }
)

	rule__OclMessageExpCS__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__OclMessageExpCS__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageExpCSAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getOclMessageExpCSAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__OclMessageExpCS__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageExpCSAccess().getArgumentsAssignment_4_0()); }
(rule__OclMessageExpCS__ArgumentsAssignment_4_0)
{ after(grammarAccess.getOclMessageExpCSAccess().getArgumentsAssignment_4_0()); }
)

	rule__OclMessageExpCS__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OclMessageExpCS__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageExpCSAccess().getGroup_4_1()); }
(rule__OclMessageExpCS__Group_4_1__0)*
{ after(grammarAccess.getOclMessageExpCSAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OclMessageExpCS__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageExpCSAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getOclMessageExpCSAccess().getCommaKeyword_4_1_0()); }
)

	rule__OclMessageExpCS__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OclMessageExpCS__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageExpCSAccess().getArgumentsAssignment_4_1_1()); }
(rule__OclMessageExpCS__ArgumentsAssignment_4_1_1)
{ after(grammarAccess.getOclMessageExpCSAccess().getArgumentsAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OclMessageArgCS__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageArgCSAccess().getOclMessageArgCSAction_0_0()); }
(

)
{ after(grammarAccess.getOclMessageArgCSAccess().getOclMessageArgCSAction_0_0()); }
)

	rule__OclMessageArgCS__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OclMessageArgCS__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageArgCSAccess().getQuestionMarkKeyword_0_1()); }

	'?' 

{ after(grammarAccess.getOclMessageArgCSAccess().getQuestionMarkKeyword_0_1()); }
)

	rule__OclMessageArgCS__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OclMessageArgCS__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageArgCSAccess().getGroup_0_2()); }
(rule__OclMessageArgCS__Group_0_2__0)?
{ after(grammarAccess.getOclMessageArgCSAccess().getGroup_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OclMessageArgCS__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageArgCSAccess().getColonKeyword_0_2_0()); }

	':' 

{ after(grammarAccess.getOclMessageArgCSAccess().getColonKeyword_0_2_0()); }
)

	rule__OclMessageArgCS__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OclMessageArgCS__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageArgCSAccess().getTypeAssignment_0_2_1()); }
(rule__OclMessageArgCS__TypeAssignment_0_2_1)
{ after(grammarAccess.getOclMessageArgCSAccess().getTypeAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__REAL_LITERAL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREAL_LITERALAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getREAL_LITERALAccess().getINTTerminalRuleCall_0()); }
)

	rule__REAL_LITERAL__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__REAL_LITERAL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREAL_LITERALAccess().getAlternatives_1()); }
(rule__REAL_LITERAL__Alternatives_1)
{ after(grammarAccess.getREAL_LITERALAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__REAL_LITERAL__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREAL_LITERALAccess().getFullStopKeyword_1_0_0()); }

	'.' 

{ after(grammarAccess.getREAL_LITERALAccess().getFullStopKeyword_1_0_0()); }
)

	rule__REAL_LITERAL__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__REAL_LITERAL__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREAL_LITERALAccess().getINTTerminalRuleCall_1_0_1()); }
	RULE_INT
{ after(grammarAccess.getREAL_LITERALAccess().getINTTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__REAL_LITERAL__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREAL_LITERALAccess().getGroup_1_1_0()); }
(rule__REAL_LITERAL__Group_1_1_0__0)?
{ after(grammarAccess.getREAL_LITERALAccess().getGroup_1_1_0()); }
)

	rule__REAL_LITERAL__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__REAL_LITERAL__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREAL_LITERALAccess().getAlternatives_1_1_1()); }
(rule__REAL_LITERAL__Alternatives_1_1_1)
{ after(grammarAccess.getREAL_LITERALAccess().getAlternatives_1_1_1()); }
)

	rule__REAL_LITERAL__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__REAL_LITERAL__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREAL_LITERALAccess().getAlternatives_1_1_2()); }
(rule__REAL_LITERAL__Alternatives_1_1_2)?
{ after(grammarAccess.getREAL_LITERALAccess().getAlternatives_1_1_2()); }
)

	rule__REAL_LITERAL__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__REAL_LITERAL__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREAL_LITERALAccess().getINTTerminalRuleCall_1_1_3()); }
	RULE_INT
{ after(grammarAccess.getREAL_LITERALAccess().getINTTerminalRuleCall_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__REAL_LITERAL__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREAL_LITERALAccess().getFullStopKeyword_1_1_0_0()); }

	'.' 

{ after(grammarAccess.getREAL_LITERALAccess().getFullStopKeyword_1_1_0_0()); }
)

	rule__REAL_LITERAL__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__REAL_LITERAL__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREAL_LITERALAccess().getINTTerminalRuleCall_1_1_0_1()); }
	RULE_INT
{ after(grammarAccess.getREAL_LITERALAccess().getINTTerminalRuleCall_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PathNameCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathNameCSAccess().getSimpleNamesAssignment_0()); }
(rule__PathNameCS__SimpleNamesAssignment_0)
{ after(grammarAccess.getPathNameCSAccess().getSimpleNamesAssignment_0()); }
)

	rule__PathNameCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PathNameCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathNameCSAccess().getGroup_1()); }
(rule__PathNameCS__Group_1__0)*
{ after(grammarAccess.getPathNameCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PathNameCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathNameCSAccess().getColonColonKeyword_1_0()); }

	'::' 

{ after(grammarAccess.getPathNameCSAccess().getColonColonKeyword_1_0()); }
)

	rule__PathNameCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PathNameCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathNameCSAccess().getSimpleNamesAssignment_1_1()); }
(rule__PathNameCS__SimpleNamesAssignment_1_1)
{ after(grammarAccess.getPathNameCSAccess().getSimpleNamesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CollectionTypeCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeCSAccess().getValueAssignment_0()); }
(rule__CollectionTypeCS__ValueAssignment_0)
{ after(grammarAccess.getCollectionTypeCSAccess().getValueAssignment_0()); }
)

	rule__CollectionTypeCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionTypeCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeCSAccess().getGroup_1()); }
(rule__CollectionTypeCS__Group_1__0)?
{ after(grammarAccess.getCollectionTypeCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CollectionTypeCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeCSAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getCollectionTypeCSAccess().getLeftParenthesisKeyword_1_0()); }
)

	rule__CollectionTypeCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionTypeCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeCSAccess().getTypeCSAssignment_1_1()); }
(rule__CollectionTypeCS__TypeCSAssignment_1_1)
{ after(grammarAccess.getCollectionTypeCSAccess().getTypeCSAssignment_1_1()); }
)

	rule__CollectionTypeCS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionTypeCS__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeCSAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getCollectionTypeCSAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TupleTypeCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeCSAccess().getValueAssignment_0()); }
(rule__TupleTypeCS__ValueAssignment_0)
{ after(grammarAccess.getTupleTypeCSAccess().getValueAssignment_0()); }
)

	rule__TupleTypeCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleTypeCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeCSAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTupleTypeCSAccess().getLeftParenthesisKeyword_1()); }
)

	rule__TupleTypeCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleTypeCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeCSAccess().getGroup_2()); }
(rule__TupleTypeCS__Group_2__0)?
{ after(grammarAccess.getTupleTypeCSAccess().getGroup_2()); }
)

	rule__TupleTypeCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleTypeCS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeCSAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getTupleTypeCSAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TupleTypeCS__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeCSAccess().getPartAssignment_2_0()); }
(rule__TupleTypeCS__PartAssignment_2_0)
{ after(grammarAccess.getTupleTypeCSAccess().getPartAssignment_2_0()); }
)

	rule__TupleTypeCS__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleTypeCS__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeCSAccess().getGroup_2_1()); }
(rule__TupleTypeCS__Group_2_1__0)*
{ after(grammarAccess.getTupleTypeCSAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TupleTypeCS__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeCSAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getTupleTypeCSAccess().getCommaKeyword_2_1_0()); }
)

	rule__TupleTypeCS__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleTypeCS__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeCSAccess().getPartAssignment_2_1_1()); }
(rule__TupleTypeCS__PartAssignment_2_1_1)
{ after(grammarAccess.getTupleTypeCSAccess().getPartAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TuplePartCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTuplePartCSAccess().getNameAssignment_0()); }
(rule__TuplePartCS__NameAssignment_0)
{ after(grammarAccess.getTuplePartCSAccess().getNameAssignment_0()); }
)

	rule__TuplePartCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TuplePartCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTuplePartCSAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getTuplePartCSAccess().getColonKeyword_1()); }
)

	rule__TuplePartCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__TuplePartCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTuplePartCSAccess().getTypeAssignment_2()); }
(rule__TuplePartCS__TypeAssignment_2)
{ after(grammarAccess.getTuplePartCSAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CollectionLiteralExpCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralExpCSAccess().getCollectionTypeCSParserRuleCall_0()); }
	rulecollectionTypeCS
{ after(grammarAccess.getCollectionLiteralExpCSAccess().getCollectionTypeCSParserRuleCall_0()); }
)

	rule__CollectionLiteralExpCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionLiteralExpCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_1()); }
(rule__CollectionLiteralExpCS__Group_1__0)?
{ after(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CollectionLiteralExpCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralExpCSAccess().getLeftCurlyBracketKeyword_1_0()); }

	'{' 

{ after(grammarAccess.getCollectionLiteralExpCSAccess().getLeftCurlyBracketKeyword_1_0()); }
)

	rule__CollectionLiteralExpCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionLiteralExpCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_1_1()); }
(rule__CollectionLiteralExpCS__Group_1_1__0)?
{ after(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_1_1()); }
)

	rule__CollectionLiteralExpCS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionLiteralExpCS__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralExpCSAccess().getRightCurlyBracketKeyword_1_2()); }

	'}' 

{ after(grammarAccess.getCollectionLiteralExpCSAccess().getRightCurlyBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CollectionLiteralExpCS__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralExpCSAccess().getCollectionLiteralPartsAssignment_1_1_0()); }
(rule__CollectionLiteralExpCS__CollectionLiteralPartsAssignment_1_1_0)
{ after(grammarAccess.getCollectionLiteralExpCSAccess().getCollectionLiteralPartsAssignment_1_1_0()); }
)

	rule__CollectionLiteralExpCS__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionLiteralExpCS__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_1_1_1()); }
(rule__CollectionLiteralExpCS__Group_1_1_1__0)*
{ after(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CollectionLiteralExpCS__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralExpCSAccess().getCommaKeyword_1_1_1_0()); }

	',' 

{ after(grammarAccess.getCollectionLiteralExpCSAccess().getCommaKeyword_1_1_1_0()); }
)

	rule__CollectionLiteralExpCS__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionLiteralExpCS__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralExpCSAccess().getCollectionLiteralPartsAssignment_1_1_1_1()); }
(rule__CollectionLiteralExpCS__CollectionLiteralPartsAssignment_1_1_1_1)
{ after(grammarAccess.getCollectionLiteralExpCSAccess().getCollectionLiteralPartsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CollectionLiteralPartCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralPartCSAccess().getExpressionCSAssignment_0()); }
(rule__CollectionLiteralPartCS__ExpressionCSAssignment_0)
{ after(grammarAccess.getCollectionLiteralPartCSAccess().getExpressionCSAssignment_0()); }
)

	rule__CollectionLiteralPartCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionLiteralPartCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralPartCSAccess().getGroup_1()); }
(rule__CollectionLiteralPartCS__Group_1__0)?
{ after(grammarAccess.getCollectionLiteralPartCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CollectionLiteralPartCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralPartCSAccess().getFullStopFullStopKeyword_1_0()); }

	'..' 

{ after(grammarAccess.getCollectionLiteralPartCSAccess().getFullStopFullStopKeyword_1_0()); }
)

	rule__CollectionLiteralPartCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionLiteralPartCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralPartCSAccess().getLastExpressionCSAssignment_1_1()); }
(rule__CollectionLiteralPartCS__LastExpressionCSAssignment_1_1)
{ after(grammarAccess.getCollectionLiteralPartCSAccess().getLastExpressionCSAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TupleLiteralExpCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralExpCSAccess().getTupleLiteralExpCSAction_0()); }
(

)
{ after(grammarAccess.getTupleLiteralExpCSAccess().getTupleLiteralExpCSAction_0()); }
)

	rule__TupleLiteralExpCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleLiteralExpCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralExpCSAccess().getTupleKeyword_1()); }

	'Tuple' 

{ after(grammarAccess.getTupleLiteralExpCSAccess().getTupleKeyword_1()); }
)

	rule__TupleLiteralExpCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleLiteralExpCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralExpCSAccess().getGroup_2()); }
(rule__TupleLiteralExpCS__Group_2__0)?
{ after(grammarAccess.getTupleLiteralExpCSAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TupleLiteralExpCS__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralExpCSAccess().getLeftCurlyBracketKeyword_2_0()); }

	'{' 

{ after(grammarAccess.getTupleLiteralExpCSAccess().getLeftCurlyBracketKeyword_2_0()); }
)

	rule__TupleLiteralExpCS__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleLiteralExpCS__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralExpCSAccess().getPartAssignment_2_1()); }
(rule__TupleLiteralExpCS__PartAssignment_2_1)
{ after(grammarAccess.getTupleLiteralExpCSAccess().getPartAssignment_2_1()); }
)

	rule__TupleLiteralExpCS__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleLiteralExpCS__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralExpCSAccess().getGroup_2_2()); }
(rule__TupleLiteralExpCS__Group_2_2__0)*
{ after(grammarAccess.getTupleLiteralExpCSAccess().getGroup_2_2()); }
)

	rule__TupleLiteralExpCS__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleLiteralExpCS__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralExpCSAccess().getRightCurlyBracketKeyword_2_3()); }

	'}' 

{ after(grammarAccess.getTupleLiteralExpCSAccess().getRightCurlyBracketKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TupleLiteralExpCS__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralExpCSAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getTupleLiteralExpCSAccess().getCommaKeyword_2_2_0()); }
)

	rule__TupleLiteralExpCS__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleLiteralExpCS__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralExpCSAccess().getPartAssignment_2_2_1()); }
(rule__TupleLiteralExpCS__PartAssignment_2_2_1)
{ after(grammarAccess.getTupleLiteralExpCSAccess().getPartAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TupleLiteralPartCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralPartCSAccess().getNameAssignment_0()); }
(rule__TupleLiteralPartCS__NameAssignment_0)
{ after(grammarAccess.getTupleLiteralPartCSAccess().getNameAssignment_0()); }
)

	rule__TupleLiteralPartCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleLiteralPartCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralPartCSAccess().getGroup_1()); }
(rule__TupleLiteralPartCS__Group_1__0)?
{ after(grammarAccess.getTupleLiteralPartCSAccess().getGroup_1()); }
)

	rule__TupleLiteralPartCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleLiteralPartCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralPartCSAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getTupleLiteralPartCSAccess().getEqualsSignKeyword_2()); }
)

	rule__TupleLiteralPartCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleLiteralPartCS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralPartCSAccess().getInitExpressionAssignment_3()); }
(rule__TupleLiteralPartCS__InitExpressionAssignment_3)
{ after(grammarAccess.getTupleLiteralPartCSAccess().getInitExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TupleLiteralPartCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralPartCSAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getTupleLiteralPartCSAccess().getColonKeyword_1_0()); }
)

	rule__TupleLiteralPartCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleLiteralPartCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralPartCSAccess().getTypeAssignment_1_1()); }
(rule__TupleLiteralPartCS__TypeAssignment_1_1)
{ after(grammarAccess.getTupleLiteralPartCSAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnlimitedNaturalLiteralExpCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSAction_0()); }
(

)
{ after(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSAction_0()); }
)

	rule__UnlimitedNaturalLiteralExpCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__UnlimitedNaturalLiteralExpCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InvalidLiteralExpCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvalidLiteralExpCSAccess().getInvalidLiteralExpCSAction_0()); }
(

)
{ after(grammarAccess.getInvalidLiteralExpCSAccess().getInvalidLiteralExpCSAction_0()); }
)

	rule__InvalidLiteralExpCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InvalidLiteralExpCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvalidLiteralExpCSAccess().getInvalidKeyword_1()); }

	'invalid' 

{ after(grammarAccess.getInvalidLiteralExpCSAccess().getInvalidKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NullLiteralExpCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralExpCSAccess().getNullLiteralExpCSAction_0()); }
(

)
{ after(grammarAccess.getNullLiteralExpCSAccess().getNullLiteralExpCSAction_0()); }
)

	rule__NullLiteralExpCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__NullLiteralExpCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralExpCSAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getNullLiteralExpCSAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImpliesCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesCSAccess().getXorCSParserRuleCall_0()); }
	rulexorCS
{ after(grammarAccess.getImpliesCSAccess().getXorCSParserRuleCall_0()); }
)

	rule__ImpliesCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesCSAccess().getGroup_1()); }
(rule__ImpliesCS__Group_1__0)?
{ after(grammarAccess.getImpliesCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImpliesCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
(

)
{ after(grammarAccess.getImpliesCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
)

	rule__ImpliesCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesCSAccess().getOpAssignment_1_1()); }
(rule__ImpliesCS__OpAssignment_1_1)
{ after(grammarAccess.getImpliesCSAccess().getOpAssignment_1_1()); }
)

	rule__ImpliesCS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesCS__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesCSAccess().getArgumentAssignment_1_2()); }
(rule__ImpliesCS__ArgumentAssignment_1_2)
{ after(grammarAccess.getImpliesCSAccess().getArgumentAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XorCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorCSAccess().getOrCSParserRuleCall_0()); }
	ruleorCS
{ after(grammarAccess.getXorCSAccess().getOrCSParserRuleCall_0()); }
)

	rule__XorCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XorCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorCSAccess().getGroup_1()); }
(rule__XorCS__Group_1__0)?
{ after(grammarAccess.getXorCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XorCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
(

)
{ after(grammarAccess.getXorCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
)

	rule__XorCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XorCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorCSAccess().getOpAssignment_1_1()); }
(rule__XorCS__OpAssignment_1_1)
{ after(grammarAccess.getXorCSAccess().getOpAssignment_1_1()); }
)

	rule__XorCS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XorCS__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorCSAccess().getArgumentAssignment_1_2()); }
(rule__XorCS__ArgumentAssignment_1_2)
{ after(grammarAccess.getXorCSAccess().getArgumentAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrCSAccess().getAndCSParserRuleCall_0()); }
	ruleandCS
{ after(grammarAccess.getOrCSAccess().getAndCSParserRuleCall_0()); }
)

	rule__OrCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OrCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrCSAccess().getGroup_1()); }
(rule__OrCS__Group_1__0)?
{ after(grammarAccess.getOrCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
(

)
{ after(grammarAccess.getOrCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
)

	rule__OrCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OrCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrCSAccess().getOpAssignment_1_1()); }
(rule__OrCS__OpAssignment_1_1)
{ after(grammarAccess.getOrCSAccess().getOpAssignment_1_1()); }
)

	rule__OrCS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OrCS__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrCSAccess().getArgumentAssignment_1_2()); }
(rule__OrCS__ArgumentAssignment_1_2)
{ after(grammarAccess.getOrCSAccess().getArgumentAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndCSAccess().getEqualityCSParserRuleCall_0()); }
	ruleequalityCS
{ after(grammarAccess.getAndCSAccess().getEqualityCSParserRuleCall_0()); }
)

	rule__AndCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AndCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndCSAccess().getGroup_1()); }
(rule__AndCS__Group_1__0)?
{ after(grammarAccess.getAndCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
(

)
{ after(grammarAccess.getAndCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
)

	rule__AndCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AndCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndCSAccess().getOpAssignment_1_1()); }
(rule__AndCS__OpAssignment_1_1)
{ after(grammarAccess.getAndCSAccess().getOpAssignment_1_1()); }
)

	rule__AndCS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AndCS__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndCSAccess().getArgumentAssignment_1_2()); }
(rule__AndCS__ArgumentAssignment_1_2)
{ after(grammarAccess.getAndCSAccess().getArgumentAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EqualityCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityCSAccess().getRelationalCSParserRuleCall_0()); }
	rulerelationalCS
{ after(grammarAccess.getEqualityCSAccess().getRelationalCSParserRuleCall_0()); }
)

	rule__EqualityCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityCSAccess().getGroup_1()); }
(rule__EqualityCS__Group_1__0)?
{ after(grammarAccess.getEqualityCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
(

)
{ after(grammarAccess.getEqualityCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
)

	rule__EqualityCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityCSAccess().getOpAssignment_1_1()); }
(rule__EqualityCS__OpAssignment_1_1)
{ after(grammarAccess.getEqualityCSAccess().getOpAssignment_1_1()); }
)

	rule__EqualityCS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityCS__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityCSAccess().getArgumentAssignment_1_2()); }
(rule__EqualityCS__ArgumentAssignment_1_2)
{ after(grammarAccess.getEqualityCSAccess().getArgumentAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RelationalCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalCSAccess().getAdditiveCSParserRuleCall_0()); }
	ruleadditiveCS
{ after(grammarAccess.getRelationalCSAccess().getAdditiveCSParserRuleCall_0()); }
)

	rule__RelationalCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalCSAccess().getGroup_1()); }
(rule__RelationalCS__Group_1__0)?
{ after(grammarAccess.getRelationalCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
(

)
{ after(grammarAccess.getRelationalCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
)

	rule__RelationalCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalCSAccess().getOpAssignment_1_1()); }
(rule__RelationalCS__OpAssignment_1_1)
{ after(grammarAccess.getRelationalCSAccess().getOpAssignment_1_1()); }
)

	rule__RelationalCS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalCS__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalCSAccess().getArgumentAssignment_1_2()); }
(rule__RelationalCS__ArgumentAssignment_1_2)
{ after(grammarAccess.getRelationalCSAccess().getArgumentAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AdditiveCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveCSAccess().getMultiplicativeCSParserRuleCall_0()); }
	rulemultiplicativeCS
{ after(grammarAccess.getAdditiveCSAccess().getMultiplicativeCSParserRuleCall_0()); }
)

	rule__AdditiveCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveCSAccess().getGroup_1()); }
(rule__AdditiveCS__Group_1__0)?
{ after(grammarAccess.getAdditiveCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
(

)
{ after(grammarAccess.getAdditiveCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
)

	rule__AdditiveCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveCSAccess().getOpAssignment_1_1()); }
(rule__AdditiveCS__OpAssignment_1_1)
{ after(grammarAccess.getAdditiveCSAccess().getOpAssignment_1_1()); }
)

	rule__AdditiveCS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveCS__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveCSAccess().getArgumentAssignment_1_2()); }
(rule__AdditiveCS__ArgumentAssignment_1_2)
{ after(grammarAccess.getAdditiveCSAccess().getArgumentAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MultiplicativeCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeCSAccess().getUnaryCSParserRuleCall_0()); }
	ruleunaryCS
{ after(grammarAccess.getMultiplicativeCSAccess().getUnaryCSParserRuleCall_0()); }
)

	rule__MultiplicativeCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeCSAccess().getGroup_1()); }
(rule__MultiplicativeCS__Group_1__0)?
{ after(grammarAccess.getMultiplicativeCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
(

)
{ after(grammarAccess.getMultiplicativeCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
)

	rule__MultiplicativeCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeCSAccess().getOpAssignment_1_1()); }
(rule__MultiplicativeCS__OpAssignment_1_1)
{ after(grammarAccess.getMultiplicativeCSAccess().getOpAssignment_1_1()); }
)

	rule__MultiplicativeCS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeCS__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeCSAccess().getArgumentAssignment_1_2()); }
(rule__MultiplicativeCS__ArgumentAssignment_1_2)
{ after(grammarAccess.getMultiplicativeCSAccess().getArgumentAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryCSAccess().getUnaryExpressionCSAction_1_0()); }
(

)
{ after(grammarAccess.getUnaryCSAccess().getUnaryExpressionCSAction_1_0()); }
)

	rule__UnaryCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryCSAccess().getOpAssignment_1_1()); }
(rule__UnaryCS__OpAssignment_1_1)
{ after(grammarAccess.getUnaryCSAccess().getOpAssignment_1_1()); }
)

	rule__UnaryCS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryCS__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryCSAccess().getSourceAssignment_1_2()); }
(rule__UnaryCS__SourceAssignment_1_2)
{ after(grammarAccess.getUnaryCSAccess().getSourceAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CallingExpCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallingExpCSAccess().getCallExpCSParserRuleCall_0()); }
	rulecallExpCS
{ after(grammarAccess.getCallingExpCSAccess().getCallExpCSParserRuleCall_0()); }
)

	rule__CallingExpCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CallingExpCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallingExpCSAccess().getGroup_1()); }
(rule__CallingExpCS__Group_1__0)?
{ after(grammarAccess.getCallingExpCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CallingExpCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallingExpCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
(

)
{ after(grammarAccess.getCallingExpCSAccess().getBinaryExpressionCSSourceAction_1_0()); }
)

	rule__CallingExpCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CallingExpCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallingExpCSAccess().getOpAssignment_1_1()); }
(rule__CallingExpCS__OpAssignment_1_1)
{ after(grammarAccess.getCallingExpCSAccess().getOpAssignment_1_1()); }
)

	rule__CallingExpCS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CallingExpCS__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallingExpCSAccess().getArgumentAssignment_1_2()); }
(rule__CallingExpCS__ArgumentAssignment_1_2)
{ after(grammarAccess.getCallingExpCSAccess().getArgumentAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IteratorVariableCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorVariableCSAccess().getNameAssignment_0()); }
(rule__IteratorVariableCS__NameAssignment_0)
{ after(grammarAccess.getIteratorVariableCSAccess().getNameAssignment_0()); }
)

	rule__IteratorVariableCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__IteratorVariableCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorVariableCSAccess().getGroup_1()); }
(rule__IteratorVariableCS__Group_1__0)?
{ after(grammarAccess.getIteratorVariableCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IteratorVariableCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorVariableCSAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getIteratorVariableCSAccess().getColonKeyword_1_0()); }
)

	rule__IteratorVariableCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__IteratorVariableCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorVariableCSAccess().getTypeAssignment_1_1()); }
(rule__IteratorVariableCS__TypeAssignment_1_1)
{ after(grammarAccess.getIteratorVariableCSAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IteratorAccumulatorCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccumulatorCSAccess().getNameAssignment_0()); }
(rule__IteratorAccumulatorCS__NameAssignment_0)
{ after(grammarAccess.getIteratorAccumulatorCSAccess().getNameAssignment_0()); }
)

	rule__IteratorAccumulatorCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__IteratorAccumulatorCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccumulatorCSAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getIteratorAccumulatorCSAccess().getColonKeyword_1()); }
)

	rule__IteratorAccumulatorCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__IteratorAccumulatorCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccumulatorCSAccess().getTypeAssignment_2()); }
(rule__IteratorAccumulatorCS__TypeAssignment_2)
{ after(grammarAccess.getIteratorAccumulatorCSAccess().getTypeAssignment_2()); }
)

	rule__IteratorAccumulatorCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__IteratorAccumulatorCS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccumulatorCSAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getIteratorAccumulatorCSAccess().getEqualsSignKeyword_3()); }
)

	rule__IteratorAccumulatorCS__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__IteratorAccumulatorCS__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccumulatorCSAccess().getInitExpressionAssignment_4()); }
(rule__IteratorAccumulatorCS__InitExpressionAssignment_4)
{ after(grammarAccess.getIteratorAccumulatorCSAccess().getInitExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CallExpCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getPreExpCSParserRuleCall_0()); }
	rulepreExpCS
{ after(grammarAccess.getCallExpCSAccess().getPreExpCSParserRuleCall_0()); }
)

	rule__CallExpCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getGroup_1()); }
(rule__CallExpCS__Group_1__0)?
{ after(grammarAccess.getCallExpCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CallExpCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getCallExpCSSourceAction_1_0()); }
(

)
{ after(grammarAccess.getCallExpCSAccess().getCallExpCSSourceAction_1_0()); }
)

	rule__CallExpCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getCallExpCSAccess().getLeftParenthesisKeyword_1_1()); }
)

	rule__CallExpCS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpCS__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getGroup_1_2()); }
(rule__CallExpCS__Group_1_2__0)?
{ after(grammarAccess.getCallExpCSAccess().getGroup_1_2()); }
)

	rule__CallExpCS__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpCS__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getGroup_1_3()); }
(rule__CallExpCS__Group_1_3__0)?
{ after(grammarAccess.getCallExpCSAccess().getGroup_1_3()); }
)

	rule__CallExpCS__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpCS__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getRightParenthesisKeyword_1_4()); }

	')' 

{ after(grammarAccess.getCallExpCSAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CallExpCS__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getVariable1Assignment_1_2_0()); }
(rule__CallExpCS__Variable1Assignment_1_2_0)
{ after(grammarAccess.getCallExpCSAccess().getVariable1Assignment_1_2_0()); }
)

	rule__CallExpCS__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpCS__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getAlternatives_1_2_1()); }
(rule__CallExpCS__Alternatives_1_2_1)?
{ after(grammarAccess.getCallExpCSAccess().getAlternatives_1_2_1()); }
)

	rule__CallExpCS__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpCS__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getVerticalLineKeyword_1_2_2()); }

	'|' 

{ after(grammarAccess.getCallExpCSAccess().getVerticalLineKeyword_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CallExpCS__Group_1_2_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getCommaKeyword_1_2_1_0_0()); }

	',' 

{ after(grammarAccess.getCallExpCSAccess().getCommaKeyword_1_2_1_0_0()); }
)

	rule__CallExpCS__Group_1_2_1_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpCS__Group_1_2_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getVariable2Assignment_1_2_1_0_1()); }
(rule__CallExpCS__Variable2Assignment_1_2_1_0_1)
{ after(grammarAccess.getCallExpCSAccess().getVariable2Assignment_1_2_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CallExpCS__Group_1_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getSemicolonKeyword_1_2_1_1_0()); }

	';' 

{ after(grammarAccess.getCallExpCSAccess().getSemicolonKeyword_1_2_1_1_0()); }
)

	rule__CallExpCS__Group_1_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpCS__Group_1_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getVariable2Assignment_1_2_1_1_1()); }
(rule__CallExpCS__Variable2Assignment_1_2_1_1_1)
{ after(grammarAccess.getCallExpCSAccess().getVariable2Assignment_1_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CallExpCS__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getArgumentsAssignment_1_3_0()); }
(rule__CallExpCS__ArgumentsAssignment_1_3_0)
{ after(grammarAccess.getCallExpCSAccess().getArgumentsAssignment_1_3_0()); }
)

	rule__CallExpCS__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpCS__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getGroup_1_3_1()); }
(rule__CallExpCS__Group_1_3_1__0)*
{ after(grammarAccess.getCallExpCSAccess().getGroup_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CallExpCS__Group_1_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getCommaKeyword_1_3_1_0()); }

	',' 

{ after(grammarAccess.getCallExpCSAccess().getCommaKeyword_1_3_1_0()); }
)

	rule__CallExpCS__Group_1_3_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpCS__Group_1_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getArgumentsAssignment_1_3_1_1()); }
(rule__CallExpCS__ArgumentsAssignment_1_3_1_1)
{ after(grammarAccess.getCallExpCSAccess().getArgumentsAssignment_1_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IndexExpCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexExpCSAccess().getMessageExpCSParserRuleCall_0()); }
	rulemessageExpCS
{ after(grammarAccess.getIndexExpCSAccess().getMessageExpCSParserRuleCall_0()); }
)

	rule__IndexExpCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexExpCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexExpCSAccess().getGroup_1()); }
(rule__IndexExpCS__Group_1__0)?
{ after(grammarAccess.getIndexExpCSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IndexExpCS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexExpCSAccess().getIndexExpCSSourceAction_1_0()); }
(

)
{ after(grammarAccess.getIndexExpCSAccess().getIndexExpCSSourceAction_1_0()); }
)

	rule__IndexExpCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexExpCS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexExpCSAccess().getLeftSquareBracketKeyword_1_1()); }

	'[' 

{ after(grammarAccess.getIndexExpCSAccess().getLeftSquareBracketKeyword_1_1()); }
)

	rule__IndexExpCS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexExpCS__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexExpCSAccess().getIndexesAssignment_1_2()); }
(rule__IndexExpCS__IndexesAssignment_1_2)
{ after(grammarAccess.getIndexExpCSAccess().getIndexesAssignment_1_2()); }
)

	rule__IndexExpCS__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexExpCS__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexExpCSAccess().getGroup_1_3()); }
(rule__IndexExpCS__Group_1_3__0)*
{ after(grammarAccess.getIndexExpCSAccess().getGroup_1_3()); }
)

	rule__IndexExpCS__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexExpCS__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexExpCSAccess().getRightSquareBracketKeyword_1_4()); }

	']' 

{ after(grammarAccess.getIndexExpCSAccess().getRightSquareBracketKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IndexExpCS__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexExpCSAccess().getCommaKeyword_1_3_0()); }

	',' 

{ after(grammarAccess.getIndexExpCSAccess().getCommaKeyword_1_3_0()); }
)

	rule__IndexExpCS__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexExpCS__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexExpCSAccess().getIndexesAssignment_1_3_1()); }
(rule__IndexExpCS__IndexesAssignment_1_3_1)
{ after(grammarAccess.getIndexExpCSAccess().getIndexesAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpCS__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpCSAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpCSAccess().getLeftParenthesisKeyword_3_0()); }
)

	rule__PrimaryExpCS__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpCS__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpCSAccess().getOclExpressionCSParserRuleCall_3_1()); }
	ruleOclExpressionCS
{ after(grammarAccess.getPrimaryExpCSAccess().getOclExpressionCSParserRuleCall_3_1()); }
)

	rule__PrimaryExpCS__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpCS__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpCSAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpCSAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfExpCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpCSAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfExpCSAccess().getIfKeyword_0()); }
)

	rule__IfExpCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpCSAccess().getConditionAssignment_1()); }
(rule__IfExpCS__ConditionAssignment_1)
{ after(grammarAccess.getIfExpCSAccess().getConditionAssignment_1()); }
)

	rule__IfExpCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpCSAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getIfExpCSAccess().getThenKeyword_2()); }
)

	rule__IfExpCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpCS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpCSAccess().getThenExpressionAssignment_3()); }
(rule__IfExpCS__ThenExpressionAssignment_3)
{ after(grammarAccess.getIfExpCSAccess().getThenExpressionAssignment_3()); }
)

	rule__IfExpCS__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpCS__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpCSAccess().getElseKeyword_4()); }

	'else' 

{ after(grammarAccess.getIfExpCSAccess().getElseKeyword_4()); }
)

	rule__IfExpCS__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpCS__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpCSAccess().getElseExpressionAssignment_5()); }
(rule__IfExpCS__ElseExpressionAssignment_5)
{ after(grammarAccess.getIfExpCSAccess().getElseExpressionAssignment_5()); }
)

	rule__IfExpCS__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpCS__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpCSAccess().getEndifKeyword_6()); }

	'endif' 

{ after(grammarAccess.getIfExpCSAccess().getEndifKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__LetExpCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpCSAccess().getLetKeyword_0()); }

	'let' 

{ after(grammarAccess.getLetExpCSAccess().getLetKeyword_0()); }
)

	rule__LetExpCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpCSAccess().getVariableAssignment_1()); }
(rule__LetExpCS__VariableAssignment_1)
{ after(grammarAccess.getLetExpCSAccess().getVariableAssignment_1()); }
)

	rule__LetExpCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpCSAccess().getGroup_2()); }
(rule__LetExpCS__Group_2__0)*
{ after(grammarAccess.getLetExpCSAccess().getGroup_2()); }
)

	rule__LetExpCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpCS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpCSAccess().getInKeyword_3()); }

	'in' 

{ after(grammarAccess.getLetExpCSAccess().getInKeyword_3()); }
)

	rule__LetExpCS__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpCS__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpCSAccess().getInAssignment_4()); }
(rule__LetExpCS__InAssignment_4)
{ after(grammarAccess.getLetExpCSAccess().getInAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LetExpCS__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpCSAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getLetExpCSAccess().getCommaKeyword_2_0()); }
)

	rule__LetExpCS__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpCS__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpCSAccess().getVariableAssignment_2_1()); }
(rule__LetExpCS__VariableAssignment_2_1)
{ after(grammarAccess.getLetExpCSAccess().getVariableAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetVariableCS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetVariableCSAccess().getNameAssignment_0()); }
(rule__LetVariableCS__NameAssignment_0)
{ after(grammarAccess.getLetVariableCSAccess().getNameAssignment_0()); }
)

	rule__LetVariableCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LetVariableCS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetVariableCSAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getLetVariableCSAccess().getColonKeyword_1()); }
)

	rule__LetVariableCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__LetVariableCS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetVariableCSAccess().getTypeAssignment_2()); }
(rule__LetVariableCS__TypeAssignment_2)
{ after(grammarAccess.getLetVariableCSAccess().getTypeAssignment_2()); }
)

	rule__LetVariableCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__LetVariableCS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetVariableCSAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getLetVariableCSAccess().getEqualsSignKeyword_3()); }
)

	rule__LetVariableCS__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__LetVariableCS__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetVariableCSAccess().getInitExpressionAssignment_4()); }
(rule__LetVariableCS__InitExpressionAssignment_4)
{ after(grammarAccess.getLetVariableCSAccess().getInitExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Model__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportCSParserRuleCall_0_0()); }
	ruleimportCS{ after(grammarAccess.getModelAccess().getImportsImportCSParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PackagesAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackagesPackageDeclarationCSParserRuleCall_1_0_0()); }
	rulepackageDeclarationCS{ after(grammarAccess.getModelAccess().getPackagesPackageDeclarationCSParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ContextsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getContextsContextDeclCSParserRuleCall_1_1_0()); }
	rulecontextDeclCS{ after(grammarAccess.getModelAccess().getContextsContextDeclCSParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportCS__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportCSAccess().getImportedNamespaceFQNParserRuleCall_1_0()); }
	ruleFQN{ after(grammarAccess.getImportCSAccess().getImportedNamespaceFQNParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclarationCS__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationCSAccess().getNamePathNameCSParserRuleCall_1_0()); }
	rulepathNameCS{ after(grammarAccess.getPackageDeclarationCSAccess().getNamePathNameCSParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclarationCS__ContextsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationCSAccess().getContextsContextDeclCSParserRuleCall_2_0()); }
	rulecontextDeclCS{ after(grammarAccess.getPackageDeclarationCSAccess().getContextsContextDeclCSParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyContextDeclCS__ContextNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getContextNamePathNameCSParserRuleCall_1_0()); }
	rulepathNameCS{ after(grammarAccess.getPropertyContextDeclCSAccess().getContextNamePathNameCSParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyContextDeclCS__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getTypeTypeCSParserRuleCall_3_0()); }
	ruletypeCS{ after(grammarAccess.getPropertyContextDeclCSAccess().getTypeTypeCSParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyContextDeclCS__InitAssignment_4_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getInitInitCSParserRuleCall_4_0_0_0()); }
	ruleinitCS{ after(grammarAccess.getPropertyContextDeclCSAccess().getInitInitCSParserRuleCall_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyContextDeclCS__DerAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getDerDerCSParserRuleCall_4_0_1_0()); }
	rulederCS{ after(grammarAccess.getPropertyContextDeclCSAccess().getDerDerCSParserRuleCall_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyContextDeclCS__DerAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getDerDerCSParserRuleCall_4_1_0_0()); }
	rulederCS{ after(grammarAccess.getPropertyContextDeclCSAccess().getDerDerCSParserRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyContextDeclCS__InitAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyContextDeclCSAccess().getInitInitCSParserRuleCall_4_1_1_0()); }
	ruleinitCS{ after(grammarAccess.getPropertyContextDeclCSAccess().getInitInitCSParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitCS__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitCSAccess().getExpressionOclExpressionCSParserRuleCall_2_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getInitCSAccess().getExpressionOclExpressionCSParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DerCS__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDerCSAccess().getExpressionOclExpressionCSParserRuleCall_2_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getDerCSAccess().getExpressionOclExpressionCSParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierContextDeclCS__SelfNameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierContextDeclCSAccess().getSelfNameSimpleNameCSParserRuleCall_1_0_0()); }
	rulesimpleNameCS{ after(grammarAccess.getClassifierContextDeclCSAccess().getSelfNameSimpleNameCSParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierContextDeclCS__ContextNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierContextDeclCSAccess().getContextNamePathNameCSParserRuleCall_2_0()); }
	rulepathNameCS{ after(grammarAccess.getClassifierContextDeclCSAccess().getContextNamePathNameCSParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierContextDeclCS__InvsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierContextDeclCSAccess().getInvsInvCSParserRuleCall_3_0_0()); }
	ruleinvCS{ after(grammarAccess.getClassifierContextDeclCSAccess().getInvsInvCSParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierContextDeclCS__DefsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierContextDeclCSAccess().getDefsDefCSParserRuleCall_3_1_0()); }
	ruledefCS{ after(grammarAccess.getClassifierContextDeclCSAccess().getDefsDefCSParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InvCS__ConstraintNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvCSAccess().getConstraintNameSimpleNameCSParserRuleCall_1_0()); }
	rulesimpleNameCS{ after(grammarAccess.getInvCSAccess().getConstraintNameSimpleNameCSParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InvCS__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvCSAccess().getExpressionOclExpressionCSParserRuleCall_3_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getInvCSAccess().getExpressionOclExpressionCSParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefCS__StaticAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getStaticStaticKeyword_0_0()); }
(
{ before(grammarAccess.getDefCSAccess().getStaticStaticKeyword_0_0()); }

	'static' 

{ after(grammarAccess.getDefCSAccess().getStaticStaticKeyword_0_0()); }
)

{ after(grammarAccess.getDefCSAccess().getStaticStaticKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefCS__ConstraintNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getConstraintNameSimpleNameCSParserRuleCall_2_0()); }
	rulesimpleNameCS{ after(grammarAccess.getDefCSAccess().getConstraintNameSimpleNameCSParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefCS__ConstrainedNameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getConstrainedNameSimpleNameCSParserRuleCall_4_0()); }
	rulesimpleNameCS{ after(grammarAccess.getDefCSAccess().getConstrainedNameSimpleNameCSParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefCS__ParametersAssignment_5_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getParametersParameterCSParserRuleCall_5_1_0_0()); }
	ruleparameterCS{ after(grammarAccess.getDefCSAccess().getParametersParameterCSParserRuleCall_5_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefCS__ParametersAssignment_5_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getParametersParameterCSParserRuleCall_5_1_1_1_0()); }
	ruleparameterCS{ after(grammarAccess.getDefCSAccess().getParametersParameterCSParserRuleCall_5_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefCS__TypeAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getTypeTypeCSParserRuleCall_7_0()); }
	ruletypeCS{ after(grammarAccess.getDefCSAccess().getTypeTypeCSParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefCS__ExpressionAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCSAccess().getExpressionOclExpressionCSParserRuleCall_9_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getDefCSAccess().getExpressionOclExpressionCSParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContextDeclCS__ContextNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getContextNamePathNameCSParserRuleCall_1_0()); }
	rulepathNameCS{ after(grammarAccess.getOperationContextDeclCSAccess().getContextNamePathNameCSParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContextDeclCS__ParametersAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getParametersParameterCSParserRuleCall_3_0_0()); }
	ruleparameterCS{ after(grammarAccess.getOperationContextDeclCSAccess().getParametersParameterCSParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContextDeclCS__ParametersAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getParametersParameterCSParserRuleCall_3_1_1_0()); }
	ruleparameterCS{ after(grammarAccess.getOperationContextDeclCSAccess().getParametersParameterCSParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContextDeclCS__TypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getTypeTypeCSParserRuleCall_6_0()); }
	ruletypeCS{ after(grammarAccess.getOperationContextDeclCSAccess().getTypeTypeCSParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContextDeclCS__PresAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getPresPreCSParserRuleCall_7_0_0()); }
	rulepreCS{ after(grammarAccess.getOperationContextDeclCSAccess().getPresPreCSParserRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContextDeclCS__PostsAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getPostsPostCSParserRuleCall_7_1_0()); }
	rulepostCS{ after(grammarAccess.getOperationContextDeclCSAccess().getPostsPostCSParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContextDeclCS__BodiesAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextDeclCSAccess().getBodiesBodyCSParserRuleCall_7_2_0()); }
	rulebodyCS{ after(grammarAccess.getOperationContextDeclCSAccess().getBodiesBodyCSParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterCS__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterCSAccess().getNameSimpleNameCSParserRuleCall_0_0()); }
	rulesimpleNameCS{ after(grammarAccess.getParameterCSAccess().getNameSimpleNameCSParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterCS__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterCSAccess().getTypeTypeCSParserRuleCall_1_1_0()); }
	ruletypeCS{ after(grammarAccess.getParameterCSAccess().getTypeTypeCSParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterCS__InitExpressionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterCSAccess().getInitExpressionOclExpressionCSParserRuleCall_2_1_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getParameterCSAccess().getInitExpressionOclExpressionCSParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreCS__ConstraintNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreCSAccess().getConstraintNameSimpleNameCSParserRuleCall_1_0()); }
	rulesimpleNameCS{ after(grammarAccess.getPreCSAccess().getConstraintNameSimpleNameCSParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreCS__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreCSAccess().getExpressionOclExpressionCSParserRuleCall_3_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getPreCSAccess().getExpressionOclExpressionCSParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostCS__ConstraintNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCSAccess().getConstraintNameSimpleNameCSParserRuleCall_1_0()); }
	rulesimpleNameCS{ after(grammarAccess.getPostCSAccess().getConstraintNameSimpleNameCSParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostCS__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCSAccess().getExpressionOclExpressionCSParserRuleCall_3_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getPostCSAccess().getExpressionOclExpressionCSParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BodyCS__ConstraintNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyCSAccess().getConstraintNameSimpleNameCSParserRuleCall_1_0()); }
	rulesimpleNameCS{ after(grammarAccess.getBodyCSAccess().getConstraintNameSimpleNameCSParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BodyCS__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyCSAccess().getExpressionOclExpressionCSParserRuleCall_3_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getBodyCSAccess().getExpressionOclExpressionCSParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreExpCS__OpAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreExpCSAccess().getOpPreKeyword_1_2_0()); }
(
{ before(grammarAccess.getPreExpCSAccess().getOpPreKeyword_1_2_0()); }

	'pre' 

{ after(grammarAccess.getPreExpCSAccess().getOpPreKeyword_1_2_0()); }
)

{ after(grammarAccess.getPreExpCSAccess().getOpPreKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OclMessageExpCS__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageExpCSAccess().getSourcePrimaryExpCSParserRuleCall_0_0()); }
	ruleprimaryExpCS{ after(grammarAccess.getOclMessageExpCSAccess().getSourcePrimaryExpCSParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OclMessageExpCS__OpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageExpCSAccess().getOpAlternatives_1_0()); }
(rule__OclMessageExpCS__OpAlternatives_1_0)
{ after(grammarAccess.getOclMessageExpCSAccess().getOpAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OclMessageExpCS__MessageNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageExpCSAccess().getMessageNameSimpleNameCSParserRuleCall_2_0()); }
	rulesimpleNameCS{ after(grammarAccess.getOclMessageExpCSAccess().getMessageNameSimpleNameCSParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OclMessageExpCS__ArgumentsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageExpCSAccess().getArgumentsOclMessageArgCSParserRuleCall_4_0_0()); }
	ruleOclMessageArgCS{ after(grammarAccess.getOclMessageExpCSAccess().getArgumentsOclMessageArgCSParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OclMessageExpCS__ArgumentsAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageExpCSAccess().getArgumentsOclMessageArgCSParserRuleCall_4_1_1_0()); }
	ruleOclMessageArgCS{ after(grammarAccess.getOclMessageExpCSAccess().getArgumentsOclMessageArgCSParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OclMessageArgCS__TypeAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclMessageArgCSAccess().getTypeTypeCSParserRuleCall_0_2_1_0()); }
	ruletypeCS{ after(grammarAccess.getOclMessageArgCSAccess().getTypeTypeCSParserRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TupleKeywordCS__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleKeywordCSAccess().getValueTupleKeyword_0()); }
(
{ before(grammarAccess.getTupleKeywordCSAccess().getValueTupleKeyword_0()); }

	'Tuple' 

{ after(grammarAccess.getTupleKeywordCSAccess().getValueTupleKeyword_0()); }
)

{ after(grammarAccess.getTupleKeywordCSAccess().getValueTupleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelfKeywordCS__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfKeywordCSAccess().getValueSelfKeyword_0()); }
(
{ before(grammarAccess.getSelfKeywordCSAccess().getValueSelfKeyword_0()); }

	'self' 

{ after(grammarAccess.getSelfKeywordCSAccess().getValueSelfKeyword_0()); }
)

{ after(grammarAccess.getSelfKeywordCSAccess().getValueSelfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNameCS__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleNameCSAccess().getValueIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getSimpleNameCSAccess().getValueIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathNameCS__SimpleNamesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathNameCSAccess().getSimpleNamesSimpleNameCSParserRuleCall_0_0()); }
	rulesimpleNameCS{ after(grammarAccess.getPathNameCSAccess().getSimpleNamesSimpleNameCSParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathNameCS__SimpleNamesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathNameCSAccess().getSimpleNamesUnreservedSimpleNameCSParserRuleCall_1_1_0()); }
	ruleunreservedSimpleNameCS{ after(grammarAccess.getPathNameCSAccess().getSimpleNamesUnreservedSimpleNameCSParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeCS__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueBooleanKeyword_0_0()); }
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueBooleanKeyword_0_0()); }

	'Boolean' 

{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueBooleanKeyword_0_0()); }
)

{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueBooleanKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeCS__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueIntegerKeyword_1_0()); }
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueIntegerKeyword_1_0()); }

	'Integer' 

{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueIntegerKeyword_1_0()); }
)

{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueIntegerKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeCS__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueRealKeyword_2_0()); }
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueRealKeyword_2_0()); }

	'Real' 

{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueRealKeyword_2_0()); }
)

{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueRealKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeCS__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueStringKeyword_3_0()); }
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueStringKeyword_3_0()); }

	'String' 

{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueStringKeyword_3_0()); }
)

{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueStringKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeCS__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueUnlimitedNaturalKeyword_4_0()); }
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueUnlimitedNaturalKeyword_4_0()); }

	'UnlimitedNatural' 

{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueUnlimitedNaturalKeyword_4_0()); }
)

{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueUnlimitedNaturalKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeCS__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueOclAnyKeyword_5_0()); }
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueOclAnyKeyword_5_0()); }

	'OclAny' 

{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueOclAnyKeyword_5_0()); }
)

{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueOclAnyKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeCS__ValueAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueOclInvalidKeyword_6_0()); }
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueOclInvalidKeyword_6_0()); }

	'OclInvalid' 

{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueOclInvalidKeyword_6_0()); }
)

{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueOclInvalidKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeCS__ValueAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueOclVoidKeyword_7_0()); }
(
{ before(grammarAccess.getPrimitiveTypeCSAccess().getValueOclVoidKeyword_7_0()); }

	'OclVoid' 

{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueOclVoidKeyword_7_0()); }
)

{ after(grammarAccess.getPrimitiveTypeCSAccess().getValueOclVoidKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeIdentifierCS__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueSetKeyword_0_0()); }
(
{ before(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueSetKeyword_0_0()); }

	'Set' 

{ after(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueSetKeyword_0_0()); }
)

{ after(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueSetKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeIdentifierCS__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueBagKeyword_1_0()); }
(
{ before(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueBagKeyword_1_0()); }

	'Bag' 

{ after(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueBagKeyword_1_0()); }
)

{ after(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueBagKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeIdentifierCS__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueSequenceKeyword_2_0()); }
(
{ before(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueSequenceKeyword_2_0()); }

	'Sequence' 

{ after(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueSequenceKeyword_2_0()); }
)

{ after(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueSequenceKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeIdentifierCS__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueCollectionKeyword_3_0()); }
(
{ before(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueCollectionKeyword_3_0()); }

	'Collection' 

{ after(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueCollectionKeyword_3_0()); }
)

{ after(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueCollectionKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeIdentifierCS__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueOrderedSetKeyword_4_0()); }
(
{ before(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueOrderedSetKeyword_4_0()); }

	'OrderedSet' 

{ after(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueOrderedSetKeyword_4_0()); }
)

{ after(grammarAccess.getCollectionTypeIdentifierCSAccess().getValueOrderedSetKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeCS__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeCSAccess().getValueCollectionTypeIdentifierCSParserRuleCall_0_0()); }
	ruleCollectionTypeIdentifierCS{ after(grammarAccess.getCollectionTypeCSAccess().getValueCollectionTypeIdentifierCSParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeCS__TypeCSAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeCSAccess().getTypeCSTypeCSParserRuleCall_1_1_0()); }
	ruletypeCS{ after(grammarAccess.getCollectionTypeCSAccess().getTypeCSTypeCSParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeCS__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeCSAccess().getValueTupleKeyword_0_0()); }
(
{ before(grammarAccess.getTupleTypeCSAccess().getValueTupleKeyword_0_0()); }

	'Tuple' 

{ after(grammarAccess.getTupleTypeCSAccess().getValueTupleKeyword_0_0()); }
)

{ after(grammarAccess.getTupleTypeCSAccess().getValueTupleKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeCS__PartAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeCSAccess().getPartTuplePartCSParserRuleCall_2_0_0()); }
	ruletuplePartCS{ after(grammarAccess.getTupleTypeCSAccess().getPartTuplePartCSParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeCS__PartAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeCSAccess().getPartTuplePartCSParserRuleCall_2_1_1_0()); }
	ruletuplePartCS{ after(grammarAccess.getTupleTypeCSAccess().getPartTuplePartCSParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePartCS__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTuplePartCSAccess().getNameSimpleNameCSParserRuleCall_0_0()); }
	rulesimpleNameCS{ after(grammarAccess.getTuplePartCSAccess().getNameSimpleNameCSParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePartCS__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTuplePartCSAccess().getTypeTypeCSParserRuleCall_2_0()); }
	ruletypeCS{ after(grammarAccess.getTuplePartCSAccess().getTypeTypeCSParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralExpCS__CollectionLiteralPartsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralExpCSAccess().getCollectionLiteralPartsCollectionLiteralPartCSParserRuleCall_1_1_0_0()); }
	ruleCollectionLiteralPartCS{ after(grammarAccess.getCollectionLiteralExpCSAccess().getCollectionLiteralPartsCollectionLiteralPartCSParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralExpCS__CollectionLiteralPartsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralExpCSAccess().getCollectionLiteralPartsCollectionLiteralPartCSParserRuleCall_1_1_1_1_0()); }
	ruleCollectionLiteralPartCS{ after(grammarAccess.getCollectionLiteralExpCSAccess().getCollectionLiteralPartsCollectionLiteralPartCSParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralPartCS__ExpressionCSAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralPartCSAccess().getExpressionCSOclExpressionCSParserRuleCall_0_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getCollectionLiteralPartCSAccess().getExpressionCSOclExpressionCSParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralPartCS__LastExpressionCSAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralPartCSAccess().getLastExpressionCSOclExpressionCSParserRuleCall_1_1_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getCollectionLiteralPartCSAccess().getLastExpressionCSOclExpressionCSParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExpCS__PartAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralExpCSAccess().getPartTupleLiteralPartCSParserRuleCall_2_1_0()); }
	ruleTupleLiteralPartCS{ after(grammarAccess.getTupleLiteralExpCSAccess().getPartTupleLiteralPartCSParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExpCS__PartAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralExpCSAccess().getPartTupleLiteralPartCSParserRuleCall_2_2_1_0()); }
	ruleTupleLiteralPartCS{ after(grammarAccess.getTupleLiteralExpCSAccess().getPartTupleLiteralPartCSParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralPartCS__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralPartCSAccess().getNameSimpleNameCSParserRuleCall_0_0()); }
	rulesimpleNameCS{ after(grammarAccess.getTupleLiteralPartCSAccess().getNameSimpleNameCSParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralPartCS__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralPartCSAccess().getTypeTypeCSParserRuleCall_1_1_0()); }
	ruletypeCS{ after(grammarAccess.getTupleLiteralPartCSAccess().getTypeTypeCSParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralPartCS__InitExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleLiteralPartCSAccess().getInitExpressionOclExpressionCSParserRuleCall_3_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getTupleLiteralPartCSAccess().getInitExpressionOclExpressionCSParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteralExpCS__IntegerSymbolAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralExpCSAccess().getIntegerSymbolINTEGER_LITERALParserRuleCall_0()); }
	ruleINTEGER_LITERAL{ after(grammarAccess.getIntegerLiteralExpCSAccess().getIntegerSymbolINTEGER_LITERALParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteralExpCS__RealSymbolAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralExpCSAccess().getRealSymbolREAL_LITERALParserRuleCall_0()); }
	ruleREAL_LITERAL{ after(grammarAccess.getRealLiteralExpCSAccess().getRealSymbolREAL_LITERALParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteralExpCS__StringSymbolAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralExpCSAccess().getStringSymbolSTRING_LITERALTerminalRuleCall_0()); }
	RULE_STRING_LITERAL{ after(grammarAccess.getStringLiteralExpCSAccess().getStringSymbolSTRING_LITERALTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralExpCS__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralExpCSAccess().getValueTrueKeyword_0_0()); }
(
{ before(grammarAccess.getBooleanLiteralExpCSAccess().getValueTrueKeyword_0_0()); }

	'true' 

{ after(grammarAccess.getBooleanLiteralExpCSAccess().getValueTrueKeyword_0_0()); }
)

{ after(grammarAccess.getBooleanLiteralExpCSAccess().getValueTrueKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralExpCS__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralExpCSAccess().getValueFalseKeyword_1_0()); }
(
{ before(grammarAccess.getBooleanLiteralExpCSAccess().getValueFalseKeyword_1_0()); }

	'false' 

{ after(grammarAccess.getBooleanLiteralExpCSAccess().getValueFalseKeyword_1_0()); }
)

{ after(grammarAccess.getBooleanLiteralExpCSAccess().getValueFalseKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesCS__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesCSAccess().getOpImpliesKeyword_1_1_0()); }
(
{ before(grammarAccess.getImpliesCSAccess().getOpImpliesKeyword_1_1_0()); }

	'implies' 

{ after(grammarAccess.getImpliesCSAccess().getOpImpliesKeyword_1_1_0()); }
)

{ after(grammarAccess.getImpliesCSAccess().getOpImpliesKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesCS__ArgumentAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesCSAccess().getArgumentAlternatives_1_2_0()); }
(rule__ImpliesCS__ArgumentAlternatives_1_2_0)
{ after(grammarAccess.getImpliesCSAccess().getArgumentAlternatives_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XorCS__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorCSAccess().getOpXorKeyword_1_1_0()); }
(
{ before(grammarAccess.getXorCSAccess().getOpXorKeyword_1_1_0()); }

	'xor' 

{ after(grammarAccess.getXorCSAccess().getOpXorKeyword_1_1_0()); }
)

{ after(grammarAccess.getXorCSAccess().getOpXorKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XorCS__ArgumentAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorCSAccess().getArgumentAlternatives_1_2_0()); }
(rule__XorCS__ArgumentAlternatives_1_2_0)
{ after(grammarAccess.getXorCSAccess().getArgumentAlternatives_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrCS__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrCSAccess().getOpOrKeyword_1_1_0()); }
(
{ before(grammarAccess.getOrCSAccess().getOpOrKeyword_1_1_0()); }

	'or' 

{ after(grammarAccess.getOrCSAccess().getOpOrKeyword_1_1_0()); }
)

{ after(grammarAccess.getOrCSAccess().getOpOrKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrCS__ArgumentAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrCSAccess().getArgumentAlternatives_1_2_0()); }
(rule__OrCS__ArgumentAlternatives_1_2_0)
{ after(grammarAccess.getOrCSAccess().getArgumentAlternatives_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndCS__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndCSAccess().getOpAndKeyword_1_1_0()); }
(
{ before(grammarAccess.getAndCSAccess().getOpAndKeyword_1_1_0()); }

	'and' 

{ after(grammarAccess.getAndCSAccess().getOpAndKeyword_1_1_0()); }
)

{ after(grammarAccess.getAndCSAccess().getOpAndKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndCS__ArgumentAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndCSAccess().getArgumentAlternatives_1_2_0()); }
(rule__AndCS__ArgumentAlternatives_1_2_0)
{ after(grammarAccess.getAndCSAccess().getArgumentAlternatives_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityCS__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityCSAccess().getOpAlternatives_1_1_0()); }
(rule__EqualityCS__OpAlternatives_1_1_0)
{ after(grammarAccess.getEqualityCSAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityCS__ArgumentAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityCSAccess().getArgumentAlternatives_1_2_0()); }
(rule__EqualityCS__ArgumentAlternatives_1_2_0)
{ after(grammarAccess.getEqualityCSAccess().getArgumentAlternatives_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalCS__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalCSAccess().getOpAlternatives_1_1_0()); }
(rule__RelationalCS__OpAlternatives_1_1_0)
{ after(grammarAccess.getRelationalCSAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalCS__ArgumentAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalCSAccess().getArgumentAlternatives_1_2_0()); }
(rule__RelationalCS__ArgumentAlternatives_1_2_0)
{ after(grammarAccess.getRelationalCSAccess().getArgumentAlternatives_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveCS__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveCSAccess().getOpAlternatives_1_1_0()); }
(rule__AdditiveCS__OpAlternatives_1_1_0)
{ after(grammarAccess.getAdditiveCSAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveCS__ArgumentAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveCSAccess().getArgumentAlternatives_1_2_0()); }
(rule__AdditiveCS__ArgumentAlternatives_1_2_0)
{ after(grammarAccess.getAdditiveCSAccess().getArgumentAlternatives_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeCS__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeCSAccess().getOpAlternatives_1_1_0()); }
(rule__MultiplicativeCS__OpAlternatives_1_1_0)
{ after(grammarAccess.getMultiplicativeCSAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeCS__ArgumentAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeCSAccess().getArgumentAlternatives_1_2_0()); }
(rule__MultiplicativeCS__ArgumentAlternatives_1_2_0)
{ after(grammarAccess.getMultiplicativeCSAccess().getArgumentAlternatives_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCS__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryCSAccess().getOpAlternatives_1_1_0()); }
(rule__UnaryCS__OpAlternatives_1_1_0)
{ after(grammarAccess.getUnaryCSAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCS__SourceAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryCSAccess().getSourceUnaryCSParserRuleCall_1_2_0()); }
	ruleunaryCS{ after(grammarAccess.getUnaryCSAccess().getSourceUnaryCSParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallingExpCS__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallingExpCSAccess().getOpAlternatives_1_1_0()); }
(rule__CallingExpCS__OpAlternatives_1_1_0)
{ after(grammarAccess.getCallingExpCSAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallingExpCS__ArgumentAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallingExpCSAccess().getArgumentCallingExpCSParserRuleCall_1_2_0()); }
	rulecallingExpCS{ after(grammarAccess.getCallingExpCSAccess().getArgumentCallingExpCSParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorVariableCS__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorVariableCSAccess().getNameSimpleNameCSParserRuleCall_0_0()); }
	rulesimpleNameCS{ after(grammarAccess.getIteratorVariableCSAccess().getNameSimpleNameCSParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorVariableCS__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorVariableCSAccess().getTypeTypeCSParserRuleCall_1_1_0()); }
	ruletypeCS{ after(grammarAccess.getIteratorVariableCSAccess().getTypeTypeCSParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorAccumulatorCS__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccumulatorCSAccess().getNameSimpleNameCSParserRuleCall_0_0()); }
	rulesimpleNameCS{ after(grammarAccess.getIteratorAccumulatorCSAccess().getNameSimpleNameCSParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorAccumulatorCS__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccumulatorCSAccess().getTypeTypeCSParserRuleCall_2_0()); }
	ruletypeCS{ after(grammarAccess.getIteratorAccumulatorCSAccess().getTypeTypeCSParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorAccumulatorCS__InitExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccumulatorCSAccess().getInitExpressionOclExpressionCSParserRuleCall_4_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getIteratorAccumulatorCSAccess().getInitExpressionOclExpressionCSParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpCS__Variable1Assignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getVariable1IteratorVariableCSParserRuleCall_1_2_0_0()); }
	ruleiteratorVariableCS{ after(grammarAccess.getCallExpCSAccess().getVariable1IteratorVariableCSParserRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpCS__Variable2Assignment_1_2_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getVariable2IteratorVariableCSParserRuleCall_1_2_1_0_1_0()); }
	ruleiteratorVariableCS{ after(grammarAccess.getCallExpCSAccess().getVariable2IteratorVariableCSParserRuleCall_1_2_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpCS__Variable2Assignment_1_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getVariable2IteratorAccumulatorCSParserRuleCall_1_2_1_1_1_0()); }
	ruleiteratorAccumulatorCS{ after(grammarAccess.getCallExpCSAccess().getVariable2IteratorAccumulatorCSParserRuleCall_1_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpCS__ArgumentsAssignment_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getArgumentsOclExpressionCSParserRuleCall_1_3_0_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getCallExpCSAccess().getArgumentsOclExpressionCSParserRuleCall_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpCS__ArgumentsAssignment_1_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpCSAccess().getArgumentsOclExpressionCSParserRuleCall_1_3_1_1_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getCallExpCSAccess().getArgumentsOclExpressionCSParserRuleCall_1_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpCS__IndexesAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexExpCSAccess().getIndexesOclExpressionCSParserRuleCall_1_2_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getIndexExpCSAccess().getIndexesOclExpressionCSParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpCS__IndexesAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexExpCSAccess().getIndexesOclExpressionCSParserRuleCall_1_3_1_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getIndexExpCSAccess().getIndexesOclExpressionCSParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpCS__ConditionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpCSAccess().getConditionOclExpressionCSParserRuleCall_1_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getIfExpCSAccess().getConditionOclExpressionCSParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpCS__ThenExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpCSAccess().getThenExpressionOclExpressionCSParserRuleCall_3_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getIfExpCSAccess().getThenExpressionOclExpressionCSParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpCS__ElseExpressionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpCSAccess().getElseExpressionOclExpressionCSParserRuleCall_5_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getIfExpCSAccess().getElseExpressionOclExpressionCSParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpCS__VariableAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpCSAccess().getVariableLetVariableCSParserRuleCall_1_0()); }
	ruleLetVariableCS{ after(grammarAccess.getLetExpCSAccess().getVariableLetVariableCSParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpCS__VariableAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpCSAccess().getVariableLetVariableCSParserRuleCall_2_1_0()); }
	ruleLetVariableCS{ after(grammarAccess.getLetExpCSAccess().getVariableLetVariableCSParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpCS__InAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpCSAccess().getInOclExpressionCSParserRuleCall_4_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getLetExpCSAccess().getInOclExpressionCSParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetVariableCS__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetVariableCSAccess().getNameSimpleNameCSParserRuleCall_0_0()); }
	rulesimpleNameCS{ after(grammarAccess.getLetVariableCSAccess().getNameSimpleNameCSParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetVariableCS__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetVariableCSAccess().getTypeTypeCSParserRuleCall_2_0()); }
	ruletypeCS{ after(grammarAccess.getLetVariableCSAccess().getTypeTypeCSParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetVariableCS__InitExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetVariableCSAccess().getInitExpressionOclExpressionCSParserRuleCall_4_0()); }
	ruleOclExpressionCS{ after(grammarAccess.getLetVariableCSAccess().getInitExpressionOclExpressionCSParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_STRING_LITERAL : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'';

RULE_ID : (('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*|'_' RULE_STRING_LITERAL);

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '--' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


