<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="benchframework"
    nsURI="http://de.hpi.sam.bp2009.benchframework" nsPrefix="benchframework">
  <eClassifiers xsi:type="ecore:EClass" name="EndOperator" abstract="true" eSuperTypes="#//Operator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Operators that need have Start- and Endpoint should subclass this EndOperator with their specific endpoint.&#xD;&#xA;Subclasses of Start- and EndOperator are treated special when they occur in a loop for example."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="startOperator" eType="#//StartOperator"
        eOpposite="#//StartOperator/endOperator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Engine">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation"/>
    </eAnnotations>
    <eOperations name="benchmark"/>
    <eOperations name="getRegisteredOperators">
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EEList">
        <eTypeArguments eClassifier="#//Operator"/>
      </eGenericType>
    </eOperations>
    <eOperations name="getRegisteredResultProcessors">
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EEList">
        <eTypeArguments eClassifier="#//ResultProcessor"/>
      </eGenericType>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="testRuns" upperBound="-1"
        eType="#//TestRun"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="exeptionsDuringLastRun"
        transient="true">
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EEList">
        <eTypeArguments eClassifier="#//Exception"/>
      </eGenericType>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Operator" abstract="true" interface="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation"/>
    </eAnnotations>
    <eOperations name="execute"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="option" eType="#//OptionObject"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="result" eType="#//ResultObject"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="testRun" eType="#//TestRun"
        eOpposite="#//TestRun/operators"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        defaultValueLiteral=""/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="OptionObject" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="The base class of all option objects for an operator, should be subclasses to support specific concepts."/>
    </eAnnotations>
    <eOperations name="clone" eType="#//OptionObject" eExceptions="#//CloneNotSupportedException"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="wizardPage" eType="#//WizardPage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="used for eclipse wizard based option entering"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RandomNumberOptionObject" eSuperTypes="#//OptionObject">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="This option object enables operators that use the random function to reexecuted with the same results for the &quot;random&quot; numbers.&#xD;&#xA;When calling getNextInt() the object will return a random integer on the first iteration, and the same cached number will be returned on every following iteration. That means if you get 10 random numbers on first iteration, you'll get the same numbers on every following iteration."/>
    </eAnnotations>
    <eOperations name="getNextInt" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject">
      <eParameters name="upperLimit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"/>
    </eOperations>
    <eOperations name="getNextInt" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="numberListIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="numberList" transient="true">
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EEList">
        <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="numberGenerator" eType="#//RandomNumberGenerator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResultObject">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Encapsules a view for the results of an operator execution."/>
    </eAnnotations>
    <eOperations name="getComposite" eType="#//UIComponent">
      <eParameters name="parent" eType="#//UIComponent"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="status" eType="#//Status"
        defaultValueLiteral=""/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="message" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResultProcessor" abstract="true" interface="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Subclasses are responsible for rendering testrun result processing"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="resultPage" eType="#//WizardPage"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="testrun" eType="#//TestRun"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StartOperator" abstract="true" eSuperTypes="#//Operator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Operators that need have Start- and Endpoint should subclass this StartOperator with their specific startpoint.&#xD;&#xA;Subclasses of Start- and EndOperator are treated special when they occur in a loop for example."/>
    </eAnnotations>
    <eOperations name="createEndOperator" eType="#//EndOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="endOperator" eType="#//EndOperator"
        eOpposite="#//EndOperator/startOperator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TestRun">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A testrun is an internal representation of one single run of the benchmarking framework, containing an ordered list of operators and the model to operate on."/>
    </eAnnotations>
    <eOperations name="getInstanceForClass">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="returns a testrun unique instance of a Class.&#xD;&#xA;The idea is that an operator can register a specific class to the testrun, if another operator use the same class and is aware of other operators, he can just reuse the registered instance."/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//TestRun/getInstanceForClass/returnType"/>
      <eTypeParameters name="returnType"/>
      <eParameters name="aClass">
        <eAnnotations>
          <details key="documentation" value="This is a test"/>
        </eAnnotations>
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaClass">
          <eTypeArguments eTypeParameter="#//TestRun/getInstanceForClass/returnType"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations name="setInstanceForClass" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="registers a testrun unique instance of a Class.&#xD;&#xA;The idea is that an operator can register a specific class to the testrun, if another operator use the same class and is aware of other operators, he can just reuse the registered instance."/>
      </eAnnotations>
      <eParameters name="aClass">
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaClass">
          <eTypeArguments/>
        </eGenericType>
      </eParameters>
      <eParameters name="anObject" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
    </eOperations>
    <eOperations name="getStartOperators">
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EEList">
        <eTypeArguments eClassifier="#//StartOperator"/>
      </eGenericType>
    </eOperations>
    <eOperations name="getEndOperators">
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EEList">
        <eTypeArguments eClassifier="#//EndOperator"/>
      </eGenericType>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="model" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"
        transient="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The model instance for a testrun&#xD;&#xA;If using other formats than EResourceSet @see getInstanceForClass"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="operators" upperBound="-1"
        eType="#//Operator" containment="true" eOpposite="#//Operator/testRun">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="All operator, that should be executed on exuting the testrun&#xD;&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="UserInterface" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="engine" eType="#//Engine"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="availableOperators" upperBound="-1"
        eType="#//Operator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="resultProcessor" eType="#//ResultProcessor"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Status">
    <eLiterals name="FAILED" value="1"/>
    <eLiterals name="SUCCESSFUL" value="2" literal=""/>
    <eLiterals name="UNKNOWN"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="OutputStream" instanceClassName="java.io.OutputStream"/>
  <eClassifiers xsi:type="ecore:EDataType" name="WizardPage" instanceClassName="org.eclipse.jface.wizard.WizardPage"/>
  <eClassifiers xsi:type="ecore:EDataType" name="UIComponent" instanceClassName="org.eclipse.swt.widgets.Composite"/>
  <eClassifiers xsi:type="ecore:EDataType" name="Exception" instanceClassName="java.lang.Exception"
      serializable="false"/>
  <eClassifiers xsi:type="ecore:EDataType" name="CloneNotSupportedException" instanceClassName="java.lang.CloneNotSupportedException"/>
  <eClassifiers xsi:type="ecore:EDataType" name="RandomNumberGenerator" instanceClassName="java.util.Random"/>
</ecore:EPackage>
