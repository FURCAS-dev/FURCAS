/*
* generated by Xtext
*/
grammar InternalQuery;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipse.emf.query2.syntax.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.emf.query2.syntax.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.emf.query2.syntax.services.QueryGrammarAccess;

}

@parser::members {
 
 	private QueryGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(QueryGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedQuery
entryRuleNamedQuery 
:
{ before(grammarAccess.getNamedQueryRule()); }
	 ruleNamedQuery
{ after(grammarAccess.getNamedQueryRule()); } 
	 EOF 
;

// Rule NamedQuery
ruleNamedQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedQueryAccess().getGroup()); }
(rule__NamedQuery__Group__0)
{ after(grammarAccess.getNamedQueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMQLquery
entryRuleMQLquery 
:
{ before(grammarAccess.getMQLqueryRule()); }
	 ruleMQLquery
{ after(grammarAccess.getMQLqueryRule()); } 
	 EOF 
;

// Rule MQLquery
ruleMQLquery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMQLqueryAccess().getGroup()); }
(rule__MQLquery__Group__0)
{ after(grammarAccess.getMQLqueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectEntry
entryRuleSelectEntry 
:
{ before(grammarAccess.getSelectEntryRule()); }
	 ruleSelectEntry
{ after(grammarAccess.getSelectEntryRule()); } 
	 EOF 
;

// Rule SelectEntry
ruleSelectEntry
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectEntryAccess().getGroup()); }
(rule__SelectEntry__Group__0)
{ after(grammarAccess.getSelectEntryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFromEntry
entryRuleFromEntry 
:
{ before(grammarAccess.getFromEntryRule()); }
	 ruleFromEntry
{ after(grammarAccess.getFromEntryRule()); } 
	 EOF 
;

// Rule FromEntry
ruleFromEntry
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFromEntryAccess().getGroup()); }
(rule__FromEntry__Group__0)
{ after(grammarAccess.getFromEntryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScopeClause
entryRuleScopeClause 
:
{ before(grammarAccess.getScopeClauseRule()); }
	 ruleScopeClause
{ after(grammarAccess.getScopeClauseRule()); } 
	 EOF 
;

// Rule ScopeClause
ruleScopeClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScopeClauseAccess().getAlternatives()); }
(rule__ScopeClause__Alternatives)
{ after(grammarAccess.getScopeClauseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResourceScope
entryRuleResourceScope 
:
{ before(grammarAccess.getResourceScopeRule()); }
	 ruleResourceScope
{ after(grammarAccess.getResourceScopeRule()); } 
	 EOF 
;

// Rule ResourceScope
ruleResourceScope
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceScopeAccess().getGroup()); }
(rule__ResourceScope__Group__0)
{ after(grammarAccess.getResourceScopeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElementScope
entryRuleElementScope 
:
{ before(grammarAccess.getElementScopeRule()); }
	 ruleElementScope
{ after(grammarAccess.getElementScopeRule()); } 
	 EOF 
;

// Rule ElementScope
ruleElementScope
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementScopeAccess().getGroup()); }
(rule__ElementScope__Group__0)
{ after(grammarAccess.getElementScopeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhereEntry
entryRuleWhereEntry 
:
{ before(grammarAccess.getWhereEntryRule()); }
	 ruleWhereEntry
{ after(grammarAccess.getWhereEntryRule()); } 
	 EOF 
;

// Rule WhereEntry
ruleWhereEntry
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhereEntryAccess().getGroup()); }
(rule__WhereEntry__Group__0)
{ after(grammarAccess.getWhereEntryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndWhereEntry
entryRuleAndWhereEntry 
:
{ before(grammarAccess.getAndWhereEntryRule()); }
	 ruleAndWhereEntry
{ after(grammarAccess.getAndWhereEntryRule()); } 
	 EOF 
;

// Rule AndWhereEntry
ruleAndWhereEntry
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndWhereEntryAccess().getGroup()); }
(rule__AndWhereEntry__Group__0)
{ after(grammarAccess.getAndWhereEntryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConcreteWhereEntry
entryRuleConcreteWhereEntry 
:
{ before(grammarAccess.getConcreteWhereEntryRule()); }
	 ruleConcreteWhereEntry
{ after(grammarAccess.getConcreteWhereEntryRule()); } 
	 EOF 
;

// Rule ConcreteWhereEntry
ruleConcreteWhereEntry
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConcreteWhereEntryAccess().getAlternatives()); }
(rule__ConcreteWhereEntry__Alternatives)
{ after(grammarAccess.getConcreteWhereEntryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParWhereEntry
entryRuleParWhereEntry 
:
{ before(grammarAccess.getParWhereEntryRule()); }
	 ruleParWhereEntry
{ after(grammarAccess.getParWhereEntryRule()); } 
	 EOF 
;

// Rule ParWhereEntry
ruleParWhereEntry
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParWhereEntryAccess().getGroup()); }
(rule__ParWhereEntry__Group__0)
{ after(grammarAccess.getParWhereEntryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionWhereEntry
entryRuleExpressionWhereEntry 
:
{ before(grammarAccess.getExpressionWhereEntryRule()); }
	 ruleExpressionWhereEntry
{ after(grammarAccess.getExpressionWhereEntryRule()); } 
	 EOF 
;

// Rule ExpressionWhereEntry
ruleExpressionWhereEntry
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionWhereEntryAccess().getGroup()); }
(rule__ExpressionWhereEntry__Group__0)
{ after(grammarAccess.getExpressionWhereEntryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAliasAttributeExpression
entryRuleAliasAttributeExpression 
:
{ before(grammarAccess.getAliasAttributeExpressionRule()); }
	 ruleAliasAttributeExpression
{ after(grammarAccess.getAliasAttributeExpressionRule()); } 
	 EOF 
;

// Rule AliasAttributeExpression
ruleAliasAttributeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAliasAttributeExpressionAccess().getGroup()); }
(rule__AliasAttributeExpression__Group__0)
{ after(grammarAccess.getAliasAttributeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoubleExpression
entryRuleDoubleExpression 
:
{ before(grammarAccess.getDoubleExpressionRule()); }
	 ruleDoubleExpression
{ after(grammarAccess.getDoubleExpressionRule()); } 
	 EOF 
;

// Rule DoubleExpression
ruleDoubleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleExpressionAccess().getValueAssignment()); }
(rule__DoubleExpression__ValueAssignment)
{ after(grammarAccess.getDoubleExpressionAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLongExpression
entryRuleLongExpression 
:
{ before(grammarAccess.getLongExpressionRule()); }
	 ruleLongExpression
{ after(grammarAccess.getLongExpressionRule()); } 
	 EOF 
;

// Rule LongExpression
ruleLongExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLongExpressionAccess().getValueAssignment()); }
(rule__LongExpression__ValueAssignment)
{ after(grammarAccess.getLongExpressionAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringExpression
entryRuleStringExpression 
:
{ before(grammarAccess.getStringExpressionRule()); }
	 ruleStringExpression
{ after(grammarAccess.getStringExpressionRule()); } 
	 EOF 
;

// Rule StringExpression
ruleStringExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringExpressionAccess().getValueAssignment()); }
(rule__StringExpression__ValueAssignment)
{ after(grammarAccess.getStringExpressionAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullExpression
entryRuleNullExpression 
:
{ before(grammarAccess.getNullExpressionRule()); }
	 ruleNullExpression
{ after(grammarAccess.getNullExpressionRule()); } 
	 EOF 
;

// Rule NullExpression
ruleNullExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullExpressionAccess().getValueAssignment()); }
(rule__NullExpression__ValueAssignment)
{ after(grammarAccess.getNullExpressionAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression 
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanExpressionAccess().getAlternatives()); }
(rule__BooleanExpression__Alternatives)
{ after(grammarAccess.getBooleanExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQueryExpression
entryRuleQueryExpression 
:
{ before(grammarAccess.getQueryExpressionRule()); }
	 ruleQueryExpression
{ after(grammarAccess.getQueryExpressionRule()); } 
	 EOF 
;

// Rule QueryExpression
ruleQueryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQueryExpressionAccess().getGroup()); }
(rule__QueryExpression__Group__0)
{ after(grammarAccess.getQueryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Operator
ruleOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
(rule__Operator__Alternatives)
{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ScopeClause__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeClauseAccess().getResourceScopeParserRuleCall_0()); }
	ruleResourceScope
{ after(grammarAccess.getScopeClauseAccess().getResourceScopeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getScopeClauseAccess().getElementScopeParserRuleCall_1()); }
	ruleElementScope
{ after(grammarAccess.getScopeClauseAccess().getElementScopeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteWhereEntry__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcreteWhereEntryAccess().getParWhereEntryParserRuleCall_0()); }
	ruleParWhereEntry
{ after(grammarAccess.getConcreteWhereEntryAccess().getParWhereEntryParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConcreteWhereEntryAccess().getExpressionWhereEntryParserRuleCall_1()); }
	ruleExpressionWhereEntry
{ after(grammarAccess.getConcreteWhereEntryAccess().getExpressionWhereEntryParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAliasAttributeExpressionParserRuleCall_0()); }
	ruleAliasAttributeExpression
{ after(grammarAccess.getExpressionAccess().getAliasAttributeExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getDoubleExpressionParserRuleCall_1()); }
	ruleDoubleExpression
{ after(grammarAccess.getExpressionAccess().getDoubleExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getLongExpressionParserRuleCall_2()); }
	ruleLongExpression
{ after(grammarAccess.getExpressionAccess().getLongExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getStringExpressionParserRuleCall_3()); }
	ruleStringExpression
{ after(grammarAccess.getExpressionAccess().getStringExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getNullExpressionParserRuleCall_4()); }
	ruleNullExpression
{ after(grammarAccess.getExpressionAccess().getNullExpressionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall_5()); }
	ruleBooleanExpression
{ after(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getQueryExpressionParserRuleCall_6()); }
	ruleQueryExpression
{ after(grammarAccess.getExpressionAccess().getQueryExpressionParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getTrueAssignment_0()); }
(rule__BooleanExpression__TrueAssignment_0)
{ after(grammarAccess.getBooleanExpressionAccess().getTrueAssignment_0()); }
)

    |(
{ before(grammarAccess.getBooleanExpressionAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getBooleanExpressionAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getLessThenEnumLiteralDeclaration_0()); }
(	'<' 
)
{ after(grammarAccess.getOperatorAccess().getLessThenEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getGreaterThenEnumLiteralDeclaration_1()); }
(	'>' 
)
{ after(grammarAccess.getOperatorAccess().getGreaterThenEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getLessEqualEnumLiteralDeclaration_2()); }
(	'<=' 
)
{ after(grammarAccess.getOperatorAccess().getLessEqualEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getGreaterEqualEnumLiteralDeclaration_3()); }
(	'>=' 
)
{ after(grammarAccess.getOperatorAccess().getGreaterEqualEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getEqualEnumLiteralDeclaration_4()); }
(	'=' 
)
{ after(grammarAccess.getOperatorAccess().getEqualEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getNotEqualEnumLiteralDeclaration_5()); }
(	'!=' 
)
{ after(grammarAccess.getOperatorAccess().getNotEqualEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getLikeEnumLiteralDeclaration_6()); }
(	'like' 
)
{ after(grammarAccess.getOperatorAccess().getLikeEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getNotLikeEnumLiteralDeclaration_7()); }
(	'not like' 
)
{ after(grammarAccess.getOperatorAccess().getNotLikeEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getNotInEnumLiteralDeclaration_8()); }
(	'not in' 
)
{ after(grammarAccess.getOperatorAccess().getNotInEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getInEnumLiteralDeclaration_9()); }
(	'in' 
)
{ after(grammarAccess.getOperatorAccess().getInEnumLiteralDeclaration_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_0()); }
(rule__Model__ImportsAssignment_0)*
{ after(grammarAccess.getModelAccess().getImportsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDefaultQueryAssignment_1()); }
(rule__Model__DefaultQueryAssignment_1)?
{ after(grammarAccess.getModelAccess().getDefaultQueryAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNamedQueriesAssignment_2()); }
(rule__Model__NamedQueriesAssignment_2)*
{ after(grammarAccess.getModelAccess().getNamedQueriesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImpURIAssignment_1()); }
(rule__Import__ImpURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImpURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamedQuery__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedQuery__Group__0__Impl
	rule__NamedQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedQuery__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedQueryAccess().getNameAssignment_0()); }
(rule__NamedQuery__NameAssignment_0)
{ after(grammarAccess.getNamedQueryAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedQuery__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedQuery__Group__1__Impl
	rule__NamedQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedQuery__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedQueryAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getNamedQueryAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedQuery__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedQuery__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedQuery__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedQueryAccess().getQueryAssignment_2()); }
(rule__NamedQuery__QueryAssignment_2)
{ after(grammarAccess.getNamedQueryAccess().getQueryAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MQLquery__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MQLquery__Group__0__Impl
	rule__MQLquery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getFromKeyword_0()); }

	'from' 

{ after(grammarAccess.getMQLqueryAccess().getFromKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MQLquery__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MQLquery__Group__1__Impl
	rule__MQLquery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getFromEntriesAssignment_1()); }
(rule__MQLquery__FromEntriesAssignment_1)
{ after(grammarAccess.getMQLqueryAccess().getFromEntriesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MQLquery__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MQLquery__Group__2__Impl
	rule__MQLquery__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getGroup_2()); }
(rule__MQLquery__Group_2__0)*
{ after(grammarAccess.getMQLqueryAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MQLquery__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MQLquery__Group__3__Impl
	rule__MQLquery__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getSelectKeyword_3()); }

	'select' 

{ after(grammarAccess.getMQLqueryAccess().getSelectKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MQLquery__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MQLquery__Group__4__Impl
	rule__MQLquery__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getSelectEntriesAssignment_4()); }
(rule__MQLquery__SelectEntriesAssignment_4)
{ after(grammarAccess.getMQLqueryAccess().getSelectEntriesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MQLquery__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MQLquery__Group__5__Impl
	rule__MQLquery__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getGroup_5()); }
(rule__MQLquery__Group_5__0)*
{ after(grammarAccess.getMQLqueryAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MQLquery__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MQLquery__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getGroup_6()); }
(rule__MQLquery__Group_6__0)?
{ after(grammarAccess.getMQLqueryAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__MQLquery__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MQLquery__Group_2__0__Impl
	rule__MQLquery__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getMQLqueryAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MQLquery__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MQLquery__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getFromEntriesAssignment_2_1()); }
(rule__MQLquery__FromEntriesAssignment_2_1)
{ after(grammarAccess.getMQLqueryAccess().getFromEntriesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MQLquery__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MQLquery__Group_5__0__Impl
	rule__MQLquery__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getMQLqueryAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MQLquery__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MQLquery__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getSelectEntriesAssignment_5_1()); }
(rule__MQLquery__SelectEntriesAssignment_5_1)
{ after(grammarAccess.getMQLqueryAccess().getSelectEntriesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MQLquery__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MQLquery__Group_6__0__Impl
	rule__MQLquery__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getWhereKeyword_6_0()); }

	'where' 

{ after(grammarAccess.getMQLqueryAccess().getWhereKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MQLquery__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MQLquery__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getWhereEntryAssignment_6_1()); }
(rule__MQLquery__WhereEntryAssignment_6_1)
{ after(grammarAccess.getMQLqueryAccess().getWhereEntryAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectEntry__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectEntry__Group__0__Impl
	rule__SelectEntry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectEntryAccess().getSelectAssignment_0()); }
(rule__SelectEntry__SelectAssignment_0)
{ after(grammarAccess.getSelectEntryAccess().getSelectAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectEntry__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectEntry__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectEntryAccess().getGroup_1()); }
(rule__SelectEntry__Group_1__0)?
{ after(grammarAccess.getSelectEntryAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectEntry__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectEntry__Group_1__0__Impl
	rule__SelectEntry__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectEntryAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getSelectEntryAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectEntry__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectEntry__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectEntryAccess().getAttributeAssignment_1_1()); }
(rule__SelectEntry__AttributeAssignment_1_1)
{ after(grammarAccess.getSelectEntryAccess().getAttributeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FromEntry__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromEntry__Group__0__Impl
	rule__FromEntry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getTypeAssignment_0()); }
(rule__FromEntry__TypeAssignment_0)
{ after(grammarAccess.getFromEntryAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FromEntry__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromEntry__Group__1__Impl
	rule__FromEntry__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getGroup_1()); }
(rule__FromEntry__Group_1__0)?
{ after(grammarAccess.getFromEntryAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FromEntry__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromEntry__Group__2__Impl
	rule__FromEntry__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getAsKeyword_2()); }

	'as' 

{ after(grammarAccess.getFromEntryAccess().getAsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FromEntry__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromEntry__Group__3__Impl
	rule__FromEntry__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getAliasAssignment_3()); }
(rule__FromEntry__AliasAssignment_3)
{ after(grammarAccess.getFromEntryAccess().getAliasAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FromEntry__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromEntry__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getScopeClauseAssignment_4()); }
(rule__FromEntry__ScopeClauseAssignment_4)?
{ after(grammarAccess.getFromEntryAccess().getScopeClauseAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FromEntry__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromEntry__Group_1__0__Impl
	rule__FromEntry__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getWithoutsubtypesAssignment_1_0()); }
(rule__FromEntry__WithoutsubtypesAssignment_1_0)
{ after(grammarAccess.getFromEntryAccess().getWithoutsubtypesAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FromEntry__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromEntry__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getGroup_1_1()); }
(rule__FromEntry__Group_1_1__0)?
{ after(grammarAccess.getFromEntryAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FromEntry__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromEntry__Group_1_1__0__Impl
	rule__FromEntry__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getLeftCurlyBracketKeyword_1_1_0()); }

	'{' 

{ after(grammarAccess.getFromEntryAccess().getLeftCurlyBracketKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FromEntry__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromEntry__Group_1_1__1__Impl
	rule__FromEntry__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getWithoutsubtypesTypesAssignment_1_1_1()); }
(rule__FromEntry__WithoutsubtypesTypesAssignment_1_1_1)
{ after(grammarAccess.getFromEntryAccess().getWithoutsubtypesTypesAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FromEntry__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromEntry__Group_1_1__2__Impl
	rule__FromEntry__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getGroup_1_1_2()); }
(rule__FromEntry__Group_1_1_2__0)*
{ after(grammarAccess.getFromEntryAccess().getGroup_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FromEntry__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromEntry__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getRightCurlyBracketKeyword_1_1_3()); }

	'}' 

{ after(grammarAccess.getFromEntryAccess().getRightCurlyBracketKeyword_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FromEntry__Group_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromEntry__Group_1_1_2__0__Impl
	rule__FromEntry__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__Group_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getCommaKeyword_1_1_2_0()); }

	',' 

{ after(grammarAccess.getFromEntryAccess().getCommaKeyword_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FromEntry__Group_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromEntry__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__Group_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getWithoutsubtypesTypesAssignment_1_1_2_1()); }
(rule__FromEntry__WithoutsubtypesTypesAssignment_1_1_2_1)
{ after(grammarAccess.getFromEntryAccess().getWithoutsubtypesTypesAssignment_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResourceScope__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceScope__Group__0__Impl
	rule__ResourceScope__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceScope__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceScopeAccess().getNotInAssignment_0()); }
(rule__ResourceScope__NotInAssignment_0)?
{ after(grammarAccess.getResourceScopeAccess().getNotInAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceScope__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceScope__Group__1__Impl
	rule__ResourceScope__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceScope__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceScopeAccess().getInKeyword_1()); }

	'in' 

{ after(grammarAccess.getResourceScopeAccess().getInKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceScope__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceScope__Group__2__Impl
	rule__ResourceScope__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceScope__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceScopeAccess().getResourcesKeyword_2()); }

	'resources' 

{ after(grammarAccess.getResourceScopeAccess().getResourcesKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceScope__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceScope__Group__3__Impl
	rule__ResourceScope__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceScope__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceScopeAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getResourceScopeAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceScope__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceScope__Group__4__Impl
	rule__ResourceScope__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceScope__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceScopeAccess().getUrisAssignment_4()); }
(rule__ResourceScope__UrisAssignment_4)
{ after(grammarAccess.getResourceScopeAccess().getUrisAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceScope__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceScope__Group__5__Impl
	rule__ResourceScope__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceScope__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceScopeAccess().getGroup_5()); }
(rule__ResourceScope__Group_5__0)*
{ after(grammarAccess.getResourceScopeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceScope__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceScope__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceScope__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceScopeAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getResourceScopeAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ResourceScope__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceScope__Group_5__0__Impl
	rule__ResourceScope__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceScope__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceScopeAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getResourceScopeAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceScope__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceScope__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceScope__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceScopeAccess().getUrisAssignment_5_1()); }
(rule__ResourceScope__UrisAssignment_5_1)
{ after(grammarAccess.getResourceScopeAccess().getUrisAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElementScope__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementScope__Group__0__Impl
	rule__ElementScope__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementScope__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementScopeAccess().getNotInAssignment_0()); }
(rule__ElementScope__NotInAssignment_0)?
{ after(grammarAccess.getElementScopeAccess().getNotInAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementScope__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementScope__Group__1__Impl
	rule__ElementScope__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementScope__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementScopeAccess().getInKeyword_1()); }

	'in' 

{ after(grammarAccess.getElementScopeAccess().getInKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementScope__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementScope__Group__2__Impl
	rule__ElementScope__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementScope__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementScopeAccess().getElementsKeyword_2()); }

	'elements' 

{ after(grammarAccess.getElementScopeAccess().getElementsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementScope__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementScope__Group__3__Impl
	rule__ElementScope__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementScope__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementScopeAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getElementScopeAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementScope__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementScope__Group__4__Impl
	rule__ElementScope__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementScope__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementScopeAccess().getUrisAssignment_4()); }
(rule__ElementScope__UrisAssignment_4)
{ after(grammarAccess.getElementScopeAccess().getUrisAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementScope__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementScope__Group__5__Impl
	rule__ElementScope__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementScope__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementScopeAccess().getGroup_5()); }
(rule__ElementScope__Group_5__0)*
{ after(grammarAccess.getElementScopeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementScope__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementScope__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementScope__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementScopeAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getElementScopeAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ElementScope__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementScope__Group_5__0__Impl
	rule__ElementScope__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementScope__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementScopeAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getElementScopeAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementScope__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementScope__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementScope__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementScopeAccess().getUrisAssignment_5_1()); }
(rule__ElementScope__UrisAssignment_5_1)
{ after(grammarAccess.getElementScopeAccess().getUrisAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WhereEntry__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhereEntry__Group__0__Impl
	rule__WhereEntry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereEntry__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhereEntryAccess().getAndWhereEntryParserRuleCall_0()); }
	ruleAndWhereEntry
{ after(grammarAccess.getWhereEntryAccess().getAndWhereEntryParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhereEntry__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhereEntry__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereEntry__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhereEntryAccess().getGroup_1()); }
(rule__WhereEntry__Group_1__0)?
{ after(grammarAccess.getWhereEntryAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WhereEntry__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhereEntry__Group_1__0__Impl
	rule__WhereEntry__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereEntry__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhereEntryAccess().getOrWhereEntryEntriesAction_1_0()); }
(

)
{ after(grammarAccess.getWhereEntryAccess().getOrWhereEntryEntriesAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhereEntry__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhereEntry__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereEntry__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getWhereEntryAccess().getGroup_1_1()); }
(rule__WhereEntry__Group_1_1__0)
{ after(grammarAccess.getWhereEntryAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getWhereEntryAccess().getGroup_1_1()); }
(rule__WhereEntry__Group_1_1__0)*
{ after(grammarAccess.getWhereEntryAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WhereEntry__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhereEntry__Group_1_1__0__Impl
	rule__WhereEntry__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereEntry__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhereEntryAccess().getOrKeyword_1_1_0()); }

	'or' 

{ after(grammarAccess.getWhereEntryAccess().getOrKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhereEntry__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhereEntry__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereEntry__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhereEntryAccess().getEntriesAssignment_1_1_1()); }
(rule__WhereEntry__EntriesAssignment_1_1_1)
{ after(grammarAccess.getWhereEntryAccess().getEntriesAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndWhereEntry__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndWhereEntry__Group__0__Impl
	rule__AndWhereEntry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndWhereEntry__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndWhereEntryAccess().getConcreteWhereEntryParserRuleCall_0()); }
	ruleConcreteWhereEntry
{ after(grammarAccess.getAndWhereEntryAccess().getConcreteWhereEntryParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndWhereEntry__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndWhereEntry__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndWhereEntry__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndWhereEntryAccess().getGroup_1()); }
(rule__AndWhereEntry__Group_1__0)?
{ after(grammarAccess.getAndWhereEntryAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndWhereEntry__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndWhereEntry__Group_1__0__Impl
	rule__AndWhereEntry__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndWhereEntry__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndWhereEntryAccess().getAndWhereEntryEntriesAction_1_0()); }
(

)
{ after(grammarAccess.getAndWhereEntryAccess().getAndWhereEntryEntriesAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndWhereEntry__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndWhereEntry__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndWhereEntry__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAndWhereEntryAccess().getGroup_1_1()); }
(rule__AndWhereEntry__Group_1_1__0)
{ after(grammarAccess.getAndWhereEntryAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getAndWhereEntryAccess().getGroup_1_1()); }
(rule__AndWhereEntry__Group_1_1__0)*
{ after(grammarAccess.getAndWhereEntryAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndWhereEntry__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndWhereEntry__Group_1_1__0__Impl
	rule__AndWhereEntry__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndWhereEntry__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndWhereEntryAccess().getAndKeyword_1_1_0()); }

	'and' 

{ after(grammarAccess.getAndWhereEntryAccess().getAndKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndWhereEntry__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndWhereEntry__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndWhereEntry__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndWhereEntryAccess().getEntriesAssignment_1_1_1()); }
(rule__AndWhereEntry__EntriesAssignment_1_1_1)
{ after(grammarAccess.getAndWhereEntryAccess().getEntriesAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParWhereEntry__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParWhereEntry__Group__0__Impl
	rule__ParWhereEntry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParWhereEntry__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParWhereEntryAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParWhereEntryAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParWhereEntry__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParWhereEntry__Group__1__Impl
	rule__ParWhereEntry__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParWhereEntry__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParWhereEntryAccess().getWhereEntryParserRuleCall_1()); }
	ruleWhereEntry
{ after(grammarAccess.getParWhereEntryAccess().getWhereEntryParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParWhereEntry__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParWhereEntry__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParWhereEntry__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParWhereEntryAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getParWhereEntryAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExpressionWhereEntry__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionWhereEntry__Group__0__Impl
	rule__ExpressionWhereEntry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionWhereEntry__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionWhereEntryAccess().getLhsAssignment_0()); }
(rule__ExpressionWhereEntry__LhsAssignment_0)
{ after(grammarAccess.getExpressionWhereEntryAccess().getLhsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionWhereEntry__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionWhereEntry__Group__1__Impl
	rule__ExpressionWhereEntry__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionWhereEntry__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionWhereEntryAccess().getOperatorAssignment_1()); }
(rule__ExpressionWhereEntry__OperatorAssignment_1)
{ after(grammarAccess.getExpressionWhereEntryAccess().getOperatorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionWhereEntry__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionWhereEntry__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionWhereEntry__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionWhereEntryAccess().getRhsAssignment_2()); }
(rule__ExpressionWhereEntry__RhsAssignment_2)
{ after(grammarAccess.getExpressionWhereEntryAccess().getRhsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AliasAttributeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasAttributeExpression__Group__0__Impl
	rule__AliasAttributeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasAttributeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasAttributeExpressionAccess().getAliasAssignment_0()); }
(rule__AliasAttributeExpression__AliasAssignment_0)
{ after(grammarAccess.getAliasAttributeExpressionAccess().getAliasAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasAttributeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasAttributeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasAttributeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasAttributeExpressionAccess().getGroup_1()); }
(rule__AliasAttributeExpression__Group_1__0)?
{ after(grammarAccess.getAliasAttributeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AliasAttributeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasAttributeExpression__Group_1__0__Impl
	rule__AliasAttributeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasAttributeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasAttributeExpressionAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getAliasAttributeExpressionAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasAttributeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasAttributeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasAttributeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasAttributeExpressionAccess().getAttributeAssignment_1_1()); }
(rule__AliasAttributeExpression__AttributeAssignment_1_1)
{ after(grammarAccess.getAliasAttributeExpressionAccess().getAttributeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QueryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryExpression__Group__0__Impl
	rule__QueryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getQueryExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryExpression__Group__1__Impl
	rule__QueryExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryExpressionAccess().getValueAssignment_1()); }
(rule__QueryExpression__ValueAssignment_1)
{ after(grammarAccess.getQueryExpressionAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getQueryExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DefaultQueryAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDefaultQueryMQLqueryParserRuleCall_1_0()); }
	ruleMQLquery{ after(grammarAccess.getModelAccess().getDefaultQueryMQLqueryParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__NamedQueriesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNamedQueriesNamedQueryParserRuleCall_2_0()); }
	ruleNamedQuery{ after(grammarAccess.getModelAccess().getNamedQueriesNamedQueryParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImpURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImpURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImpURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedQuery__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedQueryAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getNamedQueryAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedQuery__QueryAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedQueryAccess().getQueryMQLqueryParserRuleCall_2_0()); }
	ruleMQLquery{ after(grammarAccess.getNamedQueryAccess().getQueryMQLqueryParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__FromEntriesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getFromEntriesFromEntryParserRuleCall_1_0()); }
	ruleFromEntry{ after(grammarAccess.getMQLqueryAccess().getFromEntriesFromEntryParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__FromEntriesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getFromEntriesFromEntryParserRuleCall_2_1_0()); }
	ruleFromEntry{ after(grammarAccess.getMQLqueryAccess().getFromEntriesFromEntryParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__SelectEntriesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getSelectEntriesSelectEntryParserRuleCall_4_0()); }
	ruleSelectEntry{ after(grammarAccess.getMQLqueryAccess().getSelectEntriesSelectEntryParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__SelectEntriesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getSelectEntriesSelectEntryParserRuleCall_5_1_0()); }
	ruleSelectEntry{ after(grammarAccess.getMQLqueryAccess().getSelectEntriesSelectEntryParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MQLquery__WhereEntryAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMQLqueryAccess().getWhereEntryWhereEntryParserRuleCall_6_1_0()); }
	ruleWhereEntry{ after(grammarAccess.getMQLqueryAccess().getWhereEntryWhereEntryParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__SelectAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectEntryAccess().getSelectFromEntryCrossReference_0_0()); }
(
{ before(grammarAccess.getSelectEntryAccess().getSelectFromEntryIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getSelectEntryAccess().getSelectFromEntryIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getSelectEntryAccess().getSelectFromEntryCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__AttributeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectEntryAccess().getAttributeEAttributeCrossReference_1_1_0()); }
(
{ before(grammarAccess.getSelectEntryAccess().getAttributeEAttributeIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSelectEntryAccess().getAttributeEAttributeIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getSelectEntryAccess().getAttributeEAttributeCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getTypeEClassCrossReference_0_0()); }
(
{ before(grammarAccess.getFromEntryAccess().getTypeEClassIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getFromEntryAccess().getTypeEClassIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getFromEntryAccess().getTypeEClassCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__WithoutsubtypesAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getWithoutsubtypesWithoutsubtypesKeyword_1_0_0()); }
(
{ before(grammarAccess.getFromEntryAccess().getWithoutsubtypesWithoutsubtypesKeyword_1_0_0()); }

	'withoutsubtypes' 

{ after(grammarAccess.getFromEntryAccess().getWithoutsubtypesWithoutsubtypesKeyword_1_0_0()); }
)

{ after(grammarAccess.getFromEntryAccess().getWithoutsubtypesWithoutsubtypesKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__WithoutsubtypesTypesAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getWithoutsubtypesTypesEClassCrossReference_1_1_1_0()); }
(
{ before(grammarAccess.getFromEntryAccess().getWithoutsubtypesTypesEClassIDTerminalRuleCall_1_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getFromEntryAccess().getWithoutsubtypesTypesEClassIDTerminalRuleCall_1_1_1_0_1()); }
)
{ after(grammarAccess.getFromEntryAccess().getWithoutsubtypesTypesEClassCrossReference_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__WithoutsubtypesTypesAssignment_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getWithoutsubtypesTypesEClassCrossReference_1_1_2_1_0()); }
(
{ before(grammarAccess.getFromEntryAccess().getWithoutsubtypesTypesEClassIDTerminalRuleCall_1_1_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getFromEntryAccess().getWithoutsubtypesTypesEClassIDTerminalRuleCall_1_1_2_1_0_1()); }
)
{ after(grammarAccess.getFromEntryAccess().getWithoutsubtypesTypesEClassCrossReference_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__AliasAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getAliasIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getFromEntryAccess().getAliasIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FromEntry__ScopeClauseAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromEntryAccess().getScopeClauseScopeClauseParserRuleCall_4_0()); }
	ruleScopeClause{ after(grammarAccess.getFromEntryAccess().getScopeClauseScopeClauseParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceScope__NotInAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceScopeAccess().getNotInNotKeyword_0_0()); }
(
{ before(grammarAccess.getResourceScopeAccess().getNotInNotKeyword_0_0()); }

	'not' 

{ after(grammarAccess.getResourceScopeAccess().getNotInNotKeyword_0_0()); }
)

{ after(grammarAccess.getResourceScopeAccess().getNotInNotKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceScope__UrisAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceScopeAccess().getUrisSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getResourceScopeAccess().getUrisSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceScope__UrisAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceScopeAccess().getUrisSTRINGTerminalRuleCall_5_1_0()); }
	RULE_STRING{ after(grammarAccess.getResourceScopeAccess().getUrisSTRINGTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementScope__NotInAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementScopeAccess().getNotInNotKeyword_0_0()); }
(
{ before(grammarAccess.getElementScopeAccess().getNotInNotKeyword_0_0()); }

	'not' 

{ after(grammarAccess.getElementScopeAccess().getNotInNotKeyword_0_0()); }
)

{ after(grammarAccess.getElementScopeAccess().getNotInNotKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementScope__UrisAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementScopeAccess().getUrisSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getElementScopeAccess().getUrisSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementScope__UrisAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementScopeAccess().getUrisSTRINGTerminalRuleCall_5_1_0()); }
	RULE_STRING{ after(grammarAccess.getElementScopeAccess().getUrisSTRINGTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhereEntry__EntriesAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhereEntryAccess().getEntriesAndWhereEntryParserRuleCall_1_1_1_0()); }
	ruleAndWhereEntry{ after(grammarAccess.getWhereEntryAccess().getEntriesAndWhereEntryParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndWhereEntry__EntriesAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndWhereEntryAccess().getEntriesConcreteWhereEntryParserRuleCall_1_1_1_0()); }
	ruleConcreteWhereEntry{ after(grammarAccess.getAndWhereEntryAccess().getEntriesConcreteWhereEntryParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionWhereEntry__LhsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionWhereEntryAccess().getLhsAliasAttributeExpressionParserRuleCall_0_0()); }
	ruleAliasAttributeExpression{ after(grammarAccess.getExpressionWhereEntryAccess().getLhsAliasAttributeExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionWhereEntry__OperatorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionWhereEntryAccess().getOperatorOperatorEnumRuleCall_1_0()); }
	ruleOperator{ after(grammarAccess.getExpressionWhereEntryAccess().getOperatorOperatorEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionWhereEntry__RhsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionWhereEntryAccess().getRhsExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getExpressionWhereEntryAccess().getRhsExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AliasAttributeExpression__AliasAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasAttributeExpressionAccess().getAliasFromEntryCrossReference_0_0()); }
(
{ before(grammarAccess.getAliasAttributeExpressionAccess().getAliasFromEntryIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAliasAttributeExpressionAccess().getAliasFromEntryIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAliasAttributeExpressionAccess().getAliasFromEntryCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AliasAttributeExpression__AttributeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasAttributeExpressionAccess().getAttributeEStructuralFeatureCrossReference_1_1_0()); }
(
{ before(grammarAccess.getAliasAttributeExpressionAccess().getAttributeEStructuralFeatureIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAliasAttributeExpressionAccess().getAttributeEStructuralFeatureIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getAliasAttributeExpressionAccess().getAttributeEStructuralFeatureCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleExpression__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleExpressionAccess().getValueSIGNED_DOUBLETerminalRuleCall_0()); }
	RULE_SIGNED_DOUBLE{ after(grammarAccess.getDoubleExpressionAccess().getValueSIGNED_DOUBLETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LongExpression__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLongExpressionAccess().getValueSINGED_LONGTerminalRuleCall_0()); }
	RULE_SINGED_LONG{ after(grammarAccess.getLongExpressionAccess().getValueSINGED_LONGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringExpressionAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringExpressionAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NullExpression__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullExpressionAccess().getValueNullKeyword_0()); }
(
{ before(grammarAccess.getNullExpressionAccess().getValueNullKeyword_0()); }

	'null' 

{ after(grammarAccess.getNullExpressionAccess().getValueNullKeyword_0()); }
)

{ after(grammarAccess.getNullExpressionAccess().getValueNullKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__TrueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getTrueTrueKeyword_0_0()); }
(
{ before(grammarAccess.getBooleanExpressionAccess().getTrueTrueKeyword_0_0()); }

	'true' 

{ after(grammarAccess.getBooleanExpressionAccess().getTrueTrueKeyword_0_0()); }
)

{ after(grammarAccess.getBooleanExpressionAccess().getTrueTrueKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QueryExpression__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryExpressionAccess().getValueMQLqueryParserRuleCall_1_0()); }
	ruleMQLquery{ after(grammarAccess.getQueryExpressionAccess().getValueMQLqueryParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_SINGED_LONG : '-'? ('0'..'9')+;

RULE_SIGNED_DOUBLE : '-'? ('0'..'9')+ ('.' ('0'..'9')+)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;


