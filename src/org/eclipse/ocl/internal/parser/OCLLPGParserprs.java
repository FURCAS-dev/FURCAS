/**
* <copyright>
*
* Copyright (c) 2005, 2007 IBM Corporation and others.
* All rights reserved.   This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   IBM - Initial API and implementation
*
* </copyright>
*
* $Id: OCLLPGParserprs.java,v 1.4 2007/03/15 21:35:11 cdamus Exp $
*/

package org.eclipse.ocl.internal.parser;

public class OCLLPGParserprs implements lpg.lpgjavaruntime.ParseTable, OCLLPGParsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,1,1,1,1,1,1,
            1,1,1,0,0,0,0,0,0,0,
            1,0,1,1,1,0,0,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,0,0,0,0,0,1,1,1,
            1,0,1,1,0,0,1,0,1,1,
            1,1,1,0,0,0,0,0,0,1,
            1,1,0,0,0,0,0,0,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            1,1,1,1,1,1,0,1,2,4,
            1,0,1,1,2,1,1,1,7,4,
            4,0,1,3,0,1,5,5,5,3,
            3,1,2,4,4,4,1,6,8,0,
            1,1,3,0,1,1,1,1,3,1,
            3,3,3,1,3,3,3,3,3,3,
            1,1,1,3,3,1,3,3,1,2,
            2,1,2,2,4,6,1,1,1,3,
            2,5,1,1,1,1,1,1,1,1,
            1,1,1,1,1,3,0,1,1,1,
            1,1,1,1,3,3,3,3,3,3,
            4,1,1,1,1,1,0,1,1,3,
            1,1,3,2,3,1,1,1,1,1,
            4,1,1,1,1,1,1,1,1,2,
            2,2,1,1,4,4,4,4,4,4,
            4,4,4,4,4,1,3,5,6,8,
            1,3,5,3,0,1,1,1,1,1,
            4,4,0,1,1,3,1,1,3,3,
            1,1,5,5,5,5,5,5,5,5,
            5,5,5,5,5,5,5,5,5,5,
            5,5,5,5,5,2,5,0,1,0,
            1,1,3,5,0,1,2,3,7,5,
            5,0,1,1,3,1,1,3,-97,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-77,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-125,0,0,0,0,0,-124,0,0,
            0,-2,0,-3,-23,-38,0,0,-42,0,
            0,0,0,-265,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-79,0,
            -4,0,-5,0,-93,0,-13,0,0,0,
            -98,0,0,-11,-25,-24,0,0,0,0,
            0,-14,-41,-214,0,0,-266,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-9,0,0,
            0,0,0,0,0,0,0,-10,0,0,
            0,0,-16,0,0,-126,0,0,-127,0,
            0,-6,0,0,0,0,0,0,0,-95,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-48,0,-164,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-147,0,-165,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-148,0,-166,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-151,0,-167,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-217,0,-168,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-253,0,-169,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-295,0,-170,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-297,0,-171,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-17,0,-172,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-18,0,-19,0,-173,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -20,0,-26,0,-174,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-27,0,-28,0,-175,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -29,0,-30,0,-176,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-36,0,-37,0,-177,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -39,0,-43,0,-178,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-50,0,-51,0,-179,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -52,0,-53,0,-180,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-54,0,-80,0,-181,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -81,0,-82,0,-182,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-83,0,-84,0,-184,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -87,0,-88,0,-185,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-89,0,-90,0,-186,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -91,0,-92,0,-224,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-128,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-94,-99,
            0,0,-225,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-100,0,-101,0,-254,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-163,-102,
            0,0,0,-255,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-103,-104,0,-105,0,-256,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-106,0,-107,0,-257,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-108,-109,0,-110,
            0,-258,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-111,-112,0,-113,0,-259,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-114,-115,
            0,-116,0,-260,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-117,-118,0,-120,0,-261,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -121,-122,0,-123,0,-262,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-142,-143,0,-146,
            0,-263,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-149,-150,0,-153,0,-264,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-154,-155,
            0,-156,0,-119,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-157,0,-251,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-40,0,-300,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -158,-161,-162,-183,-191,-192,-193,0,0,0,
            0,-194,-195,-196,0,-31,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-32,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-33,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-34,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-35,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -45,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-49,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-76,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-86,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-152,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-159,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-211,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-216,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-219,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-221,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -222,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-223,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-270,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-291,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-296,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-298,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-304,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-305,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-138,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-139,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-140,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -141,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-132,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-133,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-134,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-135,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-136,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-137,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-78,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-197,-198,-199,-200,-201,
            -202,-203,-12,-204,0,-129,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-160,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-205,-206,-207,-208,-85,-209,-210,-213,0,
            -130,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-131,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-1,-215,0,0,0,0,
            -7,0,0,-218,-226,-227,-228,-229,-230,-231,
            -292,0,0,0,0,-15,0,-47,0,0,
            -232,-8,0,0,-233,-46,0,0,0,0,
            -234,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-21,0,0,0,0,0,
            0,0,0,0,0,-145,0,-44,0,0,
            -212,0,-96,0,0,-299,0,-144,0,0,
            -22,0,0,-220,-55,-235,-56,-57,-236,-237,
            -58,-238,-59,0,-60,-61,0,0,-62,-239,
            0,0,0,0,-63,0,0,0,0,-64,
            0,0,0,0,-65,0,0,0,0,0,
            0,0,0,0,-66,0,0,-67,-68,0,
            0,0,0,-69,-70,0,-71,-72,-73,-74,
            0,-75,0,-187,-188,0,-189,0,-190,-247,
            -294,-240,-241,-242,-243,0,-244,-245,0,0,
            -246,-248,-249,-250,0,0,-252,0,0,0,
            0,-267,0,-268,0,0,-269,0,-271,0,
            0,0,-272,-273,-274,-275,-276,-277,-278,-279,
            -280,-281,-282,-283,-284,-285,-286,-287,-288,-289,
            -290,-293,-301,-302,-303,-306,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            63,63,63,63,63,63,63,63,65,65,
            48,64,66,66,49,49,40,40,40,43,
            47,47,50,50,41,51,51,46,46,67,
            67,42,69,69,44,44,44,68,52,68,
            53,53,55,55,39,39,28,28,29,29,
            27,27,27,27,26,26,26,26,26,26,
            26,23,23,24,24,24,22,22,22,6,
            6,6,7,7,7,7,7,8,8,8,
            8,9,9,2,2,2,1,1,1,1,
            1,1,1,1,1,3,3,72,72,10,
            10,10,10,10,10,11,11,11,11,11,
            11,12,4,4,4,4,4,73,73,74,
            74,56,56,57,57,57,14,14,14,14,
            14,13,17,18,19,20,21,21,15,16,
            70,70,70,76,76,77,77,77,77,77,
            77,77,77,77,77,77,35,35,35,78,
            78,33,33,33,59,54,54,36,36,36,
            36,38,37,79,79,80,80,75,75,75,
            75,58,58,5,5,5,5,5,5,5,
            5,5,5,5,5,5,5,5,5,5,
            5,5,5,5,5,5,60,60,31,31,
            34,34,32,32,30,81,81,82,82,25,
            71,71,61,61,62,62,45,45,45,1,
            83,3092,1056,1021,79,66,339,72,77,78,
            99,100,101,102,103,104,126,127,128,129,
            130,1091,54,1058,62,1093,1128,1821,1126,47,
            486,83,3092,1056,1021,79,71,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,645,83,3099,119,121,182,687,83,
            3099,1612,124,182,168,371,827,83,96,827,
            83,1161,1755,1822,125,83,3092,1056,1021,79,
            66,339,72,77,78,99,100,101,102,103,
            104,126,127,128,129,130,1091,54,1058,62,
            1093,1128,226,1126,47,14,16,17,18,177,
            140,191,181,115,1788,932,142,57,181,224,
            355,780,83,1823,53,422,58,295,141,143,
            144,951,426,61,44,3148,3150,125,83,3092,
            1056,1021,79,66,339,72,77,78,99,100,
            101,102,103,104,126,127,128,129,130,1091,
            54,1058,62,1093,1128,226,1126,47,253,37,
            32,953,15,16,17,18,408,33,185,73,
            74,3127,224,667,343,356,827,83,2842,827,
            83,2844,756,83,45,363,1683,1684,3151,3150,
            314,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,54,1058,62,1093,1128,212,1126,
            47,776,1719,919,1686,314,83,3092,1056,1021,
            79,66,339,72,77,78,99,100,101,102,
            103,104,126,127,128,129,130,1091,54,1058,
            62,1093,1128,212,1126,47,345,1719,919,2957,
            314,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,54,1058,62,1093,1128,212,1126,
            47,43,1719,919,2958,314,83,3092,1056,1021,
            79,66,339,72,77,78,99,100,101,102,
            103,104,126,127,128,129,130,1091,54,1058,
            62,1093,1128,212,1126,47,176,1719,919,2959,
            314,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,54,1058,62,1093,1128,212,1126,
            47,217,1719,919,2960,314,83,3092,1056,1021,
            79,66,339,72,77,78,99,100,101,102,
            103,104,126,127,128,129,130,1091,54,1058,
            62,1093,1128,212,1126,47,218,1719,919,2971,
            314,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,54,1058,62,1093,1128,212,1126,
            47,3134,1719,919,2975,314,83,3092,1056,1021,
            79,66,339,72,77,78,99,100,101,102,
            103,104,126,127,128,129,130,1091,54,1058,
            62,1093,1128,212,1126,47,3153,1719,919,2981,
            314,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,54,1058,62,1093,1128,212,1126,
            47,3155,1719,776,3036,314,83,3092,1056,1021,
            79,66,339,72,77,78,99,100,101,102,
            103,104,126,127,128,129,130,1091,54,1058,
            62,1093,1128,212,1126,47,904,1719,911,3039,
            314,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,54,1058,62,1093,1128,212,1126,
            47,912,1719,183,3040,314,83,3092,1056,1021,
            79,66,339,72,77,78,99,100,101,102,
            103,104,126,127,128,129,130,1091,54,1058,
            62,1093,1128,212,1126,47,421,1719,636,3042,
            314,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,54,1058,62,1093,1128,212,1126,
            47,256,1719,429,3050,314,83,3092,1056,1021,
            79,66,339,72,77,78,99,100,101,102,
            103,104,126,127,128,129,130,1091,54,1058,
            62,1093,1128,212,1126,47,920,1719,921,3102,
            314,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,54,1058,62,1093,1128,212,1126,
            47,717,1719,188,3103,314,83,3092,1056,1021,
            79,66,339,72,77,78,99,100,101,102,
            103,104,126,127,128,129,130,1091,54,1058,
            62,1093,1128,212,1126,47,715,1719,881,3104,
            314,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,54,1058,62,1093,1128,212,1126,
            47,905,1719,677,3105,314,83,3092,1056,1021,
            79,66,339,72,77,78,99,100,101,102,
            103,104,126,127,128,129,130,1091,54,1058,
            62,1093,1128,212,1126,47,915,1719,647,3107,
            314,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,54,1058,62,1093,1128,212,1126,
            47,775,1719,849,3108,314,83,3092,1056,1021,
            79,66,339,72,77,78,99,100,101,102,
            103,104,126,127,128,129,130,1091,54,1058,
            62,1093,1128,212,1126,47,23,1719,781,3111,
            314,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,54,1058,62,1093,1128,212,1126,
            47,757,1719,936,3112,314,83,3092,1056,1021,
            79,66,339,72,77,78,99,100,101,102,
            103,104,126,127,128,129,130,1091,54,1058,
            62,1093,1128,212,1126,47,760,1719,945,3113,
            314,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,54,1058,62,1093,1128,212,1126,
            47,949,1719,929,3114,63,83,3092,1056,1021,
            79,66,339,72,77,78,99,100,101,102,
            103,104,126,127,128,129,130,1091,54,1058,
            62,1093,1128,1821,1126,47,593,83,3092,1056,
            1021,79,66,339,72,77,78,99,100,101,
            102,103,104,126,127,128,129,130,2892,924,
            939,120,121,314,83,3092,1056,1021,79,66,
            339,72,77,78,99,100,101,102,103,104,
            126,127,128,129,130,1091,54,1058,62,1093,
            1128,212,1126,47,956,1719,958,3129,431,83,
            3092,1056,1021,79,66,339,72,77,78,99,
            100,101,102,103,104,126,127,128,129,130,
            1091,54,1058,62,1093,1128,156,1126,47,1015,
            960,3136,2956,3135,431,83,3092,1056,1021,79,
            66,339,72,77,78,99,100,101,102,103,
            104,126,127,128,129,130,1091,54,1058,62,
            1093,1128,156,1126,47,962,964,3136,973,3138,
            431,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,54,1058,62,1093,1128,156,1126,
            47,2955,976,3136,978,3139,431,83,3092,1056,
            1021,79,66,339,72,77,78,99,100,101,
            102,103,104,126,127,128,129,130,1091,54,
            1058,62,1093,1128,156,1126,47,980,982,3136,
            984,3140,431,83,3092,1056,1021,79,66,339,
            72,77,78,99,100,101,102,103,104,126,
            127,128,129,130,1091,54,1058,62,1093,1128,
            156,1126,47,986,988,3136,990,3141,431,83,
            3092,1056,1021,79,66,339,72,77,78,99,
            100,101,102,103,104,126,127,128,129,130,
            1091,54,1058,62,1093,1128,156,1126,47,992,
            994,3136,996,3142,431,83,3092,1056,1021,79,
            66,339,72,77,78,99,100,101,102,103,
            104,126,127,128,129,130,1091,54,1058,62,
            1093,1128,156,1126,47,998,1000,3136,1002,3143,
            431,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,54,1058,62,1093,1128,156,1126,
            47,969,1005,3136,1007,3144,431,83,3092,1056,
            1021,79,66,339,72,77,78,99,100,101,
            102,103,104,126,127,128,129,130,1091,54,
            1058,62,1093,1128,156,1126,47,944,828,3136,
            1009,3145,431,83,3092,1056,1021,79,66,339,
            72,77,78,99,100,101,102,103,104,126,
            127,128,129,130,1091,54,1058,62,1093,1128,
            156,1126,47,935,1010,3136,1011,3146,431,83,
            3092,1056,1021,79,66,339,72,77,78,99,
            100,101,102,103,104,126,127,128,129,130,
            1091,54,1058,62,1093,1128,156,1126,47,1012,
            852,3136,778,3147,259,83,3092,1056,1021,79,
            66,339,72,77,78,99,100,101,102,103,
            104,126,127,128,129,130,1091,54,1058,62,
            1093,1128,212,1126,47,966,1824,259,83,3092,
            1056,1021,79,66,339,72,77,78,99,100,
            101,102,103,104,126,127,128,129,130,1091,
            54,1058,62,1093,1128,212,1126,47,538,3133,
            192,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,54,1058,62,1093,1128,226,1126,
            47,412,1014,878,675,1016,1020,1022,15,16,
            17,18,1024,1026,1028,225,259,83,3092,1056,
            1021,79,66,339,72,77,78,99,100,101,
            102,103,104,126,127,128,129,130,1091,54,
            1058,62,1093,1128,21,1126,47,259,83,3092,
            1056,1021,79,66,339,72,77,78,99,100,
            101,102,103,104,126,127,128,129,130,1091,
            54,1058,62,1093,1128,20,1126,47,259,83,
            3092,1056,1021,79,66,339,72,77,78,99,
            100,101,102,103,104,126,127,128,129,130,
            1091,54,1058,62,1093,1128,36,1126,47,259,
            83,3092,1056,1021,79,66,339,72,77,78,
            99,100,101,102,103,104,126,127,128,129,
            130,1091,54,1058,62,1093,1128,35,1126,47,
            259,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,54,1058,62,1093,1128,34,1126,
            47,259,83,3092,1056,1021,79,66,339,72,
            77,78,99,100,101,102,103,104,126,127,
            128,129,130,1091,54,1058,62,1093,1128,163,
            1126,47,259,83,3092,1056,1021,79,66,339,
            72,77,78,99,100,101,102,103,104,126,
            127,128,129,130,1091,54,1058,62,1093,1128,
            1289,1126,47,259,83,3092,1056,1021,79,66,
            339,72,77,78,99,100,101,102,103,104,
            126,127,128,129,130,1091,54,1058,62,1093,
            1128,1611,1126,47,259,83,3092,1056,1021,79,
            66,339,72,77,78,99,100,101,102,103,
            104,126,127,128,129,130,1091,54,1058,62,
            1093,1128,27,1126,47,259,83,3092,1056,1021,
            79,66,339,72,77,78,99,100,101,102,
            103,104,126,127,128,129,130,1091,54,1058,
            62,1093,1128,2954,1126,47,259,83,3092,1056,
            1021,79,66,339,72,77,78,99,100,101,
            102,103,104,126,127,128,129,130,1091,54,
            1058,62,1093,1128,124,1126,47,259,83,3092,
            1056,1021,79,66,339,72,77,78,99,100,
            101,102,103,104,126,127,128,129,130,1091,
            54,1058,62,1093,1128,30,1126,47,259,83,
            3092,1056,1021,79,66,339,72,77,78,99,
            100,101,102,103,104,126,127,128,129,130,
            1091,54,1058,62,1093,1128,214,1126,47,259,
            83,3092,1056,1021,79,66,339,72,77,78,
            99,100,101,102,103,104,126,127,128,129,
            130,1091,54,1058,62,1093,1128,213,1126,47,
            259,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,54,1058,62,1093,1128,164,1126,
            47,259,83,3092,1056,1021,79,66,339,72,
            77,78,99,100,101,102,103,104,126,127,
            128,129,130,1091,54,1058,62,1093,1128,125,
            1126,47,259,83,3092,1056,1021,79,66,339,
            72,77,78,99,100,101,102,103,104,126,
            127,128,129,130,1091,54,1058,62,1093,1128,
            123,1126,47,259,83,3092,1056,1021,79,66,
            339,72,77,78,99,100,101,102,103,104,
            126,127,128,129,130,1091,54,1058,62,1093,
            1128,3152,1126,47,259,83,3092,1056,1021,79,
            66,339,72,77,78,99,100,101,102,103,
            104,126,127,128,129,130,1091,54,1058,62,
            1093,1128,29,1126,47,259,83,3092,1056,1021,
            79,66,339,72,77,78,99,100,101,102,
            103,104,126,127,128,129,130,1091,54,1058,
            62,1093,1128,3154,1126,47,259,83,3092,1056,
            1021,79,66,339,72,77,78,99,100,101,
            102,103,104,126,127,128,129,130,1091,54,
            1058,62,1093,1128,157,1126,47,259,83,3092,
            1056,1021,79,66,339,72,77,78,99,100,
            101,102,103,104,126,127,128,129,130,1091,
            54,1058,62,1093,1128,3156,1126,47,259,83,
            3092,1056,1021,79,66,339,72,77,78,99,
            100,101,102,103,104,126,127,128,129,130,
            1091,54,1058,62,1093,1128,158,1126,47,539,
            83,3092,1056,1021,79,66,339,72,77,78,
            99,100,101,102,103,104,126,127,128,129,
            130,1091,54,1058,62,1093,2894,539,83,3092,
            1056,1021,79,66,339,72,77,78,99,100,
            101,102,103,104,126,127,128,129,130,1091,
            54,1058,62,2895,539,83,3092,1056,1021,79,
            66,339,72,77,78,99,100,101,102,103,
            104,126,127,128,129,130,1091,54,1058,62,
            2897,539,83,3092,1056,1021,79,66,339,72,
            77,78,99,100,101,102,103,104,126,127,
            128,129,130,1091,54,1058,62,2898,539,83,
            3092,1056,1021,79,66,339,72,77,78,99,
            100,101,102,103,104,126,127,128,129,130,
            1091,60,1058,62,539,83,3092,1056,1021,79,
            66,339,72,77,78,99,100,101,102,103,
            104,126,127,128,129,130,1091,59,1058,62,
            539,83,3092,1056,1021,79,66,339,72,77,
            78,99,100,101,102,103,104,126,127,128,
            129,130,1091,58,1058,62,539,83,3092,1056,
            1021,79,66,339,72,77,78,99,100,101,
            102,103,104,126,127,128,129,130,1091,57,
            1058,62,539,83,3092,1056,1021,79,66,339,
            72,77,78,99,100,101,102,103,104,126,
            127,128,129,130,1091,56,1058,62,539,83,
            3092,1056,1021,79,66,339,72,77,78,99,
            100,101,102,103,104,126,127,128,129,130,
            1091,55,1058,62,486,83,3092,1056,1021,79,
            70,339,72,77,78,99,100,101,102,103,
            104,126,127,128,129,130,1033,1035,1037,1039,
            1041,1043,1045,357,1047,1614,593,83,3092,1056,
            1021,79,66,339,72,77,78,99,100,101,
            102,103,104,126,127,128,129,130,2893,369,
            83,3092,1056,1021,79,70,339,72,77,78,
            99,100,101,102,103,104,126,127,128,129,
            130,9,880,897,851,868,928,873,892,1049,
            1614,593,83,3092,1056,1021,79,68,339,72,
            77,78,99,100,101,102,103,104,126,127,
            128,129,130,593,83,3092,1056,1021,79,67,
            339,72,77,78,99,100,101,102,103,104,
            126,127,128,129,130,799,813,167,1647,848,
            881,756,83,45,1030,1050,1054,1056,1059,1060,
            1063,813,167,28,848,881,742,167,814,848,
            881,1064,756,83,45,1067,742,167,6,848,
            881,1068,166,168,169,14,16,17,18,4,
            778,398,341,8,362,343,408,166,168,169,
            38,175,846,168,169,756,83,45,292,1,
            2843,811,1198,168,169,39,742,167,59,848,
            881,742,167,952,848,881,742,167,59,848,
            881,756,83,45,952,281,1071,281,281,1072,
            1075,281,1076,281,916,281,281,1231,1233,281,
            1079,42,364,168,169,281,178,3122,168,169,
            180,42,228,168,169,281,1290,180,1324,1326,
            918,1163,1360,1196,1395,281,1396,1398,281,281,
            1432,2899,177,1196,281,281,1434,281,281,281,
            281,1467,846,179,281,281,1468,281,1720,870,
            281,281,1080,1083,1084,1087,1470,1088,1091,1503,
            1504,1092,1095,1096,1099,1506,1539,1102,1540,1542,
            1575,1576,1100,1578,1105,1612,1467,831,1614,1107,
            3117,82,207,676,894,1108,898,871,1112,1113,
            1116,1117,1120,1121,1124,1128,1129,1132,1133,1125,
            1136,1137,3,1138,1140,1141,1143,3159,3159
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,0,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,0,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,0,44,45,46,47,48,49,
            50,51,0,53,54,3,0,0,0,3,
            0,3,0,1,64,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,82,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,41,42,83,44,45,46,47,
            48,49,50,51,0,53,54,60,61,62,
            60,61,62,0,0,1,64,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,0,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,38,39,40,41,42,0,44,45,
            46,47,48,49,50,51,0,53,54,0,
            1,58,0,1,0,71,72,0,0,22,
            0,0,1,69,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,0,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,38,
            39,40,41,42,55,44,45,46,47,48,
            49,50,51,59,53,54,59,63,58,73,
            63,75,0,77,78,0,1,0,0,1,
            69,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            0,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,0,44,45,46,47,48,49,50,51,
            58,53,54,0,1,0,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,55,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,0,44,45,46,
            47,48,49,50,51,0,53,54,0,1,
            0,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            0,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,0,44,45,46,47,48,49,50,51,
            0,0,52,55,4,0,70,57,0,1,
            0,1,64,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,0,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,52,44,45,46,47,48,49,
            50,51,57,53,54,0,1,76,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,0,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,41,42,0,44,
            45,46,47,48,49,50,51,0,0,1,
            55,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            0,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,0,44,45,46,47,48,49,50,51,
            0,53,0,1,57,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,0,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,41,42,0,44,45,46,47,
            48,49,50,51,0,0,0,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,0,23,24,25,
            26,27,26,27,0,0,0,33,34,35,
            36,37,38,39,40,41,0,52,22,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,0,23,
            24,25,26,27,0,1,0,43,43,33,
            34,35,36,37,38,39,40,41,52,85,
            86,87,88,89,90,91,92,93,94,95,
            96,0,68,68,3,0,5,6,7,8,
            9,10,11,12,13,0,0,1,3,0,
            5,6,7,8,9,10,11,12,13,28,
            29,30,31,32,0,0,21,0,22,0,
            0,4,3,42,5,6,7,8,9,10,
            11,12,13,19,20,79,0,22,0,22,
            21,3,43,23,24,25,0,28,29,30,
            31,32,0,0,0,3,3,5,6,7,
            8,9,10,11,12,13,0,0,1,3,
            0,5,6,7,8,9,10,11,12,13,
            28,29,30,31,32,0,0,21,0,22,
            0,0,4,0,42,57,58,59,60,61,
            62,63,14,15,16,17,18,0,70,0,
            0,4,0,23,24,25,4,0,1,0,
            0,14,15,16,17,18,14,15,16,17,
            18,0,22,0,43,4,0,0,19,20,
            55,71,72,0,0,14,15,16,17,18,
            0,0,67,43,0,19,20,66,0,0,
            0,3,52,0,55,22,56,0,0,52,
            3,0,22,22,0,0,67,2,0,1,
            43,22,22,0,0,65,2,4,0,56,
            2,0,0,56,3,0,1,0,1,0,
            1,0,1,0,1,0,52,74,0,65,
            2,43,0,1,43,0,1,0,1,0,
            1,0,1,0,1,0,1,0,1,0,
            1,0,1,0,1,0,1,0,1,0,
            1,0,1,80,0,1,0,1,0,0,
            0,0,2,0,0,0,1,3,84,0,
            1,0,1,0,1,0,1,0,1,0,
            22,66,0,1,0,1,0,1,0,1,
            0,1,0,1,0,1,0,1,0,0,
            2,2,43,0,43,0,43,2,0,0,
            2,2,0,0,2,2,0,0,2,2,
            0,0,2,2,0,0,2,2,0,0,
            2,2,0,0,2,2,0,0,2,2,
            0,0,2,2,0,0,2,2,0,0,
            2,0,1,4,0,52,0,0,2,2,
            81,0,0,2,2,0,0,2,2,0,
            0,2,2,0,0,2,22,0,0,2,
            2,0,0,2,2,0,0,0,2,0,
            0,2,0,0,2,0,22,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,43,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,56,0,0,56,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            117,2053,3159,1023,3078,3247,3245,3246,3248,3249,
            3250,3251,3252,3253,3049,3046,3045,3043,3075,3060,
            3055,3243,46,3041,3038,3037,3065,2869,3271,3272,
            3273,3274,3275,260,3084,3079,3085,3088,3090,3089,
            3035,3087,988,22,986,3294,3291,3293,3295,3296,
            3297,3298,3159,2022,463,3254,3159,3159,40,813,
            31,294,3159,2053,2146,1023,3078,3247,3245,3246,
            3248,3249,3250,3251,3252,3253,3049,3046,3045,3043,
            3075,3060,3055,3243,3378,3041,3038,3037,3065,2869,
            3271,3272,3273,3274,3275,260,3084,3079,3085,3088,
            3090,3089,3035,3087,988,2549,986,3294,3291,3293,
            3295,3296,3297,3298,3159,2022,463,2972,2951,422,
            2972,2951,422,3159,222,2053,2146,1023,3078,3247,
            3245,3246,3248,3249,3250,3251,3252,3253,3049,3046,
            3045,3043,3075,3060,3055,3243,3159,3041,3038,3037,
            3065,2814,3271,3272,3273,3274,3275,260,3084,3079,
            3085,3088,3090,3089,3035,3087,988,161,986,3294,
            3291,3293,3295,3296,3297,3298,69,2022,463,133,
            208,3158,95,3018,3159,413,743,24,3159,2966,
            23,3159,2053,3149,1023,3078,3247,3245,3246,3248,
            3249,3250,3251,3252,3253,3049,3046,3045,3043,3075,
            3060,3055,3243,3159,3041,3038,3037,3065,2814,3271,
            3272,3273,3274,3275,260,3084,3079,3085,3088,3090,
            3089,3035,3087,988,3368,986,3294,3291,3293,3295,
            3296,3297,3298,3031,2022,463,26,3005,5,282,
            26,288,26,419,416,3159,2976,3159,3159,2053,
            3149,1023,3078,3247,3245,3246,3248,3249,3250,3251,
            3252,3253,3049,3046,3045,3043,3075,3060,3055,3243,
            208,3041,3038,3037,3065,2814,3271,3272,3273,3274,
            3275,260,3084,3079,3085,3088,3090,3089,3035,3087,
            988,3159,986,3294,3291,3293,3295,3296,3297,3298,
            3,2022,463,210,2053,3159,1023,3078,3247,3245,
            3246,3248,3249,3250,3251,3252,3253,3049,3046,3045,
            3043,3075,3060,3055,3243,3368,3041,3038,3037,3065,
            2814,3271,3272,3273,3274,3275,260,3084,3079,3085,
            3088,3090,3089,3035,3087,988,2,986,3294,3291,
            3293,3295,3296,3297,3298,3159,2022,463,3159,2053,
            12,1023,3078,3247,3245,3246,3248,3249,3250,3251,
            3252,3253,3049,3046,3045,3043,3075,3060,3055,3243,
            3159,3041,3038,3037,3065,2814,3271,3272,3273,3274,
            3275,260,3084,3079,3085,3088,3090,3089,3035,3087,
            988,122,986,3294,3291,3293,3295,3296,3297,3298,
            162,25,296,3368,1991,11,354,347,3159,2968,
            3159,2053,2332,3137,3078,3247,3245,3246,3248,3249,
            3250,3251,3252,3253,3049,3046,3045,3043,3075,3060,
            3055,3243,3159,3041,3038,3037,3065,2814,3271,3272,
            3273,3274,3275,260,3084,3079,3085,3088,3090,3089,
            3035,3087,988,299,986,3294,3291,3293,3295,3296,
            3297,3298,347,2022,463,3159,2053,2301,1023,3078,
            3247,3245,3246,3248,3249,3250,3251,3252,3253,3049,
            3046,3045,3043,3075,3060,3055,3243,3159,3041,3038,
            3037,3065,2814,3271,3272,3273,3274,3275,260,3084,
            3079,3085,3088,3090,3089,3035,3087,988,3159,986,
            3294,3291,3293,3295,3296,3297,3298,13,3159,2053,
            3368,1023,3078,3247,3245,3246,3248,3249,3250,3251,
            3252,3253,3049,3046,3045,3043,3075,3060,3055,3243,
            3159,3041,3038,3037,3065,2814,3271,3272,3273,3274,
            3275,260,3084,3079,3085,3088,3090,3089,3035,3087,
            988,3159,986,3294,3291,3293,3295,3296,3297,3298,
            3159,2022,3159,2053,347,1023,3078,3247,3245,3246,
            3248,3249,3250,3251,3252,3253,3049,3046,3045,3043,
            3075,3060,3055,3243,3159,3041,3038,3037,3065,2814,
            3271,3272,3273,3274,3275,260,3084,3079,3085,3088,
            3090,3089,3035,3087,988,170,986,3294,3291,3293,
            3295,3296,3297,3298,3159,3159,61,3244,3078,3247,
            3245,3246,3248,3249,3250,3251,3252,3253,3049,3046,
            3045,3043,3075,3095,3055,3243,3159,3041,3038,3037,
            3065,3097,2846,1266,3159,3159,85,3094,3084,3079,
            3085,3088,3090,3089,3035,3087,3159,296,1836,3244,
            3078,3247,3245,3246,3248,3249,3250,3251,3252,3253,
            3049,3046,3045,3043,3075,3095,3055,3243,3159,3041,
            3038,3037,3065,3097,3159,430,3159,2239,2239,3094,
            3084,3079,3085,3088,3090,3089,3035,3087,95,1825,
            2841,2840,2839,2837,2838,2836,1834,1833,1832,1827,
            1826,3159,3100,3101,3254,3159,3247,3245,3246,3248,
            3249,3250,3251,3252,3253,44,96,3028,3244,41,
            3247,3245,3246,3248,3249,3250,3251,3252,3253,3271,
            3272,3273,3274,3275,63,3159,3243,161,3016,3159,
            48,2270,3244,883,3247,3245,3246,3248,3249,3250,
            3251,3252,3253,2923,2901,3169,3159,1867,22,2966,
            3243,294,498,2631,2604,2577,3159,3268,3264,3267,
            3265,3266,165,173,3159,3254,294,3247,3245,3246,
            3248,3249,3250,3251,3252,3253,3159,3159,3018,3244,
            19,3247,3245,3246,3248,3249,3250,3251,3252,3253,
            3271,3272,3273,3274,3275,208,3159,3243,50,3021,
            49,3159,2788,3159,883,347,7,25,2972,2951,
            422,25,2736,2710,2684,2658,2762,53,354,208,
            85,2788,52,2631,2604,2577,2788,110,1293,65,
            3159,2736,2710,2684,2658,2762,2736,2710,2684,2658,
            2762,51,2966,3159,3034,2788,64,3159,2923,2901,
            3368,23,23,3159,3159,2736,2710,2684,2658,2762,
            3159,3159,1724,161,3159,2923,2901,3290,3159,3159,
            3159,294,95,3159,3368,1898,161,3159,174,96,
            1648,215,1929,1960,3159,3159,1757,1650,3159,1359,
            708,2896,2084,3159,3159,3023,3330,2177,3159,2425,
            3331,3159,3159,2456,1722,3159,465,3159,500,3159,
            535,3159,570,3159,605,3159,351,673,3159,229,
            3239,533,3159,640,568,3159,675,3159,710,3159,
            745,3159,780,3159,815,3159,850,3159,885,3159,
            920,3159,955,3159,990,3159,1025,3159,1060,3159,
            1095,81,1130,2115,3159,1165,3159,1200,3159,216,
            3159,211,3234,118,97,3159,638,3254,2208,3159,
            1328,3159,1364,3159,1400,3159,1436,3159,1472,3159,
            2946,3270,3159,1508,3159,1544,3159,1580,3159,1616,
            3159,1652,3159,1688,3159,304,3159,367,3159,3159,
            3124,3364,603,98,2239,3159,1235,3363,3159,3159,
            3362,3361,3159,3159,3359,3358,3159,3159,3357,3356,
            3159,3159,3355,3354,3159,3159,3352,3351,3159,3159,
            3350,3349,3159,3159,3348,3347,3159,3159,3346,3345,
            3159,3159,3344,3343,3159,3159,3342,3360,3159,3159,
            3353,206,1130,2394,3159,296,3159,3159,3235,3314,
            2363,3159,3159,3313,3312,3159,3159,3311,3310,3159,
            3159,3309,3308,3159,227,3307,2961,3159,3159,3306,
            3305,3159,3159,3304,3380,223,3159,3159,3379,3159,
            3159,3318,3159,3159,3319,3159,3026,3159,3159,3159,
            3159,3159,3159,3159,3159,3159,3159,3159,3159,3159,
            3159,3159,3159,3159,3159,3159,3159,3159,3159,3159,
            3159,3159,3159,3159,3159,3159,3159,3159,1790,3159,
            3159,3159,3159,3159,3159,3159,3159,3159,3159,3159,
            3159,3159,3159,2487,3159,3159,2518
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            419,252,100,244,245,168,168,168,427,428,
            163,365,163,251,216,179,179,179,179,179,
            168,168,108,296,302,301,353,233,417,417,
            114,114,114,114,114,179,179,153,464,463,
            293,153,248,457,114,216,457,163,114,417,
            254,254,256,304,416,416,416,416,416,416,
            416,416,416,258,416,416,416,416,416,416,
            416,416,416,416,257,114,369,369,260,266,
            264,268,277,274,163,114,300,491,490,491,
            491,490,165,306,181,163,1,37,417,417,
            417,417,417,417,417,417,417,417,417,417,
            417,417,417,417,417,417,417,417,114,321,
            491,417,417,131,54,153,153,116,116,116,
            116,115,115,115,115,115,115,115,115,115,
            115,98,308,457,216,179,163,163,166,165,
            163,114,491,490,313,311,314,316,114,368,
            313,320,457,181,181,181,181,181,181,181,
            181,181,181,181,181,181,181,181,181,181,
            181,181,362,181,181,181,416,416,416,257,
            417,417,417,417,417,417,417,417,417,417,
            417,417,417,417,264,264,274,268,268,268,
            114,216,491,245,431,114,163,452,114,163,
            114,114,114,2,181,491,454,491,491,491,
            491,491,491,491,491,491,491,491,491,491,
            491,491,491,491,491,491,259,491,491,491,
            114,321,163,114,114,114,114,114,114,114,
            114,114,114,114,112,112,98,179,460,114,
            491,362,105,491,359,466,491,491,491,491,
            491,491,491,491,491,491,491,489,490,491,
            114,432,493,259,163,114,163,114,216,113,
            360,491,360,114,114,491
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            66,27,64,33,1,38,39,37,41,36,
            34,35,4,18,26,19,20,14,15,16,
            17,23,24,25,40,42,48,49,45,47,
            46,50,51,44,53,54,6,7,5,8,
            9,10,11,12,13,21,3,29,31,32,
            30,28,0,86,87,88,90,89,91,92,
            93,94,95,96,85,6,7,5,8,9,
            10,11,12,13,21,3,38,39,37,41,
            36,34,35,18,26,27,19,20,14,15,
            16,17,33,23,24,25,40,4,0,2,
            43,84,58,22,56,74,0,79,57,52,
            0,2,69,54,53,1,28,29,30,31,
            32,42,48,49,45,47,46,50,51,44,
            38,39,37,41,36,34,35,4,18,26,
            27,19,20,14,15,16,17,33,23,24,
            25,40,21,6,7,5,8,9,10,11,
            12,13,3,0,43,84,0,21,3,6,
            7,5,8,9,10,11,12,13,22,0,
            2,27,33,1,38,39,37,41,36,34,
            35,4,18,26,19,20,14,15,16,17,
            23,24,25,40,48,49,45,47,46,50,
            51,21,44,53,54,6,7,5,8,9,
            10,11,12,13,42,28,29,30,31,32,
            3,0,4,2,66,56,43,74,60,61,
            62,84,52,58,72,71,0,59,63,79,
            57,58,0,65,0,52,67,1,55,77,
            78,73,75,19,20,26,27,4,18,14,
            15,16,17,23,24,25,2,66,68,56,
            43,74,76,59,63,71,72,80,81,82,
            84,83,57,79,58,60,61,62,0,22,
            1,59,63,52,0,80,0,22,1,0,
            22,4,43,66,0,66,43,76,0,52,
            26,27,19,20,14,15,16,17,18,68,
            73,75,76,77,78,59,60,61,62,57,
            79,63,71,72,80,81,82,23,24,25,
            83,1,2,66,74,84,58,4,43,56,
            0,68,43,0,58,70,0,64,44,6,
            7,5,8,9,10,11,12,13,21,3,
            51,50,46,19,47,45,48,49,42,28,
            29,30,31,32,38,39,37,41,36,34,
            35,4,18,26,27,20,14,15,16,17,
            33,23,24,25,40,55,1,0,71,72,
            57,70,60,61,62,3,58,59,63,0,
            4,60,61,62,6,7,5,8,9,10,
            11,12,13,42,28,29,30,31,32,3,
            0,81,0,2,52,0,2,3,0,71,
            72,58,57,79,0,56,52,26,27,19,
            20,14,15,4,16,17,18,1,67,73,
            75,55,77,78,23,24,25,83,22,43,
            2,0,82,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static byte nasb[] = {0,
            39,33,33,33,33,27,27,27,33,33,
            32,34,16,23,31,33,33,33,33,33,
            27,27,9,21,19,33,33,33,33,33,
            30,30,30,30,30,33,33,7,33,23,
            25,7,33,46,30,31,44,51,30,33,
            33,33,33,33,4,4,4,4,4,4,
            4,4,4,4,4,4,4,4,4,4,
            4,4,4,4,4,30,1,1,11,33,
            33,33,33,33,36,30,33,33,33,33,
            33,33,14,33,30,48,30,7,33,33,
            33,33,33,33,33,33,33,33,33,33,
            33,33,33,33,33,33,33,33,30,33,
            33,33,33,7,6,7,7,30,30,30,
            30,30,30,30,30,30,30,30,30,30,
            30,33,33,46,31,33,51,51,33,33,
            51,30,33,33,33,33,33,33,30,1,
            33,33,32,30,30,30,30,30,30,30,
            30,30,30,30,30,30,30,30,30,30,
            30,30,33,30,30,30,4,4,4,4,
            33,33,33,33,33,33,33,33,33,33,
            33,33,33,33,33,33,33,33,33,33,
            30,31,33,42,31,30,51,33,30,50,
            30,30,30,30,30,33,33,33,33,33,
            33,33,33,33,33,33,33,33,33,33,
            33,33,33,33,33,33,4,33,33,33,
            30,33,51,29,29,29,29,29,29,29,
            29,29,29,29,30,30,33,33,33,30,
            33,33,33,33,33,33,33,33,33,33,
            33,33,33,33,33,33,33,33,33,33,
            30,31,33,4,51,30,51,30,31,30,
            33,33,33,30,30,33
        };
    };
    public final static byte nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            3,2,4,31,0,76,2,0,49,0,
            70,71,0,82,0,3,68,0,46,0,
            69,0,40,0,44,0,39,0,33,2,
            4,3,0,48,0,52,67,0,49,65,
            46,47,0,80,0,55,0,75,0,59,
            33,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            11,12,96,7,83,84,85,86,87,89,
            90,91,92,5,6,8,9,10,3,4,
            34,20,49,50,51,1,2,58,59,60,
            61,62,52,75,76,77,78,79,80,81,
            82,88,19,30,31,32,33,56,57,93,
            94,21,45,54,25,18,39,95,35,36,
            37,38,42,97,13,14,15,16,28,40,
            43,44,17,22,23,24,26,27,41,46,
            47,48,53,55,63,64,65,66,67,68,
            69,70,71,72,73,74,98
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            0,108,105,127,0,122,123,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,121,119,120,0,118,117,110,116,0,
            0,126,103,0,133,109,0,0,0,107,
            0,0,0,101,138,100,102,104,106,0,
            0,112,0,0,115,129,0,131,134,0,
            0,137,0,0,99,0,111,113,114,124,
            125,0,0,128,130,132,0,0,0,135,
            0,136,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            178,13,206,283,186,1,8,53,58,63,
            68,73,78,83,88,93,98,103,108,113,
            118,123,128,133,138,143,148,153,158,22,
            163,167,226,230,234,238,242,246,250,254,
            258,262,266,270,276,289,40,47,171,212,
            47,196,196,280,31,219,219
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            6,20,6,6,192,6,6,6,6,6,
            6,6,6,6,6,6,6,6,6,6,
            6,6,6,6,6,6,6,6,6,27,
            6,6,6,6,6,6,6,6,6,6,
            6,6,6,274,274,6,44,51,175,216,
            51,192,200,6,34,216,221
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            78,25,78,7,78,71,71,5,5,5,
            5,5,5,5,5,5,5,5,5,5,
            5,5,5,5,5,5,5,5,5,25,
            37,38,77,77,77,77,77,77,77,77,
            77,77,77,13,12,7,30,60,33,35,
            9,78,78,8,25,35,35
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            2,82,2,2,56,2,2,2,2,2,
            2,2,2,2,2,2,2,2,2,2,
            2,2,2,2,2,2,2,2,2,81,
            2,2,2,2,2,2,2,2,2,2,
            2,2,2,66,66,2,84,68,4,56,
            68,56,74,2,80,56,43
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static byte scopeStateSet[] = {
            2,15,2,8,2,4,4,6,6,6,
            6,6,6,6,6,6,6,6,6,6,
            6,6,6,6,6,6,6,6,6,15,
            91,91,2,2,2,2,2,2,2,2,
            2,2,2,8,8,8,25,1,99,79,
            8,2,2,8,15,79,79
        };
    };
    public final static byte scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            158,1,99,78,0,12,0,158,1,99,
            77,0,125,81,125,80,125,53,0,48,
            0,125,80,125,53,0,47,110,48,0,
            125,53,0,46,110,47,110,48,0,178,
            130,54,0,55,110,0,129,67,99,0,
            16,0,131,1,128,25,0,131,1,128,
            24,0,131,1,128,23,0,131,1,128,
            33,0,131,1,128,17,0,131,1,128,
            16,0,131,1,128,15,0,131,1,128,
            14,0,131,1,128,20,0,131,1,128,
            19,0,131,1,128,27,0,131,1,128,
            26,0,131,1,128,18,0,131,1,128,
            4,0,131,1,128,35,0,131,1,128,
            34,0,131,1,128,36,0,131,1,128,
            41,0,131,1,128,37,0,131,1,128,
            39,0,131,1,128,38,0,131,1,128,
            99,0,176,1,42,0,133,1,101,0,
            133,22,3,0,7,110,0,125,56,130,
            74,130,1,85,0,130,74,130,1,85,
            0,18,110,12,0,130,1,85,0,22,
            103,18,110,12,0,125,56,130,1,85,
            0,130,43,130,0,18,110,0,130,0,
            19,103,18,110,0,132,1,96,0,132,
            1,95,0,132,1,94,0,132,1,93,
            0,132,1,92,0,132,1,91,0,132,
            1,89,0,132,1,90,0,132,1,88,
            0,132,1,87,0,132,1,86,0,172,
            65,42,0,14,0,170,65,101,0,125,
            1,0,131,1,99,52,100,0,131,1,
            44,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            288,282,0,339,0,282,288,2869,2923,2901,
            2846,1266,2814,260,2631,2604,2577,2549,2788,2762,
            2736,2710,2684,2658,2518,2487,1790,2456,2425,2394,
            2363,367,304,1757,1293,1235,2332,2301,2270,2239,
            2208,2177,1200,1165,1130,1095,1060,1025,990,955,
            920,885,850,815,780,745,710,675,640,605,
            570,535,500,465,2146,2115,1724,229,430,2084,
            2053,2022,1991,1960,1929,1898,1867,1836,1688,1652,
            1616,1580,1544,1508,1472,1436,1400,1364,1328,0,
            3026,2961,2946,3021,3016,2976,2966,0,708,673,
            1688,1652,1616,1580,1544,1508,1472,1436,1400,1364,
            1328,638,3034,603,568,533,498,3028,3023,463,
            2968,3018,2945,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,160,3,144,147,62,61,60,143,148,
            70,162,57,146,22,71,72,136,136,136,
            63,59,100,165,100,3,133,100,101,42,
            22,22,22,22,22,136,136,52,163,146,
            166,52,143,1,4,1,1,54,53,44,
            42,101,3,100,40,25,24,23,17,16,
            15,14,20,19,26,18,4,35,34,36,
            41,37,39,38,99,1,33,27,104,121,
            119,123,126,124,22,22,99,150,152,133,
            176,177,130,125,1,65,65,52,128,128,
            128,128,128,128,128,128,128,128,128,128,
            128,128,128,128,128,128,128,128,67,128,
            125,128,128,75,73,78,77,27,26,20,
            19,17,16,15,14,18,4,83,25,24,
            23,149,3,1,22,2,43,43,178,179,
            43,80,131,129,172,3,170,125,64,27,
            171,99,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,129,1,1,1,33,19,27,99,
            85,96,95,94,93,92,91,89,90,88,
            87,86,99,99,119,119,124,123,123,123,
            4,22,150,133,22,84,43,125,43,43,
            4,76,64,43,1,169,100,131,131,131,
            131,131,131,131,131,131,131,131,131,131,
            131,131,131,131,131,131,68,131,131,131,
            67,128,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,133,2,144,81,
            131,129,130,132,130,3,132,132,132,132,
            132,132,132,132,132,132,158,69,159,158,
            4,22,125,68,74,56,43,56,22,43,
            130,125,130,56,56,125
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "", //$NON-NLS-1$
            "+", //$NON-NLS-1$
            "-", //$NON-NLS-1$
            "*", //$NON-NLS-1$
            "/", //$NON-NLS-1$
            ">", //$NON-NLS-1$
            "<", //$NON-NLS-1$
            "=", //$NON-NLS-1$
            ">=", //$NON-NLS-1$
            "<=", //$NON-NLS-1$
            "<>", //$NON-NLS-1$
            "(", //$NON-NLS-1$
            ")", //$NON-NLS-1$
            "{", //$NON-NLS-1$
            "}", //$NON-NLS-1$
            "[", //$NON-NLS-1$
            "]", //$NON-NLS-1$
            "->", //$NON-NLS-1$
            "|", //$NON-NLS-1$
            ",", //$NON-NLS-1$
            ":", //$NON-NLS-1$
            "::", //$NON-NLS-1$
            ";", //$NON-NLS-1$
            ".", //$NON-NLS-1$
            "..", //$NON-NLS-1$
            "@pre", //$NON-NLS-1$
            "^", //$NON-NLS-1$
            "^^", //$NON-NLS-1$
            "?", //$NON-NLS-1$
            "$empty", //$NON-NLS-1$
            "NUMERIC_OPERATION", //$NON-NLS-1$
            "STRING_LITERAL", //$NON-NLS-1$
            "INTEGER_LITERAL", //$NON-NLS-1$
            "REAL_LITERAL", //$NON-NLS-1$
            "self", //$NON-NLS-1$
            "inv", //$NON-NLS-1$
            "pre", //$NON-NLS-1$
            "post", //$NON-NLS-1$
            "body", //$NON-NLS-1$
            "context", //$NON-NLS-1$
            "package", //$NON-NLS-1$
            "endpackage", //$NON-NLS-1$
            "def", //$NON-NLS-1$
            "derive", //$NON-NLS-1$
            "init", //$NON-NLS-1$
            "if", //$NON-NLS-1$
            "then", //$NON-NLS-1$
            "else", //$NON-NLS-1$
            "endif", //$NON-NLS-1$
            "and", //$NON-NLS-1$
            "or", //$NON-NLS-1$
            "xor", //$NON-NLS-1$
            "not", //$NON-NLS-1$
            "implies", //$NON-NLS-1$
            "let", //$NON-NLS-1$
            "in", //$NON-NLS-1$
            "true", //$NON-NLS-1$
            "false", //$NON-NLS-1$
            "Set", //$NON-NLS-1$
            "Bag", //$NON-NLS-1$
            "Sequence", //$NON-NLS-1$
            "Collection", //$NON-NLS-1$
            "OrderedSet", //$NON-NLS-1$
            "iterate", //$NON-NLS-1$
            "forAll", //$NON-NLS-1$
            "exists", //$NON-NLS-1$
            "isUnique", //$NON-NLS-1$
            "any", //$NON-NLS-1$
            "one", //$NON-NLS-1$
            "collect", //$NON-NLS-1$
            "select", //$NON-NLS-1$
            "reject", //$NON-NLS-1$
            "collectNested", //$NON-NLS-1$
            "sortedBy", //$NON-NLS-1$
            "closure", //$NON-NLS-1$
            "oclIsKindOf", //$NON-NLS-1$
            "oclIsTypeOf", //$NON-NLS-1$
            "oclAsType", //$NON-NLS-1$
            "oclIsNew", //$NON-NLS-1$
            "oclIsUndefined", //$NON-NLS-1$
            "oclIsInvalid", //$NON-NLS-1$
            "oclIsInState", //$NON-NLS-1$
            "allInstances", //$NON-NLS-1$
            "String", //$NON-NLS-1$
            "Integer", //$NON-NLS-1$
            "UnlimitedNatural", //$NON-NLS-1$
            "Real", //$NON-NLS-1$
            "Boolean", //$NON-NLS-1$
            "Tuple", //$NON-NLS-1$
            "OclAny", //$NON-NLS-1$
            "OclVoid", //$NON-NLS-1$
            "Invalid", //$NON-NLS-1$
            "OclMessage", //$NON-NLS-1$
            "null", //$NON-NLS-1$
            "OclInvalid", //$NON-NLS-1$
            "EOF_TOKEN", //$NON-NLS-1$
            "IDENTIFIER", //$NON-NLS-1$
            "INTEGER_RANGE_START", //$NON-NLS-1$
            "ERROR_TOKEN", //$NON-NLS-1$
            "packageDeclarationCSm", //$NON-NLS-1$
            "invOrDefCS", //$NON-NLS-1$
            "prePostOrBodyDeclCS", //$NON-NLS-1$
            "initOrDerValueCS", //$NON-NLS-1$
            "variableCS", //$NON-NLS-1$
            "packageDeclarationCS", //$NON-NLS-1$
            "pathNameCS", //$NON-NLS-1$
            "contextDeclCSm", //$NON-NLS-1$
            "contextDeclCS", //$NON-NLS-1$
            "simpleNameCS", //$NON-NLS-1$
            "typeCS", //$NON-NLS-1$
            "oclExpressionCS", //$NON-NLS-1$
            "defExpressionCS", //$NON-NLS-1$
            "operationCS1", //$NON-NLS-1$
            "operationCS", //$NON-NLS-1$
            "prePostOrBodyDeclCSm", //$NON-NLS-1$
            "parametersCS", //$NON-NLS-1$
            "oclExp0CS", //$NON-NLS-1$
            "oclExp1CS", //$NON-NLS-1$
            "oclExp2CS", //$NON-NLS-1$
            "oclExp3CS", //$NON-NLS-1$
            "oclExp4CS", //$NON-NLS-1$
            "oclExp5CS", //$NON-NLS-1$
            "oclExp6CS", //$NON-NLS-1$
            "oclExp7CS", //$NON-NLS-1$
            "callExpCS", //$NON-NLS-1$
            "messageExpCS", //$NON-NLS-1$
            "argumentsCS", //$NON-NLS-1$
            "collectionTypeIdentifierCS", //$NON-NLS-1$
            "collectionLiteralPartsCS", //$NON-NLS-1$
            "collectionLiteralPartCS", //$NON-NLS-1$
            "variableListCS2", //$NON-NLS-1$
            "featureCallExpCS", //$NON-NLS-1$
            "loopExpCS", //$NON-NLS-1$
            "iterContents", //$NON-NLS-1$
            "variableCS2", //$NON-NLS-1$
            "variableListCS", //$NON-NLS-1$
            "letExpSubCS", //$NON-NLS-1$
            "oclMessageArgumentsCS", //$NON-NLS-1$
            "oclMessageArgCS" //$NON-NLS-1$
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 97,
           SCOPE_UBOUND      = 56,
           SCOPE_SIZE        = 57,
           MAX_NAME_LENGTH   = 26;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 306,
           NT_OFFSET         = 97,
           LA_STATE_OFFSET   = 3387,
           MAX_LA            = 2,
           NUM_RULES         = 228,
           NUM_NONTERMINALS  = 83,
           NUM_SYMBOLS       = 180,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 2945,
           IDENTIFIER_SYMBOL = 3,
           EOFT_SYMBOL       = 58,
           EOLT_SYMBOL       = 58,
           ACCEPT_ACTION     = 3158,
           ERROR_ACTION      = 3159;

    public final static boolean BACKTRACK = false;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
