/*
* generated by Xtext
*/

package org.eclipse.ocl.examples.xtext.oclinecore.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.ocl.examples.xtext.essentialocl.services.EssentialOCLGrammarAccess;

@Singleton
public class OCLinEcoreGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class RootPackageCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RootPackageCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cModuleKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Assignment cOwnedLibraryAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedLibraryLibraryCSParserRuleCall_1_0 = (RuleCall)cOwnedLibraryAssignment_1.eContents().get(0);
		private final Assignment cOwnedImportAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedImportImportCSParserRuleCall_2_0 = (RuleCall)cOwnedImportAssignment_2.eContents().get(0);
		private final Assignment cOwnedNestedPackageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedNestedPackagePackageCSParserRuleCall_3_0 = (RuleCall)cOwnedNestedPackageAssignment_3.eContents().get(0);
		
		////generate oclinEcore2 "http://www.eclipse.org/ocl/examples/xtext/oclinecore/OCLinEcore"
		//
		//RootPackageCS returns base::RootPackageCS:
		//	("module" name=UnrestrictedName)? ownedLibrary+=LibraryCS* ownedImport+=ImportCS* ownedNestedPackage+=PackageCS*;
		public ParserRule getRule() { return rule; }

		//("module" name=UnrestrictedName)? ownedLibrary+=LibraryCS* ownedImport+=ImportCS* ownedNestedPackage+=PackageCS*
		public Group getGroup() { return cGroup; }

		//("module" name=UnrestrictedName)?
		public Group getGroup_0() { return cGroup_0; }

		//"module"
		public Keyword getModuleKeyword_0_0() { return cModuleKeyword_0_0; }

		//name=UnrestrictedName
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_0_1_0() { return cNameUnrestrictedNameParserRuleCall_0_1_0; }

		//ownedLibrary+=LibraryCS*
		public Assignment getOwnedLibraryAssignment_1() { return cOwnedLibraryAssignment_1; }

		//LibraryCS
		public RuleCall getOwnedLibraryLibraryCSParserRuleCall_1_0() { return cOwnedLibraryLibraryCSParserRuleCall_1_0; }

		//ownedImport+=ImportCS*
		public Assignment getOwnedImportAssignment_2() { return cOwnedImportAssignment_2; }

		//ImportCS
		public RuleCall getOwnedImportImportCSParserRuleCall_2_0() { return cOwnedImportImportCSParserRuleCall_2_0; }

		//ownedNestedPackage+=PackageCS*
		public Assignment getOwnedNestedPackageAssignment_3() { return cOwnedNestedPackageAssignment_3; }

		//PackageCS
		public RuleCall getOwnedNestedPackagePackageCSParserRuleCall_3_0() { return cOwnedNestedPackagePackageCSParserRuleCall_3_0; }
	}

	public class INTEGERElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "INTEGER");
		private final RuleCall cINTTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//INTEGER returns ecore::EInt:
		//	INT;
		public ParserRule getRule() { return rule; }

		//INT
		public RuleCall getINTTerminalRuleCall() { return cINTTerminalRuleCall; }
	}

	public class LOWERElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LOWER");
		private final RuleCall cINTTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//LOWER returns ecore::EInt:
		//	INT;
		public ParserRule getRule() { return rule; }

		//INT
		public RuleCall getINTTerminalRuleCall() { return cINTTerminalRuleCall; }
	}

	public class UPPERElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UPPER");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cAsteriskKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//UPPER returns ecore::EInt:
		//	INT | "*";
		public ParserRule getRule() { return rule; }

		//INT | "*"
		public Alternatives getAlternatives() { return cAlternatives; }

		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//"*"
		public Keyword getAsteriskKeyword_1() { return cAsteriskKeyword_1; }
	}

	public class UnrestrictedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UnrestrictedName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEssentialOCLUnrestrictedNameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cAbstractKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cAnnotationKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cAttributeKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cBodyKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cClassKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cComposesKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cDatatypeKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cDefinitionKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cDerivationKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cDerivedKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cDocumentationKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cEnumKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Keyword cExtendsKeyword_13 = (Keyword)cAlternatives.eContents().get(13);
		private final Keyword cIdKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		private final Keyword cImportKeyword_15 = (Keyword)cAlternatives.eContents().get(15);
		private final Keyword cInitialKeyword_16 = (Keyword)cAlternatives.eContents().get(16);
		private final Keyword cInterfaceKeyword_17 = (Keyword)cAlternatives.eContents().get(17);
		private final Keyword cInvariantKeyword_18 = (Keyword)cAlternatives.eContents().get(18);
		private final Keyword cLibraryKeyword_19 = (Keyword)cAlternatives.eContents().get(19);
		private final Keyword cModuleKeyword_20 = (Keyword)cAlternatives.eContents().get(20);
		private final Keyword cOperationKeyword_21 = (Keyword)cAlternatives.eContents().get(21);
		private final Keyword cOrderedKeyword_22 = (Keyword)cAlternatives.eContents().get(22);
		private final Keyword cPackageKeyword_23 = (Keyword)cAlternatives.eContents().get(23);
		private final Keyword cPostconditionKeyword_24 = (Keyword)cAlternatives.eContents().get(24);
		private final Keyword cPreconditionKeyword_25 = (Keyword)cAlternatives.eContents().get(25);
		private final Keyword cPropertyKeyword_26 = (Keyword)cAlternatives.eContents().get(26);
		private final Keyword cReadonlyKeyword_27 = (Keyword)cAlternatives.eContents().get(27);
		private final Keyword cResolveKeyword_28 = (Keyword)cAlternatives.eContents().get(28);
		private final Keyword cSerializableKeyword_29 = (Keyword)cAlternatives.eContents().get(29);
		private final Keyword cStaticKeyword_30 = (Keyword)cAlternatives.eContents().get(30);
		private final Keyword cSuperKeyword_31 = (Keyword)cAlternatives.eContents().get(31);
		private final Keyword cThrowsKeyword_32 = (Keyword)cAlternatives.eContents().get(32);
		private final Keyword cTransientKeyword_33 = (Keyword)cAlternatives.eContents().get(33);
		private final Keyword cUniqueKeyword_34 = (Keyword)cAlternatives.eContents().get(34);
		private final Keyword cUnsettableKeyword_35 = (Keyword)cAlternatives.eContents().get(35);
		private final Keyword cVolatileKeyword_36 = (Keyword)cAlternatives.eContents().get(36);
		
		//UnrestrictedName returns ecore::EString:
		//	EssentialOCLUnrestrictedName | "abstract" | "annotation" | "attribute" | "body" | "class" | "composes" | "datatype" |
		//	"definition" | "derivation" | "derived" | "documentation" | "enum" | "extends" | "id" | "import" | "initial" |
		//	"interface" | "invariant" | "library" | "module" | "operation" | "ordered" | "package" | "postcondition" |
		//	"precondition" | "property" | "readonly" | "resolve" | "serializable" | "static" | "super" | "throws" | "transient" |
		//	"unique" | "unsettable" | "volatile";
		public ParserRule getRule() { return rule; }

		//EssentialOCLUnrestrictedName | "abstract" | "annotation" | "attribute" | "body" | "class" | "composes" | "datatype" |
		//"definition" | "derivation" | "derived" | "documentation" | "enum" | "extends" | "id" | "import" | "initial" |
		//"interface" | "invariant" | "library" | "module" | "operation" | "ordered" | "package" | "postcondition" |
		//"precondition" | "property" | "readonly" | "resolve" | "serializable" | "static" | "super" | "throws" | "transient" |
		//"unique" | "unsettable" | "volatile"
		public Alternatives getAlternatives() { return cAlternatives; }

		//EssentialOCLUnrestrictedName
		public RuleCall getEssentialOCLUnrestrictedNameParserRuleCall_0() { return cEssentialOCLUnrestrictedNameParserRuleCall_0; }

		//"abstract"
		public Keyword getAbstractKeyword_1() { return cAbstractKeyword_1; }

		//"annotation"
		public Keyword getAnnotationKeyword_2() { return cAnnotationKeyword_2; }

		//"attribute"
		public Keyword getAttributeKeyword_3() { return cAttributeKeyword_3; }

		//"body"
		public Keyword getBodyKeyword_4() { return cBodyKeyword_4; }

		//"class"
		public Keyword getClassKeyword_5() { return cClassKeyword_5; }

		//"composes"
		public Keyword getComposesKeyword_6() { return cComposesKeyword_6; }

		//"datatype"
		public Keyword getDatatypeKeyword_7() { return cDatatypeKeyword_7; }

		//"definition"
		public Keyword getDefinitionKeyword_8() { return cDefinitionKeyword_8; }

		//"derivation"
		public Keyword getDerivationKeyword_9() { return cDerivationKeyword_9; }

		//"derived"
		public Keyword getDerivedKeyword_10() { return cDerivedKeyword_10; }

		//"documentation"
		public Keyword getDocumentationKeyword_11() { return cDocumentationKeyword_11; }

		//"enum"
		public Keyword getEnumKeyword_12() { return cEnumKeyword_12; }

		//"extends"
		public Keyword getExtendsKeyword_13() { return cExtendsKeyword_13; }

		//"id"
		public Keyword getIdKeyword_14() { return cIdKeyword_14; }

		//"import"
		public Keyword getImportKeyword_15() { return cImportKeyword_15; }

		//"initial"
		public Keyword getInitialKeyword_16() { return cInitialKeyword_16; }

		//"interface"
		public Keyword getInterfaceKeyword_17() { return cInterfaceKeyword_17; }

		//"invariant"
		public Keyword getInvariantKeyword_18() { return cInvariantKeyword_18; }

		//"library"
		public Keyword getLibraryKeyword_19() { return cLibraryKeyword_19; }

		//"module"
		public Keyword getModuleKeyword_20() { return cModuleKeyword_20; }

		//"operation"
		public Keyword getOperationKeyword_21() { return cOperationKeyword_21; }

		//"ordered"
		public Keyword getOrderedKeyword_22() { return cOrderedKeyword_22; }

		//"package"
		public Keyword getPackageKeyword_23() { return cPackageKeyword_23; }

		//"postcondition"
		public Keyword getPostconditionKeyword_24() { return cPostconditionKeyword_24; }

		//"precondition"
		public Keyword getPreconditionKeyword_25() { return cPreconditionKeyword_25; }

		//"property"
		public Keyword getPropertyKeyword_26() { return cPropertyKeyword_26; }

		//"readonly"
		public Keyword getReadonlyKeyword_27() { return cReadonlyKeyword_27; }

		//"resolve"
		public Keyword getResolveKeyword_28() { return cResolveKeyword_28; }

		//"serializable"
		public Keyword getSerializableKeyword_29() { return cSerializableKeyword_29; }

		//"static"
		public Keyword getStaticKeyword_30() { return cStaticKeyword_30; }

		//"super"
		public Keyword getSuperKeyword_31() { return cSuperKeyword_31; }

		//"throws"
		public Keyword getThrowsKeyword_32() { return cThrowsKeyword_32; }

		//"transient"
		public Keyword getTransientKeyword_33() { return cTransientKeyword_33; }

		//"unique"
		public Keyword getUniqueKeyword_34() { return cUniqueKeyword_34; }

		//"unsettable"
		public Keyword getUnsettableKeyword_35() { return cUnsettableKeyword_35; }

		//"volatile"
		public Keyword getVolatileKeyword_36() { return cVolatileKeyword_36; }
	}

	public class BodyConstraintCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BodyConstraintCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStereotypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cStereotypeBodyKeyword_0_0 = (Keyword)cStereotypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationSpecificationCSParserRuleCall_3_0 = (RuleCall)cSpecificationAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//BodyConstraintCS returns OCLinEcoreConstraintCS:
		//	stereotype="body" name=UnrestrictedName? ":" specification=SpecificationCS ";";
		public ParserRule getRule() { return rule; }

		//stereotype="body" name=UnrestrictedName? ":" specification=SpecificationCS ";"
		public Group getGroup() { return cGroup; }

		//stereotype="body"
		public Assignment getStereotypeAssignment_0() { return cStereotypeAssignment_0; }

		//"body"
		public Keyword getStereotypeBodyKeyword_0_0() { return cStereotypeBodyKeyword_0_0; }

		//name=UnrestrictedName?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_1_0() { return cNameUnrestrictedNameParserRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//specification=SpecificationCS
		public Assignment getSpecificationAssignment_3() { return cSpecificationAssignment_3; }

		//SpecificationCS
		public RuleCall getSpecificationSpecificationCSParserRuleCall_3_0() { return cSpecificationSpecificationCSParserRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class DerivedConstraintCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DerivedConstraintCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStereotypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cStereotypeDerivationKeyword_0_0 = (Keyword)cStereotypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSpecificationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSpecificationSpecificationCSParserRuleCall_2_0 = (RuleCall)cSpecificationAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//DerivedConstraintCS returns OCLinEcoreConstraintCS:
		//	stereotype="derivation" ":" specification=SpecificationCS ";";
		public ParserRule getRule() { return rule; }

		//stereotype="derivation" ":" specification=SpecificationCS ";"
		public Group getGroup() { return cGroup; }

		//stereotype="derivation"
		public Assignment getStereotypeAssignment_0() { return cStereotypeAssignment_0; }

		//"derivation"
		public Keyword getStereotypeDerivationKeyword_0_0() { return cStereotypeDerivationKeyword_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//specification=SpecificationCS
		public Assignment getSpecificationAssignment_2() { return cSpecificationAssignment_2; }

		//SpecificationCS
		public RuleCall getSpecificationSpecificationCSParserRuleCall_2_0() { return cSpecificationSpecificationCSParserRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class InitialConstraintCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InitialConstraintCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStereotypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cStereotypeInitialKeyword_0_0 = (Keyword)cStereotypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSpecificationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSpecificationSpecificationCSParserRuleCall_2_0 = (RuleCall)cSpecificationAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//InitialConstraintCS returns OCLinEcoreConstraintCS:
		//	stereotype="initial" ":" specification=SpecificationCS ";";
		public ParserRule getRule() { return rule; }

		//stereotype="initial" ":" specification=SpecificationCS ";"
		public Group getGroup() { return cGroup; }

		//stereotype="initial"
		public Assignment getStereotypeAssignment_0() { return cStereotypeAssignment_0; }

		//"initial"
		public Keyword getStereotypeInitialKeyword_0_0() { return cStereotypeInitialKeyword_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//specification=SpecificationCS
		public Assignment getSpecificationAssignment_2() { return cSpecificationAssignment_2; }

		//SpecificationCS
		public RuleCall getSpecificationSpecificationCSParserRuleCall_2_0() { return cSpecificationSpecificationCSParserRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class InvariantConstraintCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InvariantConstraintCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStereotypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cStereotypeInvariantKeyword_0_0 = (Keyword)cStereotypeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_1_0_0 = (RuleCall)cNameAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cMessageSpecificationAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cMessageSpecificationSpecificationCSParserRuleCall_1_1_1_0 = (RuleCall)cMessageSpecificationAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_1_2 = (Keyword)cGroup_1_1.eContents().get(2);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationSpecificationCSParserRuleCall_3_0 = (RuleCall)cSpecificationAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//InvariantConstraintCS returns OCLinEcoreConstraintCS:
		//	stereotype="invariant" (name=UnrestrictedName ("(" messageSpecification=SpecificationCS ")")?)? ":"
		//	specification=SpecificationCS ";";
		public ParserRule getRule() { return rule; }

		//stereotype="invariant" (name=UnrestrictedName ("(" messageSpecification=SpecificationCS ")")?)? ":"
		//specification=SpecificationCS ";"
		public Group getGroup() { return cGroup; }

		//stereotype="invariant"
		public Assignment getStereotypeAssignment_0() { return cStereotypeAssignment_0; }

		//"invariant"
		public Keyword getStereotypeInvariantKeyword_0_0() { return cStereotypeInvariantKeyword_0_0; }

		//(name=UnrestrictedName ("(" messageSpecification=SpecificationCS ")")?)?
		public Group getGroup_1() { return cGroup_1; }

		//name=UnrestrictedName
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_1_0_0() { return cNameUnrestrictedNameParserRuleCall_1_0_0; }

		//("(" messageSpecification=SpecificationCS ")")?
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1_0() { return cLeftParenthesisKeyword_1_1_0; }

		//messageSpecification=SpecificationCS
		public Assignment getMessageSpecificationAssignment_1_1_1() { return cMessageSpecificationAssignment_1_1_1; }

		//SpecificationCS
		public RuleCall getMessageSpecificationSpecificationCSParserRuleCall_1_1_1_0() { return cMessageSpecificationSpecificationCSParserRuleCall_1_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_1_2() { return cRightParenthesisKeyword_1_1_2; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//specification=SpecificationCS
		public Assignment getSpecificationAssignment_3() { return cSpecificationAssignment_3; }

		//SpecificationCS
		public RuleCall getSpecificationSpecificationCSParserRuleCall_3_0() { return cSpecificationSpecificationCSParserRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class PostconditionConstraintCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PostconditionConstraintCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStereotypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cStereotypePostconditionKeyword_0_0 = (Keyword)cStereotypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationSpecificationCSParserRuleCall_3_0 = (RuleCall)cSpecificationAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PostconditionConstraintCS returns OCLinEcoreConstraintCS:
		//	stereotype="postcondition" name=UnrestrictedName? ":" specification=SpecificationCS ";";
		public ParserRule getRule() { return rule; }

		//stereotype="postcondition" name=UnrestrictedName? ":" specification=SpecificationCS ";"
		public Group getGroup() { return cGroup; }

		//stereotype="postcondition"
		public Assignment getStereotypeAssignment_0() { return cStereotypeAssignment_0; }

		//"postcondition"
		public Keyword getStereotypePostconditionKeyword_0_0() { return cStereotypePostconditionKeyword_0_0; }

		//name=UnrestrictedName?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_1_0() { return cNameUnrestrictedNameParserRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//specification=SpecificationCS
		public Assignment getSpecificationAssignment_3() { return cSpecificationAssignment_3; }

		//SpecificationCS
		public RuleCall getSpecificationSpecificationCSParserRuleCall_3_0() { return cSpecificationSpecificationCSParserRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class PreconditionConstraintCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PreconditionConstraintCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStereotypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cStereotypePreconditionKeyword_0_0 = (Keyword)cStereotypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationSpecificationCSParserRuleCall_3_0 = (RuleCall)cSpecificationAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PreconditionConstraintCS returns OCLinEcoreConstraintCS:
		//	stereotype="precondition" name=UnrestrictedName? ":" specification=SpecificationCS ";";
		public ParserRule getRule() { return rule; }

		//stereotype="precondition" name=UnrestrictedName? ":" specification=SpecificationCS ";"
		public Group getGroup() { return cGroup; }

		//stereotype="precondition"
		public Assignment getStereotypeAssignment_0() { return cStereotypeAssignment_0; }

		//"precondition"
		public Keyword getStereotypePreconditionKeyword_0_0() { return cStereotypePreconditionKeyword_0_0; }

		//name=UnrestrictedName?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_1_0() { return cNameUnrestrictedNameParserRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//specification=SpecificationCS
		public Assignment getSpecificationAssignment_3() { return cSpecificationAssignment_3; }

		//SpecificationCS
		public RuleCall getSpecificationSpecificationCSParserRuleCall_3_0() { return cSpecificationSpecificationCSParserRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class AnnotationCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnnotationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cNameAlternatives_1_0 = (Alternatives)cNameAssignment_1.eContents().get(0);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_1_0_0 = (RuleCall)cNameAlternatives_1_0.eContents().get(0);
		private final RuleCall cNameSINGLE_QUOTED_STRINGTerminalRuleCall_1_0_1 = (RuleCall)cNameAlternatives_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOwnedDetailAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedDetailDetailCSParserRuleCall_2_1_0 = (RuleCall)cOwnedDetailAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cOwnedDetailAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cOwnedDetailDetailCSParserRuleCall_2_2_1_0 = (RuleCall)cOwnedDetailAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Alternatives cAlternatives_3_0_1 = (Alternatives)cGroup_3_0.eContents().get(1);
		private final Assignment cOwnedAnnotationAssignment_3_0_1_0 = (Assignment)cAlternatives_3_0_1.eContents().get(0);
		private final RuleCall cOwnedAnnotationAnnotationElementCSParserRuleCall_3_0_1_0_0 = (RuleCall)cOwnedAnnotationAssignment_3_0_1_0.eContents().get(0);
		private final Assignment cOwnedContentAssignment_3_0_1_1 = (Assignment)cAlternatives_3_0_1.eContents().get(1);
		private final RuleCall cOwnedContentModelElementCSParserRuleCall_3_0_1_1_0 = (RuleCall)cOwnedContentAssignment_3_0_1_1.eContents().get(0);
		private final Assignment cReferenceAssignment_3_0_1_2 = (Assignment)cAlternatives_3_0_1.eContents().get(2);
		private final RuleCall cReferenceModelElementCSRefParserRuleCall_3_0_1_2_0 = (RuleCall)cReferenceAssignment_3_0_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_3_1 = (Keyword)cAlternatives_3.eContents().get(1);
		
		//AnnotationCS returns base::AnnotationCS:
		//	"annotation" name=(UnrestrictedName | SINGLE_QUOTED_STRING) ("(" ownedDetail+=DetailCS ("," ownedDetail+=DetailCS)*
		//	")")? ("{" (ownedAnnotation+=AnnotationElementCS | ownedContent+=ModelElementCS | reference+=ModelElementCSRef)+ "}" |
		//	";");
		public ParserRule getRule() { return rule; }

		//"annotation" name=(UnrestrictedName | SINGLE_QUOTED_STRING) ("(" ownedDetail+=DetailCS ("," ownedDetail+=DetailCS)*
		//")")? ("{" (ownedAnnotation+=AnnotationElementCS | ownedContent+=ModelElementCS | reference+=ModelElementCSRef)+ "}" |
		//";")
		public Group getGroup() { return cGroup; }

		//"annotation"
		public Keyword getAnnotationKeyword_0() { return cAnnotationKeyword_0; }

		//name=(UnrestrictedName | SINGLE_QUOTED_STRING)
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//UnrestrictedName | SINGLE_QUOTED_STRING
		public Alternatives getNameAlternatives_1_0() { return cNameAlternatives_1_0; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_1_0_0() { return cNameUnrestrictedNameParserRuleCall_1_0_0; }

		//SINGLE_QUOTED_STRING
		public RuleCall getNameSINGLE_QUOTED_STRINGTerminalRuleCall_1_0_1() { return cNameSINGLE_QUOTED_STRINGTerminalRuleCall_1_0_1; }

		//("(" ownedDetail+=DetailCS ("," ownedDetail+=DetailCS)* ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//ownedDetail+=DetailCS
		public Assignment getOwnedDetailAssignment_2_1() { return cOwnedDetailAssignment_2_1; }

		//DetailCS
		public RuleCall getOwnedDetailDetailCSParserRuleCall_2_1_0() { return cOwnedDetailDetailCSParserRuleCall_2_1_0; }

		//("," ownedDetail+=DetailCS)*
		public Group getGroup_2_2() { return cGroup_2_2; }

		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }

		//ownedDetail+=DetailCS
		public Assignment getOwnedDetailAssignment_2_2_1() { return cOwnedDetailAssignment_2_2_1; }

		//DetailCS
		public RuleCall getOwnedDetailDetailCSParserRuleCall_2_2_1_0() { return cOwnedDetailDetailCSParserRuleCall_2_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }

		//"{" (ownedAnnotation+=AnnotationElementCS | ownedContent+=ModelElementCS | reference+=ModelElementCSRef)+ "}" | ";"
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//"{" (ownedAnnotation+=AnnotationElementCS | ownedContent+=ModelElementCS | reference+=ModelElementCSRef)+ "}"
		public Group getGroup_3_0() { return cGroup_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0_0() { return cLeftCurlyBracketKeyword_3_0_0; }

		//(ownedAnnotation+=AnnotationElementCS | ownedContent+=ModelElementCS | reference+=ModelElementCSRef)+
		public Alternatives getAlternatives_3_0_1() { return cAlternatives_3_0_1; }

		//ownedAnnotation+=AnnotationElementCS
		public Assignment getOwnedAnnotationAssignment_3_0_1_0() { return cOwnedAnnotationAssignment_3_0_1_0; }

		//AnnotationElementCS
		public RuleCall getOwnedAnnotationAnnotationElementCSParserRuleCall_3_0_1_0_0() { return cOwnedAnnotationAnnotationElementCSParserRuleCall_3_0_1_0_0; }

		//ownedContent+=ModelElementCS
		public Assignment getOwnedContentAssignment_3_0_1_1() { return cOwnedContentAssignment_3_0_1_1; }

		//ModelElementCS
		public RuleCall getOwnedContentModelElementCSParserRuleCall_3_0_1_1_0() { return cOwnedContentModelElementCSParserRuleCall_3_0_1_1_0; }

		//reference+=ModelElementCSRef
		public Assignment getReferenceAssignment_3_0_1_2() { return cReferenceAssignment_3_0_1_2; }

		//ModelElementCSRef
		public RuleCall getReferenceModelElementCSRefParserRuleCall_3_0_1_2_0() { return cReferenceModelElementCSRefParserRuleCall_3_0_1_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_0_2() { return cRightCurlyBracketKeyword_3_0_2; }

		//";"
		public Keyword getSemicolonKeyword_3_1() { return cSemicolonKeyword_3_1; }
	}

	public class AnnotationElementCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationElementCS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAnnotationCSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDocumentationCSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AnnotationElementCS returns base::AnnotationElementCS:
		//	AnnotationCS | DocumentationCS;
		public ParserRule getRule() { return rule; }

		//AnnotationCS | DocumentationCS
		public Alternatives getAlternatives() { return cAlternatives; }

		//AnnotationCS
		public RuleCall getAnnotationCSParserRuleCall_0() { return cAnnotationCSParserRuleCall_0; }

		//DocumentationCS
		public RuleCall getDocumentationCSParserRuleCall_1() { return cDocumentationCSParserRuleCall_1; }
	}

	public class AttributeCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttributeCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cQualifierAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final Keyword cQualifierStaticKeyword_0_0_0 = (Keyword)cQualifierAssignment_0_0.eContents().get(0);
		private final Assignment cQualifierAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Keyword cQualifierDefinitionKeyword_0_1_0 = (Keyword)cQualifierAssignment_0_1.eContents().get(0);
		private final Keyword cAttributeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOwnedTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOwnedTypeTypedRefCSParserRuleCall_3_1_0 = (RuleCall)cOwnedTypeAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Alternatives cAlternatives_3_2_1 = (Alternatives)cGroup_3_2.eContents().get(1);
		private final Group cGroup_3_2_1_0 = (Group)cAlternatives_3_2_1.eContents().get(0);
		private final Assignment cLowerAssignment_3_2_1_0_0 = (Assignment)cGroup_3_2_1_0.eContents().get(0);
		private final RuleCall cLowerLOWERParserRuleCall_3_2_1_0_0_0 = (RuleCall)cLowerAssignment_3_2_1_0_0.eContents().get(0);
		private final Group cGroup_3_2_1_0_1 = (Group)cGroup_3_2_1_0.eContents().get(1);
		private final Keyword cFullStopFullStopKeyword_3_2_1_0_1_0 = (Keyword)cGroup_3_2_1_0_1.eContents().get(0);
		private final Assignment cUpperAssignment_3_2_1_0_1_1 = (Assignment)cGroup_3_2_1_0_1.eContents().get(1);
		private final RuleCall cUpperUPPERParserRuleCall_3_2_1_0_1_1_0 = (RuleCall)cUpperAssignment_3_2_1_0_1_1.eContents().get(0);
		private final Assignment cMultiplicityAssignment_3_2_1_1 = (Assignment)cAlternatives_3_2_1.eContents().get(1);
		private final Alternatives cMultiplicityAlternatives_3_2_1_1_0 = (Alternatives)cMultiplicityAssignment_3_2_1_1.eContents().get(0);
		private final Keyword cMultiplicityAsteriskKeyword_3_2_1_1_0_0 = (Keyword)cMultiplicityAlternatives_3_2_1_1_0.eContents().get(0);
		private final Keyword cMultiplicityPlusSignKeyword_3_2_1_1_0_1 = (Keyword)cMultiplicityAlternatives_3_2_1_1_0.eContents().get(1);
		private final Keyword cMultiplicityQuestionMarkKeyword_3_2_1_1_0_2 = (Keyword)cMultiplicityAlternatives_3_2_1_1_0.eContents().get(2);
		private final Keyword cRightSquareBracketKeyword_3_2_2 = (Keyword)cGroup_3_2.eContents().get(2);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDefaultAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDefaultSINGLE_QUOTED_STRINGTerminalRuleCall_4_1_0 = (RuleCall)cDefaultAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Alternatives cAlternatives_5_1_0 = (Alternatives)cGroup_5_1.eContents().get(0);
		private final Assignment cQualifierAssignment_5_1_0_0 = (Assignment)cAlternatives_5_1_0.eContents().get(0);
		private final Keyword cQualifierDerivedKeyword_5_1_0_0_0 = (Keyword)cQualifierAssignment_5_1_0_0.eContents().get(0);
		private final Assignment cQualifierAssignment_5_1_0_1 = (Assignment)cAlternatives_5_1_0.eContents().get(1);
		private final Keyword cQualifierDerivedKeyword_5_1_0_1_0 = (Keyword)cQualifierAssignment_5_1_0_1.eContents().get(0);
		private final Assignment cQualifierAssignment_5_1_0_2 = (Assignment)cAlternatives_5_1_0.eContents().get(2);
		private final Keyword cQualifierIdKeyword_5_1_0_2_0 = (Keyword)cQualifierAssignment_5_1_0_2.eContents().get(0);
		private final Assignment cQualifierAssignment_5_1_0_3 = (Assignment)cAlternatives_5_1_0.eContents().get(3);
		private final Keyword cQualifierIdKeyword_5_1_0_3_0 = (Keyword)cQualifierAssignment_5_1_0_3.eContents().get(0);
		private final Assignment cQualifierAssignment_5_1_0_4 = (Assignment)cAlternatives_5_1_0.eContents().get(4);
		private final Keyword cQualifierOrderedKeyword_5_1_0_4_0 = (Keyword)cQualifierAssignment_5_1_0_4.eContents().get(0);
		private final Assignment cQualifierAssignment_5_1_0_5 = (Assignment)cAlternatives_5_1_0.eContents().get(5);
		private final Keyword cQualifierOrderedKeyword_5_1_0_5_0 = (Keyword)cQualifierAssignment_5_1_0_5.eContents().get(0);
		private final Assignment cQualifierAssignment_5_1_0_6 = (Assignment)cAlternatives_5_1_0.eContents().get(6);
		private final Keyword cQualifierReadonlyKeyword_5_1_0_6_0 = (Keyword)cQualifierAssignment_5_1_0_6.eContents().get(0);
		private final Assignment cQualifierAssignment_5_1_0_7 = (Assignment)cAlternatives_5_1_0.eContents().get(7);
		private final Keyword cQualifierReadonlyKeyword_5_1_0_7_0 = (Keyword)cQualifierAssignment_5_1_0_7.eContents().get(0);
		private final Assignment cQualifierAssignment_5_1_0_8 = (Assignment)cAlternatives_5_1_0.eContents().get(8);
		private final Keyword cQualifierTransientKeyword_5_1_0_8_0 = (Keyword)cQualifierAssignment_5_1_0_8.eContents().get(0);
		private final Assignment cQualifierAssignment_5_1_0_9 = (Assignment)cAlternatives_5_1_0.eContents().get(9);
		private final Keyword cQualifierTransientKeyword_5_1_0_9_0 = (Keyword)cQualifierAssignment_5_1_0_9.eContents().get(0);
		private final Assignment cQualifierAssignment_5_1_0_10 = (Assignment)cAlternatives_5_1_0.eContents().get(10);
		private final Keyword cQualifierUniqueKeyword_5_1_0_10_0 = (Keyword)cQualifierAssignment_5_1_0_10.eContents().get(0);
		private final Assignment cQualifierAssignment_5_1_0_11 = (Assignment)cAlternatives_5_1_0.eContents().get(11);
		private final Keyword cQualifierUniqueKeyword_5_1_0_11_0 = (Keyword)cQualifierAssignment_5_1_0_11.eContents().get(0);
		private final Assignment cQualifierAssignment_5_1_0_12 = (Assignment)cAlternatives_5_1_0.eContents().get(12);
		private final Keyword cQualifierUnsettableKeyword_5_1_0_12_0 = (Keyword)cQualifierAssignment_5_1_0_12.eContents().get(0);
		private final Assignment cQualifierAssignment_5_1_0_13 = (Assignment)cAlternatives_5_1_0.eContents().get(13);
		private final Keyword cQualifierUnsettableKeyword_5_1_0_13_0 = (Keyword)cQualifierAssignment_5_1_0_13.eContents().get(0);
		private final Assignment cQualifierAssignment_5_1_0_14 = (Assignment)cAlternatives_5_1_0.eContents().get(14);
		private final Keyword cQualifierVolatileKeyword_5_1_0_14_0 = (Keyword)cQualifierAssignment_5_1_0_14.eContents().get(0);
		private final Assignment cQualifierAssignment_5_1_0_15 = (Assignment)cAlternatives_5_1_0.eContents().get(15);
		private final Keyword cQualifierVolatileKeyword_5_1_0_15_0 = (Keyword)cQualifierAssignment_5_1_0_15.eContents().get(0);
		private final Keyword cCommaKeyword_5_1_1 = (Keyword)cGroup_5_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cAlternatives_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_0_0 = (Keyword)cGroup_6_0.eContents().get(0);
		private final Alternatives cAlternatives_6_0_1 = (Alternatives)cGroup_6_0.eContents().get(1);
		private final Assignment cOwnedAnnotationAssignment_6_0_1_0 = (Assignment)cAlternatives_6_0_1.eContents().get(0);
		private final RuleCall cOwnedAnnotationAnnotationElementCSParserRuleCall_6_0_1_0_0 = (RuleCall)cOwnedAnnotationAssignment_6_0_1_0.eContents().get(0);
		private final Assignment cOwnedConstraintAssignment_6_0_1_1 = (Assignment)cAlternatives_6_0_1.eContents().get(1);
		private final Alternatives cOwnedConstraintAlternatives_6_0_1_1_0 = (Alternatives)cOwnedConstraintAssignment_6_0_1_1.eContents().get(0);
		private final RuleCall cOwnedConstraintInitialConstraintCSParserRuleCall_6_0_1_1_0_0 = (RuleCall)cOwnedConstraintAlternatives_6_0_1_1_0.eContents().get(0);
		private final RuleCall cOwnedConstraintDerivedConstraintCSParserRuleCall_6_0_1_1_0_1 = (RuleCall)cOwnedConstraintAlternatives_6_0_1_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6_0_2 = (Keyword)cGroup_6_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_6_1 = (Keyword)cAlternatives_6.eContents().get(1);
		
		//AttributeCS returns base::AttributeCS:
		//	(qualifier+="static" | qualifier+="definition")* "attribute" name=UnrestrictedName (":" ownedType=TypedRefCS ("["
		//	(lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")) "]")?)? ("=" default=SINGLE_QUOTED_STRING)? ("{"
		//	((qualifier+="derived" | qualifier+="!derived" | qualifier+="id" | qualifier+="!id" | qualifier+="ordered" |
		//	qualifier+="!ordered" | qualifier+="readonly" | qualifier+="!readonly" | qualifier+="transient" |
		//	qualifier+="!transient" | qualifier+="unique" | qualifier+="!unique" | qualifier+="unsettable" |
		//	qualifier+="!unsettable" | qualifier+="volatile" | qualifier+="!volatile") ","?)+ "}")? ("{"
		//	(ownedAnnotation+=AnnotationElementCS | ownedConstraint+=(InitialConstraintCS | DerivedConstraintCS))* "}" | ";");
		public ParserRule getRule() { return rule; }

		//(qualifier+="static" | qualifier+="definition")* "attribute" name=UnrestrictedName (":" ownedType=TypedRefCS ("["
		//(lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")) "]")?)? ("=" default=SINGLE_QUOTED_STRING)? ("{"
		//((qualifier+="derived" | qualifier+="!derived" | qualifier+="id" | qualifier+="!id" | qualifier+="ordered" |
		//qualifier+="!ordered" | qualifier+="readonly" | qualifier+="!readonly" | qualifier+="transient" |
		//qualifier+="!transient" | qualifier+="unique" | qualifier+="!unique" | qualifier+="unsettable" |
		//qualifier+="!unsettable" | qualifier+="volatile" | qualifier+="!volatile") ","?)+ "}")? ("{"
		//(ownedAnnotation+=AnnotationElementCS | ownedConstraint+=(InitialConstraintCS | DerivedConstraintCS))* "}" | ";")
		public Group getGroup() { return cGroup; }

		//(qualifier+="static" | qualifier+="definition")*
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//qualifier+="static"
		public Assignment getQualifierAssignment_0_0() { return cQualifierAssignment_0_0; }

		//"static"
		public Keyword getQualifierStaticKeyword_0_0_0() { return cQualifierStaticKeyword_0_0_0; }

		//qualifier+="definition"
		public Assignment getQualifierAssignment_0_1() { return cQualifierAssignment_0_1; }

		//"definition"
		public Keyword getQualifierDefinitionKeyword_0_1_0() { return cQualifierDefinitionKeyword_0_1_0; }

		//"attribute"
		public Keyword getAttributeKeyword_1() { return cAttributeKeyword_1; }

		//name=UnrestrictedName
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_2_0() { return cNameUnrestrictedNameParserRuleCall_2_0; }

		//(":" ownedType=TypedRefCS ("[" (lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")) "]")?)?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//ownedType=TypedRefCS
		public Assignment getOwnedTypeAssignment_3_1() { return cOwnedTypeAssignment_3_1; }

		//TypedRefCS
		public RuleCall getOwnedTypeTypedRefCSParserRuleCall_3_1_0() { return cOwnedTypeTypedRefCSParserRuleCall_3_1_0; }

		//("[" (lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")) "]")?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_2_0() { return cLeftSquareBracketKeyword_3_2_0; }

		//lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")
		public Alternatives getAlternatives_3_2_1() { return cAlternatives_3_2_1; }

		//lower=LOWER (".." upper=UPPER)?
		public Group getGroup_3_2_1_0() { return cGroup_3_2_1_0; }

		//lower=LOWER
		public Assignment getLowerAssignment_3_2_1_0_0() { return cLowerAssignment_3_2_1_0_0; }

		//LOWER
		public RuleCall getLowerLOWERParserRuleCall_3_2_1_0_0_0() { return cLowerLOWERParserRuleCall_3_2_1_0_0_0; }

		//(".." upper=UPPER)?
		public Group getGroup_3_2_1_0_1() { return cGroup_3_2_1_0_1; }

		//".."
		public Keyword getFullStopFullStopKeyword_3_2_1_0_1_0() { return cFullStopFullStopKeyword_3_2_1_0_1_0; }

		//upper=UPPER
		public Assignment getUpperAssignment_3_2_1_0_1_1() { return cUpperAssignment_3_2_1_0_1_1; }

		//UPPER
		public RuleCall getUpperUPPERParserRuleCall_3_2_1_0_1_1_0() { return cUpperUPPERParserRuleCall_3_2_1_0_1_1_0; }

		//multiplicity=("*" | "+" | "?")
		public Assignment getMultiplicityAssignment_3_2_1_1() { return cMultiplicityAssignment_3_2_1_1; }

		//"*" | "+" | "?"
		public Alternatives getMultiplicityAlternatives_3_2_1_1_0() { return cMultiplicityAlternatives_3_2_1_1_0; }

		//"*"
		public Keyword getMultiplicityAsteriskKeyword_3_2_1_1_0_0() { return cMultiplicityAsteriskKeyword_3_2_1_1_0_0; }

		//"+"
		public Keyword getMultiplicityPlusSignKeyword_3_2_1_1_0_1() { return cMultiplicityPlusSignKeyword_3_2_1_1_0_1; }

		//"?"
		public Keyword getMultiplicityQuestionMarkKeyword_3_2_1_1_0_2() { return cMultiplicityQuestionMarkKeyword_3_2_1_1_0_2; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_2_2() { return cRightSquareBracketKeyword_3_2_2; }

		//("=" default=SINGLE_QUOTED_STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"="
		public Keyword getEqualsSignKeyword_4_0() { return cEqualsSignKeyword_4_0; }

		//default=SINGLE_QUOTED_STRING
		public Assignment getDefaultAssignment_4_1() { return cDefaultAssignment_4_1; }

		//SINGLE_QUOTED_STRING
		public RuleCall getDefaultSINGLE_QUOTED_STRINGTerminalRuleCall_4_1_0() { return cDefaultSINGLE_QUOTED_STRINGTerminalRuleCall_4_1_0; }

		//("{" ((qualifier+="derived" | qualifier+="!derived" | qualifier+="id" | qualifier+="!id" | qualifier+="ordered" |
		//qualifier+="!ordered" | qualifier+="readonly" | qualifier+="!readonly" | qualifier+="transient" |
		//qualifier+="!transient" | qualifier+="unique" | qualifier+="!unique" | qualifier+="unsettable" |
		//qualifier+="!unsettable" | qualifier+="volatile" | qualifier+="!volatile") ","?)+ "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_0() { return cLeftCurlyBracketKeyword_5_0; }

		//((qualifier+="derived" | qualifier+="!derived" | qualifier+="id" | qualifier+="!id" | qualifier+="ordered" |
		//qualifier+="!ordered" | qualifier+="readonly" | qualifier+="!readonly" | qualifier+="transient" |
		//qualifier+="!transient" | qualifier+="unique" | qualifier+="!unique" | qualifier+="unsettable" |
		//qualifier+="!unsettable" | qualifier+="volatile" | qualifier+="!volatile") ","?)+
		public Group getGroup_5_1() { return cGroup_5_1; }

		//qualifier+="derived" | qualifier+="!derived" | qualifier+="id" | qualifier+="!id" | qualifier+="ordered" |
		//qualifier+="!ordered" | qualifier+="readonly" | qualifier+="!readonly" | qualifier+="transient" |
		//qualifier+="!transient" | qualifier+="unique" | qualifier+="!unique" | qualifier+="unsettable" |
		//qualifier+="!unsettable" | qualifier+="volatile" | qualifier+="!volatile"
		public Alternatives getAlternatives_5_1_0() { return cAlternatives_5_1_0; }

		//qualifier+="derived"
		public Assignment getQualifierAssignment_5_1_0_0() { return cQualifierAssignment_5_1_0_0; }

		//"derived"
		public Keyword getQualifierDerivedKeyword_5_1_0_0_0() { return cQualifierDerivedKeyword_5_1_0_0_0; }

		//qualifier+="!derived"
		public Assignment getQualifierAssignment_5_1_0_1() { return cQualifierAssignment_5_1_0_1; }

		//"!derived"
		public Keyword getQualifierDerivedKeyword_5_1_0_1_0() { return cQualifierDerivedKeyword_5_1_0_1_0; }

		//qualifier+="id"
		public Assignment getQualifierAssignment_5_1_0_2() { return cQualifierAssignment_5_1_0_2; }

		//"id"
		public Keyword getQualifierIdKeyword_5_1_0_2_0() { return cQualifierIdKeyword_5_1_0_2_0; }

		//qualifier+="!id"
		public Assignment getQualifierAssignment_5_1_0_3() { return cQualifierAssignment_5_1_0_3; }

		//"!id"
		public Keyword getQualifierIdKeyword_5_1_0_3_0() { return cQualifierIdKeyword_5_1_0_3_0; }

		//qualifier+="ordered"
		public Assignment getQualifierAssignment_5_1_0_4() { return cQualifierAssignment_5_1_0_4; }

		//"ordered"
		public Keyword getQualifierOrderedKeyword_5_1_0_4_0() { return cQualifierOrderedKeyword_5_1_0_4_0; }

		//qualifier+="!ordered"
		public Assignment getQualifierAssignment_5_1_0_5() { return cQualifierAssignment_5_1_0_5; }

		//"!ordered"
		public Keyword getQualifierOrderedKeyword_5_1_0_5_0() { return cQualifierOrderedKeyword_5_1_0_5_0; }

		//qualifier+="readonly"
		public Assignment getQualifierAssignment_5_1_0_6() { return cQualifierAssignment_5_1_0_6; }

		//"readonly"
		public Keyword getQualifierReadonlyKeyword_5_1_0_6_0() { return cQualifierReadonlyKeyword_5_1_0_6_0; }

		//qualifier+="!readonly"
		public Assignment getQualifierAssignment_5_1_0_7() { return cQualifierAssignment_5_1_0_7; }

		//"!readonly"
		public Keyword getQualifierReadonlyKeyword_5_1_0_7_0() { return cQualifierReadonlyKeyword_5_1_0_7_0; }

		//qualifier+="transient"
		public Assignment getQualifierAssignment_5_1_0_8() { return cQualifierAssignment_5_1_0_8; }

		//"transient"
		public Keyword getQualifierTransientKeyword_5_1_0_8_0() { return cQualifierTransientKeyword_5_1_0_8_0; }

		//qualifier+="!transient"
		public Assignment getQualifierAssignment_5_1_0_9() { return cQualifierAssignment_5_1_0_9; }

		//"!transient"
		public Keyword getQualifierTransientKeyword_5_1_0_9_0() { return cQualifierTransientKeyword_5_1_0_9_0; }

		//qualifier+="unique"
		public Assignment getQualifierAssignment_5_1_0_10() { return cQualifierAssignment_5_1_0_10; }

		//"unique"
		public Keyword getQualifierUniqueKeyword_5_1_0_10_0() { return cQualifierUniqueKeyword_5_1_0_10_0; }

		//qualifier+="!unique"
		public Assignment getQualifierAssignment_5_1_0_11() { return cQualifierAssignment_5_1_0_11; }

		//"!unique"
		public Keyword getQualifierUniqueKeyword_5_1_0_11_0() { return cQualifierUniqueKeyword_5_1_0_11_0; }

		//qualifier+="unsettable"
		public Assignment getQualifierAssignment_5_1_0_12() { return cQualifierAssignment_5_1_0_12; }

		//"unsettable"
		public Keyword getQualifierUnsettableKeyword_5_1_0_12_0() { return cQualifierUnsettableKeyword_5_1_0_12_0; }

		//qualifier+="!unsettable"
		public Assignment getQualifierAssignment_5_1_0_13() { return cQualifierAssignment_5_1_0_13; }

		//"!unsettable"
		public Keyword getQualifierUnsettableKeyword_5_1_0_13_0() { return cQualifierUnsettableKeyword_5_1_0_13_0; }

		//qualifier+="volatile"
		public Assignment getQualifierAssignment_5_1_0_14() { return cQualifierAssignment_5_1_0_14; }

		//"volatile"
		public Keyword getQualifierVolatileKeyword_5_1_0_14_0() { return cQualifierVolatileKeyword_5_1_0_14_0; }

		//qualifier+="!volatile"
		public Assignment getQualifierAssignment_5_1_0_15() { return cQualifierAssignment_5_1_0_15; }

		//"!volatile"
		public Keyword getQualifierVolatileKeyword_5_1_0_15_0() { return cQualifierVolatileKeyword_5_1_0_15_0; }

		//","?
		public Keyword getCommaKeyword_5_1_1() { return cCommaKeyword_5_1_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_2() { return cRightCurlyBracketKeyword_5_2; }

		//"{" (ownedAnnotation+=AnnotationElementCS | ownedConstraint+=(InitialConstraintCS | DerivedConstraintCS))* "}" | ";"
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//"{" (ownedAnnotation+=AnnotationElementCS | ownedConstraint+=(InitialConstraintCS | DerivedConstraintCS))* "}"
		public Group getGroup_6_0() { return cGroup_6_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_0_0() { return cLeftCurlyBracketKeyword_6_0_0; }

		//(ownedAnnotation+=AnnotationElementCS | ownedConstraint+=(InitialConstraintCS | DerivedConstraintCS))*
		public Alternatives getAlternatives_6_0_1() { return cAlternatives_6_0_1; }

		//ownedAnnotation+=AnnotationElementCS
		public Assignment getOwnedAnnotationAssignment_6_0_1_0() { return cOwnedAnnotationAssignment_6_0_1_0; }

		//AnnotationElementCS
		public RuleCall getOwnedAnnotationAnnotationElementCSParserRuleCall_6_0_1_0_0() { return cOwnedAnnotationAnnotationElementCSParserRuleCall_6_0_1_0_0; }

		//ownedConstraint+=(InitialConstraintCS | DerivedConstraintCS)
		public Assignment getOwnedConstraintAssignment_6_0_1_1() { return cOwnedConstraintAssignment_6_0_1_1; }

		//InitialConstraintCS | DerivedConstraintCS
		public Alternatives getOwnedConstraintAlternatives_6_0_1_1_0() { return cOwnedConstraintAlternatives_6_0_1_1_0; }

		//InitialConstraintCS
		public RuleCall getOwnedConstraintInitialConstraintCSParserRuleCall_6_0_1_1_0_0() { return cOwnedConstraintInitialConstraintCSParserRuleCall_6_0_1_1_0_0; }

		//DerivedConstraintCS
		public RuleCall getOwnedConstraintDerivedConstraintCSParserRuleCall_6_0_1_1_0_1() { return cOwnedConstraintDerivedConstraintCSParserRuleCall_6_0_1_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_0_2() { return cRightCurlyBracketKeyword_6_0_2; }

		//";"
		public Keyword getSemicolonKeyword_6_1() { return cSemicolonKeyword_6_1; }
	}

	public class ClassCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClassCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cQualifierAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cQualifierAbstractKeyword_0_0 = (Keyword)cQualifierAssignment_0.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cOwnedTemplateSignatureAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedTemplateSignatureTemplateSignatureCSParserRuleCall_3_0 = (RuleCall)cOwnedTemplateSignatureAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cExtendsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOwnedSuperTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOwnedSuperTypeTypedRefCSParserRuleCall_4_1_0 = (RuleCall)cOwnedSuperTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cOwnedSuperTypeAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cOwnedSuperTypeTypedRefCSParserRuleCall_4_2_1_0 = (RuleCall)cOwnedSuperTypeAssignment_4_2_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInstanceClassNameAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_5_1_0 = (RuleCall)cInstanceClassNameAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final Keyword cQualifierInterfaceKeyword_6_1_0 = (Keyword)cQualifierAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Group cGroup_7_0 = (Group)cAlternatives_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_0_0 = (Keyword)cGroup_7_0.eContents().get(0);
		private final Alternatives cAlternatives_7_0_1 = (Alternatives)cGroup_7_0.eContents().get(1);
		private final Assignment cOwnedAnnotationAssignment_7_0_1_0 = (Assignment)cAlternatives_7_0_1.eContents().get(0);
		private final RuleCall cOwnedAnnotationAnnotationElementCSParserRuleCall_7_0_1_0_0 = (RuleCall)cOwnedAnnotationAssignment_7_0_1_0.eContents().get(0);
		private final Assignment cOwnedOperationAssignment_7_0_1_1 = (Assignment)cAlternatives_7_0_1.eContents().get(1);
		private final RuleCall cOwnedOperationOperationCSParserRuleCall_7_0_1_1_0 = (RuleCall)cOwnedOperationAssignment_7_0_1_1.eContents().get(0);
		private final Assignment cOwnedPropertyAssignment_7_0_1_2 = (Assignment)cAlternatives_7_0_1.eContents().get(2);
		private final RuleCall cOwnedPropertyStructuralFeatureCSParserRuleCall_7_0_1_2_0 = (RuleCall)cOwnedPropertyAssignment_7_0_1_2.eContents().get(0);
		private final Assignment cOwnedConstraintAssignment_7_0_1_3 = (Assignment)cAlternatives_7_0_1.eContents().get(3);
		private final RuleCall cOwnedConstraintInvariantConstraintCSParserRuleCall_7_0_1_3_0 = (RuleCall)cOwnedConstraintAssignment_7_0_1_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_0_2 = (Keyword)cGroup_7_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_7_1 = (Keyword)cAlternatives_7.eContents().get(1);
		
		//ClassCS returns base::ClassCS:
		//	qualifier+="abstract"? "class" name=UnrestrictedName ownedTemplateSignature=TemplateSignatureCS? ("extends"
		//	ownedSuperType+=TypedRefCS ("," ownedSuperType+=TypedRefCS)*)? (":" instanceClassName=SINGLE_QUOTED_STRING)? ("{"
		//	qualifier+="interface" "}")? ("{" (ownedAnnotation+=AnnotationElementCS | ownedOperation+=OperationCS |
		//	ownedProperty+=StructuralFeatureCS | ownedConstraint+=InvariantConstraintCS)* "}" | ";");
		public ParserRule getRule() { return rule; }

		//qualifier+="abstract"? "class" name=UnrestrictedName ownedTemplateSignature=TemplateSignatureCS? ("extends"
		//ownedSuperType+=TypedRefCS ("," ownedSuperType+=TypedRefCS)*)? (":" instanceClassName=SINGLE_QUOTED_STRING)? ("{"
		//qualifier+="interface" "}")? ("{" (ownedAnnotation+=AnnotationElementCS | ownedOperation+=OperationCS |
		//ownedProperty+=StructuralFeatureCS | ownedConstraint+=InvariantConstraintCS)* "}" | ";")
		public Group getGroup() { return cGroup; }

		//qualifier+="abstract"?
		public Assignment getQualifierAssignment_0() { return cQualifierAssignment_0; }

		//"abstract"
		public Keyword getQualifierAbstractKeyword_0_0() { return cQualifierAbstractKeyword_0_0; }

		//"class"
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }

		//name=UnrestrictedName
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_2_0() { return cNameUnrestrictedNameParserRuleCall_2_0; }

		//ownedTemplateSignature=TemplateSignatureCS?
		public Assignment getOwnedTemplateSignatureAssignment_3() { return cOwnedTemplateSignatureAssignment_3; }

		//TemplateSignatureCS
		public RuleCall getOwnedTemplateSignatureTemplateSignatureCSParserRuleCall_3_0() { return cOwnedTemplateSignatureTemplateSignatureCSParserRuleCall_3_0; }

		//("extends" ownedSuperType+=TypedRefCS ("," ownedSuperType+=TypedRefCS)*)?
		public Group getGroup_4() { return cGroup_4; }

		//"extends"
		public Keyword getExtendsKeyword_4_0() { return cExtendsKeyword_4_0; }

		//ownedSuperType+=TypedRefCS
		public Assignment getOwnedSuperTypeAssignment_4_1() { return cOwnedSuperTypeAssignment_4_1; }

		//TypedRefCS
		public RuleCall getOwnedSuperTypeTypedRefCSParserRuleCall_4_1_0() { return cOwnedSuperTypeTypedRefCSParserRuleCall_4_1_0; }

		//("," ownedSuperType+=TypedRefCS)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//ownedSuperType+=TypedRefCS
		public Assignment getOwnedSuperTypeAssignment_4_2_1() { return cOwnedSuperTypeAssignment_4_2_1; }

		//TypedRefCS
		public RuleCall getOwnedSuperTypeTypedRefCSParserRuleCall_4_2_1_0() { return cOwnedSuperTypeTypedRefCSParserRuleCall_4_2_1_0; }

		//(":" instanceClassName=SINGLE_QUOTED_STRING)?
		public Group getGroup_5() { return cGroup_5; }

		//":"
		public Keyword getColonKeyword_5_0() { return cColonKeyword_5_0; }

		//instanceClassName=SINGLE_QUOTED_STRING
		public Assignment getInstanceClassNameAssignment_5_1() { return cInstanceClassNameAssignment_5_1; }

		//SINGLE_QUOTED_STRING
		public RuleCall getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_5_1_0() { return cInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_5_1_0; }

		//("{" qualifier+="interface" "}")?
		public Group getGroup_6() { return cGroup_6; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_0() { return cLeftCurlyBracketKeyword_6_0; }

		//qualifier+="interface"
		public Assignment getQualifierAssignment_6_1() { return cQualifierAssignment_6_1; }

		//"interface"
		public Keyword getQualifierInterfaceKeyword_6_1_0() { return cQualifierInterfaceKeyword_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_2() { return cRightCurlyBracketKeyword_6_2; }

		//"{" (ownedAnnotation+=AnnotationElementCS | ownedOperation+=OperationCS | ownedProperty+=StructuralFeatureCS |
		//ownedConstraint+=InvariantConstraintCS)* "}" | ";"
		public Alternatives getAlternatives_7() { return cAlternatives_7; }

		//"{" (ownedAnnotation+=AnnotationElementCS | ownedOperation+=OperationCS | ownedProperty+=StructuralFeatureCS |
		//ownedConstraint+=InvariantConstraintCS)* "}"
		public Group getGroup_7_0() { return cGroup_7_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7_0_0() { return cLeftCurlyBracketKeyword_7_0_0; }

		//(ownedAnnotation+=AnnotationElementCS | ownedOperation+=OperationCS | ownedProperty+=StructuralFeatureCS |
		//ownedConstraint+=InvariantConstraintCS)*
		public Alternatives getAlternatives_7_0_1() { return cAlternatives_7_0_1; }

		//ownedAnnotation+=AnnotationElementCS
		public Assignment getOwnedAnnotationAssignment_7_0_1_0() { return cOwnedAnnotationAssignment_7_0_1_0; }

		//AnnotationElementCS
		public RuleCall getOwnedAnnotationAnnotationElementCSParserRuleCall_7_0_1_0_0() { return cOwnedAnnotationAnnotationElementCSParserRuleCall_7_0_1_0_0; }

		//ownedOperation+=OperationCS
		public Assignment getOwnedOperationAssignment_7_0_1_1() { return cOwnedOperationAssignment_7_0_1_1; }

		//OperationCS
		public RuleCall getOwnedOperationOperationCSParserRuleCall_7_0_1_1_0() { return cOwnedOperationOperationCSParserRuleCall_7_0_1_1_0; }

		//ownedProperty+=StructuralFeatureCS
		public Assignment getOwnedPropertyAssignment_7_0_1_2() { return cOwnedPropertyAssignment_7_0_1_2; }

		//StructuralFeatureCS
		public RuleCall getOwnedPropertyStructuralFeatureCSParserRuleCall_7_0_1_2_0() { return cOwnedPropertyStructuralFeatureCSParserRuleCall_7_0_1_2_0; }

		//ownedConstraint+=InvariantConstraintCS
		public Assignment getOwnedConstraintAssignment_7_0_1_3() { return cOwnedConstraintAssignment_7_0_1_3; }

		//InvariantConstraintCS
		public RuleCall getOwnedConstraintInvariantConstraintCSParserRuleCall_7_0_1_3_0() { return cOwnedConstraintInvariantConstraintCSParserRuleCall_7_0_1_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7_0_2() { return cRightCurlyBracketKeyword_7_0_2; }

		//";"
		public Keyword getSemicolonKeyword_7_1() { return cSemicolonKeyword_7_1; }
	}

	public class ClassifierCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClassifierCS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cClassCSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDataTypeCSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEnumerationCSParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ClassifierCS returns base::ClassifierCS:
		//	ClassCS | DataTypeCS | EnumerationCS;
		public ParserRule getRule() { return rule; }

		//ClassCS | DataTypeCS | EnumerationCS
		public Alternatives getAlternatives() { return cAlternatives; }

		//ClassCS
		public RuleCall getClassCSParserRuleCall_0() { return cClassCSParserRuleCall_0; }

		//DataTypeCS
		public RuleCall getDataTypeCSParserRuleCall_1() { return cDataTypeCSParserRuleCall_1; }

		//EnumerationCS
		public RuleCall getEnumerationCSParserRuleCall_2() { return cEnumerationCSParserRuleCall_2; }
	}

	public class DataTypeCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataTypeCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDatatypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cOwnedTemplateSignatureAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedTemplateSignatureTemplateSignatureCSParserRuleCall_2_0 = (RuleCall)cOwnedTemplateSignatureAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cInstanceClassNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_3_1_0 = (RuleCall)cInstanceClassNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Alternatives cAlternatives_4_1 = (Alternatives)cGroup_4.eContents().get(1);
		private final Assignment cQualifierAssignment_4_1_0 = (Assignment)cAlternatives_4_1.eContents().get(0);
		private final Keyword cQualifierSerializableKeyword_4_1_0_0 = (Keyword)cQualifierAssignment_4_1_0.eContents().get(0);
		private final Assignment cQualifierAssignment_4_1_1 = (Assignment)cAlternatives_4_1.eContents().get(1);
		private final Keyword cQualifierSerializableKeyword_4_1_1_0 = (Keyword)cQualifierAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Alternatives cAlternatives_5_0_1 = (Alternatives)cGroup_5_0.eContents().get(1);
		private final Assignment cOwnedAnnotationAssignment_5_0_1_0 = (Assignment)cAlternatives_5_0_1.eContents().get(0);
		private final RuleCall cOwnedAnnotationAnnotationElementCSParserRuleCall_5_0_1_0_0 = (RuleCall)cOwnedAnnotationAssignment_5_0_1_0.eContents().get(0);
		private final Assignment cOwnedConstraintAssignment_5_0_1_1 = (Assignment)cAlternatives_5_0_1.eContents().get(1);
		private final RuleCall cOwnedConstraintInvariantConstraintCSParserRuleCall_5_0_1_1_0 = (RuleCall)cOwnedConstraintAssignment_5_0_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_0_2 = (Keyword)cGroup_5_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_5_1 = (Keyword)cAlternatives_5.eContents().get(1);
		
		////CollectionTypeRefCS returns base::CollectionTypeRefCS:
		//
		////	name=CollectionTypeIdentifier
		//
		////	('(' (typeArguments=TypeRefCS)? ')')?	
		//
		////;
		//
		//DataTypeCS returns base::DataTypeCS:
		//	"datatype" name=UnrestrictedName ownedTemplateSignature=TemplateSignatureCS? (":"
		//	instanceClassName=SINGLE_QUOTED_STRING)? ("{" (qualifier+="serializable" | qualifier+="!serializable")? "}")? ("{"
		//	(ownedAnnotation+=AnnotationElementCS | ownedConstraint+=InvariantConstraintCS)* "}" | ";");
		public ParserRule getRule() { return rule; }

		//"datatype" name=UnrestrictedName ownedTemplateSignature=TemplateSignatureCS? (":"
		//instanceClassName=SINGLE_QUOTED_STRING)? ("{" (qualifier+="serializable" | qualifier+="!serializable")? "}")? ("{"
		//(ownedAnnotation+=AnnotationElementCS | ownedConstraint+=InvariantConstraintCS)* "}" | ";")
		public Group getGroup() { return cGroup; }

		//"datatype"
		public Keyword getDatatypeKeyword_0() { return cDatatypeKeyword_0; }

		//name=UnrestrictedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_1_0() { return cNameUnrestrictedNameParserRuleCall_1_0; }

		//ownedTemplateSignature=TemplateSignatureCS?
		public Assignment getOwnedTemplateSignatureAssignment_2() { return cOwnedTemplateSignatureAssignment_2; }

		//TemplateSignatureCS
		public RuleCall getOwnedTemplateSignatureTemplateSignatureCSParserRuleCall_2_0() { return cOwnedTemplateSignatureTemplateSignatureCSParserRuleCall_2_0; }

		//(":" instanceClassName=SINGLE_QUOTED_STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//instanceClassName=SINGLE_QUOTED_STRING
		public Assignment getInstanceClassNameAssignment_3_1() { return cInstanceClassNameAssignment_3_1; }

		//SINGLE_QUOTED_STRING
		public RuleCall getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_3_1_0() { return cInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_3_1_0; }

		//("{" (qualifier+="serializable" | qualifier+="!serializable")? "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }

		//(qualifier+="serializable" | qualifier+="!serializable")?
		public Alternatives getAlternatives_4_1() { return cAlternatives_4_1; }

		//qualifier+="serializable"
		public Assignment getQualifierAssignment_4_1_0() { return cQualifierAssignment_4_1_0; }

		//"serializable"
		public Keyword getQualifierSerializableKeyword_4_1_0_0() { return cQualifierSerializableKeyword_4_1_0_0; }

		//qualifier+="!serializable"
		public Assignment getQualifierAssignment_4_1_1() { return cQualifierAssignment_4_1_1; }

		//"!serializable"
		public Keyword getQualifierSerializableKeyword_4_1_1_0() { return cQualifierSerializableKeyword_4_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_2() { return cRightCurlyBracketKeyword_4_2; }

		//"{" (ownedAnnotation+=AnnotationElementCS | ownedConstraint+=InvariantConstraintCS)* "}" | ";"
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//"{" (ownedAnnotation+=AnnotationElementCS | ownedConstraint+=InvariantConstraintCS)* "}"
		public Group getGroup_5_0() { return cGroup_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_0_0() { return cLeftCurlyBracketKeyword_5_0_0; }

		//(ownedAnnotation+=AnnotationElementCS | ownedConstraint+=InvariantConstraintCS)*
		public Alternatives getAlternatives_5_0_1() { return cAlternatives_5_0_1; }

		//ownedAnnotation+=AnnotationElementCS
		public Assignment getOwnedAnnotationAssignment_5_0_1_0() { return cOwnedAnnotationAssignment_5_0_1_0; }

		//AnnotationElementCS
		public RuleCall getOwnedAnnotationAnnotationElementCSParserRuleCall_5_0_1_0_0() { return cOwnedAnnotationAnnotationElementCSParserRuleCall_5_0_1_0_0; }

		//ownedConstraint+=InvariantConstraintCS
		public Assignment getOwnedConstraintAssignment_5_0_1_1() { return cOwnedConstraintAssignment_5_0_1_1; }

		//InvariantConstraintCS
		public RuleCall getOwnedConstraintInvariantConstraintCSParserRuleCall_5_0_1_1_0() { return cOwnedConstraintInvariantConstraintCSParserRuleCall_5_0_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_0_2() { return cRightCurlyBracketKeyword_5_0_2; }

		//";"
		public Keyword getSemicolonKeyword_5_1() { return cSemicolonKeyword_5_1; }
	}

	public class DetailCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DetailCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cNameAlternatives_0_0 = (Alternatives)cNameAssignment_0.eContents().get(0);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_0_0_0 = (RuleCall)cNameAlternatives_0_0.eContents().get(0);
		private final RuleCall cNameSINGLE_QUOTED_STRINGTerminalRuleCall_0_0_1 = (RuleCall)cNameAlternatives_0_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSINGLE_QUOTED_STRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//DetailCS returns base::DetailCS:
		//	name=(UnrestrictedName | SINGLE_QUOTED_STRING) "=" value+=SINGLE_QUOTED_STRING*;
		public ParserRule getRule() { return rule; }

		//name=(UnrestrictedName | SINGLE_QUOTED_STRING) "=" value+=SINGLE_QUOTED_STRING*
		public Group getGroup() { return cGroup; }

		//name=(UnrestrictedName | SINGLE_QUOTED_STRING)
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//UnrestrictedName | SINGLE_QUOTED_STRING
		public Alternatives getNameAlternatives_0_0() { return cNameAlternatives_0_0; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_0_0_0() { return cNameUnrestrictedNameParserRuleCall_0_0_0; }

		//SINGLE_QUOTED_STRING
		public RuleCall getNameSINGLE_QUOTED_STRINGTerminalRuleCall_0_0_1() { return cNameSINGLE_QUOTED_STRINGTerminalRuleCall_0_0_1; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value+=SINGLE_QUOTED_STRING*
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//SINGLE_QUOTED_STRING
		public RuleCall getValueSINGLE_QUOTED_STRINGTerminalRuleCall_2_0() { return cValueSINGLE_QUOTED_STRINGTerminalRuleCall_2_0; }
	}

	public class DocumentationCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DocumentationCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDocumentationCSAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDocumentationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSINGLE_QUOTED_STRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOwnedDetailAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOwnedDetailDetailCSParserRuleCall_3_1_0 = (RuleCall)cOwnedDetailAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cOwnedDetailAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cOwnedDetailDetailCSParserRuleCall_3_2_1_0 = (RuleCall)cOwnedDetailAssignment_3_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//DocumentationCS returns base::DocumentationCS:
		//	{base::DocumentationCS} "documentation" value=SINGLE_QUOTED_STRING? ("(" ownedDetail+=DetailCS (","
		//	ownedDetail+=DetailCS)* ")")? ";";
		public ParserRule getRule() { return rule; }

		//{base::DocumentationCS} "documentation" value=SINGLE_QUOTED_STRING? ("(" ownedDetail+=DetailCS (","
		//ownedDetail+=DetailCS)* ")")? ";"
		public Group getGroup() { return cGroup; }

		//{base::DocumentationCS}
		public Action getDocumentationCSAction_0() { return cDocumentationCSAction_0; }

		//"documentation"
		public Keyword getDocumentationKeyword_1() { return cDocumentationKeyword_1; }

		//value=SINGLE_QUOTED_STRING?
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//SINGLE_QUOTED_STRING
		public RuleCall getValueSINGLE_QUOTED_STRINGTerminalRuleCall_2_0() { return cValueSINGLE_QUOTED_STRINGTerminalRuleCall_2_0; }

		//("(" ownedDetail+=DetailCS ("," ownedDetail+=DetailCS)* ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//ownedDetail+=DetailCS
		public Assignment getOwnedDetailAssignment_3_1() { return cOwnedDetailAssignment_3_1; }

		//DetailCS
		public RuleCall getOwnedDetailDetailCSParserRuleCall_3_1_0() { return cOwnedDetailDetailCSParserRuleCall_3_1_0; }

		//("," ownedDetail+=DetailCS)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//ownedDetail+=DetailCS
		public Assignment getOwnedDetailAssignment_3_2_1() { return cOwnedDetailAssignment_3_2_1; }

		//DetailCS
		public RuleCall getOwnedDetailDetailCSParserRuleCall_3_2_1_0() { return cOwnedDetailDetailCSParserRuleCall_3_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_3() { return cRightParenthesisKeyword_3_3; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class EnumerationCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumerationCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnumKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cOwnedTemplateSignatureAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedTemplateSignatureTemplateSignatureCSParserRuleCall_2_0 = (RuleCall)cOwnedTemplateSignatureAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cInstanceClassNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_3_1_0 = (RuleCall)cInstanceClassNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Alternatives cAlternatives_4_1 = (Alternatives)cGroup_4.eContents().get(1);
		private final Assignment cQualifierAssignment_4_1_0 = (Assignment)cAlternatives_4_1.eContents().get(0);
		private final Keyword cQualifierSerializableKeyword_4_1_0_0 = (Keyword)cQualifierAssignment_4_1_0.eContents().get(0);
		private final Assignment cQualifierAssignment_4_1_1 = (Assignment)cAlternatives_4_1.eContents().get(1);
		private final Keyword cQualifierSerializableKeyword_4_1_1_0 = (Keyword)cQualifierAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Alternatives cAlternatives_5_0_1 = (Alternatives)cGroup_5_0.eContents().get(1);
		private final Assignment cOwnedAnnotationAssignment_5_0_1_0 = (Assignment)cAlternatives_5_0_1.eContents().get(0);
		private final RuleCall cOwnedAnnotationAnnotationElementCSParserRuleCall_5_0_1_0_0 = (RuleCall)cOwnedAnnotationAssignment_5_0_1_0.eContents().get(0);
		private final Assignment cOwnedLiteralsAssignment_5_0_1_1 = (Assignment)cAlternatives_5_0_1.eContents().get(1);
		private final RuleCall cOwnedLiteralsEnumerationLiteralCSParserRuleCall_5_0_1_1_0 = (RuleCall)cOwnedLiteralsAssignment_5_0_1_1.eContents().get(0);
		private final Assignment cOwnedConstraintAssignment_5_0_1_2 = (Assignment)cAlternatives_5_0_1.eContents().get(2);
		private final RuleCall cOwnedConstraintInvariantConstraintCSParserRuleCall_5_0_1_2_0 = (RuleCall)cOwnedConstraintAssignment_5_0_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_0_2 = (Keyword)cGroup_5_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_5_1 = (Keyword)cAlternatives_5.eContents().get(1);
		
		//EnumerationCS returns base::EnumerationCS:
		//	"enum" name=UnrestrictedName ownedTemplateSignature=TemplateSignatureCS? (":" instanceClassName=SINGLE_QUOTED_STRING)?
		//	("{" (qualifier+="serializable" | qualifier+="!serializable")? "}")? ("{" (ownedAnnotation+=AnnotationElementCS |
		//	ownedLiterals+=EnumerationLiteralCS | ownedConstraint+=InvariantConstraintCS)* "}" | ";");
		public ParserRule getRule() { return rule; }

		//"enum" name=UnrestrictedName ownedTemplateSignature=TemplateSignatureCS? (":" instanceClassName=SINGLE_QUOTED_STRING)?
		//("{" (qualifier+="serializable" | qualifier+="!serializable")? "}")? ("{" (ownedAnnotation+=AnnotationElementCS |
		//ownedLiterals+=EnumerationLiteralCS | ownedConstraint+=InvariantConstraintCS)* "}" | ";")
		public Group getGroup() { return cGroup; }

		//"enum"
		public Keyword getEnumKeyword_0() { return cEnumKeyword_0; }

		//name=UnrestrictedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_1_0() { return cNameUnrestrictedNameParserRuleCall_1_0; }

		//ownedTemplateSignature=TemplateSignatureCS?
		public Assignment getOwnedTemplateSignatureAssignment_2() { return cOwnedTemplateSignatureAssignment_2; }

		//TemplateSignatureCS
		public RuleCall getOwnedTemplateSignatureTemplateSignatureCSParserRuleCall_2_0() { return cOwnedTemplateSignatureTemplateSignatureCSParserRuleCall_2_0; }

		//(":" instanceClassName=SINGLE_QUOTED_STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//instanceClassName=SINGLE_QUOTED_STRING
		public Assignment getInstanceClassNameAssignment_3_1() { return cInstanceClassNameAssignment_3_1; }

		//SINGLE_QUOTED_STRING
		public RuleCall getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_3_1_0() { return cInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_3_1_0; }

		//("{" (qualifier+="serializable" | qualifier+="!serializable")? "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }

		//(qualifier+="serializable" | qualifier+="!serializable")?
		public Alternatives getAlternatives_4_1() { return cAlternatives_4_1; }

		//qualifier+="serializable"
		public Assignment getQualifierAssignment_4_1_0() { return cQualifierAssignment_4_1_0; }

		//"serializable"
		public Keyword getQualifierSerializableKeyword_4_1_0_0() { return cQualifierSerializableKeyword_4_1_0_0; }

		//qualifier+="!serializable"
		public Assignment getQualifierAssignment_4_1_1() { return cQualifierAssignment_4_1_1; }

		//"!serializable"
		public Keyword getQualifierSerializableKeyword_4_1_1_0() { return cQualifierSerializableKeyword_4_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_2() { return cRightCurlyBracketKeyword_4_2; }

		//"{" (ownedAnnotation+=AnnotationElementCS | ownedLiterals+=EnumerationLiteralCS |
		//ownedConstraint+=InvariantConstraintCS)* "}" | ";"
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//"{" (ownedAnnotation+=AnnotationElementCS | ownedLiterals+=EnumerationLiteralCS |
		//ownedConstraint+=InvariantConstraintCS)* "}"
		public Group getGroup_5_0() { return cGroup_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_0_0() { return cLeftCurlyBracketKeyword_5_0_0; }

		//(ownedAnnotation+=AnnotationElementCS | ownedLiterals+=EnumerationLiteralCS | ownedConstraint+=InvariantConstraintCS)*
		public Alternatives getAlternatives_5_0_1() { return cAlternatives_5_0_1; }

		//ownedAnnotation+=AnnotationElementCS
		public Assignment getOwnedAnnotationAssignment_5_0_1_0() { return cOwnedAnnotationAssignment_5_0_1_0; }

		//AnnotationElementCS
		public RuleCall getOwnedAnnotationAnnotationElementCSParserRuleCall_5_0_1_0_0() { return cOwnedAnnotationAnnotationElementCSParserRuleCall_5_0_1_0_0; }

		//ownedLiterals+=EnumerationLiteralCS
		public Assignment getOwnedLiteralsAssignment_5_0_1_1() { return cOwnedLiteralsAssignment_5_0_1_1; }

		//EnumerationLiteralCS
		public RuleCall getOwnedLiteralsEnumerationLiteralCSParserRuleCall_5_0_1_1_0() { return cOwnedLiteralsEnumerationLiteralCSParserRuleCall_5_0_1_1_0; }

		//ownedConstraint+=InvariantConstraintCS
		public Assignment getOwnedConstraintAssignment_5_0_1_2() { return cOwnedConstraintAssignment_5_0_1_2; }

		//InvariantConstraintCS
		public RuleCall getOwnedConstraintInvariantConstraintCSParserRuleCall_5_0_1_2_0() { return cOwnedConstraintInvariantConstraintCSParserRuleCall_5_0_1_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_0_2() { return cRightCurlyBracketKeyword_5_0_2; }

		//";"
		public Keyword getSemicolonKeyword_5_1() { return cSemicolonKeyword_5_1; }
	}

	public class EnumerationLiteralCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumerationLiteralCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cValueAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValueINTEGERParserRuleCall_1_1_0 = (RuleCall)cValueAssignment_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cOwnedAnnotationAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cOwnedAnnotationAnnotationElementCSParserRuleCall_2_0_1_0 = (RuleCall)cOwnedAnnotationAssignment_2_0_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_0_2 = (Keyword)cGroup_2_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		
		//EnumerationLiteralCS returns base::EnumerationLiteralCS:
		//	name=UnrestrictedName ("=" value=INTEGER)? ("{" ownedAnnotation+=AnnotationElementCS* "}" | ";");
		public ParserRule getRule() { return rule; }

		//name=UnrestrictedName ("=" value=INTEGER)? ("{" ownedAnnotation+=AnnotationElementCS* "}" | ";")
		public Group getGroup() { return cGroup; }

		//name=UnrestrictedName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_0_0() { return cNameUnrestrictedNameParserRuleCall_0_0; }

		//("=" value=INTEGER)?
		public Group getGroup_1() { return cGroup_1; }

		//"="
		public Keyword getEqualsSignKeyword_1_0() { return cEqualsSignKeyword_1_0; }

		//value=INTEGER
		public Assignment getValueAssignment_1_1() { return cValueAssignment_1_1; }

		//INTEGER
		public RuleCall getValueINTEGERParserRuleCall_1_1_0() { return cValueINTEGERParserRuleCall_1_1_0; }

		//"{" ownedAnnotation+=AnnotationElementCS* "}" | ";"
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"{" ownedAnnotation+=AnnotationElementCS* "}"
		public Group getGroup_2_0() { return cGroup_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0_0() { return cLeftCurlyBracketKeyword_2_0_0; }

		//ownedAnnotation+=AnnotationElementCS*
		public Assignment getOwnedAnnotationAssignment_2_0_1() { return cOwnedAnnotationAssignment_2_0_1; }

		//AnnotationElementCS
		public RuleCall getOwnedAnnotationAnnotationElementCSParserRuleCall_2_0_1_0() { return cOwnedAnnotationAnnotationElementCSParserRuleCall_2_0_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_0_2() { return cRightCurlyBracketKeyword_2_0_2; }

		//";"
		public Keyword getSemicolonKeyword_2_1() { return cSemicolonKeyword_2_1; }
	}

	public class ImportCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImportCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_1_0_0 = (RuleCall)cNameAssignment_1_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNamespaceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cNamespaceNamespaceCrossReference_2_0 = (CrossReference)cNamespaceAssignment_2.eContents().get(0);
		private final RuleCall cNamespaceNamespaceSINGLE_QUOTED_STRINGTerminalRuleCall_2_0_1 = (RuleCall)cNamespaceNamespaceCrossReference_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ImportCS returns base::ImportCS:
		//	"import" (name=UnrestrictedName ":")? namespace=[pivot::Namespace|SINGLE_QUOTED_STRING] ";";
		public ParserRule getRule() { return rule; }

		//"import" (name=UnrestrictedName ":")? namespace=[pivot::Namespace|SINGLE_QUOTED_STRING] ";"
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//(name=UnrestrictedName ":")?
		public Group getGroup_1() { return cGroup_1; }

		//name=UnrestrictedName
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_1_0_0() { return cNameUnrestrictedNameParserRuleCall_1_0_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//namespace=[pivot::Namespace|SINGLE_QUOTED_STRING]
		public Assignment getNamespaceAssignment_2() { return cNamespaceAssignment_2; }

		//[pivot::Namespace|SINGLE_QUOTED_STRING]
		public CrossReference getNamespaceNamespaceCrossReference_2_0() { return cNamespaceNamespaceCrossReference_2_0; }

		//SINGLE_QUOTED_STRING
		public RuleCall getNamespaceNamespaceSINGLE_QUOTED_STRINGTerminalRuleCall_2_0_1() { return cNamespaceNamespaceSINGLE_QUOTED_STRINGTerminalRuleCall_2_0_1; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class LibraryCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LibraryCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLibraryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_1_0_0 = (RuleCall)cNameAssignment_1_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cPackageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cPackagePackageCrossReference_2_0 = (CrossReference)cPackageAssignment_2.eContents().get(0);
		private final RuleCall cPackagePackageSINGLE_QUOTED_STRINGTerminalRuleCall_2_0_1 = (RuleCall)cPackagePackageCrossReference_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//LibraryCS returns base::LibraryCS:
		//	"library" (name=UnrestrictedName ":")? package=[pivot::Package|SINGLE_QUOTED_STRING] ";";
		public ParserRule getRule() { return rule; }

		//"library" (name=UnrestrictedName ":")? package=[pivot::Package|SINGLE_QUOTED_STRING] ";"
		public Group getGroup() { return cGroup; }

		//"library"
		public Keyword getLibraryKeyword_0() { return cLibraryKeyword_0; }

		//(name=UnrestrictedName ":")?
		public Group getGroup_1() { return cGroup_1; }

		//name=UnrestrictedName
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_1_0_0() { return cNameUnrestrictedNameParserRuleCall_1_0_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//package=[pivot::Package|SINGLE_QUOTED_STRING]
		public Assignment getPackageAssignment_2() { return cPackageAssignment_2; }

		//[pivot::Package|SINGLE_QUOTED_STRING]
		public CrossReference getPackagePackageCrossReference_2_0() { return cPackagePackageCrossReference_2_0; }

		//SINGLE_QUOTED_STRING
		public RuleCall getPackagePackageSINGLE_QUOTED_STRINGTerminalRuleCall_2_0_1() { return cPackagePackageSINGLE_QUOTED_STRINGTerminalRuleCall_2_0_1; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class ModelElementCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelElementCS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cClassifierCSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEnumerationLiteralCSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cOperationCSParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPackageCSParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cStructuralFeatureCSParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//ModelElementCS returns base::ModelElementCS:
		//	ClassifierCS | EnumerationLiteralCS | OperationCS | PackageCS | StructuralFeatureCS;
		public ParserRule getRule() { return rule; }

		//ClassifierCS | EnumerationLiteralCS | OperationCS | PackageCS | StructuralFeatureCS
		public Alternatives getAlternatives() { return cAlternatives; }

		//ClassifierCS
		public RuleCall getClassifierCSParserRuleCall_0() { return cClassifierCSParserRuleCall_0; }

		//EnumerationLiteralCS
		public RuleCall getEnumerationLiteralCSParserRuleCall_1() { return cEnumerationLiteralCSParserRuleCall_1; }

		//OperationCS
		public RuleCall getOperationCSParserRuleCall_2() { return cOperationCSParserRuleCall_2; }

		//PackageCS
		public RuleCall getPackageCSParserRuleCall_3() { return cPackageCSParserRuleCall_3; }

		//StructuralFeatureCS
		public RuleCall getStructuralFeatureCSParserRuleCall_4() { return cStructuralFeatureCSParserRuleCall_4; }
	}

	public class ModelElementCSRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelElementCSRef");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRefModelElementCSCrossReference_0 = (CrossReference)cRefAssignment.eContents().get(0);
		private final RuleCall cRefModelElementCSUnrestrictedNameParserRuleCall_0_1 = (RuleCall)cRefModelElementCSCrossReference_0.eContents().get(1);
		
		//ModelElementCSRef returns base::ModelElementCSRef:
		//	ref=[base::ModelElementCS|UnrestrictedName];
		public ParserRule getRule() { return rule; }

		//ref=[base::ModelElementCS|UnrestrictedName]
		public Assignment getRefAssignment() { return cRefAssignment; }

		//[base::ModelElementCS|UnrestrictedName]
		public CrossReference getRefModelElementCSCrossReference_0() { return cRefModelElementCSCrossReference_0; }

		//UnrestrictedName
		public RuleCall getRefModelElementCSUnrestrictedNameParserRuleCall_0_1() { return cRefModelElementCSUnrestrictedNameParserRuleCall_0_1; }
	}

	public class OperationCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OperationCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cQualifierAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final Keyword cQualifierStaticKeyword_0_0_0 = (Keyword)cQualifierAssignment_0_0.eContents().get(0);
		private final Assignment cQualifierAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Keyword cQualifierDefinitionKeyword_0_1_0 = (Keyword)cQualifierAssignment_0_1.eContents().get(0);
		private final Keyword cOperationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cOwnedTemplateSignatureAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedTemplateSignatureTemplateSignatureCSParserRuleCall_3_0 = (RuleCall)cOwnedTemplateSignatureAssignment_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cOwnedParameterAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cOwnedParameterParameterCSParserRuleCall_5_0_0 = (RuleCall)cOwnedParameterAssignment_5_0.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Keyword cCommaKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cOwnedParameterAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cOwnedParameterParameterCSParserRuleCall_5_1_1_0 = (RuleCall)cOwnedParameterAssignment_5_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cOwnedTypeAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cOwnedTypeTypedRefCSParserRuleCall_7_1_0 = (RuleCall)cOwnedTypeAssignment_7_1.eContents().get(0);
		private final Group cGroup_7_2 = (Group)cGroup_7.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_7_2_0 = (Keyword)cGroup_7_2.eContents().get(0);
		private final Alternatives cAlternatives_7_2_1 = (Alternatives)cGroup_7_2.eContents().get(1);
		private final Group cGroup_7_2_1_0 = (Group)cAlternatives_7_2_1.eContents().get(0);
		private final Assignment cLowerAssignment_7_2_1_0_0 = (Assignment)cGroup_7_2_1_0.eContents().get(0);
		private final RuleCall cLowerLOWERParserRuleCall_7_2_1_0_0_0 = (RuleCall)cLowerAssignment_7_2_1_0_0.eContents().get(0);
		private final Group cGroup_7_2_1_0_1 = (Group)cGroup_7_2_1_0.eContents().get(1);
		private final Keyword cFullStopFullStopKeyword_7_2_1_0_1_0 = (Keyword)cGroup_7_2_1_0_1.eContents().get(0);
		private final Assignment cUpperAssignment_7_2_1_0_1_1 = (Assignment)cGroup_7_2_1_0_1.eContents().get(1);
		private final RuleCall cUpperUPPERParserRuleCall_7_2_1_0_1_1_0 = (RuleCall)cUpperAssignment_7_2_1_0_1_1.eContents().get(0);
		private final Assignment cMultiplicityAssignment_7_2_1_1 = (Assignment)cAlternatives_7_2_1.eContents().get(1);
		private final Alternatives cMultiplicityAlternatives_7_2_1_1_0 = (Alternatives)cMultiplicityAssignment_7_2_1_1.eContents().get(0);
		private final Keyword cMultiplicityAsteriskKeyword_7_2_1_1_0_0 = (Keyword)cMultiplicityAlternatives_7_2_1_1_0.eContents().get(0);
		private final Keyword cMultiplicityPlusSignKeyword_7_2_1_1_0_1 = (Keyword)cMultiplicityAlternatives_7_2_1_1_0.eContents().get(1);
		private final Keyword cMultiplicityQuestionMarkKeyword_7_2_1_1_0_2 = (Keyword)cMultiplicityAlternatives_7_2_1_1_0.eContents().get(2);
		private final Keyword cRightSquareBracketKeyword_7_2_2 = (Keyword)cGroup_7_2.eContents().get(2);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cThrowsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cOwnedExceptionAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cOwnedExceptionTypedRefCSParserRuleCall_8_1_0 = (RuleCall)cOwnedExceptionAssignment_8_1.eContents().get(0);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Keyword cCommaKeyword_8_2_0 = (Keyword)cGroup_8_2.eContents().get(0);
		private final Assignment cOwnedExceptionAssignment_8_2_1 = (Assignment)cGroup_8_2.eContents().get(1);
		private final RuleCall cOwnedExceptionTypedRefCSParserRuleCall_8_2_1_0 = (RuleCall)cOwnedExceptionAssignment_8_2_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Group cGroup_9_1 = (Group)cGroup_9.eContents().get(1);
		private final Alternatives cAlternatives_9_1_0 = (Alternatives)cGroup_9_1.eContents().get(0);
		private final Assignment cQualifierAssignment_9_1_0_0 = (Assignment)cAlternatives_9_1_0.eContents().get(0);
		private final Keyword cQualifierDerivedKeyword_9_1_0_0_0 = (Keyword)cQualifierAssignment_9_1_0_0.eContents().get(0);
		private final Assignment cQualifierAssignment_9_1_0_1 = (Assignment)cAlternatives_9_1_0.eContents().get(1);
		private final Keyword cQualifierDerivedKeyword_9_1_0_1_0 = (Keyword)cQualifierAssignment_9_1_0_1.eContents().get(0);
		private final Assignment cQualifierAssignment_9_1_0_2 = (Assignment)cAlternatives_9_1_0.eContents().get(2);
		private final Keyword cQualifierOrderedKeyword_9_1_0_2_0 = (Keyword)cQualifierAssignment_9_1_0_2.eContents().get(0);
		private final Assignment cQualifierAssignment_9_1_0_3 = (Assignment)cAlternatives_9_1_0.eContents().get(3);
		private final Keyword cQualifierOrderedKeyword_9_1_0_3_0 = (Keyword)cQualifierAssignment_9_1_0_3.eContents().get(0);
		private final Assignment cQualifierAssignment_9_1_0_4 = (Assignment)cAlternatives_9_1_0.eContents().get(4);
		private final Keyword cQualifierUniqueKeyword_9_1_0_4_0 = (Keyword)cQualifierAssignment_9_1_0_4.eContents().get(0);
		private final Assignment cQualifierAssignment_9_1_0_5 = (Assignment)cAlternatives_9_1_0.eContents().get(5);
		private final Keyword cQualifierUniqueKeyword_9_1_0_5_0 = (Keyword)cQualifierAssignment_9_1_0_5.eContents().get(0);
		private final Keyword cCommaKeyword_9_1_1 = (Keyword)cGroup_9_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_9_2 = (Keyword)cGroup_9.eContents().get(2);
		private final Alternatives cAlternatives_10 = (Alternatives)cGroup.eContents().get(10);
		private final Group cGroup_10_0 = (Group)cAlternatives_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_0_0 = (Keyword)cGroup_10_0.eContents().get(0);
		private final Alternatives cAlternatives_10_0_1 = (Alternatives)cGroup_10_0.eContents().get(1);
		private final Assignment cOwnedAnnotationAssignment_10_0_1_0 = (Assignment)cAlternatives_10_0_1.eContents().get(0);
		private final RuleCall cOwnedAnnotationAnnotationElementCSParserRuleCall_10_0_1_0_0 = (RuleCall)cOwnedAnnotationAssignment_10_0_1_0.eContents().get(0);
		private final Assignment cOwnedConstraintAssignment_10_0_1_1 = (Assignment)cAlternatives_10_0_1.eContents().get(1);
		private final Alternatives cOwnedConstraintAlternatives_10_0_1_1_0 = (Alternatives)cOwnedConstraintAssignment_10_0_1_1.eContents().get(0);
		private final RuleCall cOwnedConstraintPreconditionConstraintCSParserRuleCall_10_0_1_1_0_0 = (RuleCall)cOwnedConstraintAlternatives_10_0_1_1_0.eContents().get(0);
		private final RuleCall cOwnedConstraintBodyConstraintCSParserRuleCall_10_0_1_1_0_1 = (RuleCall)cOwnedConstraintAlternatives_10_0_1_1_0.eContents().get(1);
		private final RuleCall cOwnedConstraintPostconditionConstraintCSParserRuleCall_10_0_1_1_0_2 = (RuleCall)cOwnedConstraintAlternatives_10_0_1_1_0.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_10_0_2 = (Keyword)cGroup_10_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_10_1 = (Keyword)cAlternatives_10.eContents().get(1);
		
		//OperationCS returns base::OperationCS:
		//	(qualifier+="static" | qualifier+="definition")* "operation" name=UnrestrictedName
		//	ownedTemplateSignature=TemplateSignatureCS? "(" (ownedParameter+=ParameterCS ("," ownedParameter+=ParameterCS)*)? ")"
		//	(":" ownedType=TypedRefCS ("[" (lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")) "]")?)? ("throws"
		//	ownedException+=TypedRefCS ("," ownedException+=TypedRefCS)*)? ("{" ((qualifier+="derived" | qualifier+="!derived" |
		//	qualifier+="ordered" | qualifier+="!ordered" | qualifier+="unique" | qualifier+="!unique") ","?)+ "}")? ("{"
		//	(ownedAnnotation+=AnnotationElementCS | ownedConstraint+=(PreconditionConstraintCS | BodyConstraintCS |
		//	PostconditionConstraintCS))* "}" | ";");
		public ParserRule getRule() { return rule; }

		//(qualifier+="static" | qualifier+="definition")* "operation" name=UnrestrictedName
		//ownedTemplateSignature=TemplateSignatureCS? "(" (ownedParameter+=ParameterCS ("," ownedParameter+=ParameterCS)*)? ")"
		//(":" ownedType=TypedRefCS ("[" (lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")) "]")?)? ("throws"
		//ownedException+=TypedRefCS ("," ownedException+=TypedRefCS)*)? ("{" ((qualifier+="derived" | qualifier+="!derived" |
		//qualifier+="ordered" | qualifier+="!ordered" | qualifier+="unique" | qualifier+="!unique") ","?)+ "}")? ("{"
		//(ownedAnnotation+=AnnotationElementCS | ownedConstraint+=(PreconditionConstraintCS | BodyConstraintCS |
		//PostconditionConstraintCS))* "}" | ";")
		public Group getGroup() { return cGroup; }

		//(qualifier+="static" | qualifier+="definition")*
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//qualifier+="static"
		public Assignment getQualifierAssignment_0_0() { return cQualifierAssignment_0_0; }

		//"static"
		public Keyword getQualifierStaticKeyword_0_0_0() { return cQualifierStaticKeyword_0_0_0; }

		//qualifier+="definition"
		public Assignment getQualifierAssignment_0_1() { return cQualifierAssignment_0_1; }

		//"definition"
		public Keyword getQualifierDefinitionKeyword_0_1_0() { return cQualifierDefinitionKeyword_0_1_0; }

		//"operation"
		public Keyword getOperationKeyword_1() { return cOperationKeyword_1; }

		//name=UnrestrictedName
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_2_0() { return cNameUnrestrictedNameParserRuleCall_2_0; }

		//ownedTemplateSignature=TemplateSignatureCS?
		public Assignment getOwnedTemplateSignatureAssignment_3() { return cOwnedTemplateSignatureAssignment_3; }

		//TemplateSignatureCS
		public RuleCall getOwnedTemplateSignatureTemplateSignatureCSParserRuleCall_3_0() { return cOwnedTemplateSignatureTemplateSignatureCSParserRuleCall_3_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }

		//(ownedParameter+=ParameterCS ("," ownedParameter+=ParameterCS)*)?
		public Group getGroup_5() { return cGroup_5; }

		//ownedParameter+=ParameterCS
		public Assignment getOwnedParameterAssignment_5_0() { return cOwnedParameterAssignment_5_0; }

		//ParameterCS
		public RuleCall getOwnedParameterParameterCSParserRuleCall_5_0_0() { return cOwnedParameterParameterCSParserRuleCall_5_0_0; }

		//("," ownedParameter+=ParameterCS)*
		public Group getGroup_5_1() { return cGroup_5_1; }

		//","
		public Keyword getCommaKeyword_5_1_0() { return cCommaKeyword_5_1_0; }

		//ownedParameter+=ParameterCS
		public Assignment getOwnedParameterAssignment_5_1_1() { return cOwnedParameterAssignment_5_1_1; }

		//ParameterCS
		public RuleCall getOwnedParameterParameterCSParserRuleCall_5_1_1_0() { return cOwnedParameterParameterCSParserRuleCall_5_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }

		//(":" ownedType=TypedRefCS ("[" (lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")) "]")?)?
		public Group getGroup_7() { return cGroup_7; }

		//":"
		public Keyword getColonKeyword_7_0() { return cColonKeyword_7_0; }

		//ownedType=TypedRefCS
		public Assignment getOwnedTypeAssignment_7_1() { return cOwnedTypeAssignment_7_1; }

		//TypedRefCS
		public RuleCall getOwnedTypeTypedRefCSParserRuleCall_7_1_0() { return cOwnedTypeTypedRefCSParserRuleCall_7_1_0; }

		//("[" (lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")) "]")?
		public Group getGroup_7_2() { return cGroup_7_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_7_2_0() { return cLeftSquareBracketKeyword_7_2_0; }

		//lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")
		public Alternatives getAlternatives_7_2_1() { return cAlternatives_7_2_1; }

		//lower=LOWER (".." upper=UPPER)?
		public Group getGroup_7_2_1_0() { return cGroup_7_2_1_0; }

		//lower=LOWER
		public Assignment getLowerAssignment_7_2_1_0_0() { return cLowerAssignment_7_2_1_0_0; }

		//LOWER
		public RuleCall getLowerLOWERParserRuleCall_7_2_1_0_0_0() { return cLowerLOWERParserRuleCall_7_2_1_0_0_0; }

		//(".." upper=UPPER)?
		public Group getGroup_7_2_1_0_1() { return cGroup_7_2_1_0_1; }

		//".."
		public Keyword getFullStopFullStopKeyword_7_2_1_0_1_0() { return cFullStopFullStopKeyword_7_2_1_0_1_0; }

		//upper=UPPER
		public Assignment getUpperAssignment_7_2_1_0_1_1() { return cUpperAssignment_7_2_1_0_1_1; }

		//UPPER
		public RuleCall getUpperUPPERParserRuleCall_7_2_1_0_1_1_0() { return cUpperUPPERParserRuleCall_7_2_1_0_1_1_0; }

		//multiplicity=("*" | "+" | "?")
		public Assignment getMultiplicityAssignment_7_2_1_1() { return cMultiplicityAssignment_7_2_1_1; }

		//"*" | "+" | "?"
		public Alternatives getMultiplicityAlternatives_7_2_1_1_0() { return cMultiplicityAlternatives_7_2_1_1_0; }

		//"*"
		public Keyword getMultiplicityAsteriskKeyword_7_2_1_1_0_0() { return cMultiplicityAsteriskKeyword_7_2_1_1_0_0; }

		//"+"
		public Keyword getMultiplicityPlusSignKeyword_7_2_1_1_0_1() { return cMultiplicityPlusSignKeyword_7_2_1_1_0_1; }

		//"?"
		public Keyword getMultiplicityQuestionMarkKeyword_7_2_1_1_0_2() { return cMultiplicityQuestionMarkKeyword_7_2_1_1_0_2; }

		//"]"
		public Keyword getRightSquareBracketKeyword_7_2_2() { return cRightSquareBracketKeyword_7_2_2; }

		//("throws" ownedException+=TypedRefCS ("," ownedException+=TypedRefCS)*)?
		public Group getGroup_8() { return cGroup_8; }

		//"throws"
		public Keyword getThrowsKeyword_8_0() { return cThrowsKeyword_8_0; }

		//ownedException+=TypedRefCS
		public Assignment getOwnedExceptionAssignment_8_1() { return cOwnedExceptionAssignment_8_1; }

		//TypedRefCS
		public RuleCall getOwnedExceptionTypedRefCSParserRuleCall_8_1_0() { return cOwnedExceptionTypedRefCSParserRuleCall_8_1_0; }

		//("," ownedException+=TypedRefCS)*
		public Group getGroup_8_2() { return cGroup_8_2; }

		//","
		public Keyword getCommaKeyword_8_2_0() { return cCommaKeyword_8_2_0; }

		//ownedException+=TypedRefCS
		public Assignment getOwnedExceptionAssignment_8_2_1() { return cOwnedExceptionAssignment_8_2_1; }

		//TypedRefCS
		public RuleCall getOwnedExceptionTypedRefCSParserRuleCall_8_2_1_0() { return cOwnedExceptionTypedRefCSParserRuleCall_8_2_1_0; }

		//("{" ((qualifier+="derived" | qualifier+="!derived" | qualifier+="ordered" | qualifier+="!ordered" | qualifier+="unique"
		//| qualifier+="!unique") ","?)+ "}")?
		public Group getGroup_9() { return cGroup_9; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9_0() { return cLeftCurlyBracketKeyword_9_0; }

		//((qualifier+="derived" | qualifier+="!derived" | qualifier+="ordered" | qualifier+="!ordered" | qualifier+="unique" |
		//qualifier+="!unique") ","?)+
		public Group getGroup_9_1() { return cGroup_9_1; }

		//qualifier+="derived" | qualifier+="!derived" | qualifier+="ordered" | qualifier+="!ordered" | qualifier+="unique" |
		//qualifier+="!unique"
		public Alternatives getAlternatives_9_1_0() { return cAlternatives_9_1_0; }

		//qualifier+="derived"
		public Assignment getQualifierAssignment_9_1_0_0() { return cQualifierAssignment_9_1_0_0; }

		//"derived"
		public Keyword getQualifierDerivedKeyword_9_1_0_0_0() { return cQualifierDerivedKeyword_9_1_0_0_0; }

		//qualifier+="!derived"
		public Assignment getQualifierAssignment_9_1_0_1() { return cQualifierAssignment_9_1_0_1; }

		//"!derived"
		public Keyword getQualifierDerivedKeyword_9_1_0_1_0() { return cQualifierDerivedKeyword_9_1_0_1_0; }

		//qualifier+="ordered"
		public Assignment getQualifierAssignment_9_1_0_2() { return cQualifierAssignment_9_1_0_2; }

		//"ordered"
		public Keyword getQualifierOrderedKeyword_9_1_0_2_0() { return cQualifierOrderedKeyword_9_1_0_2_0; }

		//qualifier+="!ordered"
		public Assignment getQualifierAssignment_9_1_0_3() { return cQualifierAssignment_9_1_0_3; }

		//"!ordered"
		public Keyword getQualifierOrderedKeyword_9_1_0_3_0() { return cQualifierOrderedKeyword_9_1_0_3_0; }

		//qualifier+="unique"
		public Assignment getQualifierAssignment_9_1_0_4() { return cQualifierAssignment_9_1_0_4; }

		//"unique"
		public Keyword getQualifierUniqueKeyword_9_1_0_4_0() { return cQualifierUniqueKeyword_9_1_0_4_0; }

		//qualifier+="!unique"
		public Assignment getQualifierAssignment_9_1_0_5() { return cQualifierAssignment_9_1_0_5; }

		//"!unique"
		public Keyword getQualifierUniqueKeyword_9_1_0_5_0() { return cQualifierUniqueKeyword_9_1_0_5_0; }

		//","?
		public Keyword getCommaKeyword_9_1_1() { return cCommaKeyword_9_1_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9_2() { return cRightCurlyBracketKeyword_9_2; }

		//"{" (ownedAnnotation+=AnnotationElementCS | ownedConstraint+=(PreconditionConstraintCS | BodyConstraintCS |
		//PostconditionConstraintCS))* "}" | ";"
		public Alternatives getAlternatives_10() { return cAlternatives_10; }

		//"{" (ownedAnnotation+=AnnotationElementCS | ownedConstraint+=(PreconditionConstraintCS | BodyConstraintCS |
		//PostconditionConstraintCS))* "}"
		public Group getGroup_10_0() { return cGroup_10_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_10_0_0() { return cLeftCurlyBracketKeyword_10_0_0; }

		//(ownedAnnotation+=AnnotationElementCS | ownedConstraint+=(PreconditionConstraintCS | BodyConstraintCS |
		//PostconditionConstraintCS))*
		public Alternatives getAlternatives_10_0_1() { return cAlternatives_10_0_1; }

		//ownedAnnotation+=AnnotationElementCS
		public Assignment getOwnedAnnotationAssignment_10_0_1_0() { return cOwnedAnnotationAssignment_10_0_1_0; }

		//AnnotationElementCS
		public RuleCall getOwnedAnnotationAnnotationElementCSParserRuleCall_10_0_1_0_0() { return cOwnedAnnotationAnnotationElementCSParserRuleCall_10_0_1_0_0; }

		//ownedConstraint+=(PreconditionConstraintCS | BodyConstraintCS | PostconditionConstraintCS)
		public Assignment getOwnedConstraintAssignment_10_0_1_1() { return cOwnedConstraintAssignment_10_0_1_1; }

		//PreconditionConstraintCS | BodyConstraintCS | PostconditionConstraintCS
		public Alternatives getOwnedConstraintAlternatives_10_0_1_1_0() { return cOwnedConstraintAlternatives_10_0_1_1_0; }

		//PreconditionConstraintCS
		public RuleCall getOwnedConstraintPreconditionConstraintCSParserRuleCall_10_0_1_1_0_0() { return cOwnedConstraintPreconditionConstraintCSParserRuleCall_10_0_1_1_0_0; }

		//BodyConstraintCS
		public RuleCall getOwnedConstraintBodyConstraintCSParserRuleCall_10_0_1_1_0_1() { return cOwnedConstraintBodyConstraintCSParserRuleCall_10_0_1_1_0_1; }

		//PostconditionConstraintCS
		public RuleCall getOwnedConstraintPostconditionConstraintCSParserRuleCall_10_0_1_1_0_2() { return cOwnedConstraintPostconditionConstraintCSParserRuleCall_10_0_1_1_0_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10_0_2() { return cRightCurlyBracketKeyword_10_0_2; }

		//";"
		public Keyword getSemicolonKeyword_10_1() { return cSemicolonKeyword_10_1; }
	}

	public class PackageCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PackageCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cNsPrefixAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNsPrefixUnrestrictedNameParserRuleCall_2_1_0 = (RuleCall)cNsPrefixAssignment_2_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cNsURIAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cNsURISINGLE_QUOTED_STRINGTerminalRuleCall_2_3_0 = (RuleCall)cNsURIAssignment_2_3.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Alternatives cAlternatives_3_0_1 = (Alternatives)cGroup_3_0.eContents().get(1);
		private final Assignment cOwnedAnnotationAssignment_3_0_1_0 = (Assignment)cAlternatives_3_0_1.eContents().get(0);
		private final RuleCall cOwnedAnnotationAnnotationElementCSParserRuleCall_3_0_1_0_0 = (RuleCall)cOwnedAnnotationAssignment_3_0_1_0.eContents().get(0);
		private final Assignment cOwnedNestedPackageAssignment_3_0_1_1 = (Assignment)cAlternatives_3_0_1.eContents().get(1);
		private final RuleCall cOwnedNestedPackagePackageCSParserRuleCall_3_0_1_1_0 = (RuleCall)cOwnedNestedPackageAssignment_3_0_1_1.eContents().get(0);
		private final Assignment cOwnedTypeAssignment_3_0_1_2 = (Assignment)cAlternatives_3_0_1.eContents().get(2);
		private final RuleCall cOwnedTypeClassifierCSParserRuleCall_3_0_1_2_0 = (RuleCall)cOwnedTypeAssignment_3_0_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_3_1 = (Keyword)cAlternatives_3.eContents().get(1);
		
		//PackageCS returns base::PackageCS:
		//	"package" name=UnrestrictedName (":" nsPrefix=UnrestrictedName "=" nsURI=SINGLE_QUOTED_STRING)? ("{"
		//	(ownedAnnotation+=AnnotationElementCS | ownedNestedPackage+=PackageCS | ownedType+=ClassifierCS)* "}" | ";");
		public ParserRule getRule() { return rule; }

		//"package" name=UnrestrictedName (":" nsPrefix=UnrestrictedName "=" nsURI=SINGLE_QUOTED_STRING)? ("{"
		//(ownedAnnotation+=AnnotationElementCS | ownedNestedPackage+=PackageCS | ownedType+=ClassifierCS)* "}" | ";")
		public Group getGroup() { return cGroup; }

		//"package"
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//name=UnrestrictedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_1_0() { return cNameUnrestrictedNameParserRuleCall_1_0; }

		//(":" nsPrefix=UnrestrictedName "=" nsURI=SINGLE_QUOTED_STRING)?
		public Group getGroup_2() { return cGroup_2; }

		//":"
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }

		//nsPrefix=UnrestrictedName
		public Assignment getNsPrefixAssignment_2_1() { return cNsPrefixAssignment_2_1; }

		//UnrestrictedName
		public RuleCall getNsPrefixUnrestrictedNameParserRuleCall_2_1_0() { return cNsPrefixUnrestrictedNameParserRuleCall_2_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//nsURI=SINGLE_QUOTED_STRING
		public Assignment getNsURIAssignment_2_3() { return cNsURIAssignment_2_3; }

		//SINGLE_QUOTED_STRING
		public RuleCall getNsURISINGLE_QUOTED_STRINGTerminalRuleCall_2_3_0() { return cNsURISINGLE_QUOTED_STRINGTerminalRuleCall_2_3_0; }

		//"{" (ownedAnnotation+=AnnotationElementCS | ownedNestedPackage+=PackageCS | ownedType+=ClassifierCS)* "}" | ";"
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//"{" (ownedAnnotation+=AnnotationElementCS | ownedNestedPackage+=PackageCS | ownedType+=ClassifierCS)* "}"
		public Group getGroup_3_0() { return cGroup_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0_0() { return cLeftCurlyBracketKeyword_3_0_0; }

		//(ownedAnnotation+=AnnotationElementCS | ownedNestedPackage+=PackageCS | ownedType+=ClassifierCS)*
		public Alternatives getAlternatives_3_0_1() { return cAlternatives_3_0_1; }

		//ownedAnnotation+=AnnotationElementCS
		public Assignment getOwnedAnnotationAssignment_3_0_1_0() { return cOwnedAnnotationAssignment_3_0_1_0; }

		//AnnotationElementCS
		public RuleCall getOwnedAnnotationAnnotationElementCSParserRuleCall_3_0_1_0_0() { return cOwnedAnnotationAnnotationElementCSParserRuleCall_3_0_1_0_0; }

		//ownedNestedPackage+=PackageCS
		public Assignment getOwnedNestedPackageAssignment_3_0_1_1() { return cOwnedNestedPackageAssignment_3_0_1_1; }

		//PackageCS
		public RuleCall getOwnedNestedPackagePackageCSParserRuleCall_3_0_1_1_0() { return cOwnedNestedPackagePackageCSParserRuleCall_3_0_1_1_0; }

		//ownedType+=ClassifierCS
		public Assignment getOwnedTypeAssignment_3_0_1_2() { return cOwnedTypeAssignment_3_0_1_2; }

		//ClassifierCS
		public RuleCall getOwnedTypeClassifierCSParserRuleCall_3_0_1_2_0() { return cOwnedTypeClassifierCSParserRuleCall_3_0_1_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_0_2() { return cRightCurlyBracketKeyword_3_0_2; }

		//";"
		public Keyword getSemicolonKeyword_3_1() { return cSemicolonKeyword_3_1; }
	}

	public class ParameterCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParameterCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedTypeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedTypeTypedRefCSParserRuleCall_1_1_0 = (RuleCall)cOwnedTypeAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Alternatives cAlternatives_1_2_1 = (Alternatives)cGroup_1_2.eContents().get(1);
		private final Group cGroup_1_2_1_0 = (Group)cAlternatives_1_2_1.eContents().get(0);
		private final Assignment cLowerAssignment_1_2_1_0_0 = (Assignment)cGroup_1_2_1_0.eContents().get(0);
		private final RuleCall cLowerLOWERParserRuleCall_1_2_1_0_0_0 = (RuleCall)cLowerAssignment_1_2_1_0_0.eContents().get(0);
		private final Group cGroup_1_2_1_0_1 = (Group)cGroup_1_2_1_0.eContents().get(1);
		private final Keyword cFullStopFullStopKeyword_1_2_1_0_1_0 = (Keyword)cGroup_1_2_1_0_1.eContents().get(0);
		private final Assignment cUpperAssignment_1_2_1_0_1_1 = (Assignment)cGroup_1_2_1_0_1.eContents().get(1);
		private final RuleCall cUpperUPPERParserRuleCall_1_2_1_0_1_1_0 = (RuleCall)cUpperAssignment_1_2_1_0_1_1.eContents().get(0);
		private final Assignment cMultiplicityAssignment_1_2_1_1 = (Assignment)cAlternatives_1_2_1.eContents().get(1);
		private final Alternatives cMultiplicityAlternatives_1_2_1_1_0 = (Alternatives)cMultiplicityAssignment_1_2_1_1.eContents().get(0);
		private final Keyword cMultiplicityAsteriskKeyword_1_2_1_1_0_0 = (Keyword)cMultiplicityAlternatives_1_2_1_1_0.eContents().get(0);
		private final Keyword cMultiplicityPlusSignKeyword_1_2_1_1_0_1 = (Keyword)cMultiplicityAlternatives_1_2_1_1_0.eContents().get(1);
		private final Keyword cMultiplicityQuestionMarkKeyword_1_2_1_1_0_2 = (Keyword)cMultiplicityAlternatives_1_2_1_1_0.eContents().get(2);
		private final Keyword cRightSquareBracketKeyword_1_2_2 = (Keyword)cGroup_1_2.eContents().get(2);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Alternatives cAlternatives_2_1_0 = (Alternatives)cGroup_2_1.eContents().get(0);
		private final Assignment cQualifierAssignment_2_1_0_0 = (Assignment)cAlternatives_2_1_0.eContents().get(0);
		private final Keyword cQualifierOrderedKeyword_2_1_0_0_0 = (Keyword)cQualifierAssignment_2_1_0_0.eContents().get(0);
		private final Assignment cQualifierAssignment_2_1_0_1 = (Assignment)cAlternatives_2_1_0.eContents().get(1);
		private final Keyword cQualifierOrderedKeyword_2_1_0_1_0 = (Keyword)cQualifierAssignment_2_1_0_1.eContents().get(0);
		private final Assignment cQualifierAssignment_2_1_0_2 = (Assignment)cAlternatives_2_1_0.eContents().get(2);
		private final Keyword cQualifierUniqueKeyword_2_1_0_2_0 = (Keyword)cQualifierAssignment_2_1_0_2.eContents().get(0);
		private final Assignment cQualifierAssignment_2_1_0_3 = (Assignment)cAlternatives_2_1_0.eContents().get(3);
		private final Keyword cQualifierUniqueKeyword_2_1_0_3_0 = (Keyword)cQualifierAssignment_2_1_0_3.eContents().get(0);
		private final Keyword cCommaKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOwnedAnnotationAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOwnedAnnotationAnnotationElementCSParserRuleCall_3_1_0 = (RuleCall)cOwnedAnnotationAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//ParameterCS returns base::ParameterCS:
		//	name=UnrestrictedName (":" ownedType=TypedRefCS ("[" (lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" |
		//	"?")) "]")?)? ("{" ((qualifier+="ordered" | qualifier+="!ordered" | qualifier+="unique" | qualifier+="!unique") ","?)+
		//	"}")? ("{" ownedAnnotation+=AnnotationElementCS* "}")?;
		public ParserRule getRule() { return rule; }

		//name=UnrestrictedName (":" ownedType=TypedRefCS ("[" (lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?"))
		//"]")?)? ("{" ((qualifier+="ordered" | qualifier+="!ordered" | qualifier+="unique" | qualifier+="!unique") ","?)+ "}")?
		//("{" ownedAnnotation+=AnnotationElementCS* "}")?
		public Group getGroup() { return cGroup; }

		//name=UnrestrictedName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_0_0() { return cNameUnrestrictedNameParserRuleCall_0_0; }

		//(":" ownedType=TypedRefCS ("[" (lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")) "]")?)?
		public Group getGroup_1() { return cGroup_1; }

		//":"
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }

		//ownedType=TypedRefCS
		public Assignment getOwnedTypeAssignment_1_1() { return cOwnedTypeAssignment_1_1; }

		//TypedRefCS
		public RuleCall getOwnedTypeTypedRefCSParserRuleCall_1_1_0() { return cOwnedTypeTypedRefCSParserRuleCall_1_1_0; }

		//("[" (lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")) "]")?
		public Group getGroup_1_2() { return cGroup_1_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_2_0() { return cLeftSquareBracketKeyword_1_2_0; }

		//lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")
		public Alternatives getAlternatives_1_2_1() { return cAlternatives_1_2_1; }

		//lower=LOWER (".." upper=UPPER)?
		public Group getGroup_1_2_1_0() { return cGroup_1_2_1_0; }

		//lower=LOWER
		public Assignment getLowerAssignment_1_2_1_0_0() { return cLowerAssignment_1_2_1_0_0; }

		//LOWER
		public RuleCall getLowerLOWERParserRuleCall_1_2_1_0_0_0() { return cLowerLOWERParserRuleCall_1_2_1_0_0_0; }

		//(".." upper=UPPER)?
		public Group getGroup_1_2_1_0_1() { return cGroup_1_2_1_0_1; }

		//".."
		public Keyword getFullStopFullStopKeyword_1_2_1_0_1_0() { return cFullStopFullStopKeyword_1_2_1_0_1_0; }

		//upper=UPPER
		public Assignment getUpperAssignment_1_2_1_0_1_1() { return cUpperAssignment_1_2_1_0_1_1; }

		//UPPER
		public RuleCall getUpperUPPERParserRuleCall_1_2_1_0_1_1_0() { return cUpperUPPERParserRuleCall_1_2_1_0_1_1_0; }

		//multiplicity=("*" | "+" | "?")
		public Assignment getMultiplicityAssignment_1_2_1_1() { return cMultiplicityAssignment_1_2_1_1; }

		//"*" | "+" | "?"
		public Alternatives getMultiplicityAlternatives_1_2_1_1_0() { return cMultiplicityAlternatives_1_2_1_1_0; }

		//"*"
		public Keyword getMultiplicityAsteriskKeyword_1_2_1_1_0_0() { return cMultiplicityAsteriskKeyword_1_2_1_1_0_0; }

		//"+"
		public Keyword getMultiplicityPlusSignKeyword_1_2_1_1_0_1() { return cMultiplicityPlusSignKeyword_1_2_1_1_0_1; }

		//"?"
		public Keyword getMultiplicityQuestionMarkKeyword_1_2_1_1_0_2() { return cMultiplicityQuestionMarkKeyword_1_2_1_1_0_2; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_2_2() { return cRightSquareBracketKeyword_1_2_2; }

		//("{" ((qualifier+="ordered" | qualifier+="!ordered" | qualifier+="unique" | qualifier+="!unique") ","?)+ "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//((qualifier+="ordered" | qualifier+="!ordered" | qualifier+="unique" | qualifier+="!unique") ","?)+
		public Group getGroup_2_1() { return cGroup_2_1; }

		//qualifier+="ordered" | qualifier+="!ordered" | qualifier+="unique" | qualifier+="!unique"
		public Alternatives getAlternatives_2_1_0() { return cAlternatives_2_1_0; }

		//qualifier+="ordered"
		public Assignment getQualifierAssignment_2_1_0_0() { return cQualifierAssignment_2_1_0_0; }

		//"ordered"
		public Keyword getQualifierOrderedKeyword_2_1_0_0_0() { return cQualifierOrderedKeyword_2_1_0_0_0; }

		//qualifier+="!ordered"
		public Assignment getQualifierAssignment_2_1_0_1() { return cQualifierAssignment_2_1_0_1; }

		//"!ordered"
		public Keyword getQualifierOrderedKeyword_2_1_0_1_0() { return cQualifierOrderedKeyword_2_1_0_1_0; }

		//qualifier+="unique"
		public Assignment getQualifierAssignment_2_1_0_2() { return cQualifierAssignment_2_1_0_2; }

		//"unique"
		public Keyword getQualifierUniqueKeyword_2_1_0_2_0() { return cQualifierUniqueKeyword_2_1_0_2_0; }

		//qualifier+="!unique"
		public Assignment getQualifierAssignment_2_1_0_3() { return cQualifierAssignment_2_1_0_3; }

		//"!unique"
		public Keyword getQualifierUniqueKeyword_2_1_0_3_0() { return cQualifierUniqueKeyword_2_1_0_3_0; }

		//","?
		public Keyword getCommaKeyword_2_1_1() { return cCommaKeyword_2_1_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_2() { return cRightCurlyBracketKeyword_2_2; }

		//("{" ownedAnnotation+=AnnotationElementCS* "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }

		//ownedAnnotation+=AnnotationElementCS*
		public Assignment getOwnedAnnotationAssignment_3_1() { return cOwnedAnnotationAssignment_3_1; }

		//AnnotationElementCS
		public RuleCall getOwnedAnnotationAnnotationElementCSParserRuleCall_3_1_0() { return cOwnedAnnotationAnnotationElementCSParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_2() { return cRightCurlyBracketKeyword_3_2; }
	}

	public class PrimitiveTypeRefCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PrimitiveTypeRefCS");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNamePrimitiveTypeIdentifierParserRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//PrimitiveTypeRefCS returns base::PrimitiveTypeRefCS:
		//	name=PrimitiveTypeIdentifier;
		public ParserRule getRule() { return rule; }

		//name=PrimitiveTypeIdentifier
		public Assignment getNameAssignment() { return cNameAssignment; }

		//PrimitiveTypeIdentifier
		public RuleCall getNamePrimitiveTypeIdentifierParserRuleCall_0() { return cNamePrimitiveTypeIdentifierParserRuleCall_0; }
	}

	public class ReferenceCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReferenceCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cQualifierAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final Keyword cQualifierStaticKeyword_0_0_0 = (Keyword)cQualifierAssignment_0_0.eContents().get(0);
		private final Assignment cQualifierAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Keyword cQualifierDefinitionKeyword_0_1_0 = (Keyword)cQualifierAssignment_0_1.eContents().get(0);
		private final Keyword cPropertyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNumberSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOppositeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOppositeReferenceCSRefParserRuleCall_3_1_0 = (RuleCall)cOppositeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOwnedTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOwnedTypeTypedRefCSParserRuleCall_4_1_0 = (RuleCall)cOwnedTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Alternatives cAlternatives_4_2_1 = (Alternatives)cGroup_4_2.eContents().get(1);
		private final Group cGroup_4_2_1_0 = (Group)cAlternatives_4_2_1.eContents().get(0);
		private final Assignment cLowerAssignment_4_2_1_0_0 = (Assignment)cGroup_4_2_1_0.eContents().get(0);
		private final RuleCall cLowerLOWERParserRuleCall_4_2_1_0_0_0 = (RuleCall)cLowerAssignment_4_2_1_0_0.eContents().get(0);
		private final Group cGroup_4_2_1_0_1 = (Group)cGroup_4_2_1_0.eContents().get(1);
		private final Keyword cFullStopFullStopKeyword_4_2_1_0_1_0 = (Keyword)cGroup_4_2_1_0_1.eContents().get(0);
		private final Assignment cUpperAssignment_4_2_1_0_1_1 = (Assignment)cGroup_4_2_1_0_1.eContents().get(1);
		private final RuleCall cUpperUPPERParserRuleCall_4_2_1_0_1_1_0 = (RuleCall)cUpperAssignment_4_2_1_0_1_1.eContents().get(0);
		private final Assignment cMultiplicityAssignment_4_2_1_1 = (Assignment)cAlternatives_4_2_1.eContents().get(1);
		private final Alternatives cMultiplicityAlternatives_4_2_1_1_0 = (Alternatives)cMultiplicityAssignment_4_2_1_1.eContents().get(0);
		private final Keyword cMultiplicityAsteriskKeyword_4_2_1_1_0_0 = (Keyword)cMultiplicityAlternatives_4_2_1_1_0.eContents().get(0);
		private final Keyword cMultiplicityPlusSignKeyword_4_2_1_1_0_1 = (Keyword)cMultiplicityAlternatives_4_2_1_1_0.eContents().get(1);
		private final Keyword cMultiplicityQuestionMarkKeyword_4_2_1_1_0_2 = (Keyword)cMultiplicityAlternatives_4_2_1_1_0.eContents().get(2);
		private final Keyword cRightSquareBracketKeyword_4_2_2 = (Keyword)cGroup_4_2.eContents().get(2);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDefaultAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDefaultSINGLE_QUOTED_STRINGTerminalRuleCall_5_1_0 = (RuleCall)cDefaultAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Alternatives cAlternatives_6_1_0 = (Alternatives)cGroup_6_1.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_0 = (Assignment)cAlternatives_6_1_0.eContents().get(0);
		private final Keyword cQualifierComposesKeyword_6_1_0_0_0 = (Keyword)cQualifierAssignment_6_1_0_0.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_1 = (Assignment)cAlternatives_6_1_0.eContents().get(1);
		private final Keyword cQualifierComposesKeyword_6_1_0_1_0 = (Keyword)cQualifierAssignment_6_1_0_1.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_2 = (Assignment)cAlternatives_6_1_0.eContents().get(2);
		private final Keyword cQualifierDerivedKeyword_6_1_0_2_0 = (Keyword)cQualifierAssignment_6_1_0_2.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_3 = (Assignment)cAlternatives_6_1_0.eContents().get(3);
		private final Keyword cQualifierDerivedKeyword_6_1_0_3_0 = (Keyword)cQualifierAssignment_6_1_0_3.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_4 = (Assignment)cAlternatives_6_1_0.eContents().get(4);
		private final Keyword cQualifierOrderedKeyword_6_1_0_4_0 = (Keyword)cQualifierAssignment_6_1_0_4.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_5 = (Assignment)cAlternatives_6_1_0.eContents().get(5);
		private final Keyword cQualifierOrderedKeyword_6_1_0_5_0 = (Keyword)cQualifierAssignment_6_1_0_5.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_6 = (Assignment)cAlternatives_6_1_0.eContents().get(6);
		private final Keyword cQualifierReadonlyKeyword_6_1_0_6_0 = (Keyword)cQualifierAssignment_6_1_0_6.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_7 = (Assignment)cAlternatives_6_1_0.eContents().get(7);
		private final Keyword cQualifierReadonlyKeyword_6_1_0_7_0 = (Keyword)cQualifierAssignment_6_1_0_7.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_8 = (Assignment)cAlternatives_6_1_0.eContents().get(8);
		private final Keyword cQualifierResolveKeyword_6_1_0_8_0 = (Keyword)cQualifierAssignment_6_1_0_8.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_9 = (Assignment)cAlternatives_6_1_0.eContents().get(9);
		private final Keyword cQualifierResolveKeyword_6_1_0_9_0 = (Keyword)cQualifierAssignment_6_1_0_9.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_10 = (Assignment)cAlternatives_6_1_0.eContents().get(10);
		private final Keyword cQualifierTransientKeyword_6_1_0_10_0 = (Keyword)cQualifierAssignment_6_1_0_10.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_11 = (Assignment)cAlternatives_6_1_0.eContents().get(11);
		private final Keyword cQualifierTransientKeyword_6_1_0_11_0 = (Keyword)cQualifierAssignment_6_1_0_11.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_12 = (Assignment)cAlternatives_6_1_0.eContents().get(12);
		private final Keyword cQualifierUniqueKeyword_6_1_0_12_0 = (Keyword)cQualifierAssignment_6_1_0_12.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_13 = (Assignment)cAlternatives_6_1_0.eContents().get(13);
		private final Keyword cQualifierUniqueKeyword_6_1_0_13_0 = (Keyword)cQualifierAssignment_6_1_0_13.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_14 = (Assignment)cAlternatives_6_1_0.eContents().get(14);
		private final Keyword cQualifierUnsettableKeyword_6_1_0_14_0 = (Keyword)cQualifierAssignment_6_1_0_14.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_15 = (Assignment)cAlternatives_6_1_0.eContents().get(15);
		private final Keyword cQualifierUnsettableKeyword_6_1_0_15_0 = (Keyword)cQualifierAssignment_6_1_0_15.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_16 = (Assignment)cAlternatives_6_1_0.eContents().get(16);
		private final Keyword cQualifierVolatileKeyword_6_1_0_16_0 = (Keyword)cQualifierAssignment_6_1_0_16.eContents().get(0);
		private final Assignment cQualifierAssignment_6_1_0_17 = (Assignment)cAlternatives_6_1_0.eContents().get(17);
		private final Keyword cQualifierVolatileKeyword_6_1_0_17_0 = (Keyword)cQualifierAssignment_6_1_0_17.eContents().get(0);
		private final Keyword cCommaKeyword_6_1_1 = (Keyword)cGroup_6_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Group cGroup_7_0 = (Group)cAlternatives_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_0_0 = (Keyword)cGroup_7_0.eContents().get(0);
		private final Alternatives cAlternatives_7_0_1 = (Alternatives)cGroup_7_0.eContents().get(1);
		private final Assignment cOwnedAnnotationAssignment_7_0_1_0 = (Assignment)cAlternatives_7_0_1.eContents().get(0);
		private final RuleCall cOwnedAnnotationAnnotationElementCSParserRuleCall_7_0_1_0_0 = (RuleCall)cOwnedAnnotationAssignment_7_0_1_0.eContents().get(0);
		private final Assignment cOwnedConstraintAssignment_7_0_1_1 = (Assignment)cAlternatives_7_0_1.eContents().get(1);
		private final Alternatives cOwnedConstraintAlternatives_7_0_1_1_0 = (Alternatives)cOwnedConstraintAssignment_7_0_1_1.eContents().get(0);
		private final RuleCall cOwnedConstraintInitialConstraintCSParserRuleCall_7_0_1_1_0_0 = (RuleCall)cOwnedConstraintAlternatives_7_0_1_1_0.eContents().get(0);
		private final RuleCall cOwnedConstraintDerivedConstraintCSParserRuleCall_7_0_1_1_0_1 = (RuleCall)cOwnedConstraintAlternatives_7_0_1_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7_0_2 = (Keyword)cGroup_7_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_7_1 = (Keyword)cAlternatives_7.eContents().get(1);
		
		//ReferenceCS returns base::ReferenceCS:
		//	(qualifier+="static" | qualifier+="definition")* "property" name=UnrestrictedName ("#" opposite=ReferenceCSRef)? (":"
		//	ownedType=TypedRefCS ("[" (lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")) "]")?)? ("="
		//	default=SINGLE_QUOTED_STRING)? ("{" ((qualifier+="composes" | qualifier+="!composes" | qualifier+="derived" |
		//	qualifier+="!derived" | qualifier+="ordered" | qualifier+="!ordered" | qualifier+="readonly" | qualifier+="!readonly"
		//	| qualifier+="resolve" | qualifier+="!resolve" | qualifier+="transient" | qualifier+="!transient" |
		//	qualifier+="unique" | qualifier+="!unique" | qualifier+="unsettable" | qualifier+="!unsettable" |
		//	qualifier+="volatile" | qualifier+="!volatile") ","?)+ "}")? ("{" (ownedAnnotation+=AnnotationElementCS |
		//	ownedConstraint+=(InitialConstraintCS | DerivedConstraintCS))* "}" | ";");
		public ParserRule getRule() { return rule; }

		//(qualifier+="static" | qualifier+="definition")* "property" name=UnrestrictedName ("#" opposite=ReferenceCSRef)? (":"
		//ownedType=TypedRefCS ("[" (lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")) "]")?)? ("="
		//default=SINGLE_QUOTED_STRING)? ("{" ((qualifier+="composes" | qualifier+="!composes" | qualifier+="derived" |
		//qualifier+="!derived" | qualifier+="ordered" | qualifier+="!ordered" | qualifier+="readonly" | qualifier+="!readonly" |
		//qualifier+="resolve" | qualifier+="!resolve" | qualifier+="transient" | qualifier+="!transient" | qualifier+="unique" |
		//qualifier+="!unique" | qualifier+="unsettable" | qualifier+="!unsettable" | qualifier+="volatile" |
		//qualifier+="!volatile") ","?)+ "}")? ("{" (ownedAnnotation+=AnnotationElementCS | ownedConstraint+=(InitialConstraintCS
		//| DerivedConstraintCS))* "}" | ";")
		public Group getGroup() { return cGroup; }

		//(qualifier+="static" | qualifier+="definition")*
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//qualifier+="static"
		public Assignment getQualifierAssignment_0_0() { return cQualifierAssignment_0_0; }

		//"static"
		public Keyword getQualifierStaticKeyword_0_0_0() { return cQualifierStaticKeyword_0_0_0; }

		//qualifier+="definition"
		public Assignment getQualifierAssignment_0_1() { return cQualifierAssignment_0_1; }

		//"definition"
		public Keyword getQualifierDefinitionKeyword_0_1_0() { return cQualifierDefinitionKeyword_0_1_0; }

		//"property"
		public Keyword getPropertyKeyword_1() { return cPropertyKeyword_1; }

		//name=UnrestrictedName
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_2_0() { return cNameUnrestrictedNameParserRuleCall_2_0; }

		//("#" opposite=ReferenceCSRef)?
		public Group getGroup_3() { return cGroup_3; }

		//"#"
		public Keyword getNumberSignKeyword_3_0() { return cNumberSignKeyword_3_0; }

		//opposite=ReferenceCSRef
		public Assignment getOppositeAssignment_3_1() { return cOppositeAssignment_3_1; }

		//ReferenceCSRef
		public RuleCall getOppositeReferenceCSRefParserRuleCall_3_1_0() { return cOppositeReferenceCSRefParserRuleCall_3_1_0; }

		//(":" ownedType=TypedRefCS ("[" (lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")) "]")?)?
		public Group getGroup_4() { return cGroup_4; }

		//":"
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }

		//ownedType=TypedRefCS
		public Assignment getOwnedTypeAssignment_4_1() { return cOwnedTypeAssignment_4_1; }

		//TypedRefCS
		public RuleCall getOwnedTypeTypedRefCSParserRuleCall_4_1_0() { return cOwnedTypeTypedRefCSParserRuleCall_4_1_0; }

		//("[" (lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")) "]")?
		public Group getGroup_4_2() { return cGroup_4_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4_2_0() { return cLeftSquareBracketKeyword_4_2_0; }

		//lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")
		public Alternatives getAlternatives_4_2_1() { return cAlternatives_4_2_1; }

		//lower=LOWER (".." upper=UPPER)?
		public Group getGroup_4_2_1_0() { return cGroup_4_2_1_0; }

		//lower=LOWER
		public Assignment getLowerAssignment_4_2_1_0_0() { return cLowerAssignment_4_2_1_0_0; }

		//LOWER
		public RuleCall getLowerLOWERParserRuleCall_4_2_1_0_0_0() { return cLowerLOWERParserRuleCall_4_2_1_0_0_0; }

		//(".." upper=UPPER)?
		public Group getGroup_4_2_1_0_1() { return cGroup_4_2_1_0_1; }

		//".."
		public Keyword getFullStopFullStopKeyword_4_2_1_0_1_0() { return cFullStopFullStopKeyword_4_2_1_0_1_0; }

		//upper=UPPER
		public Assignment getUpperAssignment_4_2_1_0_1_1() { return cUpperAssignment_4_2_1_0_1_1; }

		//UPPER
		public RuleCall getUpperUPPERParserRuleCall_4_2_1_0_1_1_0() { return cUpperUPPERParserRuleCall_4_2_1_0_1_1_0; }

		//multiplicity=("*" | "+" | "?")
		public Assignment getMultiplicityAssignment_4_2_1_1() { return cMultiplicityAssignment_4_2_1_1; }

		//"*" | "+" | "?"
		public Alternatives getMultiplicityAlternatives_4_2_1_1_0() { return cMultiplicityAlternatives_4_2_1_1_0; }

		//"*"
		public Keyword getMultiplicityAsteriskKeyword_4_2_1_1_0_0() { return cMultiplicityAsteriskKeyword_4_2_1_1_0_0; }

		//"+"
		public Keyword getMultiplicityPlusSignKeyword_4_2_1_1_0_1() { return cMultiplicityPlusSignKeyword_4_2_1_1_0_1; }

		//"?"
		public Keyword getMultiplicityQuestionMarkKeyword_4_2_1_1_0_2() { return cMultiplicityQuestionMarkKeyword_4_2_1_1_0_2; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4_2_2() { return cRightSquareBracketKeyword_4_2_2; }

		//("=" default=SINGLE_QUOTED_STRING)?
		public Group getGroup_5() { return cGroup_5; }

		//"="
		public Keyword getEqualsSignKeyword_5_0() { return cEqualsSignKeyword_5_0; }

		//default=SINGLE_QUOTED_STRING
		public Assignment getDefaultAssignment_5_1() { return cDefaultAssignment_5_1; }

		//SINGLE_QUOTED_STRING
		public RuleCall getDefaultSINGLE_QUOTED_STRINGTerminalRuleCall_5_1_0() { return cDefaultSINGLE_QUOTED_STRINGTerminalRuleCall_5_1_0; }

		//("{" ((qualifier+="composes" | qualifier+="!composes" | qualifier+="derived" | qualifier+="!derived" |
		//qualifier+="ordered" | qualifier+="!ordered" | qualifier+="readonly" | qualifier+="!readonly" | qualifier+="resolve" |
		//qualifier+="!resolve" | qualifier+="transient" | qualifier+="!transient" | qualifier+="unique" | qualifier+="!unique" |
		//qualifier+="unsettable" | qualifier+="!unsettable" | qualifier+="volatile" | qualifier+="!volatile") ","?)+ "}")?
		public Group getGroup_6() { return cGroup_6; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_0() { return cLeftCurlyBracketKeyword_6_0; }

		//((qualifier+="composes" | qualifier+="!composes" | qualifier+="derived" | qualifier+="!derived" | qualifier+="ordered" |
		//qualifier+="!ordered" | qualifier+="readonly" | qualifier+="!readonly" | qualifier+="resolve" | qualifier+="!resolve" |
		//qualifier+="transient" | qualifier+="!transient" | qualifier+="unique" | qualifier+="!unique" | qualifier+="unsettable"
		//| qualifier+="!unsettable" | qualifier+="volatile" | qualifier+="!volatile") ","?)+
		public Group getGroup_6_1() { return cGroup_6_1; }

		//qualifier+="composes" | qualifier+="!composes" | qualifier+="derived" | qualifier+="!derived" | qualifier+="ordered" |
		//qualifier+="!ordered" | qualifier+="readonly" | qualifier+="!readonly" | qualifier+="resolve" | qualifier+="!resolve" |
		//qualifier+="transient" | qualifier+="!transient" | qualifier+="unique" | qualifier+="!unique" | qualifier+="unsettable"
		//| qualifier+="!unsettable" | qualifier+="volatile" | qualifier+="!volatile"
		public Alternatives getAlternatives_6_1_0() { return cAlternatives_6_1_0; }

		//qualifier+="composes"
		public Assignment getQualifierAssignment_6_1_0_0() { return cQualifierAssignment_6_1_0_0; }

		//"composes"
		public Keyword getQualifierComposesKeyword_6_1_0_0_0() { return cQualifierComposesKeyword_6_1_0_0_0; }

		//qualifier+="!composes"
		public Assignment getQualifierAssignment_6_1_0_1() { return cQualifierAssignment_6_1_0_1; }

		//"!composes"
		public Keyword getQualifierComposesKeyword_6_1_0_1_0() { return cQualifierComposesKeyword_6_1_0_1_0; }

		//qualifier+="derived"
		public Assignment getQualifierAssignment_6_1_0_2() { return cQualifierAssignment_6_1_0_2; }

		//"derived"
		public Keyword getQualifierDerivedKeyword_6_1_0_2_0() { return cQualifierDerivedKeyword_6_1_0_2_0; }

		//qualifier+="!derived"
		public Assignment getQualifierAssignment_6_1_0_3() { return cQualifierAssignment_6_1_0_3; }

		//"!derived"
		public Keyword getQualifierDerivedKeyword_6_1_0_3_0() { return cQualifierDerivedKeyword_6_1_0_3_0; }

		//qualifier+="ordered"
		public Assignment getQualifierAssignment_6_1_0_4() { return cQualifierAssignment_6_1_0_4; }

		//"ordered"
		public Keyword getQualifierOrderedKeyword_6_1_0_4_0() { return cQualifierOrderedKeyword_6_1_0_4_0; }

		//qualifier+="!ordered"
		public Assignment getQualifierAssignment_6_1_0_5() { return cQualifierAssignment_6_1_0_5; }

		//"!ordered"
		public Keyword getQualifierOrderedKeyword_6_1_0_5_0() { return cQualifierOrderedKeyword_6_1_0_5_0; }

		//qualifier+="readonly"
		public Assignment getQualifierAssignment_6_1_0_6() { return cQualifierAssignment_6_1_0_6; }

		//"readonly"
		public Keyword getQualifierReadonlyKeyword_6_1_0_6_0() { return cQualifierReadonlyKeyword_6_1_0_6_0; }

		//qualifier+="!readonly"
		public Assignment getQualifierAssignment_6_1_0_7() { return cQualifierAssignment_6_1_0_7; }

		//"!readonly"
		public Keyword getQualifierReadonlyKeyword_6_1_0_7_0() { return cQualifierReadonlyKeyword_6_1_0_7_0; }

		//qualifier+="resolve"
		public Assignment getQualifierAssignment_6_1_0_8() { return cQualifierAssignment_6_1_0_8; }

		//"resolve"
		public Keyword getQualifierResolveKeyword_6_1_0_8_0() { return cQualifierResolveKeyword_6_1_0_8_0; }

		//qualifier+="!resolve"
		public Assignment getQualifierAssignment_6_1_0_9() { return cQualifierAssignment_6_1_0_9; }

		//"!resolve"
		public Keyword getQualifierResolveKeyword_6_1_0_9_0() { return cQualifierResolveKeyword_6_1_0_9_0; }

		//qualifier+="transient"
		public Assignment getQualifierAssignment_6_1_0_10() { return cQualifierAssignment_6_1_0_10; }

		//"transient"
		public Keyword getQualifierTransientKeyword_6_1_0_10_0() { return cQualifierTransientKeyword_6_1_0_10_0; }

		//qualifier+="!transient"
		public Assignment getQualifierAssignment_6_1_0_11() { return cQualifierAssignment_6_1_0_11; }

		//"!transient"
		public Keyword getQualifierTransientKeyword_6_1_0_11_0() { return cQualifierTransientKeyword_6_1_0_11_0; }

		//qualifier+="unique"
		public Assignment getQualifierAssignment_6_1_0_12() { return cQualifierAssignment_6_1_0_12; }

		//"unique"
		public Keyword getQualifierUniqueKeyword_6_1_0_12_0() { return cQualifierUniqueKeyword_6_1_0_12_0; }

		//qualifier+="!unique"
		public Assignment getQualifierAssignment_6_1_0_13() { return cQualifierAssignment_6_1_0_13; }

		//"!unique"
		public Keyword getQualifierUniqueKeyword_6_1_0_13_0() { return cQualifierUniqueKeyword_6_1_0_13_0; }

		//qualifier+="unsettable"
		public Assignment getQualifierAssignment_6_1_0_14() { return cQualifierAssignment_6_1_0_14; }

		//"unsettable"
		public Keyword getQualifierUnsettableKeyword_6_1_0_14_0() { return cQualifierUnsettableKeyword_6_1_0_14_0; }

		//qualifier+="!unsettable"
		public Assignment getQualifierAssignment_6_1_0_15() { return cQualifierAssignment_6_1_0_15; }

		//"!unsettable"
		public Keyword getQualifierUnsettableKeyword_6_1_0_15_0() { return cQualifierUnsettableKeyword_6_1_0_15_0; }

		//qualifier+="volatile"
		public Assignment getQualifierAssignment_6_1_0_16() { return cQualifierAssignment_6_1_0_16; }

		//"volatile"
		public Keyword getQualifierVolatileKeyword_6_1_0_16_0() { return cQualifierVolatileKeyword_6_1_0_16_0; }

		//qualifier+="!volatile"
		public Assignment getQualifierAssignment_6_1_0_17() { return cQualifierAssignment_6_1_0_17; }

		//"!volatile"
		public Keyword getQualifierVolatileKeyword_6_1_0_17_0() { return cQualifierVolatileKeyword_6_1_0_17_0; }

		//","?
		public Keyword getCommaKeyword_6_1_1() { return cCommaKeyword_6_1_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_2() { return cRightCurlyBracketKeyword_6_2; }

		//"{" (ownedAnnotation+=AnnotationElementCS | ownedConstraint+=(InitialConstraintCS | DerivedConstraintCS))* "}" | ";"
		public Alternatives getAlternatives_7() { return cAlternatives_7; }

		//"{" (ownedAnnotation+=AnnotationElementCS | ownedConstraint+=(InitialConstraintCS | DerivedConstraintCS))* "}"
		public Group getGroup_7_0() { return cGroup_7_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7_0_0() { return cLeftCurlyBracketKeyword_7_0_0; }

		//(ownedAnnotation+=AnnotationElementCS | ownedConstraint+=(InitialConstraintCS | DerivedConstraintCS))*
		public Alternatives getAlternatives_7_0_1() { return cAlternatives_7_0_1; }

		//ownedAnnotation+=AnnotationElementCS
		public Assignment getOwnedAnnotationAssignment_7_0_1_0() { return cOwnedAnnotationAssignment_7_0_1_0; }

		//AnnotationElementCS
		public RuleCall getOwnedAnnotationAnnotationElementCSParserRuleCall_7_0_1_0_0() { return cOwnedAnnotationAnnotationElementCSParserRuleCall_7_0_1_0_0; }

		//ownedConstraint+=(InitialConstraintCS | DerivedConstraintCS)
		public Assignment getOwnedConstraintAssignment_7_0_1_1() { return cOwnedConstraintAssignment_7_0_1_1; }

		//InitialConstraintCS | DerivedConstraintCS
		public Alternatives getOwnedConstraintAlternatives_7_0_1_1_0() { return cOwnedConstraintAlternatives_7_0_1_1_0; }

		//InitialConstraintCS
		public RuleCall getOwnedConstraintInitialConstraintCSParserRuleCall_7_0_1_1_0_0() { return cOwnedConstraintInitialConstraintCSParserRuleCall_7_0_1_1_0_0; }

		//DerivedConstraintCS
		public RuleCall getOwnedConstraintDerivedConstraintCSParserRuleCall_7_0_1_1_0_1() { return cOwnedConstraintDerivedConstraintCSParserRuleCall_7_0_1_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7_0_2() { return cRightCurlyBracketKeyword_7_0_2; }

		//";"
		public Keyword getSemicolonKeyword_7_1() { return cSemicolonKeyword_7_1; }
	}

	public class ReferenceCSRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReferenceCSRef");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRefPropertyCrossReference_0 = (CrossReference)cRefAssignment.eContents().get(0);
		private final RuleCall cRefPropertyUnrestrictedNameParserRuleCall_0_1 = (RuleCall)cRefPropertyCrossReference_0.eContents().get(1);
		
		//ReferenceCSRef returns base::ReferenceCSRef:
		//	ref=[pivot::Property|UnrestrictedName];
		public ParserRule getRule() { return rule; }

		//ref=[pivot::Property|UnrestrictedName]
		public Assignment getRefAssignment() { return cRefAssignment; }

		//[pivot::Property|UnrestrictedName]
		public CrossReference getRefPropertyCrossReference_0() { return cRefPropertyCrossReference_0; }

		//UnrestrictedName
		public RuleCall getRefPropertyUnrestrictedNameParserRuleCall_0_1() { return cRefPropertyUnrestrictedNameParserRuleCall_0_1; }
	}

	public class SpecificationCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SpecificationCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOCLinEcoreSpecificationCSAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cOwnedExpressionAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cOwnedExpressionExpCSParserRuleCall_1_0_0 = (RuleCall)cOwnedExpressionAssignment_1_0.eContents().get(0);
		private final Assignment cExprStringAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cExprStringUNQUOTED_STRINGTerminalRuleCall_1_1_0 = (RuleCall)cExprStringAssignment_1_1.eContents().get(0);
		
		//SpecificationCS returns OCLinEcoreSpecificationCS:
		//	{OCLinEcoreSpecificationCS} (ownedExpression=ExpCS | exprString=UNQUOTED_STRING)?;
		public ParserRule getRule() { return rule; }

		//{OCLinEcoreSpecificationCS} (ownedExpression=ExpCS | exprString=UNQUOTED_STRING)?
		public Group getGroup() { return cGroup; }

		//{OCLinEcoreSpecificationCS}
		public Action getOCLinEcoreSpecificationCSAction_0() { return cOCLinEcoreSpecificationCSAction_0; }

		//(ownedExpression=ExpCS | exprString=UNQUOTED_STRING)?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//ownedExpression=ExpCS
		public Assignment getOwnedExpressionAssignment_1_0() { return cOwnedExpressionAssignment_1_0; }

		//ExpCS
		public RuleCall getOwnedExpressionExpCSParserRuleCall_1_0_0() { return cOwnedExpressionExpCSParserRuleCall_1_0_0; }

		//exprString=UNQUOTED_STRING
		public Assignment getExprStringAssignment_1_1() { return cExprStringAssignment_1_1; }

		//UNQUOTED_STRING
		public RuleCall getExprStringUNQUOTED_STRINGTerminalRuleCall_1_1_0() { return cExprStringUNQUOTED_STRINGTerminalRuleCall_1_1_0; }
	}

	public class StructuralFeatureCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StructuralFeatureCS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeCSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cReferenceCSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//StructuralFeatureCS returns base::StructuralFeatureCS:
		//	AttributeCS | ReferenceCS;
		public ParserRule getRule() { return rule; }

		//AttributeCS | ReferenceCS
		public Alternatives getAlternatives() { return cAlternatives; }

		//AttributeCS
		public RuleCall getAttributeCSParserRuleCall_0() { return cAttributeCSParserRuleCall_0; }

		//ReferenceCS
		public RuleCall getReferenceCSParserRuleCall_1() { return cReferenceCSParserRuleCall_1; }
	}

	public class TemplateBindingCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TemplateBindingCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLessThanSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedParameterSubstitutionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedParameterSubstitutionTemplateParameterSubstitutionCSParserRuleCall_1_0 = (RuleCall)cOwnedParameterSubstitutionAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOwnedParameterSubstitutionAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedParameterSubstitutionTemplateParameterSubstitutionCSParserRuleCall_2_1_0 = (RuleCall)cOwnedParameterSubstitutionAssignment_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//TemplateBindingCS returns base::TemplateBindingCS:
		//	"<" ownedParameterSubstitution+=TemplateParameterSubstitutionCS (","
		//	ownedParameterSubstitution+=TemplateParameterSubstitutionCS)* ">";
		public ParserRule getRule() { return rule; }

		//"<" ownedParameterSubstitution+=TemplateParameterSubstitutionCS (","
		//ownedParameterSubstitution+=TemplateParameterSubstitutionCS)* ">"
		public Group getGroup() { return cGroup; }

		//"<"
		public Keyword getLessThanSignKeyword_0() { return cLessThanSignKeyword_0; }

		//ownedParameterSubstitution+=TemplateParameterSubstitutionCS
		public Assignment getOwnedParameterSubstitutionAssignment_1() { return cOwnedParameterSubstitutionAssignment_1; }

		//TemplateParameterSubstitutionCS
		public RuleCall getOwnedParameterSubstitutionTemplateParameterSubstitutionCSParserRuleCall_1_0() { return cOwnedParameterSubstitutionTemplateParameterSubstitutionCSParserRuleCall_1_0; }

		//("," ownedParameterSubstitution+=TemplateParameterSubstitutionCS)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//ownedParameterSubstitution+=TemplateParameterSubstitutionCS
		public Assignment getOwnedParameterSubstitutionAssignment_2_1() { return cOwnedParameterSubstitutionAssignment_2_1; }

		//TemplateParameterSubstitutionCS
		public RuleCall getOwnedParameterSubstitutionTemplateParameterSubstitutionCSParserRuleCall_2_1_0() { return cOwnedParameterSubstitutionTemplateParameterSubstitutionCSParserRuleCall_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_3() { return cGreaterThanSignKeyword_3; }
	}

	public class TemplateParameterSubstitutionCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TemplateParameterSubstitutionCS");
		private final Assignment cOwnedActualParameterAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedActualParameterTypeRefCSParserRuleCall_0 = (RuleCall)cOwnedActualParameterAssignment.eContents().get(0);
		
		//TemplateParameterSubstitutionCS returns base::TemplateParameterSubstitutionCS:
		//	ownedActualParameter=TypeRefCS;
		public ParserRule getRule() { return rule; }

		//ownedActualParameter=TypeRefCS
		public Assignment getOwnedActualParameterAssignment() { return cOwnedActualParameterAssignment; }

		//TypeRefCS
		public RuleCall getOwnedActualParameterTypeRefCSParserRuleCall_0() { return cOwnedActualParameterTypeRefCSParserRuleCall_0; }
	}

	public class TemplateSignatureCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TemplateSignatureCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLessThanSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedTemplateParameterAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedTemplateParameterTypeParameterCSParserRuleCall_1_0 = (RuleCall)cOwnedTemplateParameterAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOwnedTemplateParameterAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedTemplateParameterTypeParameterCSParserRuleCall_2_1_0 = (RuleCall)cOwnedTemplateParameterAssignment_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//TemplateSignatureCS returns base::TemplateSignatureCS:
		//	"<" ownedTemplateParameter+=TypeParameterCS ("," ownedTemplateParameter+=TypeParameterCS)* ">";
		public ParserRule getRule() { return rule; }

		//"<" ownedTemplateParameter+=TypeParameterCS ("," ownedTemplateParameter+=TypeParameterCS)* ">"
		public Group getGroup() { return cGroup; }

		//"<"
		public Keyword getLessThanSignKeyword_0() { return cLessThanSignKeyword_0; }

		//ownedTemplateParameter+=TypeParameterCS
		public Assignment getOwnedTemplateParameterAssignment_1() { return cOwnedTemplateParameterAssignment_1; }

		//TypeParameterCS
		public RuleCall getOwnedTemplateParameterTypeParameterCSParserRuleCall_1_0() { return cOwnedTemplateParameterTypeParameterCSParserRuleCall_1_0; }

		//("," ownedTemplateParameter+=TypeParameterCS)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//ownedTemplateParameter+=TypeParameterCS
		public Assignment getOwnedTemplateParameterAssignment_2_1() { return cOwnedTemplateParameterAssignment_2_1; }

		//TypeParameterCS
		public RuleCall getOwnedTemplateParameterTypeParameterCSParserRuleCall_2_1_0() { return cOwnedTemplateParameterTypeParameterCSParserRuleCall_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_3() { return cGreaterThanSignKeyword_3; }
	}

	public class TypeIdentifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeIdentifier");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUnrestrictedNameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPrimitiveTypeIdentifierParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TypeIdentifier:
		//	UnrestrictedName | PrimitiveTypeIdentifier;
		public ParserRule getRule() { return rule; }

		//UnrestrictedName | PrimitiveTypeIdentifier
		public Alternatives getAlternatives() { return cAlternatives; }

		//UnrestrictedName
		public RuleCall getUnrestrictedNameParserRuleCall_0() { return cUnrestrictedNameParserRuleCall_0; }

		//PrimitiveTypeIdentifier
		public RuleCall getPrimitiveTypeIdentifierParserRuleCall_1() { return cPrimitiveTypeIdentifierParserRuleCall_1; }
	}

	public class TypeParameterCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeParameterCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameUnrestrictedNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cExtendsKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cOwnedExtendsAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cOwnedExtendsTypedRefCSParserRuleCall_1_0_1_0 = (RuleCall)cOwnedExtendsAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_0_2 = (Group)cGroup_1_0.eContents().get(2);
		private final Keyword cAmpersandAmpersandKeyword_1_0_2_0 = (Keyword)cGroup_1_0_2.eContents().get(0);
		private final Assignment cOwnedExtendsAssignment_1_0_2_1 = (Assignment)cGroup_1_0_2.eContents().get(1);
		private final RuleCall cOwnedExtendsTypedRefCSParserRuleCall_1_0_2_1_0 = (RuleCall)cOwnedExtendsAssignment_1_0_2_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cSuperKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedSuperAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedSuperTypedRefCSParserRuleCall_1_1_1_0 = (RuleCall)cOwnedSuperAssignment_1_1_1.eContents().get(0);
		
		//TypeParameterCS returns base::TypeParameterCS:
		//	name=UnrestrictedName ("extends" ownedExtends+=TypedRefCS ("&&" ownedExtends+=TypedRefCS)* | "super"
		//	ownedSuper=TypedRefCS)?;
		public ParserRule getRule() { return rule; }

		//name=UnrestrictedName ("extends" ownedExtends+=TypedRefCS ("&&" ownedExtends+=TypedRefCS)* | "super"
		//ownedSuper=TypedRefCS)?
		public Group getGroup() { return cGroup; }

		//name=UnrestrictedName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//UnrestrictedName
		public RuleCall getNameUnrestrictedNameParserRuleCall_0_0() { return cNameUnrestrictedNameParserRuleCall_0_0; }

		//("extends" ownedExtends+=TypedRefCS ("&&" ownedExtends+=TypedRefCS)* | "super" ownedSuper=TypedRefCS)?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"extends" ownedExtends+=TypedRefCS ("&&" ownedExtends+=TypedRefCS)*
		public Group getGroup_1_0() { return cGroup_1_0; }

		//"extends"
		public Keyword getExtendsKeyword_1_0_0() { return cExtendsKeyword_1_0_0; }

		//ownedExtends+=TypedRefCS
		public Assignment getOwnedExtendsAssignment_1_0_1() { return cOwnedExtendsAssignment_1_0_1; }

		//TypedRefCS
		public RuleCall getOwnedExtendsTypedRefCSParserRuleCall_1_0_1_0() { return cOwnedExtendsTypedRefCSParserRuleCall_1_0_1_0; }

		//("&&" ownedExtends+=TypedRefCS)*
		public Group getGroup_1_0_2() { return cGroup_1_0_2; }

		//"&&"
		public Keyword getAmpersandAmpersandKeyword_1_0_2_0() { return cAmpersandAmpersandKeyword_1_0_2_0; }

		//ownedExtends+=TypedRefCS
		public Assignment getOwnedExtendsAssignment_1_0_2_1() { return cOwnedExtendsAssignment_1_0_2_1; }

		//TypedRefCS
		public RuleCall getOwnedExtendsTypedRefCSParserRuleCall_1_0_2_1_0() { return cOwnedExtendsTypedRefCSParserRuleCall_1_0_2_1_0; }

		//"super" ownedSuper=TypedRefCS
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"super"
		public Keyword getSuperKeyword_1_1_0() { return cSuperKeyword_1_1_0; }

		//ownedSuper=TypedRefCS
		public Assignment getOwnedSuperAssignment_1_1_1() { return cOwnedSuperAssignment_1_1_1; }

		//TypedRefCS
		public RuleCall getOwnedSuperTypedRefCSParserRuleCall_1_1_1_0() { return cOwnedSuperTypedRefCSParserRuleCall_1_1_1_0; }
	}

	public class TypeRefCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeRefCS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTypedRefCSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWildcardTypeRefCSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TypeRefCS returns base::TypeRefCS:
		//	TypedRefCS | WildcardTypeRefCS;
		public ParserRule getRule() { return rule; }

		//TypedRefCS | WildcardTypeRefCS
		public Alternatives getAlternatives() { return cAlternatives; }

		//TypedRefCS
		public RuleCall getTypedRefCSParserRuleCall_0() { return cTypedRefCSParserRuleCall_0; }

		//WildcardTypeRefCS
		public RuleCall getWildcardTypeRefCSParserRuleCall_1() { return cWildcardTypeRefCSParserRuleCall_1; }
	}

	public class TypedRefCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypedRefCS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPrimitiveTypeRefCSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTypedTypeRefCSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TypedRefCS returns base::TypedRefCS:
		//	PrimitiveTypeRefCS / *| CollectionTypeRefCS* / | TypedTypeRefCS;
		public ParserRule getRule() { return rule; }

		//PrimitiveTypeRefCS / *| CollectionTypeRefCS* / | TypedTypeRefCS
		public Alternatives getAlternatives() { return cAlternatives; }

		//PrimitiveTypeRefCS
		public RuleCall getPrimitiveTypeRefCSParserRuleCall_0() { return cPrimitiveTypeRefCSParserRuleCall_0; }

		//TypedTypeRefCS
		public RuleCall getTypedTypeRefCSParserRuleCall_1() { return cTypedTypeRefCSParserRuleCall_1; }
	}

	public class TypedTypeRefCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypedTypeRefCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNamespaceAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cNamespaceNamespaceCrossReference_0_0_0 = (CrossReference)cNamespaceAssignment_0_0.eContents().get(0);
		private final RuleCall cNamespaceNamespaceUnrestrictedNameParserRuleCall_0_0_0_1 = (RuleCall)cNamespaceNamespaceCrossReference_0_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTypeTypeCrossReference_1_0 = (CrossReference)cTypeAssignment_1.eContents().get(0);
		private final RuleCall cTypeTypeUnrestrictedNameParserRuleCall_1_0_1 = (RuleCall)cTypeTypeCrossReference_1_0.eContents().get(1);
		private final Assignment cOwnedTemplateBindingAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedTemplateBindingTemplateBindingCSParserRuleCall_2_0 = (RuleCall)cOwnedTemplateBindingAssignment_2.eContents().get(0);
		
		//TypedTypeRefCS returns base::TypedTypeRefCS:
		//	(namespace+=[pivot::Namespace|UnrestrictedName] "::")* //	(namespace+=NamespaceRefCS '::')*
		//
		//	type=[pivot::Type|UnrestrictedName] ownedTemplateBinding=TemplateBindingCS?;
		public ParserRule getRule() { return rule; }

		//(namespace+=[pivot::Namespace|UnrestrictedName] "::")* //	(namespace+=NamespaceRefCS '::')*
		//
		//type=[pivot::Type|UnrestrictedName] ownedTemplateBinding=TemplateBindingCS?
		public Group getGroup() { return cGroup; }

		//(namespace+=[pivot::Namespace|UnrestrictedName] "::")*
		public Group getGroup_0() { return cGroup_0; }

		//namespace+=[pivot::Namespace|UnrestrictedName]
		public Assignment getNamespaceAssignment_0_0() { return cNamespaceAssignment_0_0; }

		//[pivot::Namespace|UnrestrictedName]
		public CrossReference getNamespaceNamespaceCrossReference_0_0_0() { return cNamespaceNamespaceCrossReference_0_0_0; }

		//UnrestrictedName
		public RuleCall getNamespaceNamespaceUnrestrictedNameParserRuleCall_0_0_0_1() { return cNamespaceNamespaceUnrestrictedNameParserRuleCall_0_0_0_1; }

		//"::"
		public Keyword getColonColonKeyword_0_1() { return cColonColonKeyword_0_1; }

		//type=[pivot::Type|UnrestrictedName]
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//[pivot::Type|UnrestrictedName]
		public CrossReference getTypeTypeCrossReference_1_0() { return cTypeTypeCrossReference_1_0; }

		//UnrestrictedName
		public RuleCall getTypeTypeUnrestrictedNameParserRuleCall_1_0_1() { return cTypeTypeUnrestrictedNameParserRuleCall_1_0_1; }

		//ownedTemplateBinding=TemplateBindingCS?
		public Assignment getOwnedTemplateBindingAssignment_2() { return cOwnedTemplateBindingAssignment_2; }

		//TemplateBindingCS
		public RuleCall getOwnedTemplateBindingTemplateBindingCSParserRuleCall_2_0() { return cOwnedTemplateBindingTemplateBindingCSParserRuleCall_2_0; }
	}

	public class WildcardTypeRefCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "WildcardTypeRefCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cWildcardTypeRefCSAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cQuestionMarkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cExtendsKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cExtendsAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cExtendsTypedRefCSParserRuleCall_2_0_1_0 = (RuleCall)cExtendsAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cSuperKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cSuperAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cSuperTypedRefCSParserRuleCall_2_1_1_0 = (RuleCall)cSuperAssignment_2_1_1.eContents().get(0);
		
		//WildcardTypeRefCS returns base::WildcardTypeRefCS:
		//	{base::WildcardTypeRefCS} "?" ("extends" extends=TypedRefCS | "super" super=TypedRefCS)?;
		public ParserRule getRule() { return rule; }

		//{base::WildcardTypeRefCS} "?" ("extends" extends=TypedRefCS | "super" super=TypedRefCS)?
		public Group getGroup() { return cGroup; }

		//{base::WildcardTypeRefCS}
		public Action getWildcardTypeRefCSAction_0() { return cWildcardTypeRefCSAction_0; }

		//"?"
		public Keyword getQuestionMarkKeyword_1() { return cQuestionMarkKeyword_1; }

		//("extends" extends=TypedRefCS | "super" super=TypedRefCS)?
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"extends" extends=TypedRefCS
		public Group getGroup_2_0() { return cGroup_2_0; }

		//"extends"
		public Keyword getExtendsKeyword_2_0_0() { return cExtendsKeyword_2_0_0; }

		//extends=TypedRefCS
		public Assignment getExtendsAssignment_2_0_1() { return cExtendsAssignment_2_0_1; }

		//TypedRefCS
		public RuleCall getExtendsTypedRefCSParserRuleCall_2_0_1_0() { return cExtendsTypedRefCSParserRuleCall_2_0_1_0; }

		//"super" super=TypedRefCS
		public Group getGroup_2_1() { return cGroup_2_1; }

		//"super"
		public Keyword getSuperKeyword_2_1_0() { return cSuperKeyword_2_1_0; }

		//super=TypedRefCS
		public Assignment getSuperAssignment_2_1_1() { return cSuperAssignment_2_1_1; }

		//TypedRefCS
		public RuleCall getSuperTypedRefCSParserRuleCall_2_1_1_0() { return cSuperTypedRefCSParserRuleCall_2_1_1_0; }
	}
	
	
	private RootPackageCSElements pRootPackageCS;
	private TerminalRule tUNQUOTED_STRING;
	private INTEGERElements pINTEGER;
	private LOWERElements pLOWER;
	private UPPERElements pUPPER;
	private UnrestrictedNameElements pUnrestrictedName;
	private BodyConstraintCSElements pBodyConstraintCS;
	private DerivedConstraintCSElements pDerivedConstraintCS;
	private InitialConstraintCSElements pInitialConstraintCS;
	private InvariantConstraintCSElements pInvariantConstraintCS;
	private PostconditionConstraintCSElements pPostconditionConstraintCS;
	private PreconditionConstraintCSElements pPreconditionConstraintCS;
	private AnnotationCSElements pAnnotationCS;
	private AnnotationElementCSElements pAnnotationElementCS;
	private AttributeCSElements pAttributeCS;
	private ClassCSElements pClassCS;
	private ClassifierCSElements pClassifierCS;
	private DataTypeCSElements pDataTypeCS;
	private DetailCSElements pDetailCS;
	private DocumentationCSElements pDocumentationCS;
	private EnumerationCSElements pEnumerationCS;
	private EnumerationLiteralCSElements pEnumerationLiteralCS;
	private ImportCSElements pImportCS;
	private LibraryCSElements pLibraryCS;
	private ModelElementCSElements pModelElementCS;
	private ModelElementCSRefElements pModelElementCSRef;
	private OperationCSElements pOperationCS;
	private PackageCSElements pPackageCS;
	private ParameterCSElements pParameterCS;
	private PrimitiveTypeRefCSElements pPrimitiveTypeRefCS;
	private ReferenceCSElements pReferenceCS;
	private ReferenceCSRefElements pReferenceCSRef;
	private SpecificationCSElements pSpecificationCS;
	private StructuralFeatureCSElements pStructuralFeatureCS;
	private TemplateBindingCSElements pTemplateBindingCS;
	private TemplateParameterSubstitutionCSElements pTemplateParameterSubstitutionCS;
	private TemplateSignatureCSElements pTemplateSignatureCS;
	private TypeIdentifierElements pTypeIdentifier;
	private TypeParameterCSElements pTypeParameterCS;
	private TypeRefCSElements pTypeRefCS;
	private TypedRefCSElements pTypedRefCS;
	private TypedTypeRefCSElements pTypedTypeRefCS;
	private WildcardTypeRefCSElements pWildcardTypeRefCS;
	
	private final GrammarProvider grammarProvider;

	private EssentialOCLGrammarAccess gaEssentialOCL;

	@Inject
	public OCLinEcoreGrammarAccess(GrammarProvider grammarProvider,
		EssentialOCLGrammarAccess gaEssentialOCL) {
		this.grammarProvider = grammarProvider;
		this.gaEssentialOCL = gaEssentialOCL;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public EssentialOCLGrammarAccess getEssentialOCLGrammarAccess() {
		return gaEssentialOCL;
	}

	
	////generate oclinEcore2 "http://www.eclipse.org/ocl/examples/xtext/oclinecore/OCLinEcore"
	//
	//RootPackageCS returns base::RootPackageCS:
	//	("module" name=UnrestrictedName)? ownedLibrary+=LibraryCS* ownedImport+=ImportCS* ownedNestedPackage+=PackageCS*;
	public RootPackageCSElements getRootPackageCSAccess() {
		return (pRootPackageCS != null) ? pRootPackageCS : (pRootPackageCS = new RootPackageCSElements());
	}
	
	public ParserRule getRootPackageCSRule() {
		return getRootPackageCSAccess().getRule();
	}

	//// Never forward parsed; just provides a placeholder
	//
	//terminal UNQUOTED_STRING: //  for reverse serialisation of embedded OCL 
	//
	//	"£$%^£$%^";
	public TerminalRule getUNQUOTED_STRINGRule() {
		return (tUNQUOTED_STRING != null) ? tUNQUOTED_STRING : (tUNQUOTED_STRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "UNQUOTED_STRING"));
	} 

	//INTEGER returns ecore::EInt:
	//	INT;
	public INTEGERElements getINTEGERAccess() {
		return (pINTEGER != null) ? pINTEGER : (pINTEGER = new INTEGERElements());
	}
	
	public ParserRule getINTEGERRule() {
		return getINTEGERAccess().getRule();
	}

	//LOWER returns ecore::EInt:
	//	INT;
	public LOWERElements getLOWERAccess() {
		return (pLOWER != null) ? pLOWER : (pLOWER = new LOWERElements());
	}
	
	public ParserRule getLOWERRule() {
		return getLOWERAccess().getRule();
	}

	//UPPER returns ecore::EInt:
	//	INT | "*";
	public UPPERElements getUPPERAccess() {
		return (pUPPER != null) ? pUPPER : (pUPPER = new UPPERElements());
	}
	
	public ParserRule getUPPERRule() {
		return getUPPERAccess().getRule();
	}

	//UnrestrictedName returns ecore::EString:
	//	EssentialOCLUnrestrictedName | "abstract" | "annotation" | "attribute" | "body" | "class" | "composes" | "datatype" |
	//	"definition" | "derivation" | "derived" | "documentation" | "enum" | "extends" | "id" | "import" | "initial" |
	//	"interface" | "invariant" | "library" | "module" | "operation" | "ordered" | "package" | "postcondition" |
	//	"precondition" | "property" | "readonly" | "resolve" | "serializable" | "static" | "super" | "throws" | "transient" |
	//	"unique" | "unsettable" | "volatile";
	public UnrestrictedNameElements getUnrestrictedNameAccess() {
		return (pUnrestrictedName != null) ? pUnrestrictedName : (pUnrestrictedName = new UnrestrictedNameElements());
	}
	
	public ParserRule getUnrestrictedNameRule() {
		return getUnrestrictedNameAccess().getRule();
	}

	//BodyConstraintCS returns OCLinEcoreConstraintCS:
	//	stereotype="body" name=UnrestrictedName? ":" specification=SpecificationCS ";";
	public BodyConstraintCSElements getBodyConstraintCSAccess() {
		return (pBodyConstraintCS != null) ? pBodyConstraintCS : (pBodyConstraintCS = new BodyConstraintCSElements());
	}
	
	public ParserRule getBodyConstraintCSRule() {
		return getBodyConstraintCSAccess().getRule();
	}

	//DerivedConstraintCS returns OCLinEcoreConstraintCS:
	//	stereotype="derivation" ":" specification=SpecificationCS ";";
	public DerivedConstraintCSElements getDerivedConstraintCSAccess() {
		return (pDerivedConstraintCS != null) ? pDerivedConstraintCS : (pDerivedConstraintCS = new DerivedConstraintCSElements());
	}
	
	public ParserRule getDerivedConstraintCSRule() {
		return getDerivedConstraintCSAccess().getRule();
	}

	//InitialConstraintCS returns OCLinEcoreConstraintCS:
	//	stereotype="initial" ":" specification=SpecificationCS ";";
	public InitialConstraintCSElements getInitialConstraintCSAccess() {
		return (pInitialConstraintCS != null) ? pInitialConstraintCS : (pInitialConstraintCS = new InitialConstraintCSElements());
	}
	
	public ParserRule getInitialConstraintCSRule() {
		return getInitialConstraintCSAccess().getRule();
	}

	//InvariantConstraintCS returns OCLinEcoreConstraintCS:
	//	stereotype="invariant" (name=UnrestrictedName ("(" messageSpecification=SpecificationCS ")")?)? ":"
	//	specification=SpecificationCS ";";
	public InvariantConstraintCSElements getInvariantConstraintCSAccess() {
		return (pInvariantConstraintCS != null) ? pInvariantConstraintCS : (pInvariantConstraintCS = new InvariantConstraintCSElements());
	}
	
	public ParserRule getInvariantConstraintCSRule() {
		return getInvariantConstraintCSAccess().getRule();
	}

	//PostconditionConstraintCS returns OCLinEcoreConstraintCS:
	//	stereotype="postcondition" name=UnrestrictedName? ":" specification=SpecificationCS ";";
	public PostconditionConstraintCSElements getPostconditionConstraintCSAccess() {
		return (pPostconditionConstraintCS != null) ? pPostconditionConstraintCS : (pPostconditionConstraintCS = new PostconditionConstraintCSElements());
	}
	
	public ParserRule getPostconditionConstraintCSRule() {
		return getPostconditionConstraintCSAccess().getRule();
	}

	//PreconditionConstraintCS returns OCLinEcoreConstraintCS:
	//	stereotype="precondition" name=UnrestrictedName? ":" specification=SpecificationCS ";";
	public PreconditionConstraintCSElements getPreconditionConstraintCSAccess() {
		return (pPreconditionConstraintCS != null) ? pPreconditionConstraintCS : (pPreconditionConstraintCS = new PreconditionConstraintCSElements());
	}
	
	public ParserRule getPreconditionConstraintCSRule() {
		return getPreconditionConstraintCSAccess().getRule();
	}

	//AnnotationCS returns base::AnnotationCS:
	//	"annotation" name=(UnrestrictedName | SINGLE_QUOTED_STRING) ("(" ownedDetail+=DetailCS ("," ownedDetail+=DetailCS)*
	//	")")? ("{" (ownedAnnotation+=AnnotationElementCS | ownedContent+=ModelElementCS | reference+=ModelElementCSRef)+ "}" |
	//	";");
	public AnnotationCSElements getAnnotationCSAccess() {
		return (pAnnotationCS != null) ? pAnnotationCS : (pAnnotationCS = new AnnotationCSElements());
	}
	
	public ParserRule getAnnotationCSRule() {
		return getAnnotationCSAccess().getRule();
	}

	//AnnotationElementCS returns base::AnnotationElementCS:
	//	AnnotationCS | DocumentationCS;
	public AnnotationElementCSElements getAnnotationElementCSAccess() {
		return (pAnnotationElementCS != null) ? pAnnotationElementCS : (pAnnotationElementCS = new AnnotationElementCSElements());
	}
	
	public ParserRule getAnnotationElementCSRule() {
		return getAnnotationElementCSAccess().getRule();
	}

	//AttributeCS returns base::AttributeCS:
	//	(qualifier+="static" | qualifier+="definition")* "attribute" name=UnrestrictedName (":" ownedType=TypedRefCS ("["
	//	(lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")) "]")?)? ("=" default=SINGLE_QUOTED_STRING)? ("{"
	//	((qualifier+="derived" | qualifier+="!derived" | qualifier+="id" | qualifier+="!id" | qualifier+="ordered" |
	//	qualifier+="!ordered" | qualifier+="readonly" | qualifier+="!readonly" | qualifier+="transient" |
	//	qualifier+="!transient" | qualifier+="unique" | qualifier+="!unique" | qualifier+="unsettable" |
	//	qualifier+="!unsettable" | qualifier+="volatile" | qualifier+="!volatile") ","?)+ "}")? ("{"
	//	(ownedAnnotation+=AnnotationElementCS | ownedConstraint+=(InitialConstraintCS | DerivedConstraintCS))* "}" | ";");
	public AttributeCSElements getAttributeCSAccess() {
		return (pAttributeCS != null) ? pAttributeCS : (pAttributeCS = new AttributeCSElements());
	}
	
	public ParserRule getAttributeCSRule() {
		return getAttributeCSAccess().getRule();
	}

	//ClassCS returns base::ClassCS:
	//	qualifier+="abstract"? "class" name=UnrestrictedName ownedTemplateSignature=TemplateSignatureCS? ("extends"
	//	ownedSuperType+=TypedRefCS ("," ownedSuperType+=TypedRefCS)*)? (":" instanceClassName=SINGLE_QUOTED_STRING)? ("{"
	//	qualifier+="interface" "}")? ("{" (ownedAnnotation+=AnnotationElementCS | ownedOperation+=OperationCS |
	//	ownedProperty+=StructuralFeatureCS | ownedConstraint+=InvariantConstraintCS)* "}" | ";");
	public ClassCSElements getClassCSAccess() {
		return (pClassCS != null) ? pClassCS : (pClassCS = new ClassCSElements());
	}
	
	public ParserRule getClassCSRule() {
		return getClassCSAccess().getRule();
	}

	//ClassifierCS returns base::ClassifierCS:
	//	ClassCS | DataTypeCS | EnumerationCS;
	public ClassifierCSElements getClassifierCSAccess() {
		return (pClassifierCS != null) ? pClassifierCS : (pClassifierCS = new ClassifierCSElements());
	}
	
	public ParserRule getClassifierCSRule() {
		return getClassifierCSAccess().getRule();
	}

	////CollectionTypeRefCS returns base::CollectionTypeRefCS:
	//
	////	name=CollectionTypeIdentifier
	//
	////	('(' (typeArguments=TypeRefCS)? ')')?	
	//
	////;
	//
	//DataTypeCS returns base::DataTypeCS:
	//	"datatype" name=UnrestrictedName ownedTemplateSignature=TemplateSignatureCS? (":"
	//	instanceClassName=SINGLE_QUOTED_STRING)? ("{" (qualifier+="serializable" | qualifier+="!serializable")? "}")? ("{"
	//	(ownedAnnotation+=AnnotationElementCS | ownedConstraint+=InvariantConstraintCS)* "}" | ";");
	public DataTypeCSElements getDataTypeCSAccess() {
		return (pDataTypeCS != null) ? pDataTypeCS : (pDataTypeCS = new DataTypeCSElements());
	}
	
	public ParserRule getDataTypeCSRule() {
		return getDataTypeCSAccess().getRule();
	}

	//DetailCS returns base::DetailCS:
	//	name=(UnrestrictedName | SINGLE_QUOTED_STRING) "=" value+=SINGLE_QUOTED_STRING*;
	public DetailCSElements getDetailCSAccess() {
		return (pDetailCS != null) ? pDetailCS : (pDetailCS = new DetailCSElements());
	}
	
	public ParserRule getDetailCSRule() {
		return getDetailCSAccess().getRule();
	}

	//DocumentationCS returns base::DocumentationCS:
	//	{base::DocumentationCS} "documentation" value=SINGLE_QUOTED_STRING? ("(" ownedDetail+=DetailCS (","
	//	ownedDetail+=DetailCS)* ")")? ";";
	public DocumentationCSElements getDocumentationCSAccess() {
		return (pDocumentationCS != null) ? pDocumentationCS : (pDocumentationCS = new DocumentationCSElements());
	}
	
	public ParserRule getDocumentationCSRule() {
		return getDocumentationCSAccess().getRule();
	}

	//EnumerationCS returns base::EnumerationCS:
	//	"enum" name=UnrestrictedName ownedTemplateSignature=TemplateSignatureCS? (":" instanceClassName=SINGLE_QUOTED_STRING)?
	//	("{" (qualifier+="serializable" | qualifier+="!serializable")? "}")? ("{" (ownedAnnotation+=AnnotationElementCS |
	//	ownedLiterals+=EnumerationLiteralCS | ownedConstraint+=InvariantConstraintCS)* "}" | ";");
	public EnumerationCSElements getEnumerationCSAccess() {
		return (pEnumerationCS != null) ? pEnumerationCS : (pEnumerationCS = new EnumerationCSElements());
	}
	
	public ParserRule getEnumerationCSRule() {
		return getEnumerationCSAccess().getRule();
	}

	//EnumerationLiteralCS returns base::EnumerationLiteralCS:
	//	name=UnrestrictedName ("=" value=INTEGER)? ("{" ownedAnnotation+=AnnotationElementCS* "}" | ";");
	public EnumerationLiteralCSElements getEnumerationLiteralCSAccess() {
		return (pEnumerationLiteralCS != null) ? pEnumerationLiteralCS : (pEnumerationLiteralCS = new EnumerationLiteralCSElements());
	}
	
	public ParserRule getEnumerationLiteralCSRule() {
		return getEnumerationLiteralCSAccess().getRule();
	}

	//ImportCS returns base::ImportCS:
	//	"import" (name=UnrestrictedName ":")? namespace=[pivot::Namespace|SINGLE_QUOTED_STRING] ";";
	public ImportCSElements getImportCSAccess() {
		return (pImportCS != null) ? pImportCS : (pImportCS = new ImportCSElements());
	}
	
	public ParserRule getImportCSRule() {
		return getImportCSAccess().getRule();
	}

	//LibraryCS returns base::LibraryCS:
	//	"library" (name=UnrestrictedName ":")? package=[pivot::Package|SINGLE_QUOTED_STRING] ";";
	public LibraryCSElements getLibraryCSAccess() {
		return (pLibraryCS != null) ? pLibraryCS : (pLibraryCS = new LibraryCSElements());
	}
	
	public ParserRule getLibraryCSRule() {
		return getLibraryCSAccess().getRule();
	}

	//ModelElementCS returns base::ModelElementCS:
	//	ClassifierCS | EnumerationLiteralCS | OperationCS | PackageCS | StructuralFeatureCS;
	public ModelElementCSElements getModelElementCSAccess() {
		return (pModelElementCS != null) ? pModelElementCS : (pModelElementCS = new ModelElementCSElements());
	}
	
	public ParserRule getModelElementCSRule() {
		return getModelElementCSAccess().getRule();
	}

	//ModelElementCSRef returns base::ModelElementCSRef:
	//	ref=[base::ModelElementCS|UnrestrictedName];
	public ModelElementCSRefElements getModelElementCSRefAccess() {
		return (pModelElementCSRef != null) ? pModelElementCSRef : (pModelElementCSRef = new ModelElementCSRefElements());
	}
	
	public ParserRule getModelElementCSRefRule() {
		return getModelElementCSRefAccess().getRule();
	}

	//OperationCS returns base::OperationCS:
	//	(qualifier+="static" | qualifier+="definition")* "operation" name=UnrestrictedName
	//	ownedTemplateSignature=TemplateSignatureCS? "(" (ownedParameter+=ParameterCS ("," ownedParameter+=ParameterCS)*)? ")"
	//	(":" ownedType=TypedRefCS ("[" (lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")) "]")?)? ("throws"
	//	ownedException+=TypedRefCS ("," ownedException+=TypedRefCS)*)? ("{" ((qualifier+="derived" | qualifier+="!derived" |
	//	qualifier+="ordered" | qualifier+="!ordered" | qualifier+="unique" | qualifier+="!unique") ","?)+ "}")? ("{"
	//	(ownedAnnotation+=AnnotationElementCS | ownedConstraint+=(PreconditionConstraintCS | BodyConstraintCS |
	//	PostconditionConstraintCS))* "}" | ";");
	public OperationCSElements getOperationCSAccess() {
		return (pOperationCS != null) ? pOperationCS : (pOperationCS = new OperationCSElements());
	}
	
	public ParserRule getOperationCSRule() {
		return getOperationCSAccess().getRule();
	}

	//PackageCS returns base::PackageCS:
	//	"package" name=UnrestrictedName (":" nsPrefix=UnrestrictedName "=" nsURI=SINGLE_QUOTED_STRING)? ("{"
	//	(ownedAnnotation+=AnnotationElementCS | ownedNestedPackage+=PackageCS | ownedType+=ClassifierCS)* "}" | ";");
	public PackageCSElements getPackageCSAccess() {
		return (pPackageCS != null) ? pPackageCS : (pPackageCS = new PackageCSElements());
	}
	
	public ParserRule getPackageCSRule() {
		return getPackageCSAccess().getRule();
	}

	//ParameterCS returns base::ParameterCS:
	//	name=UnrestrictedName (":" ownedType=TypedRefCS ("[" (lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" |
	//	"?")) "]")?)? ("{" ((qualifier+="ordered" | qualifier+="!ordered" | qualifier+="unique" | qualifier+="!unique") ","?)+
	//	"}")? ("{" ownedAnnotation+=AnnotationElementCS* "}")?;
	public ParameterCSElements getParameterCSAccess() {
		return (pParameterCS != null) ? pParameterCS : (pParameterCS = new ParameterCSElements());
	}
	
	public ParserRule getParameterCSRule() {
		return getParameterCSAccess().getRule();
	}

	//PrimitiveTypeRefCS returns base::PrimitiveTypeRefCS:
	//	name=PrimitiveTypeIdentifier;
	public PrimitiveTypeRefCSElements getPrimitiveTypeRefCSAccess() {
		return (pPrimitiveTypeRefCS != null) ? pPrimitiveTypeRefCS : (pPrimitiveTypeRefCS = new PrimitiveTypeRefCSElements());
	}
	
	public ParserRule getPrimitiveTypeRefCSRule() {
		return getPrimitiveTypeRefCSAccess().getRule();
	}

	//ReferenceCS returns base::ReferenceCS:
	//	(qualifier+="static" | qualifier+="definition")* "property" name=UnrestrictedName ("#" opposite=ReferenceCSRef)? (":"
	//	ownedType=TypedRefCS ("[" (lower=LOWER (".." upper=UPPER)? | multiplicity=("*" | "+" | "?")) "]")?)? ("="
	//	default=SINGLE_QUOTED_STRING)? ("{" ((qualifier+="composes" | qualifier+="!composes" | qualifier+="derived" |
	//	qualifier+="!derived" | qualifier+="ordered" | qualifier+="!ordered" | qualifier+="readonly" | qualifier+="!readonly"
	//	| qualifier+="resolve" | qualifier+="!resolve" | qualifier+="transient" | qualifier+="!transient" |
	//	qualifier+="unique" | qualifier+="!unique" | qualifier+="unsettable" | qualifier+="!unsettable" |
	//	qualifier+="volatile" | qualifier+="!volatile") ","?)+ "}")? ("{" (ownedAnnotation+=AnnotationElementCS |
	//	ownedConstraint+=(InitialConstraintCS | DerivedConstraintCS))* "}" | ";");
	public ReferenceCSElements getReferenceCSAccess() {
		return (pReferenceCS != null) ? pReferenceCS : (pReferenceCS = new ReferenceCSElements());
	}
	
	public ParserRule getReferenceCSRule() {
		return getReferenceCSAccess().getRule();
	}

	//ReferenceCSRef returns base::ReferenceCSRef:
	//	ref=[pivot::Property|UnrestrictedName];
	public ReferenceCSRefElements getReferenceCSRefAccess() {
		return (pReferenceCSRef != null) ? pReferenceCSRef : (pReferenceCSRef = new ReferenceCSRefElements());
	}
	
	public ParserRule getReferenceCSRefRule() {
		return getReferenceCSRefAccess().getRule();
	}

	//SpecificationCS returns OCLinEcoreSpecificationCS:
	//	{OCLinEcoreSpecificationCS} (ownedExpression=ExpCS | exprString=UNQUOTED_STRING)?;
	public SpecificationCSElements getSpecificationCSAccess() {
		return (pSpecificationCS != null) ? pSpecificationCS : (pSpecificationCS = new SpecificationCSElements());
	}
	
	public ParserRule getSpecificationCSRule() {
		return getSpecificationCSAccess().getRule();
	}

	//StructuralFeatureCS returns base::StructuralFeatureCS:
	//	AttributeCS | ReferenceCS;
	public StructuralFeatureCSElements getStructuralFeatureCSAccess() {
		return (pStructuralFeatureCS != null) ? pStructuralFeatureCS : (pStructuralFeatureCS = new StructuralFeatureCSElements());
	}
	
	public ParserRule getStructuralFeatureCSRule() {
		return getStructuralFeatureCSAccess().getRule();
	}

	//TemplateBindingCS returns base::TemplateBindingCS:
	//	"<" ownedParameterSubstitution+=TemplateParameterSubstitutionCS (","
	//	ownedParameterSubstitution+=TemplateParameterSubstitutionCS)* ">";
	public TemplateBindingCSElements getTemplateBindingCSAccess() {
		return (pTemplateBindingCS != null) ? pTemplateBindingCS : (pTemplateBindingCS = new TemplateBindingCSElements());
	}
	
	public ParserRule getTemplateBindingCSRule() {
		return getTemplateBindingCSAccess().getRule();
	}

	//TemplateParameterSubstitutionCS returns base::TemplateParameterSubstitutionCS:
	//	ownedActualParameter=TypeRefCS;
	public TemplateParameterSubstitutionCSElements getTemplateParameterSubstitutionCSAccess() {
		return (pTemplateParameterSubstitutionCS != null) ? pTemplateParameterSubstitutionCS : (pTemplateParameterSubstitutionCS = new TemplateParameterSubstitutionCSElements());
	}
	
	public ParserRule getTemplateParameterSubstitutionCSRule() {
		return getTemplateParameterSubstitutionCSAccess().getRule();
	}

	//TemplateSignatureCS returns base::TemplateSignatureCS:
	//	"<" ownedTemplateParameter+=TypeParameterCS ("," ownedTemplateParameter+=TypeParameterCS)* ">";
	public TemplateSignatureCSElements getTemplateSignatureCSAccess() {
		return (pTemplateSignatureCS != null) ? pTemplateSignatureCS : (pTemplateSignatureCS = new TemplateSignatureCSElements());
	}
	
	public ParserRule getTemplateSignatureCSRule() {
		return getTemplateSignatureCSAccess().getRule();
	}

	//TypeIdentifier:
	//	UnrestrictedName | PrimitiveTypeIdentifier;
	public TypeIdentifierElements getTypeIdentifierAccess() {
		return (pTypeIdentifier != null) ? pTypeIdentifier : (pTypeIdentifier = new TypeIdentifierElements());
	}
	
	public ParserRule getTypeIdentifierRule() {
		return getTypeIdentifierAccess().getRule();
	}

	//TypeParameterCS returns base::TypeParameterCS:
	//	name=UnrestrictedName ("extends" ownedExtends+=TypedRefCS ("&&" ownedExtends+=TypedRefCS)* | "super"
	//	ownedSuper=TypedRefCS)?;
	public TypeParameterCSElements getTypeParameterCSAccess() {
		return (pTypeParameterCS != null) ? pTypeParameterCS : (pTypeParameterCS = new TypeParameterCSElements());
	}
	
	public ParserRule getTypeParameterCSRule() {
		return getTypeParameterCSAccess().getRule();
	}

	//TypeRefCS returns base::TypeRefCS:
	//	TypedRefCS | WildcardTypeRefCS;
	public TypeRefCSElements getTypeRefCSAccess() {
		return (pTypeRefCS != null) ? pTypeRefCS : (pTypeRefCS = new TypeRefCSElements());
	}
	
	public ParserRule getTypeRefCSRule() {
		return getTypeRefCSAccess().getRule();
	}

	//TypedRefCS returns base::TypedRefCS:
	//	PrimitiveTypeRefCS / *| CollectionTypeRefCS* / | TypedTypeRefCS;
	public TypedRefCSElements getTypedRefCSAccess() {
		return (pTypedRefCS != null) ? pTypedRefCS : (pTypedRefCS = new TypedRefCSElements());
	}
	
	public ParserRule getTypedRefCSRule() {
		return getTypedRefCSAccess().getRule();
	}

	//TypedTypeRefCS returns base::TypedTypeRefCS:
	//	(namespace+=[pivot::Namespace|UnrestrictedName] "::")* //	(namespace+=NamespaceRefCS '::')*
	//
	//	type=[pivot::Type|UnrestrictedName] ownedTemplateBinding=TemplateBindingCS?;
	public TypedTypeRefCSElements getTypedTypeRefCSAccess() {
		return (pTypedTypeRefCS != null) ? pTypedTypeRefCS : (pTypedTypeRefCS = new TypedTypeRefCSElements());
	}
	
	public ParserRule getTypedTypeRefCSRule() {
		return getTypedTypeRefCSAccess().getRule();
	}

	//WildcardTypeRefCS returns base::WildcardTypeRefCS:
	//	{base::WildcardTypeRefCS} "?" ("extends" extends=TypedRefCS | "super" super=TypedRefCS)?;
	public WildcardTypeRefCSElements getWildcardTypeRefCSAccess() {
		return (pWildcardTypeRefCS != null) ? pWildcardTypeRefCS : (pWildcardTypeRefCS = new WildcardTypeRefCSElements());
	}
	
	public ParserRule getWildcardTypeRefCSRule() {
		return getWildcardTypeRefCSAccess().getRule();
	}

	////generate essentialOCLCST "http://www.eclipse.org/ocl/3.0.0/EssentialOCLCST"
	//
	//Model returns ContextCS:
	//	ownedExpression=ExpCS;
	public EssentialOCLGrammarAccess.ModelElements getModelAccess() {
		return gaEssentialOCL.getModelAccess();
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//terminal DOUBLE_QUOTED_STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"";
	public TerminalRule getDOUBLE_QUOTED_STRINGRule() {
		return gaEssentialOCL.getDOUBLE_QUOTED_STRINGRule();
	} 

	//terminal SINGLE_QUOTED_STRING:
	//	"\'" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSINGLE_QUOTED_STRINGRule() {
		return gaEssentialOCL.getSINGLE_QUOTED_STRINGRule();
	} 

	//terminal ML_SINGLE_QUOTED_STRING:
	//	"/\'"->"\'/";
	public TerminalRule getML_SINGLE_QUOTED_STRINGRule() {
		return gaEssentialOCL.getML_SINGLE_QUOTED_STRINGRule();
	} 

	//terminal SIMPLE_ID:
	//	("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getSIMPLE_IDRule() {
		return gaEssentialOCL.getSIMPLE_IDRule();
	} 

	//terminal ESCAPED_ID:
	//	"_" SINGLE_QUOTED_STRING;
	public TerminalRule getESCAPED_IDRule() {
		return gaEssentialOCL.getESCAPED_IDRule();
	} 

	//ID:
	//	SIMPLE_ID | ESCAPED_ID;
	public EssentialOCLGrammarAccess.IDElements getIDAccess() {
		return gaEssentialOCL.getIDAccess();
	}
	
	public ParserRule getIDRule() {
		return getIDAccess().getRule();
	}

	//// String to allow diverse re-use
	//
	//terminal INT:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaEssentialOCL.getINTRule();
	} 

	//// Not terminal to allow parser backtracking to sort out "5..7"
	//
	//NUMBER_LITERAL returns BigNumber:
	//	INT ("." INT)? (("e" | "E") ("+" | "-")? INT)?;
	public EssentialOCLGrammarAccess.NUMBER_LITERALElements getNUMBER_LITERALAccess() {
		return gaEssentialOCL.getNUMBER_LITERALAccess();
	}
	
	public ParserRule getNUMBER_LITERALRule() {
		return getNUMBER_LITERALAccess().getRule();
	}

	//terminal DOCUMENTATION:
	//	"/ **"->"* /";
	public TerminalRule getDOCUMENTATIONRule() {
		return gaEssentialOCL.getDOCUMENTATIONRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *" !"*"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaEssentialOCL.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"--" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaEssentialOCL.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaEssentialOCL.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaEssentialOCL.getANY_OTHERRule();
	} 

	//EssentialOCLReservedKeyword:
	//	"and" | "else" | "endif" | "if" | "implies" | "in" | "let" | "not" | "or" | "then" | "xor";
	public EssentialOCLGrammarAccess.EssentialOCLReservedKeywordElements getEssentialOCLReservedKeywordAccess() {
		return gaEssentialOCL.getEssentialOCLReservedKeywordAccess();
	}
	
	public ParserRule getEssentialOCLReservedKeywordRule() {
		return getEssentialOCLReservedKeywordAccess().getRule();
	}

	//EssentialOCLUnrestrictedIdentifier:
	//	"e" | "E";
	public EssentialOCLGrammarAccess.EssentialOCLUnrestrictedIdentifierElements getEssentialOCLUnrestrictedIdentifierAccess() {
		return gaEssentialOCL.getEssentialOCLUnrestrictedIdentifierAccess();
	}
	
	public ParserRule getEssentialOCLUnrestrictedIdentifierRule() {
		return getEssentialOCLUnrestrictedIdentifierAccess().getRule();
	}

	//EssentialOCLPrefixOperator:
	//	"-" | "not";
	public EssentialOCLGrammarAccess.EssentialOCLPrefixOperatorElements getEssentialOCLPrefixOperatorAccess() {
		return gaEssentialOCL.getEssentialOCLPrefixOperatorAccess();
	}
	
	public ParserRule getEssentialOCLPrefixOperatorRule() {
		return getEssentialOCLPrefixOperatorAccess().getRule();
	}

	//EssentialOCLInfixOperator:
	//	"*" | "/" | "+" | "-" | ">" | "<" | ">=" | "<=" | "=" | "<>" | "and" | "or" | "xor" | "implies";
	public EssentialOCLGrammarAccess.EssentialOCLInfixOperatorElements getEssentialOCLInfixOperatorAccess() {
		return gaEssentialOCL.getEssentialOCLInfixOperatorAccess();
	}
	
	public ParserRule getEssentialOCLInfixOperatorRule() {
		return getEssentialOCLInfixOperatorAccess().getRule();
	}

	//EssentialOCLNavigationOperator:
	//	"." | "->";
	public EssentialOCLGrammarAccess.EssentialOCLNavigationOperatorElements getEssentialOCLNavigationOperatorAccess() {
		return gaEssentialOCL.getEssentialOCLNavigationOperatorAccess();
	}
	
	public ParserRule getEssentialOCLNavigationOperatorRule() {
		return getEssentialOCLNavigationOperatorAccess().getRule();
	}

	//Identifier:
	//	ID | EssentialOCLUnrestrictedIdentifier;
	public EssentialOCLGrammarAccess.IdentifierElements getIdentifierAccess() {
		return gaEssentialOCL.getIdentifierAccess();
	}
	
	public ParserRule getIdentifierRule() {
		return getIdentifierAccess().getRule();
	}

	//StringLiteral:
	//	SINGLE_QUOTED_STRING;
	public EssentialOCLGrammarAccess.StringLiteralElements getStringLiteralAccess() {
		return gaEssentialOCL.getStringLiteralAccess();
	}
	
	public ParserRule getStringLiteralRule() {
		return getStringLiteralAccess().getRule();
	}

	//// Intended to be overridden
	//
	//PrefixOperator:
	//	EssentialOCLPrefixOperator;
	public EssentialOCLGrammarAccess.PrefixOperatorElements getPrefixOperatorAccess() {
		return gaEssentialOCL.getPrefixOperatorAccess();
	}
	
	public ParserRule getPrefixOperatorRule() {
		return getPrefixOperatorAccess().getRule();
	}

	//// Intended to be overridden
	//
	//InfixOperator:
	//	EssentialOCLInfixOperator;
	public EssentialOCLGrammarAccess.InfixOperatorElements getInfixOperatorAccess() {
		return gaEssentialOCL.getInfixOperatorAccess();
	}
	
	public ParserRule getInfixOperatorRule() {
		return getInfixOperatorAccess().getRule();
	}

	//// Intended to be overridden
	//
	//NavigationOperator:
	//	EssentialOCLNavigationOperator;
	public EssentialOCLGrammarAccess.NavigationOperatorElements getNavigationOperatorAccess() {
		return gaEssentialOCL.getNavigationOperatorAccess();
	}
	
	public ParserRule getNavigationOperatorRule() {
		return getNavigationOperatorAccess().getRule();
	}

	////---------------------------------------------------------------------
	//
	////  Names
	//
	////---------------------------------------------------------------------
	//
	//EssentialOCLUnrestrictedName returns ecore::EString:
	//	Identifier;
	public EssentialOCLGrammarAccess.EssentialOCLUnrestrictedNameElements getEssentialOCLUnrestrictedNameAccess() {
		return gaEssentialOCL.getEssentialOCLUnrestrictedNameAccess();
	}
	
	public ParserRule getEssentialOCLUnrestrictedNameRule() {
		return getEssentialOCLUnrestrictedNameAccess().getRule();
	}

	//EssentialOCLUnreservedName returns ecore::EString:
	//	UnrestrictedName;
	public EssentialOCLGrammarAccess.EssentialOCLUnreservedNameElements getEssentialOCLUnreservedNameAccess() {
		return gaEssentialOCL.getEssentialOCLUnreservedNameAccess();
	}
	
	public ParserRule getEssentialOCLUnreservedNameRule() {
		return getEssentialOCLUnreservedNameAccess().getRule();
	}

	//// Intended to be overridden
	//
	//UnreservedName returns ecore::EString:
	//	EssentialOCLUnreservedName;
	public EssentialOCLGrammarAccess.UnreservedNameElements getUnreservedNameAccess() {
		return gaEssentialOCL.getUnreservedNameAccess();
	}
	
	public ParserRule getUnreservedNameRule() {
		return getUnreservedNameAccess().getRule();
	}

	////---------------------------------------------------------------------
	//
	////  Types
	//
	////---------------------------------------------------------------------
	//
	//PrimitiveTypeIdentifier:
	//	"Boolean" | "Integer" | "Real" | "String" | "UnlimitedNatural" | "OclAny" | "OclInvalid" | "OclVoid";
	public EssentialOCLGrammarAccess.PrimitiveTypeIdentifierElements getPrimitiveTypeIdentifierAccess() {
		return gaEssentialOCL.getPrimitiveTypeIdentifierAccess();
	}
	
	public ParserRule getPrimitiveTypeIdentifierRule() {
		return getPrimitiveTypeIdentifierAccess().getRule();
	}

	//PrimitiveTypeCS returns base::PrimitiveTypeRefCS:
	//	name=PrimitiveTypeIdentifier;
	public EssentialOCLGrammarAccess.PrimitiveTypeCSElements getPrimitiveTypeCSAccess() {
		return gaEssentialOCL.getPrimitiveTypeCSAccess();
	}
	
	public ParserRule getPrimitiveTypeCSRule() {
		return getPrimitiveTypeCSAccess().getRule();
	}

	//CollectionTypeIdentifier returns ecore::EString:
	//	"Set" | "Bag" | "Sequence" | "Collection" | "OrderedSet";
	public EssentialOCLGrammarAccess.CollectionTypeIdentifierElements getCollectionTypeIdentifierAccess() {
		return gaEssentialOCL.getCollectionTypeIdentifierAccess();
	}
	
	public ParserRule getCollectionTypeIdentifierRule() {
		return getCollectionTypeIdentifierAccess().getRule();
	}

	//CollectionTypeCS:
	//	name=CollectionTypeIdentifier ("(" ownedType=TypeExpCS ")" | "<" ownedType=TypeExpCS ">")?;
	public EssentialOCLGrammarAccess.CollectionTypeCSElements getCollectionTypeCSAccess() {
		return gaEssentialOCL.getCollectionTypeCSAccess();
	}
	
	public ParserRule getCollectionTypeCSRule() {
		return getCollectionTypeCSAccess().getRule();
	}

	//TupleTypeCS returns base::TupleTypeCS:
	//	name="Tuple" ("(" (ownedParts+=tuplePartCS ("," ownedParts+=tuplePartCS)*)? ")" | "<" (ownedParts+=tuplePartCS (","
	//	ownedParts+=tuplePartCS)*)? ">")?;
	public EssentialOCLGrammarAccess.TupleTypeCSElements getTupleTypeCSAccess() {
		return gaEssentialOCL.getTupleTypeCSAccess();
	}
	
	public ParserRule getTupleTypeCSRule() {
		return getTupleTypeCSAccess().getRule();
	}

	//tuplePartCS returns base::TuplePartCS:
	//	name=UnrestrictedName ":" ownedType=TypeExpCS;
	public EssentialOCLGrammarAccess.TuplePartCSElements getTuplePartCSAccess() {
		return gaEssentialOCL.getTuplePartCSAccess();
	}
	
	public ParserRule getTuplePartCSRule() {
		return getTuplePartCSAccess().getRule();
	}

	////---------------------------------------------------------------------
	//
	////  Literals
	//
	////---------------------------------------------------------------------
	//
	//CollectionLiteralExpCS:
	//	ownedType=CollectionTypeCS "{" (ownedParts+=CollectionLiteralPartCS ("," ownedParts+=CollectionLiteralPartCS)*)? "}";
	public EssentialOCLGrammarAccess.CollectionLiteralExpCSElements getCollectionLiteralExpCSAccess() {
		return gaEssentialOCL.getCollectionLiteralExpCSAccess();
	}
	
	public ParserRule getCollectionLiteralExpCSRule() {
		return getCollectionLiteralExpCSAccess().getRule();
	}

	//CollectionLiteralPartCS:
	//	expressionCS=ExpCS (".." lastExpressionCS=ExpCS)?;
	public EssentialOCLGrammarAccess.CollectionLiteralPartCSElements getCollectionLiteralPartCSAccess() {
		return gaEssentialOCL.getCollectionLiteralPartCSAccess();
	}
	
	public ParserRule getCollectionLiteralPartCSRule() {
		return getCollectionLiteralPartCSAccess().getRule();
	}

	//PrimitiveLiteralExpCS:
	//	NumberLiteralExpCS | StringLiteralExpCS | BooleanLiteralExpCS | UnlimitedNaturalLiteralExpCS | InvalidLiteralExpCS |
	//	NullLiteralExpCS;
	public EssentialOCLGrammarAccess.PrimitiveLiteralExpCSElements getPrimitiveLiteralExpCSAccess() {
		return gaEssentialOCL.getPrimitiveLiteralExpCSAccess();
	}
	
	public ParserRule getPrimitiveLiteralExpCSRule() {
		return getPrimitiveLiteralExpCSAccess().getRule();
	}

	//TupleLiteralExpCS:
	//	"Tuple" "{" ownedParts+=TupleLiteralPartCS ("," ownedParts+=TupleLiteralPartCS)* "}";
	public EssentialOCLGrammarAccess.TupleLiteralExpCSElements getTupleLiteralExpCSAccess() {
		return gaEssentialOCL.getTupleLiteralExpCSAccess();
	}
	
	public ParserRule getTupleLiteralExpCSRule() {
		return getTupleLiteralExpCSAccess().getRule();
	}

	//TupleLiteralPartCS:
	//	name=UnrestrictedName (":" ownedType=TypeExpCS)? "=" initExpression=ExpCS;
	public EssentialOCLGrammarAccess.TupleLiteralPartCSElements getTupleLiteralPartCSAccess() {
		return gaEssentialOCL.getTupleLiteralPartCSAccess();
	}
	
	public ParserRule getTupleLiteralPartCSRule() {
		return getTupleLiteralPartCSAccess().getRule();
	}

	//NumberLiteralExpCS:
	//	name=NUMBER_LITERAL;
	public EssentialOCLGrammarAccess.NumberLiteralExpCSElements getNumberLiteralExpCSAccess() {
		return gaEssentialOCL.getNumberLiteralExpCSAccess();
	}
	
	public ParserRule getNumberLiteralExpCSRule() {
		return getNumberLiteralExpCSAccess().getRule();
	}

	//StringLiteralExpCS:
	//	name+=StringLiteral+;
	public EssentialOCLGrammarAccess.StringLiteralExpCSElements getStringLiteralExpCSAccess() {
		return gaEssentialOCL.getStringLiteralExpCSAccess();
	}
	
	public ParserRule getStringLiteralExpCSRule() {
		return getStringLiteralExpCSAccess().getRule();
	}

	//BooleanLiteralExpCS:
	//	name="true" | name="false";
	public EssentialOCLGrammarAccess.BooleanLiteralExpCSElements getBooleanLiteralExpCSAccess() {
		return gaEssentialOCL.getBooleanLiteralExpCSAccess();
	}
	
	public ParserRule getBooleanLiteralExpCSRule() {
		return getBooleanLiteralExpCSAccess().getRule();
	}

	//UnlimitedNaturalLiteralExpCS:
	//	{UnlimitedNaturalLiteralExpCS} "*";
	public EssentialOCLGrammarAccess.UnlimitedNaturalLiteralExpCSElements getUnlimitedNaturalLiteralExpCSAccess() {
		return gaEssentialOCL.getUnlimitedNaturalLiteralExpCSAccess();
	}
	
	public ParserRule getUnlimitedNaturalLiteralExpCSRule() {
		return getUnlimitedNaturalLiteralExpCSAccess().getRule();
	}

	//InvalidLiteralExpCS:
	//	{InvalidLiteralExpCS} "invalid";
	public EssentialOCLGrammarAccess.InvalidLiteralExpCSElements getInvalidLiteralExpCSAccess() {
		return gaEssentialOCL.getInvalidLiteralExpCSAccess();
	}
	
	public ParserRule getInvalidLiteralExpCSRule() {
		return getInvalidLiteralExpCSAccess().getRule();
	}

	//NullLiteralExpCS:
	//	{NullLiteralExpCS} "null";
	public EssentialOCLGrammarAccess.NullLiteralExpCSElements getNullLiteralExpCSAccess() {
		return gaEssentialOCL.getNullLiteralExpCSAccess();
	}
	
	public ParserRule getNullLiteralExpCSRule() {
		return getNullLiteralExpCSAccess().getRule();
	}

	//TypeLiteralCS returns base::TypedRefCS:
	//	PrimitiveTypeCS | CollectionTypeCS | TupleTypeCS;
	public EssentialOCLGrammarAccess.TypeLiteralCSElements getTypeLiteralCSAccess() {
		return gaEssentialOCL.getTypeLiteralCSAccess();
	}
	
	public ParserRule getTypeLiteralCSRule() {
		return getTypeLiteralCSAccess().getRule();
	}

	//TypeLiteralExpCS:
	//	ownedType=TypeLiteralCS;
	public EssentialOCLGrammarAccess.TypeLiteralExpCSElements getTypeLiteralExpCSAccess() {
		return gaEssentialOCL.getTypeLiteralExpCSAccess();
	}
	
	public ParserRule getTypeLiteralExpCSRule() {
		return getTypeLiteralExpCSAccess().getRule();
	}

	////TypeNameExpCS returns base::QualifiedTypeRefCS:
	//
	//TypeNameExpCS:
	//	(namespace+=[pivot::Namespace|UnrestrictedName] "::" (namespace+=[pivot::Namespace|UnreservedName] "::")*)
	//	element=[pivot::Type|UnreservedName] | element=[pivot::Type|UnrestrictedName];
	public EssentialOCLGrammarAccess.TypeNameExpCSElements getTypeNameExpCSAccess() {
		return gaEssentialOCL.getTypeNameExpCSAccess();
	}
	
	public ParserRule getTypeNameExpCSRule() {
		return getTypeNameExpCSAccess().getRule();
	}

	//TypeExpCS returns base::TypedRefCS:
	//	TypeNameExpCS | TypeLiteralCS;
	public EssentialOCLGrammarAccess.TypeExpCSElements getTypeExpCSAccess() {
		return gaEssentialOCL.getTypeExpCSAccess();
	}
	
	public ParserRule getTypeExpCSRule() {
		return getTypeExpCSAccess().getRule();
	}

	////---------------------------------------------------------------------
	//
	////  Expressions
	//
	////---------------------------------------------------------------------
	//
	//// An OclExpressionCS comprising one or more LetExpCS is kept separate to ensure
	//
	////  that let is right associative, whereas infix operators are left associative.
	//
	////   a = 64 / 16 / let b : Integer in 8 / let c : Integer in 4 
	//
	//// is
	//
	////   a = (64 / 16) / (let b : Integer in 8 / (let c : Integer in 4 ))
	//
	//ExpCS:
	//	InfixedExpCS;
	public EssentialOCLGrammarAccess.ExpCSElements getExpCSAccess() {
		return gaEssentialOCL.getExpCSAccess();
	}
	
	public ParserRule getExpCSRule() {
		return getExpCSAccess().getRule();
	}

	//InfixedExpCS returns ExpCS:
	//	PrefixedExpCS ({InfixExpCS.ownedExpression+=current} (ownedOperator+=BinaryOperatorCS
	//	ownedExpression+=PrefixedExpCS)+)?;
	public EssentialOCLGrammarAccess.InfixedExpCSElements getInfixedExpCSAccess() {
		return gaEssentialOCL.getInfixedExpCSAccess();
	}
	
	public ParserRule getInfixedExpCSRule() {
		return getInfixedExpCSAccess().getRule();
	}

	//BinaryOperatorCS:
	//	InfixOperatorCS | NavigationOperatorCS;
	public EssentialOCLGrammarAccess.BinaryOperatorCSElements getBinaryOperatorCSAccess() {
		return gaEssentialOCL.getBinaryOperatorCSAccess();
	}
	
	public ParserRule getBinaryOperatorCSRule() {
		return getBinaryOperatorCSAccess().getRule();
	}

	//InfixOperatorCS returns BinaryOperatorCS:
	//	name=InfixOperator;
	public EssentialOCLGrammarAccess.InfixOperatorCSElements getInfixOperatorCSAccess() {
		return gaEssentialOCL.getInfixOperatorCSAccess();
	}
	
	public ParserRule getInfixOperatorCSRule() {
		return getInfixOperatorCSAccess().getRule();
	}

	//NavigationOperatorCS:
	//	name=NavigationOperator;
	public EssentialOCLGrammarAccess.NavigationOperatorCSElements getNavigationOperatorCSAccess() {
		return gaEssentialOCL.getNavigationOperatorCSAccess();
	}
	
	public ParserRule getNavigationOperatorCSRule() {
		return getNavigationOperatorCSAccess().getRule();
	}

	//PrefixedExpCS returns ExpCS:
	//	PrimaryExpCS | {PrefixExpCS} ownedOperator+=UnaryOperatorCS+ ownedExpression=PrimaryExpCS;
	public EssentialOCLGrammarAccess.PrefixedExpCSElements getPrefixedExpCSAccess() {
		return gaEssentialOCL.getPrefixedExpCSAccess();
	}
	
	public ParserRule getPrefixedExpCSRule() {
		return getPrefixedExpCSAccess().getRule();
	}

	//UnaryOperatorCS:
	//	name=PrefixOperator;
	public EssentialOCLGrammarAccess.UnaryOperatorCSElements getUnaryOperatorCSAccess() {
		return gaEssentialOCL.getUnaryOperatorCSAccess();
	}
	
	public ParserRule getUnaryOperatorCSRule() {
		return getUnaryOperatorCSAccess().getRule();
	}

	//PrimaryExpCS returns ExpCS:
	//	NavigatingExpCS | SelfExpCS | PrimitiveLiteralExpCS | TupleLiteralExpCS | CollectionLiteralExpCS | TypeLiteralExpCS |
	//	LetExpCS | IfExpCS | NestedExpCS;
	public EssentialOCLGrammarAccess.PrimaryExpCSElements getPrimaryExpCSAccess() {
		return gaEssentialOCL.getPrimaryExpCSAccess();
	}
	
	public ParserRule getPrimaryExpCSRule() {
		return getPrimaryExpCSAccess().getRule();
	}

	//NameExpCS:
	//	(namespace+=[pivot::Namespace|UnrestrictedName] "::" (namespace+=[pivot::Namespace|UnreservedName] "::")*)
	//	element=[pivot::NamedElement|UnreservedName] | element=[pivot::NamedElement|UnrestrictedName];
	public EssentialOCLGrammarAccess.NameExpCSElements getNameExpCSAccess() {
		return gaEssentialOCL.getNameExpCSAccess();
	}
	
	public ParserRule getNameExpCSRule() {
		return getNameExpCSAccess().getRule();
	}

	//IndexExpCS returns NamedExpCS:
	//	NameExpCS ({IndexExpCS.namedExp=current} "[" firstIndexes+=ExpCS ("," firstIndexes+=ExpCS)* "]" ("["
	//	secondIndexes+=ExpCS ("," secondIndexes+=ExpCS)* "]")?)?;
	public EssentialOCLGrammarAccess.IndexExpCSElements getIndexExpCSAccess() {
		return gaEssentialOCL.getIndexExpCSAccess();
	}
	
	public ParserRule getIndexExpCSRule() {
		return getIndexExpCSAccess().getRule();
	}

	////	({PreExpCS.name=current} '@' 'pre')?	-- defined by Complete OCL
	//
	//NavigatingExpCS_Base returns NamedExpCS:
	//	IndexExpCS;
	public EssentialOCLGrammarAccess.NavigatingExpCS_BaseElements getNavigatingExpCS_BaseAccess() {
		return gaEssentialOCL.getNavigatingExpCS_BaseAccess();
	}
	
	public ParserRule getNavigatingExpCS_BaseRule() {
		return getNavigatingExpCS_BaseAccess().getRule();
	}

	//// For Xtext 1.0.0, this rule is very sensitive to the 65536 byte limit, so
	//
	////  keep it as simple as possible and avoid backtracking.
	//
	//NavigatingExpCS returns NamedExpCS:
	//	NavigatingExpCS_Base ({NavigatingExpCS.namedExp=current} "(" (argument+=NavigatingArgCS
	//	argument+=NavigatingCommaArgCS* (argument+=NavigatingSemiArgCS argument+=NavigatingCommaArgCS*)?
	//	(argument+=NavigatingBarArgCS argument+=NavigatingCommaArgCS*)?)? ")")?;
	public EssentialOCLGrammarAccess.NavigatingExpCSElements getNavigatingExpCSAccess() {
		return gaEssentialOCL.getNavigatingExpCSAccess();
	}
	
	public ParserRule getNavigatingExpCSRule() {
		return getNavigatingExpCSAccess().getRule();
	}

	//NavigatingArgCS:
	//	name=NavigatingArgExpCS (":" ownedType=TypeExpCS)? ("=" init=ExpCS)?;
	public EssentialOCLGrammarAccess.NavigatingArgCSElements getNavigatingArgCSAccess() {
		return gaEssentialOCL.getNavigatingArgCSAccess();
	}
	
	public ParserRule getNavigatingArgCSRule() {
		return getNavigatingArgCSAccess().getRule();
	}

	//NavigatingBarArgCS returns NavigatingArgCS:
	//	prefix="|" name=NavigatingArgExpCS (":" ownedType=TypeExpCS)? ("=" init=ExpCS)?;
	public EssentialOCLGrammarAccess.NavigatingBarArgCSElements getNavigatingBarArgCSAccess() {
		return gaEssentialOCL.getNavigatingBarArgCSAccess();
	}
	
	public ParserRule getNavigatingBarArgCSRule() {
		return getNavigatingBarArgCSAccess().getRule();
	}

	//NavigatingCommaArgCS returns NavigatingArgCS:
	//	prefix="," name=NavigatingArgExpCS (":" ownedType=TypeExpCS)? ("=" init=ExpCS)?;
	public EssentialOCLGrammarAccess.NavigatingCommaArgCSElements getNavigatingCommaArgCSAccess() {
		return gaEssentialOCL.getNavigatingCommaArgCSAccess();
	}
	
	public ParserRule getNavigatingCommaArgCSRule() {
		return getNavigatingCommaArgCSAccess().getRule();
	}

	//NavigatingSemiArgCS returns NavigatingArgCS:
	//	prefix=";" name=NavigatingArgExpCS (":" ownedType=TypeExpCS)? ("=" init=ExpCS)?;
	public EssentialOCLGrammarAccess.NavigatingSemiArgCSElements getNavigatingSemiArgCSAccess() {
		return gaEssentialOCL.getNavigatingSemiArgCSAccess();
	}
	
	public ParserRule getNavigatingSemiArgCSRule() {
		return getNavigatingSemiArgCSAccess().getRule();
	}

	//// Intended to be overridden
	//
	////	'?'	-- defined by Complete OCL
	//
	//NavigatingArgExpCS returns ExpCS:
	//	ExpCS;
	public EssentialOCLGrammarAccess.NavigatingArgExpCSElements getNavigatingArgExpCSAccess() {
		return gaEssentialOCL.getNavigatingArgExpCSAccess();
	}
	
	public ParserRule getNavigatingArgExpCSRule() {
		return getNavigatingArgExpCSAccess().getRule();
	}

	//IfExpCS:
	//	"if" condition=ExpCS "then" thenExpression=ExpCS "else" elseExpression=ExpCS "endif";
	public EssentialOCLGrammarAccess.IfExpCSElements getIfExpCSAccess() {
		return gaEssentialOCL.getIfExpCSAccess();
	}
	
	public ParserRule getIfExpCSRule() {
		return getIfExpCSAccess().getRule();
	}

	//LetExpCS:
	//	"let" variable+=LetVariableCS ("," variable+=LetVariableCS)* "in" in=ExpCS;
	public EssentialOCLGrammarAccess.LetExpCSElements getLetExpCSAccess() {
		return gaEssentialOCL.getLetExpCSAccess();
	}
	
	public ParserRule getLetExpCSRule() {
		return getLetExpCSAccess().getRule();
	}

	//LetVariableCS:
	//	name=UnrestrictedName (":" ownedType=TypeExpCS)? "=" initExpression=ExpCS;
	public EssentialOCLGrammarAccess.LetVariableCSElements getLetVariableCSAccess() {
		return gaEssentialOCL.getLetVariableCSAccess();
	}
	
	public ParserRule getLetVariableCSRule() {
		return getLetVariableCSAccess().getRule();
	}

	//NestedExpCS:
	//	"(" source=ExpCS ")";
	public EssentialOCLGrammarAccess.NestedExpCSElements getNestedExpCSAccess() {
		return gaEssentialOCL.getNestedExpCSAccess();
	}
	
	public ParserRule getNestedExpCSRule() {
		return getNestedExpCSAccess().getRule();
	}

	//SelfExpCS:
	//	{SelfExpCS} "self";
	public EssentialOCLGrammarAccess.SelfExpCSElements getSelfExpCSAccess() {
		return gaEssentialOCL.getSelfExpCSAccess();
	}
	
	public ParserRule getSelfExpCSRule() {
		return getSelfExpCSAccess().getRule();
	}
}
