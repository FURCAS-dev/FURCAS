/*
* generated by Xtext
*/
grammar InternalStates;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipse.ocl.tutorial.eclipsecon2011.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.ocl.tutorial.eclipsecon2011.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.ocl.tutorial.eclipsecon2011.services.StatesGrammarAccess;

}

@parser::members {
 
 	private StatesGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(StatesGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModule
entryRuleModule 
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleAccess().getGroup()); }
(rule__Module__Group__0)
{ after(grammarAccess.getModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatemachine
entryRuleStatemachine 
:
{ before(grammarAccess.getStatemachineRule()); }
	 ruleStatemachine
{ after(grammarAccess.getStatemachineRule()); } 
	 EOF 
;

// Rule Statemachine
ruleStatemachine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatemachineAccess().getGroup()); }
(rule__Statemachine__Group__0)
{ after(grammarAccess.getStatemachineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEvent
entryRuleEvent 
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventAccess().getNameAssignment()); }
(rule__Event__NameAssignment)
{ after(grammarAccess.getEventAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getAlternatives()); }
(rule__State__Alternatives)
{ after(grammarAccess.getStateAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleState
entryRuleSimpleState 
:
{ before(grammarAccess.getSimpleStateRule()); }
	 ruleSimpleState
{ after(grammarAccess.getSimpleStateRule()); } 
	 EOF 
;

// Rule SimpleState
ruleSimpleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleStateAccess().getGroup()); }
(rule__SimpleState__Group__0)
{ after(grammarAccess.getSimpleStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompoundState
entryRuleCompoundState 
:
{ before(grammarAccess.getCompoundStateRule()); }
	 ruleCompoundState
{ after(grammarAccess.getCompoundStateRule()); } 
	 EOF 
;

// Rule CompoundState
ruleCompoundState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompoundStateAccess().getGroup()); }
(rule__CompoundState__Group__0)
{ after(grammarAccess.getCompoundStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Module__NameAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameSTRINGTerminalRuleCall_1_0_0()); }
	RULE_STRING
{ after(grammarAccess.getModuleAccess().getNameSTRINGTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0_1()); }
	RULE_ID
{ after(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getSimpleStateParserRuleCall_0()); }
	ruleSimpleState
{ after(grammarAccess.getStateAccess().getSimpleStateParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStateAccess().getCompoundStateParserRuleCall_1()); }
	ruleCompoundState
{ after(grammarAccess.getStateAccess().getCompoundStateParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Module__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModuleKeyword_0()); }

	'module' 

{ after(grammarAccess.getModuleAccess().getModuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameAssignment_1()); }
(rule__Module__NameAssignment_1)
{ after(grammarAccess.getModuleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getMachinesAssignment_2()); }
(rule__Module__MachinesAssignment_2)*
{ after(grammarAccess.getModuleAccess().getMachinesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statemachine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__0__Impl
	rule__Statemachine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getInitialAssignment_0()); }
(rule__Statemachine__InitialAssignment_0)?
{ after(grammarAccess.getStatemachineAccess().getInitialAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__1__Impl
	rule__Statemachine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getStatemachineKeyword_1()); }

	'statemachine' 

{ after(grammarAccess.getStatemachineAccess().getStatemachineKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__2__Impl
	rule__Statemachine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getNameAssignment_2()); }
(rule__Statemachine__NameAssignment_2)
{ after(grammarAccess.getStatemachineAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__3__Impl
	rule__Statemachine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getGroup_3()); }
(rule__Statemachine__Group_3__0)?
{ after(grammarAccess.getStatemachineAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__4__Impl
	rule__Statemachine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getStatemachineAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__5__Impl
	rule__Statemachine__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getEventsKeyword_5()); }

	'events' 

{ after(grammarAccess.getStatemachineAccess().getEventsKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__6__Impl
	rule__Statemachine__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getEventsAssignment_6()); }
(rule__Statemachine__EventsAssignment_6)*
{ after(grammarAccess.getStatemachineAccess().getEventsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__7__Impl
	rule__Statemachine__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getSemicolonKeyword_7()); }

	';' 

{ after(grammarAccess.getStatemachineAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__8__Impl
	rule__Statemachine__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getStatesAssignment_8()); }
(rule__Statemachine__StatesAssignment_8)*
{ after(grammarAccess.getStatemachineAccess().getStatesAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__9__Impl
	rule__Statemachine__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getStatemachineAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getGroup_10()); }
(rule__Statemachine__Group_10__0)?
{ after(grammarAccess.getStatemachineAccess().getGroup_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Statemachine__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group_3__0__Impl
	rule__Statemachine__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getValueKeyword_3_0()); }

	'value' 

{ after(grammarAccess.getStatemachineAccess().getValueKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getValueAssignment_3_1()); }
(rule__Statemachine__ValueAssignment_3_1)
{ after(grammarAccess.getStatemachineAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statemachine__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group_10__0__Impl
	rule__Statemachine__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getDebugKeyword_10_0()); }

	'debug' 

{ after(grammarAccess.getStatemachineAccess().getDebugKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getDbgNameAssignment_10_1()); }
(rule__Statemachine__DbgNameAssignment_10_1)
{ after(grammarAccess.getStatemachineAccess().getDbgNameAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleState__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleState__Group__0__Impl
	rule__SimpleState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleState__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStateAccess().getInitialAssignment_0()); }
(rule__SimpleState__InitialAssignment_0)?
{ after(grammarAccess.getSimpleStateAccess().getInitialAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleState__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleState__Group__1__Impl
	rule__SimpleState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleState__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStateAccess().getStateKeyword_1()); }

	'state' 

{ after(grammarAccess.getSimpleStateAccess().getStateKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleState__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleState__Group__2__Impl
	rule__SimpleState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleState__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStateAccess().getNameAssignment_2()); }
(rule__SimpleState__NameAssignment_2)
{ after(grammarAccess.getSimpleStateAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleState__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleState__Group__3__Impl
	rule__SimpleState__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleState__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStateAccess().getGroup_3()); }
(rule__SimpleState__Group_3__0)?
{ after(grammarAccess.getSimpleStateAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleState__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleState__Group__4__Impl
	rule__SimpleState__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleState__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStateAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getSimpleStateAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleState__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleState__Group__5__Impl
	rule__SimpleState__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleState__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStateAccess().getTransitionsAssignment_5()); }
(rule__SimpleState__TransitionsAssignment_5)*
{ after(grammarAccess.getSimpleStateAccess().getTransitionsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleState__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleState__Group__6__Impl
	rule__SimpleState__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleState__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStateAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getSimpleStateAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleState__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleState__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleState__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStateAccess().getGroup_7()); }
(rule__SimpleState__Group_7__0)?
{ after(grammarAccess.getSimpleStateAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__SimpleState__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleState__Group_3__0__Impl
	rule__SimpleState__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleState__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStateAccess().getValueKeyword_3_0()); }

	'value' 

{ after(grammarAccess.getSimpleStateAccess().getValueKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleState__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleState__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleState__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStateAccess().getValueAssignment_3_1()); }
(rule__SimpleState__ValueAssignment_3_1)
{ after(grammarAccess.getSimpleStateAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleState__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleState__Group_7__0__Impl
	rule__SimpleState__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleState__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStateAccess().getDebugKeyword_7_0()); }

	'debug' 

{ after(grammarAccess.getSimpleStateAccess().getDebugKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleState__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleState__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleState__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStateAccess().getDbgNameAssignment_7_1()); }
(rule__SimpleState__DbgNameAssignment_7_1)
{ after(grammarAccess.getSimpleStateAccess().getDbgNameAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompoundState__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundState__Group__0__Impl
	rule__CompoundState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundState__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStateAccess().getCompoundKeyword_0()); }

	'compound' 

{ after(grammarAccess.getCompoundStateAccess().getCompoundKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundState__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundState__Group__1__Impl
	rule__CompoundState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundState__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStateAccess().getInitialAssignment_1()); }
(rule__CompoundState__InitialAssignment_1)?
{ after(grammarAccess.getCompoundStateAccess().getInitialAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundState__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundState__Group__2__Impl
	rule__CompoundState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundState__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStateAccess().getStateKeyword_2()); }

	'state' 

{ after(grammarAccess.getCompoundStateAccess().getStateKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundState__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundState__Group__3__Impl
	rule__CompoundState__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundState__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStateAccess().getNameAssignment_3()); }
(rule__CompoundState__NameAssignment_3)
{ after(grammarAccess.getCompoundStateAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundState__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundState__Group__4__Impl
	rule__CompoundState__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundState__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStateAccess().getMachineKeyword_4()); }

	'machine' 

{ after(grammarAccess.getCompoundStateAccess().getMachineKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundState__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundState__Group__5__Impl
	rule__CompoundState__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundState__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStateAccess().getMachineAssignment_5()); }
(rule__CompoundState__MachineAssignment_5)
{ after(grammarAccess.getCompoundStateAccess().getMachineAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundState__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundState__Group__6__Impl
	rule__CompoundState__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundState__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStateAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getCompoundStateAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundState__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundState__Group__7__Impl
	rule__CompoundState__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundState__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStateAccess().getTransitionsAssignment_7()); }
(rule__CompoundState__TransitionsAssignment_7)*
{ after(grammarAccess.getCompoundStateAccess().getTransitionsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundState__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundState__Group__8__Impl
	rule__CompoundState__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundState__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStateAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getCompoundStateAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundState__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundState__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundState__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStateAccess().getGroup_9()); }
(rule__CompoundState__Group_9__0)?
{ after(grammarAccess.getCompoundStateAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__CompoundState__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundState__Group_9__0__Impl
	rule__CompoundState__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundState__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStateAccess().getDebugKeyword_9_0()); }

	'debug' 

{ after(grammarAccess.getCompoundStateAccess().getDebugKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundState__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundState__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundState__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStateAccess().getDbgNameAssignment_9_1()); }
(rule__CompoundState__DbgNameAssignment_9_1)
{ after(grammarAccess.getCompoundStateAccess().getDbgNameAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEventAssignment_0()); }
(rule__Transition__EventAssignment_0)
{ after(grammarAccess.getTransitionAccess().getEventAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	'=>' 

{ after(grammarAccess.getTransitionAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getStateAssignment_2()); }
(rule__Transition__StateAssignment_2)
{ after(grammarAccess.getTransitionAccess().getStateAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_3()); }
(rule__Transition__Group_3__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Transition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3__0__Impl
	rule__Transition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDebugKeyword_3_0()); }

	'debug' 

{ after(grammarAccess.getTransitionAccess().getDebugKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDbgNameAssignment_3_1()); }
(rule__Transition__DbgNameAssignment_3_1)
{ after(grammarAccess.getTransitionAccess().getDbgNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Module__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameAlternatives_1_0()); }
(rule__Module__NameAlternatives_1_0)
{ after(grammarAccess.getModuleAccess().getNameAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__MachinesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getMachinesStatemachineParserRuleCall_2_0()); }
	ruleStatemachine{ after(grammarAccess.getModuleAccess().getMachinesStatemachineParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__InitialAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getInitialInitialKeyword_0_0()); }
(
{ before(grammarAccess.getStatemachineAccess().getInitialInitialKeyword_0_0()); }

	'initial' 

{ after(grammarAccess.getStatemachineAccess().getInitialInitialKeyword_0_0()); }
)

{ after(grammarAccess.getStatemachineAccess().getInitialInitialKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getStatemachineAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getValueINTTerminalRuleCall_3_1_0()); }
	RULE_INT{ after(grammarAccess.getStatemachineAccess().getValueINTTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__EventsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getEventsEventParserRuleCall_6_0()); }
	ruleEvent{ after(grammarAccess.getStatemachineAccess().getEventsEventParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__StatesAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getStatesStateParserRuleCall_8_0()); }
	ruleState{ after(grammarAccess.getStatemachineAccess().getStatesStateParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__DbgNameAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getDbgNameIDTerminalRuleCall_10_1_0()); }
	RULE_ID{ after(grammarAccess.getStatemachineAccess().getDbgNameIDTerminalRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleState__InitialAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStateAccess().getInitialInitialKeyword_0_0()); }
(
{ before(grammarAccess.getSimpleStateAccess().getInitialInitialKeyword_0_0()); }

	'initial' 

{ after(grammarAccess.getSimpleStateAccess().getInitialInitialKeyword_0_0()); }
)

{ after(grammarAccess.getSimpleStateAccess().getInitialInitialKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleState__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStateAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getSimpleStateAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleState__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStateAccess().getValueINTTerminalRuleCall_3_1_0()); }
	RULE_INT{ after(grammarAccess.getSimpleStateAccess().getValueINTTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleState__TransitionsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStateAccess().getTransitionsTransitionParserRuleCall_5_0()); }
	ruleTransition{ after(grammarAccess.getSimpleStateAccess().getTransitionsTransitionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleState__DbgNameAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStateAccess().getDbgNameIDTerminalRuleCall_7_1_0()); }
	RULE_ID{ after(grammarAccess.getSimpleStateAccess().getDbgNameIDTerminalRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundState__InitialAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStateAccess().getInitialInitialKeyword_1_0()); }
(
{ before(grammarAccess.getCompoundStateAccess().getInitialInitialKeyword_1_0()); }

	'initial' 

{ after(grammarAccess.getCompoundStateAccess().getInitialInitialKeyword_1_0()); }
)

{ after(grammarAccess.getCompoundStateAccess().getInitialInitialKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundState__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStateAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getCompoundStateAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundState__MachineAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStateAccess().getMachineStatemachineCrossReference_5_0()); }
(
{ before(grammarAccess.getCompoundStateAccess().getMachineStatemachineIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getCompoundStateAccess().getMachineStatemachineIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getCompoundStateAccess().getMachineStatemachineCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundState__TransitionsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStateAccess().getTransitionsTransitionParserRuleCall_7_0()); }
	ruleTransition{ after(grammarAccess.getCompoundStateAccess().getTransitionsTransitionParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundState__DbgNameAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStateAccess().getDbgNameIDTerminalRuleCall_9_1_0()); }
	RULE_ID{ after(grammarAccess.getCompoundStateAccess().getDbgNameIDTerminalRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EventAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEventEventCrossReference_0_0()); }
(
{ before(grammarAccess.getTransitionAccess().getEventEventIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getEventEventIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getEventEventCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__StateAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getStateStateCrossReference_2_0()); }
(
{ before(grammarAccess.getTransitionAccess().getStateStateIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getStateStateIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getStateStateCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__DbgNameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDbgNameIDTerminalRuleCall_3_1_0()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getDbgNameIDTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


