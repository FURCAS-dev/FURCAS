/**
 * <copyright>
 *
 * Copyright (c) 2011 E.D.Willink and others.
 * All rights reserved.   This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   E.D.Willink - Initial API and implementation
 *
 * </copyright>
 *
 * $Id: States.xtext,v 1.1 2011/03/10 09:21:26 ewillink Exp $
 */
grammar org.eclipse.ocl.tutorial.eclipsecon2011.States with org.eclipse.xtext.common.Terminals

generate states "http://ocl.eclipse.org/tutorial/eclipsecon2011/States"

Module:
	'module' name=(STRING|ID)
	(machines+=Statemachine)*
;

Statemachine:
	(initial?='initial')? 'statemachine' name=ID ('value' value=INT)? '{'
	'events' (events+=Event)* ';'
	(states+=State)* '}' ('debug' dbgName=ID)?
;

Event:
	name=ID;

State: SimpleState | CompoundState;

SimpleState:
	(initial?='initial')? 'state' name=ID ('value' value=INT)?
	'{' (transitions+=Transition)* '}' ('debug' dbgName=ID)?
;

CompoundState:
	'compound' (initial?='initial')? 'state' name=ID 'machine' machine=[Statemachine]
	'{' (transitions+=Transition)* '}' ('debug' dbgName=ID)?
;

Transition:
	event=[Event] '=>' state=[State] ('debug' dbgName=ID)?
;
