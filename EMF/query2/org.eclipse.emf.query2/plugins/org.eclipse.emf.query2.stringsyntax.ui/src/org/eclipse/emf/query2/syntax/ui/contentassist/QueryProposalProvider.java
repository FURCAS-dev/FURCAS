/*
 * generated by Xtext
 */
package org.eclipse.emf.query2.syntax.ui.contentassist;

import java.util.Collection;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.query2.syntax.ui.SyntaxUIImageRegistry;
import org.eclipse.jface.text.contentassist.ICompletionProposal;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

/**
 * see
 * http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on
 * how to customize content assistant
 */
public class QueryProposalProvider extends AbstractQueryProposalProvider {

	public void completeImport_ImpURI(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		Collection<Object> registeredEPackages = EPackage.Registry.INSTANCE.values();
		for (Object ePackage : registeredEPackages) {
			if (ePackage instanceof EPackage) {
				createCompletionProposalForPackage(context, acceptor, ePackage);
			}
		}

	}

	public void createCompletionProposalForPackage(ContentAssistContext context, ICompletionProposalAcceptor acceptor, Object ePackage) {
		String nsURI = ((EPackage) ePackage).getNsURI();
		String proposal = '"' + nsURI + '"';
		ICompletionProposal completionProposal = createCompletionProposal(proposal, nsURI, SyntaxUIImageRegistry.getImage(SyntaxUIImageRegistry.EPACKAGE_ICON), context);
		acceptor.accept(completionProposal);
	}

}
