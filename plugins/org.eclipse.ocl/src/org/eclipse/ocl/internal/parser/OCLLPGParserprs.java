/**
* <copyright>
*
* Copyright (c) 2005, 2007 IBM Corporation and others.
* All rights reserved.   This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   IBM - Initial API and implementation
*
* </copyright>
*
* $Id: OCLLPGParserprs.java,v 1.7 2007/04/13 17:08:46 cdamus Exp $
*/

package org.eclipse.ocl.internal.parser;

@SuppressWarnings({"unchecked", "nls"})
public class OCLLPGParserprs implements lpg.lpgjavaruntime.ParseTable, OCLLPGParsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,1,1,1,1,1,1,
            1,1,1,0,1,0,0,0,0,0,
            0,0,1,1,1,1,1,1,1,1,
            0,0,1,1,1,1,1,0,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            0,0,0,0,1,1,1,1,0,1,
            1,0,0,0,1,1,1,1,0,0,
            0,0,0,0,0,0,0,0,0,0,
            1,1,1,1,1,1,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            1,1,1,1,1,1,0,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,2,4,1,0,
            1,1,2,1,1,1,7,4,4,0,
            1,3,0,1,5,5,5,3,3,1,
            2,4,4,4,1,6,8,0,1,1,
            3,0,1,1,1,1,1,3,3,1,
            1,3,3,3,3,3,3,1,1,3,
            3,3,3,1,1,3,3,3,3,3,
            3,3,3,1,1,1,1,3,3,3,
            3,1,1,3,3,3,3,1,1,2,
            2,1,2,2,4,6,1,1,1,1,
            3,2,2,5,1,1,1,1,1,1,
            1,1,1,1,1,1,1,3,0,1,
            1,1,1,1,1,1,3,3,3,3,
            3,3,3,4,1,1,1,1,1,0,
            1,1,3,1,1,3,2,3,1,1,
            1,1,1,4,1,1,1,1,1,1,
            1,1,2,2,2,2,1,1,4,4,
            4,4,4,4,4,4,4,4,4,1,
            3,5,6,8,1,3,5,3,0,1,
            1,1,1,1,4,4,0,1,1,3,
            1,1,3,3,1,1,5,5,5,5,
            5,5,5,5,5,5,5,5,5,5,
            5,5,5,5,5,5,5,5,5,2,
            2,5,0,1,0,1,1,3,5,0,
            1,2,3,7,5,5,0,1,1,3,
            1,1,3,-114,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-49,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-13,0,
            0,0,-2,-78,-122,0,0,-25,-24,0,
            0,0,-6,0,0,-3,0,0,-266,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-4,
            0,0,0,0,-123,0,0,-5,0,0,
            0,-86,0,0,0,-9,0,-38,0,0,
            -42,0,0,0,0,-23,-10,0,-16,0,
            0,-267,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-120,
            0,0,-11,-17,0,0,0,-18,0,-12,
            0,0,0,-124,0,0,-7,0,0,-19,
            -20,0,0,0,-121,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-152,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -26,0,-48,0,-153,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-146,0,-154,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-147,0,-155,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-150,0,-156,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-218,0,-157,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-254,0,-158,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-300,0,-159,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-302,0,-160,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-27,0,-161,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-28,0,-29,0,-162,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -30,0,-36,0,-163,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-37,0,-39,0,-164,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -43,0,-70,0,-165,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-71,0,-73,0,-166,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -76,0,-77,0,-167,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-79,0,-81,0,-168,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -82,0,-83,0,-176,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-84,0,-85,0,-177,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -88,0,-89,0,-179,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-90,0,-91,0,-240,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -50,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-92,0,0,-248,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-93,0,
            -47,0,-255,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-94,0,-95,0,-256,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-96,0,-257,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-97,0,
            -258,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-98,-99,0,-100,0,-259,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-101,-102,0,
            -103,0,-260,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-104,-105,0,-106,0,-261,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-107,
            -108,0,-109,0,-262,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-110,-111,0,-112,0,
            -263,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-113,-116,0,-117,0,-264,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-119,-128,0,
            -141,0,-265,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-142,-145,0,-148,0,-273,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-149,
            0,-169,0,-274,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-170,0,-173,0,-118,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-174,
            0,-252,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-14,0,-305,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-125,0,0,-175,-178,
            -180,-181,0,0,0,0,-182,-189,-190,0,
            -31,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-32,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-33,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-34,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-35,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-45,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-51,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-80,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-87,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-171,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -203,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-212,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-217,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-238,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-239,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-242,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-245,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-294,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-295,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-301,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -303,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-310,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-311,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-137,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-138,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-139,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-140,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-131,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-132,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-133,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-134,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-135,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-136,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-129,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-130,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-126,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-127,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-172,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-1,-216,0,
            -191,0,0,-8,0,0,-192,-193,-194,-195,
            -196,-197,-198,-296,0,-199,0,0,-15,0,
            -151,0,0,0,-200,-201,-202,-46,0,-204,
            0,0,-144,0,-205,0,0,-206,-213,0,
            0,0,0,-40,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-44,0,0,0,-21,0,0,
            0,0,0,0,0,0,-115,0,0,0,
            0,-22,0,0,0,0,0,-304,0,-143,
            0,0,-41,0,0,0,0,-241,-215,-207,
            -52,-53,0,-54,-208,-209,0,-55,-56,-57,
            -58,-210,-59,-211,-214,-60,0,-219,-61,0,
            -220,-62,-63,-64,-65,-221,0,-66,0,-67,
            0,-68,0,0,0,0,-69,-72,-74,-75,
            0,0,0,-183,0,0,0,-184,0,0,
            0,0,0,0,0,0,0,-185,0,0,
            -186,0,0,0,0,0,0,-187,0,-188,
            0,-246,0,-299,-222,-223,-224,0,0,0,
            0,-225,-226,-227,0,-228,-229,-230,0,-231,
            -232,-233,-234,-235,-236,-237,-243,-244,0,-247,
            -249,0,-250,-251,-253,-268,-269,-270,0,-271,
            0,-272,0,-275,0,-276,-277,-278,-279,-280,
            -281,-282,-283,-284,-285,-286,-287,-288,-289,-290,
            -291,-292,-293,-297,-298,-306,-307,-308,-309,-312,
            0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            73,73,73,73,73,73,73,73,5,5,
            5,5,5,5,5,5,5,5,5,5,
            5,5,5,5,5,5,75,75,58,74,
            76,76,59,59,50,50,50,53,57,57,
            60,60,51,61,61,56,56,77,77,52,
            79,79,54,54,54,78,62,78,63,63,
            65,65,49,49,38,38,39,40,39,40,
            36,37,36,36,36,37,37,37,34,35,
            34,35,34,35,32,33,32,33,32,33,
            32,33,32,33,28,28,30,29,30,29,
            30,29,26,27,26,27,26,27,8,24,
            8,8,9,9,9,9,9,10,10,10,
            10,10,11,11,11,2,2,2,1,1,
            1,1,1,1,1,1,1,3,3,82,
            82,12,12,12,12,12,12,13,13,13,
            13,13,13,13,14,4,4,4,4,4,
            83,83,84,84,66,66,67,67,67,16,
            16,16,16,16,15,19,20,21,22,23,
            23,17,18,80,80,80,80,86,86,87,
            87,87,87,87,87,87,87,87,87,87,
            45,45,45,88,88,43,43,43,69,64,
            64,46,46,46,46,48,47,89,89,90,
            90,85,85,85,85,68,68,68,68,6,
            6,6,6,6,6,6,6,6,6,6,
            6,6,6,6,6,6,6,6,7,6,
            70,70,70,41,41,44,44,42,42,25,
            91,91,92,92,31,81,81,71,71,72,
            72,55,55,55,1,125,3860,1221,1133,3859,
            119,120,102,344,112,117,118,141,142,143,
            144,145,146,169,170,171,172,173,103,109,
            1266,97,84,85,1268,95,1313,79,1311,71,
            1358,67,2155,1356,65,683,125,3860,1221,1133,
            3859,119,120,111,344,112,117,118,141,142,
            143,144,145,146,169,170,171,172,173,227,
            162,164,348,3,224,752,125,3888,721,76,
            3881,226,185,966,125,63,876,2112,2157,155,
            125,3860,1221,1133,3859,119,120,102,344,112,
            117,118,141,142,143,144,145,146,169,170,
            171,172,173,103,109,1266,97,84,85,1268,
            95,1313,79,1311,71,1358,67,271,1356,65,
            236,55,488,50,1131,812,125,3888,787,427,
            3890,226,1064,186,269,225,608,349,985,125,
            138,985,125,1401,113,114,896,154,3813,1044,
            3950,3952,155,125,3860,1221,1133,3859,119,120,
            102,344,112,117,118,141,142,143,144,145,
            146,169,170,171,172,173,103,109,1266,97,
            84,85,1268,95,1313,79,1311,71,1358,67,
            271,1356,65,183,2021,225,32,34,35,36,
            872,125,2291,70,1046,3764,426,269,1048,46,
            234,184,187,188,985,125,3746,966,125,63,
            1049,1050,1088,3953,3952,391,125,3860,1221,1133,
            3859,119,120,102,344,112,117,118,141,142,
            143,144,145,146,169,170,171,172,173,103,
            109,1266,97,84,85,1268,95,1313,79,1311,
            71,1358,67,257,1356,65,500,2297,27,2292,
            391,125,3860,1221,1133,3859,119,120,102,344,
            112,117,118,141,142,143,144,145,146,169,
            170,171,172,173,103,109,1266,97,84,85,
            1268,95,1313,79,1311,71,1358,67,257,1356,
            65,150,2297,1060,3846,391,125,3860,1221,1133,
            3859,119,120,102,344,112,117,118,141,142,
            143,144,145,146,169,170,171,172,173,103,
            109,1266,97,84,85,1268,95,1313,79,1311,
            71,1358,67,257,1356,65,1605,2297,1060,3895,
            391,125,3860,1221,1133,3859,119,120,102,344,
            112,117,118,141,142,143,144,145,146,169,
            170,171,172,173,103,109,1266,97,84,85,
            1268,95,1313,79,1311,71,1358,67,257,1356,
            65,61,2297,1060,3896,391,125,3860,1221,1133,
            3859,119,120,102,344,112,117,118,141,142,
            143,144,145,146,169,170,171,172,173,103,
            109,1266,97,84,85,1268,95,1313,79,1311,
            71,1358,67,257,1356,65,220,2297,1060,3897,
            391,125,3860,1221,1133,3859,119,120,102,344,
            112,117,118,141,142,143,144,145,146,169,
            170,171,172,173,103,109,1266,97,84,85,
            1268,95,1313,79,1311,71,1358,67,257,1356,
            65,262,2297,1060,3902,391,125,3860,1221,1133,
            3859,119,120,102,344,112,117,118,141,142,
            143,144,145,146,169,170,171,172,173,103,
            109,1266,97,84,85,1268,95,1313,79,1311,
            71,1358,67,257,1356,65,263,2297,1060,3903,
            391,125,3860,1221,1133,3859,119,120,102,344,
            112,117,118,141,142,143,144,145,146,169,
            170,171,172,173,103,109,1266,97,84,85,
            1268,95,1313,79,1311,71,1358,67,257,1356,
            65,3936,2297,1060,3904,391,125,3860,1221,1133,
            3859,119,120,102,344,112,117,118,141,142,
            143,144,145,146,169,170,171,172,173,103,
            109,1266,97,84,85,1268,95,1313,79,1311,
            71,1358,67,257,1356,65,3957,2297,1060,3906,
            391,125,3860,1221,1133,3859,119,120,102,344,
            112,117,118,141,142,143,144,145,146,169,
            170,171,172,173,103,109,1266,97,84,85,
            1268,95,1313,79,1311,71,1358,67,257,1356,
            65,3959,2297,231,3907,391,125,3860,1221,1133,
            3859,119,120,102,344,112,117,118,141,142,
            143,144,145,146,169,170,171,172,173,103,
            109,1266,97,84,85,1268,95,1313,79,1311,
            71,1358,67,257,1356,65,899,2297,316,3908,
            391,125,3860,1221,1133,3859,119,120,102,344,
            112,117,118,141,142,143,144,145,146,169,
            170,171,172,173,103,109,1266,97,84,85,
            1268,95,1313,79,1311,71,1358,67,257,1356,
            65,677,2297,1052,3910,391,125,3860,1221,1133,
            3859,119,120,102,344,112,117,118,141,142,
            143,144,145,146,169,170,171,172,173,103,
            109,1266,97,84,85,1268,95,1313,79,1311,
            71,1358,67,257,1356,65,1058,2297,1019,3911,
            391,125,3860,1221,1133,3859,119,120,102,344,
            112,117,118,141,142,143,144,145,146,169,
            170,171,172,173,103,109,1266,97,84,85,
            1268,95,1313,79,1311,71,1358,67,257,1356,
            65,889,2297,1029,3912,391,125,3860,1221,1133,
            3859,119,120,102,344,112,117,118,141,142,
            143,144,145,146,169,170,171,172,173,103,
            109,1266,97,84,85,1268,95,1313,79,1311,
            71,1358,67,257,1356,65,1034,2297,1061,3913,
            391,125,3860,1221,1133,3859,119,120,102,344,
            112,117,118,141,142,143,144,145,146,169,
            170,171,172,173,103,109,1266,97,84,85,
            1268,95,1313,79,1311,71,1358,67,257,1356,
            65,1062,2297,753,3914,391,125,3860,1221,1133,
            3859,119,120,102,344,112,117,118,141,142,
            143,144,145,146,169,170,171,172,173,103,
            109,1266,97,84,85,1268,95,1313,79,1311,
            71,1358,67,257,1356,65,1010,2297,644,3915,
            391,125,3860,1221,1133,3859,119,120,102,344,
            112,117,118,141,142,143,144,145,146,169,
            170,171,172,173,103,109,1266,97,84,85,
            1268,95,1313,79,1311,71,1358,67,257,1356,
            65,886,2297,873,3916,391,125,3860,1221,1133,
            3859,119,120,102,344,112,117,118,141,142,
            143,144,145,146,169,170,171,172,173,103,
            109,1266,97,84,85,1268,95,1313,79,1311,
            71,1358,67,257,1356,65,318,2297,874,3917,
            391,125,3860,1221,1133,3859,119,120,102,344,
            112,117,118,141,142,143,144,145,146,169,
            170,171,172,173,103,109,1266,97,84,85,
            1268,95,1313,79,1311,71,1358,67,257,1356,
            65,941,2297,1073,3918,391,125,3860,1221,1133,
            3859,119,120,102,344,112,117,118,141,142,
            143,144,145,146,169,170,171,172,173,103,
            109,1266,97,84,85,1268,95,1313,79,1311,
            71,1358,67,257,1356,65,1065,2297,1076,3920,
            78,125,3860,1221,1133,3859,119,120,102,344,
            112,117,118,141,142,143,144,145,146,169,
            170,171,172,173,103,109,1266,97,84,85,
            1268,95,1313,79,1311,71,1358,67,2155,1356,
            65,683,125,3860,1221,1133,3859,119,120,110,
            344,112,117,118,141,142,143,144,145,146,
            169,170,171,172,173,1077,163,164,391,125,
            3860,1221,1133,3859,119,120,102,344,112,117,
            118,141,142,143,144,145,146,169,170,171,
            172,173,103,109,1266,97,84,85,1268,95,
            1313,79,1311,71,1358,67,257,1356,65,1069,
            2297,847,3932,463,125,3860,1221,1133,3859,119,
            120,102,344,112,117,118,141,142,143,144,
            145,146,169,170,171,172,173,103,109,1266,
            97,84,85,1268,95,1313,79,1311,71,1358,
            67,200,1356,65,219,1081,3938,1082,3937,463,
            125,3860,1221,1133,3859,119,120,102,344,112,
            117,118,141,142,143,144,145,146,169,170,
            171,172,173,103,109,1266,97,84,85,1268,
            95,1313,79,1311,71,1358,67,200,1356,65,
            1515,1559,3938,887,3940,463,125,3860,1221,1133,
            3859,119,120,102,344,112,117,118,141,142,
            143,144,145,146,169,170,171,172,173,103,
            109,1266,97,84,85,1268,95,1313,79,1311,
            71,1358,67,200,1356,65,2067,2110,3938,952,
            3941,463,125,3860,1221,1133,3859,119,120,102,
            344,112,117,118,141,142,143,144,145,146,
            169,170,171,172,173,103,109,1266,97,84,
            85,1268,95,1313,79,1311,71,1358,67,200,
            1356,65,1085,1087,3938,1090,3942,463,125,3860,
            1221,1133,3859,119,120,102,344,112,117,118,
            141,142,143,144,145,146,169,170,171,172,
            173,103,109,1266,97,84,85,1268,95,1313,
            79,1311,71,1358,67,200,1356,65,1095,1100,
            3938,1104,3943,463,125,3860,1221,1133,3859,119,
            120,102,344,112,117,118,141,142,143,144,
            145,146,169,170,171,172,173,103,109,1266,
            97,84,85,1268,95,1313,79,1311,71,1358,
            67,200,1356,65,1111,1115,3938,1117,3944,463,
            125,3860,1221,1133,3859,119,120,102,344,112,
            117,118,141,142,143,144,145,146,169,170,
            171,172,173,103,109,1266,97,84,85,1268,
            95,1313,79,1311,71,1358,67,200,1356,65,
            1120,1122,3938,1124,3945,463,125,3860,1221,1133,
            3859,119,120,102,344,112,117,118,141,142,
            143,144,145,146,169,170,171,172,173,103,
            109,1266,97,84,85,1268,95,1313,79,1311,
            71,1358,67,200,1356,65,1126,1128,3938,1132,
            3946,463,125,3860,1221,1133,3859,119,120,102,
            344,112,117,118,141,142,143,144,145,146,
            169,170,171,172,173,103,109,1266,97,84,
            85,1268,95,1313,79,1311,71,1358,67,200,
            1356,65,1134,1137,3938,1140,3947,463,125,3860,
            1221,1133,3859,119,120,102,344,112,117,118,
            141,142,143,144,145,146,169,170,171,172,
            173,103,109,1266,97,84,85,1268,95,1313,
            79,1311,71,1358,67,200,1356,65,1142,393,
            3938,1102,3948,463,125,3860,1221,1133,3859,119,
            120,102,344,112,117,118,141,142,143,144,
            145,146,169,170,171,172,173,103,109,1266,
            97,84,85,1268,95,1313,79,1311,71,1358,
            67,200,1356,65,1011,1144,3938,1083,3949,391,
            125,3860,1221,1133,3859,119,120,102,344,112,
            117,118,141,142,143,144,145,146,169,170,
            171,172,173,103,109,1266,97,84,85,1268,
            95,1313,79,1311,71,1358,67,257,1356,65,
            1108,2297,705,3954,391,125,3860,1221,1133,3859,
            119,120,102,344,112,117,118,141,142,143,
            144,145,146,169,170,171,172,173,103,109,
            1266,97,84,85,1268,95,1313,79,1311,71,
            1358,67,257,1356,65,341,2297,1113,3955,319,
            125,3860,1221,1133,3859,119,120,102,344,112,
            117,118,141,142,143,144,145,146,169,170,
            171,172,173,103,109,1266,97,84,85,1268,
            95,1313,79,1311,71,1358,67,257,1356,65,
            1013,2290,319,125,3860,1221,1133,3859,119,120,
            102,344,112,117,118,141,142,143,144,145,
            146,169,170,171,172,173,103,109,1266,97,
            84,85,1268,95,1313,79,1311,71,1358,67,
            257,1356,65,774,3934,237,125,3860,1221,1133,
            3859,119,120,102,344,112,117,118,141,142,
            143,144,145,146,169,170,171,172,173,103,
            109,1266,97,84,85,1268,95,1313,79,1311,
            71,1358,67,271,1356,65,985,125,3747,1014,
            1015,845,1147,33,34,35,36,1150,1152,1154,
            270,319,125,3860,1221,1133,3859,119,120,102,
            344,112,117,118,141,142,143,144,145,146,
            169,170,171,172,173,103,109,1266,97,84,
            85,1268,95,1313,79,1311,71,1358,67,39,
            1356,65,319,125,3860,1221,1133,3859,119,120,
            102,344,112,117,118,141,142,143,144,145,
            146,169,170,171,172,173,103,109,1266,97,
            84,85,1268,95,1313,79,1311,71,1358,67,
            38,1356,65,319,125,3860,1221,1133,3859,119,
            120,102,344,112,117,118,141,142,143,144,
            145,146,169,170,171,172,173,103,109,1266,
            97,84,85,1268,95,1313,79,1311,71,1358,
            67,54,1356,65,319,125,3860,1221,1133,3859,
            119,120,102,344,112,117,118,141,142,143,
            144,145,146,169,170,171,172,173,103,109,
            1266,97,84,85,1268,95,1313,79,1311,71,
            1358,67,53,1356,65,319,125,3860,1221,1133,
            3859,119,120,102,344,112,117,118,141,142,
            143,144,145,146,169,170,171,172,173,103,
            109,1266,97,84,85,1268,95,1313,79,1311,
            71,1358,67,52,1356,65,319,125,3860,1221,
            1133,3859,119,120,102,344,112,117,118,141,
            142,143,144,145,146,169,170,171,172,173,
            103,109,1266,97,84,85,1268,95,1313,79,
            1311,71,1358,67,207,1356,65,319,125,3860,
            1221,1133,3859,119,120,102,344,112,117,118,
            141,142,143,144,145,146,169,170,171,172,
            173,103,109,1266,97,84,85,1268,95,1313,
            79,1311,71,1358,67,1607,1356,65,319,125,
            3860,1221,1133,3859,119,120,102,344,112,117,
            118,141,142,143,144,145,146,169,170,171,
            172,173,103,109,1266,97,84,85,1268,95,
            1313,79,1311,71,1358,67,2019,1356,65,319,
            125,3860,1221,1133,3859,119,120,102,344,112,
            117,118,141,142,143,144,145,146,169,170,
            171,172,173,103,109,1266,97,84,85,1268,
            95,1313,79,1311,71,1358,67,45,1356,65,
            319,125,3860,1221,1133,3859,119,120,102,344,
            112,117,118,141,142,143,144,145,146,169,
            170,171,172,173,103,109,1266,97,84,85,
            1268,95,1313,79,1311,71,1358,67,167,1356,
            65,319,125,3860,1221,1133,3859,119,120,102,
            344,112,117,118,141,142,143,144,145,146,
            169,170,171,172,173,103,109,1266,97,84,
            85,1268,95,1313,79,1311,71,1358,67,3926,
            1356,65,319,125,3860,1221,1133,3859,119,120,
            102,344,112,117,118,141,142,143,144,145,
            146,169,170,171,172,173,103,109,1266,97,
            84,85,1268,95,1313,79,1311,71,1358,67,
            48,1356,65,319,125,3860,1221,1133,3859,119,
            120,102,344,112,117,118,141,142,143,144,
            145,146,169,170,171,172,173,103,109,1266,
            97,84,85,1268,95,1313,79,1311,71,1358,
            67,259,1356,65,319,125,3860,1221,1133,3859,
            119,120,102,344,112,117,118,141,142,143,
            144,145,146,169,170,171,172,173,103,109,
            1266,97,84,85,1268,95,1313,79,1311,71,
            1358,67,168,1356,65,319,125,3860,1221,1133,
            3859,119,120,102,344,112,117,118,141,142,
            143,144,145,146,169,170,171,172,173,103,
            109,1266,97,84,85,1268,95,1313,79,1311,
            71,1358,67,166,1356,65,319,125,3860,1221,
            1133,3859,119,120,102,344,112,117,118,141,
            142,143,144,145,146,169,170,171,172,173,
            103,109,1266,97,84,85,1268,95,1313,79,
            1311,71,1358,67,208,1356,65,319,125,3860,
            1221,1133,3859,119,120,102,344,112,117,118,
            141,142,143,144,145,146,169,170,171,172,
            173,103,109,1266,97,84,85,1268,95,1313,
            79,1311,71,1358,67,258,1356,65,319,125,
            3860,1221,1133,3859,119,120,102,344,112,117,
            118,141,142,143,144,145,146,169,170,171,
            172,173,103,109,1266,97,84,85,1268,95,
            1313,79,1311,71,1358,67,3956,1356,65,319,
            125,3860,1221,1133,3859,119,120,102,344,112,
            117,118,141,142,143,144,145,146,169,170,
            171,172,173,103,109,1266,97,84,85,1268,
            95,1313,79,1311,71,1358,67,47,1356,65,
            319,125,3860,1221,1133,3859,119,120,102,344,
            112,117,118,141,142,143,144,145,146,169,
            170,171,172,173,103,109,1266,97,84,85,
            1268,95,1313,79,1311,71,1358,67,3958,1356,
            65,319,125,3860,1221,1133,3859,119,120,102,
            344,112,117,118,141,142,143,144,145,146,
            169,170,171,172,173,103,109,1266,97,84,
            85,1268,95,1313,79,1311,71,1358,67,201,
            1356,65,319,125,3860,1221,1133,3859,119,120,
            102,344,112,117,118,141,142,143,144,145,
            146,169,170,171,172,173,103,109,1266,97,
            84,85,1268,95,1313,79,1311,71,1358,67,
            3960,1356,65,319,125,3860,1221,1133,3859,119,
            120,102,344,112,117,118,141,142,143,144,
            145,146,169,170,171,172,173,103,109,1266,
            97,84,85,1268,95,1313,79,1311,71,1358,
            67,202,1356,65,319,125,3860,1221,1133,3859,
            119,120,102,344,112,117,118,141,142,143,
            144,145,146,169,170,171,172,173,103,109,
            1266,97,84,85,1268,95,1313,79,1311,71,
            3825,69,319,125,3860,1221,1133,3859,119,120,
            102,344,112,117,118,141,142,143,144,145,
            146,169,170,171,172,173,103,109,1266,97,
            84,85,1268,95,1313,79,3826,77,319,125,
            3860,1221,1133,3859,119,120,102,344,112,117,
            118,141,142,143,144,145,146,169,170,171,
            172,173,103,109,1266,97,84,85,1268,95,
            1313,79,3832,76,319,125,3860,1221,1133,3859,
            119,120,102,344,112,117,118,141,142,143,
            144,145,146,169,170,171,172,173,103,109,
            1266,97,84,85,1268,95,1313,79,3834,75,
            319,125,3860,1221,1133,3859,119,120,102,344,
            112,117,118,141,142,143,144,145,146,169,
            170,171,172,173,103,109,1266,97,84,85,
            1268,95,3758,83,319,125,3860,1221,1133,3859,
            119,120,102,344,112,117,118,141,142,143,
            144,145,146,169,170,171,172,173,103,109,
            1266,97,84,85,1268,95,3820,81,319,125,
            3860,1221,1133,3859,119,120,102,344,112,117,
            118,141,142,143,144,145,146,169,170,171,
            172,173,103,109,1266,97,92,93,1268,95,
            319,125,3860,1221,1133,3859,119,120,102,344,
            112,117,118,141,142,143,144,145,146,169,
            170,171,172,173,103,109,1266,97,90,91,
            1268,95,319,125,3860,1221,1133,3859,119,120,
            102,344,112,117,118,141,142,143,144,145,
            146,169,170,171,172,173,103,109,1266,97,
            88,89,1268,95,319,125,3860,1221,1133,3859,
            119,120,102,344,112,117,118,141,142,143,
            144,145,146,169,170,171,172,173,103,109,
            1266,97,86,87,1268,95,535,125,3860,1221,
            1133,3859,119,120,102,344,112,117,118,141,
            142,143,144,145,146,169,170,171,172,173,
            103,109,3750,101,535,125,3860,1221,1133,3859,
            119,120,102,344,112,117,118,141,142,143,
            144,145,146,169,170,171,172,173,103,109,
            3755,99,535,125,3860,1221,1133,3859,119,120,
            106,344,112,117,118,141,142,143,144,145,
            146,169,170,171,172,173,107,109,535,125,
            3860,1221,1133,3859,119,120,104,344,112,117,
            118,141,142,143,144,145,146,169,170,171,
            172,173,105,109,606,125,3860,1221,1133,3859,
            119,120,110,344,112,117,118,141,142,143,
            144,145,146,169,170,171,172,173,925,924,
            211,1156,996,998,966,125,63,1158,1160,1162,
            1164,1167,1169,1171,924,211,1173,996,998,910,
            211,1145,996,998,3841,1175,1177,1180,910,211,
            1022,996,998,910,211,1024,996,998,962,910,
            211,6,996,998,834,210,212,213,32,34,
            35,36,4,501,416,400,26,2243,408,427,
            210,212,213,56,785,953,212,213,966,125,
            63,343,1,490,1448,212,213,1136,57,3819,
            212,213,966,125,63,3927,212,213,910,211,
            785,996,998,604,33,34,35,36,1136,39,
            986,1020,1020,3838,1020,926,1028,60,1020,1020,
            1020,1020,1031,1020,1043,1182,1020,1043,1183,1020,
            222,1186,1020,1020,1020,1020,1187,1403,1020,1446,
            1020,1086,1020,60,273,212,213,1020,74,1020,
            233,224,1653,1699,1020,1742,221,51,1020,1743,
            1745,1788,1789,3835,1791,1446,3930,1834,1020,408,
            1835,1020,2200,1837,1880,1881,1883,223,948,1926,
            1020,1927,1020,1929,1020,1190,1191,1194,1972,1973,
            1975,2018,1195,1198,1199,3921,1202,1203,1206,3923,
            1207,1210,1211,1214,1215,1218,1219,1222,1223,1973,
            1226,1229,3924,1231,1233,1235,23,1237,1227,3925,
            912,251,1238,124,1016,252,951,1242,1017,987,
            1243,1246,1250,1251,1254,1257,1258,1261,1262,1265,
            1266,1247,1239,1270,1271,1274,1275,388,1278,465,
            1279,3963,3963
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,0,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,0,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,0,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,68,0,
            70,71,3,0,1,0,74,0,1,79,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,24,
            23,24,25,26,27,28,29,30,31,32,
            33,34,35,36,37,93,39,40,41,42,
            43,44,45,46,47,48,49,50,51,52,
            53,54,55,56,57,58,59,60,61,62,
            63,64,65,66,67,68,73,70,71,0,
            1,76,77,0,0,1,79,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,0,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,0,39,40,41,42,43,44,45,
            46,47,48,49,50,51,52,53,54,55,
            56,57,58,59,60,61,62,63,64,65,
            66,67,68,0,70,71,0,0,75,3,
            0,78,0,0,4,0,0,1,84,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,25,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,0,39,40,41,42,43,
            44,45,46,47,48,49,50,51,52,53,
            54,55,56,57,58,59,60,61,62,63,
            64,65,66,67,68,73,70,71,85,74,
            87,0,89,90,82,0,1,0,0,1,
            84,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            0,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,0,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,65,66,67,68,0,70,71,
            0,1,0,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,95,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,88,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,68,72,
            70,71,0,1,0,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,92,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            0,39,40,41,42,43,44,45,46,47,
            48,49,50,51,52,53,54,55,56,57,
            58,59,60,61,62,63,64,65,66,67,
            68,0,70,71,0,1,72,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,0,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,0,39,40,41,42,43,44,45,
            46,47,48,49,50,51,52,53,54,55,
            56,57,58,59,60,61,62,63,64,65,
            66,67,68,0,70,0,1,0,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,24,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,0,39,40,41,42,43,44,
            45,46,47,48,49,50,51,52,53,54,
            55,56,57,58,59,60,61,62,63,64,
            65,66,67,68,31,32,0,1,0,76,
            77,74,0,1,79,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,0,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            0,39,40,41,42,43,44,45,46,47,
            48,49,50,51,52,53,54,55,56,57,
            58,59,60,61,62,63,64,65,66,67,
            68,0,0,1,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,0,23,24,25,26,27,28,
            29,30,31,32,0,81,0,3,15,69,
            39,40,41,42,43,44,45,46,47,48,
            49,50,51,52,53,54,55,56,57,58,
            59,0,26,27,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,0,23,24,25,26,27,28,
            29,30,31,32,0,1,0,0,15,3,
            39,40,41,42,43,44,45,46,47,48,
            49,50,51,52,53,54,55,56,57,58,
            59,0,0,0,3,0,5,6,7,8,
            9,10,11,12,13,0,0,1,0,4,
            18,19,20,21,23,0,25,22,0,14,
            0,28,29,30,33,34,35,36,37,0,
            15,0,3,69,5,6,7,8,9,10,
            11,12,13,0,0,0,3,3,5,6,
            7,8,9,10,11,12,13,26,27,15,
            0,1,33,34,35,36,37,0,24,25,
            0,0,1,28,29,30,33,34,35,36,
            37,0,22,75,69,0,78,69,3,60,
            5,6,7,8,9,10,11,12,13,18,
            19,20,21,60,0,0,0,3,23,5,
            6,7,8,9,10,11,12,13,74,75,
            76,77,78,18,19,20,21,23,22,0,
            0,1,0,0,0,0,0,4,0,0,
            73,0,72,0,38,16,17,0,0,82,
            0,4,22,0,4,22,86,16,17,16,
            17,14,0,0,14,0,4,0,0,0,
            38,0,38,38,38,69,14,0,72,0,
            0,0,3,0,0,22,3,22,0,22,
            22,22,0,22,2,0,0,2,2,22,
            0,0,0,2,0,1,0,1,72,0,
            1,0,73,81,0,1,0,83,83,0,
            1,0,38,0,1,4,38,0,80,91,
            0,1,0,80,0,1,0,1,38,0,
            1,0,1,0,1,0,1,0,1,69,
            69,0,1,0,1,0,0,1,3,0,
            1,0,1,0,0,38,0,3,2,0,
            38,0,1,0,1,0,1,0,1,0,
            1,0,1,0,1,22,0,1,0,1,
            0,1,0,1,0,1,0,1,96,0,
            1,0,0,2,2,0,0,38,2,0,
            0,2,2,0,0,2,2,0,0,2,
            2,0,0,2,2,0,0,2,2,0,
            0,2,2,0,0,2,2,0,0,2,
            2,0,0,2,2,0,0,2,0,1,
            0,1,0,1,0,1,0,0,0,2,
            4,0,0,2,2,0,0,2,22,0,
            0,2,2,0,69,2,0,0,2,2,
            0,0,2,2,0,0,2,2,22,0,
            0,2,2,0,0,2,38,0,0,2,
            2,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,94,0,
            0,0,0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            160,2547,3963,1178,3843,4093,4091,4092,4094,4095,
            4096,4097,4098,4099,3842,3984,3858,3836,3833,3831,
            3830,3829,3963,4089,3985,3983,3986,3987,3828,3824,
            3822,3839,3694,4118,4119,4120,4121,4122,40,315,
            3971,3972,3973,3974,3975,3976,3977,3978,3979,3980,
            3981,3982,3845,3844,3848,3850,3857,3852,3821,3988,
            1176,1223,4141,4138,4140,4142,4143,4144,4145,3963,
            593,2588,4100,176,253,3963,3962,3963,2547,2670,
            1178,3843,4093,4091,4092,4094,4095,4096,4097,4098,
            4099,3842,3984,3858,3836,3833,3831,3830,3829,353,
            4089,3985,3983,3986,3987,3828,3824,3822,3839,3694,
            4118,4119,4120,4121,4122,2998,315,3971,3972,3973,
            3974,3975,3976,3977,3978,3979,3980,3981,3982,3845,
            3844,3848,3850,3857,3852,3821,3988,1176,1223,4141,
            4138,4140,4142,4143,4144,4145,4217,593,2588,137,
            3784,3724,497,3963,267,2547,2670,1178,3843,4093,
            4091,4092,4094,4095,4096,4097,4098,4099,3842,3984,
            3858,3836,3833,3831,3830,3829,3963,4089,3985,3983,
            3986,3987,3828,3824,3822,3839,1491,4118,4119,4120,
            4121,4122,3963,315,3971,3972,3973,3974,3975,3976,
            3977,3978,3979,3980,3981,3982,3845,3844,3848,3850,
            3857,3852,3821,3988,1176,1223,4141,4138,4140,4142,
            4143,4144,4145,108,593,2588,3963,3963,3802,591,
            206,3788,253,2,2506,41,3963,2547,3951,1178,
            3843,4093,4091,4092,4094,4095,4096,4097,4098,4099,
            3842,3984,3858,3836,3833,3831,3830,3829,483,4089,
            3985,3983,3986,3987,3828,3824,3822,3839,1491,4118,
            4119,4120,4121,4122,3963,315,3971,3972,3973,3974,
            3975,3976,3977,3978,3979,3980,3981,3982,3845,3844,
            3848,3850,3857,3852,3821,3988,1176,1223,4141,4138,
            4140,4142,4143,4144,4145,4217,593,2588,405,5,
            345,3963,2286,494,2159,3963,3748,64,3963,2547,
            3951,1178,3843,4093,4091,4092,4094,4095,4096,4097,
            4098,4099,3842,3984,3858,3836,3833,3831,3830,3829,
            165,4089,3985,3983,3986,3987,3828,3824,3822,3839,
            1491,4118,4119,4120,4121,4122,3963,315,3971,3972,
            3973,3974,3975,3976,3977,3978,3979,3980,3981,3982,
            3845,3844,3848,3850,3857,3852,3821,3988,1176,1223,
            4141,4138,4140,4142,4143,4144,4145,3963,593,2588,
            255,2547,3963,1178,3843,4093,4091,4092,4094,4095,
            4096,4097,4098,4099,3842,3984,3858,3836,3833,3831,
            3830,3829,3244,4089,3985,3983,3986,3987,3828,3824,
            3822,3839,1491,4118,4119,4120,4121,4122,2834,315,
            3971,3972,3973,3974,3975,3976,3977,3978,3979,3980,
            3981,3982,3845,3844,3848,3850,3857,3852,3821,3988,
            1176,1223,4141,4138,4140,4142,4143,4144,4145,3162,
            593,2588,3963,2547,3963,3939,3843,4093,4091,4092,
            4094,4095,4096,4097,4098,4099,3842,3984,3858,3836,
            3833,3831,3830,3829,2711,4089,3985,3983,3986,3987,
            3828,3824,3822,3839,1491,4118,4119,4120,4121,4122,
            3963,315,3971,3972,3973,3974,3975,3976,3977,3978,
            3979,3980,3981,3982,3845,3844,3848,3850,3857,3852,
            3821,3988,1176,1223,4141,4138,4140,4142,4143,4144,
            4145,3963,593,2588,3963,2547,3203,1178,3843,4093,
            4091,4092,4094,4095,4096,4097,4098,4099,3842,3984,
            3858,3836,3833,3831,3830,3829,3963,4089,3985,3983,
            3986,3987,3828,3824,3822,3839,1491,4118,4119,4120,
            4121,4122,3963,315,3971,3972,3973,3974,3975,3976,
            3977,3978,3979,3980,3981,3982,3845,3844,3848,3850,
            3857,3852,3821,3988,1176,1223,4141,4138,4140,4142,
            4143,4144,4145,49,593,3963,2547,44,1178,3843,
            4093,4091,4092,4094,4095,4096,4097,4098,4099,3842,
            3984,3858,3836,3833,3831,3830,3829,353,4089,3985,
            3983,3986,3987,3828,3824,3822,3839,1491,4118,4119,
            4120,4121,4122,94,315,3971,3972,3973,3974,3975,
            3976,3977,3978,3979,3980,3981,3982,3845,3844,3848,
            3850,3857,3852,3821,3988,1176,1223,4141,4138,4140,
            4142,4143,4144,4145,3614,3586,3963,1561,3963,3724,
            497,3,3963,2547,2875,1178,3843,4093,4091,4092,
            4094,4095,4096,4097,4098,4099,3842,3984,3858,3836,
            3833,3831,3830,3829,3963,4089,3985,3983,3986,3987,
            3828,3824,3822,3839,1491,4118,4119,4120,4121,4122,
            43,315,3971,3972,3973,3974,3975,3976,3977,3978,
            3979,3980,3981,3982,3845,3844,3848,3850,3857,3852,
            3821,3988,1176,1223,4141,4138,4140,4142,4143,4144,
            4145,3963,3963,505,4090,3843,4093,4091,4092,4094,
            4095,4096,4097,4098,4099,3842,3984,3878,3836,3833,
            3831,3830,3829,29,4089,3985,3983,3986,3987,3828,
            3824,3822,3839,3868,58,4117,3963,356,339,421,
            3864,3971,3972,3973,3974,3975,3976,3977,3978,3979,
            3980,3981,3982,3845,3844,3848,3850,3857,3852,3821,
            3988,3963,429,484,4090,3843,4093,4091,4092,4094,
            4095,4096,4097,4098,4099,3842,3984,3878,3836,3833,
            3831,3830,3829,31,4089,3985,3983,3986,3987,3828,
            3824,3822,3839,3868,153,1518,217,3963,339,356,
            3864,2298,3745,3736,3733,3731,3732,3730,3729,3728,
            3727,3721,2299,3845,3844,3848,3850,3857,3852,3821,
            3988,3963,78,66,4090,205,4093,4091,4092,4094,
            4095,4096,4097,4098,4099,70,3963,3741,42,3424,
            3554,3522,3490,3458,4089,30,4115,3739,214,3390,
            3963,3354,3318,3282,4114,4110,4113,4111,4112,3963,
            339,37,4100,138,4093,4091,4092,4094,4095,4096,
            4097,4098,4099,209,40,68,4100,356,4093,4091,
            4092,4094,4095,4096,4097,4098,4099,41,41,339,
            138,3810,4118,4119,4120,4121,4122,253,353,483,
            3963,3963,550,3354,3318,3282,4118,4119,4120,4121,
            4122,82,3753,44,418,62,44,418,4090,1041,
            4093,4091,4092,4094,4095,4096,4097,4098,4099,3554,
            3522,3490,3458,1041,3963,80,127,4090,4089,4093,
            4091,4092,4094,4095,4096,4097,4098,4099,7,43,
            3724,497,43,3554,3522,3490,3458,4089,3739,96,
            3963,3784,3963,205,3963,3963,3963,2916,3963,253,
            4217,100,3080,98,205,3668,3642,74,3963,2202,
            73,3424,3759,3963,3424,3739,863,3668,3642,3668,
            3642,3390,72,3963,3390,3963,3424,3963,3963,3963,
            3818,3963,2957,2957,908,137,3390,3963,205,3963,
            127,3963,356,3963,59,2301,2064,2342,218,2383,
            2424,2465,3963,412,2065,3963,3963,4178,4179,2629,
            260,3963,3963,4084,3963,595,3963,640,3121,3963,
            685,3963,4217,4137,3963,730,3963,3892,3894,3963,
            775,3963,638,3963,820,2752,683,261,274,3991,
            3963,865,161,3797,3963,910,3963,955,728,3963,
            1000,3963,1045,3963,1090,3963,1135,3963,1180,137,
            480,3963,1225,3963,1270,3963,3963,1315,2289,123,
            1360,122,1405,3963,139,773,3963,4100,4078,256,
            1450,8,818,19,1563,18,1609,17,1655,16,
            1701,15,1747,14,1793,3719,12,1839,13,1885,
            11,1931,10,1977,9,2023,3963,359,2793,3963,
            432,3963,3963,3928,4212,140,3963,2957,4210,3963,
            3963,4209,4208,3963,3963,4207,4206,3963,3963,4205,
            4204,3963,3963,4203,4201,3963,3963,4200,4199,3963,
            3963,4198,4197,3963,3963,4196,4195,3963,3963,4194,
            4193,3963,3963,4202,4211,3963,3963,4192,3963,2069,
            3963,2114,251,1360,250,1405,3963,3963,268,4079,
            3039,3963,3963,4162,4161,3963,272,4160,3734,3963,
            3963,4159,4158,3963,418,4157,3963,3963,4156,4155,
            3963,3963,4154,4153,3963,3963,4152,4229,3808,3963,
            3963,4228,4191,3963,3963,4190,2245,3963,3963,4166,
            4167,3963,3963,3963,3963,3963,3963,3963,3963,3963,
            3963,3963,3963,3963,3963,3963,3963,3963,3963,3963,
            3963,3963,3963,3963,3963,3963,3963,3963,3963,3963,
            3963,3963,3963,3963,3963,3963,3963,3963,3963,3963,
            3963,3963,3963,3963,3963,3963,3963,3963,3963,3963,
            3963,3963,3963,3963,3963,3963,3963,3963,3963,3963,
            3963,3963,3963,3963,3963,3963,3963,3963,3963,3963,
            3963,3963,3963,3963,3963,3963,3963,3963,3963,3963,
            3963,3963,3963,3963,3963,3963,3963,3963,4227
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            375,257,84,249,250,71,71,71,383,384,
            160,166,160,256,221,82,82,82,82,82,
            71,71,162,301,307,306,366,238,319,319,
            94,94,94,94,94,82,82,150,423,422,
            298,150,253,408,94,221,408,160,96,96,
            94,411,411,411,411,411,411,411,411,411,
            411,411,411,411,411,411,411,411,411,259,
            259,263,261,263,262,309,319,265,269,94,
            271,277,273,282,279,160,94,305,450,449,
            450,450,449,311,450,319,319,319,319,319,
            319,319,319,319,319,319,319,319,319,319,
            319,319,319,1,160,319,334,94,334,53,
            169,111,111,150,150,95,95,314,95,95,
            94,94,94,94,94,94,94,94,94,94,
            316,318,408,221,82,160,160,312,311,160,
            408,169,169,169,169,169,169,169,169,169,
            169,169,169,169,169,169,169,169,328,321,
            94,4,327,327,325,169,169,330,169,333,
            450,449,411,411,411,263,262,264,263,263,
            263,263,263,263,263,263,263,263,263,263,
            319,319,94,269,269,273,273,279,277,277,
            277,94,221,450,250,387,94,160,450,414,
            450,450,450,450,450,450,450,450,450,450,
            450,450,450,450,450,450,450,94,94,2,
            160,94,450,450,94,264,450,169,319,319,
            334,94,334,160,94,94,94,94,94,94,
            94,94,94,94,94,92,92,417,316,82,
            419,450,169,169,330,89,450,372,425,450,
            450,450,450,450,450,450,450,450,450,450,
            448,449,450,94,94,388,450,450,264,160,
            94,160,94,221,93,452,373,450,373,94,
            94,450
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            81,71,70,61,40,41,42,43,44,45,
            46,47,48,49,50,51,15,24,26,27,
            59,68,67,63,16,64,62,65,66,60,
            56,57,55,54,52,53,4,14,31,17,
            18,19,20,21,28,29,30,58,1,32,
            39,79,6,7,5,8,9,10,11,12,
            13,23,3,34,36,37,35,33,25,0,
            23,3,6,7,5,8,9,10,11,12,
            13,22,0,2,38,96,74,22,72,86,
            0,2,84,71,70,61,68,67,63,64,
            62,65,66,60,33,34,35,36,37,1,
            56,57,55,54,52,53,4,14,31,16,
            17,18,19,20,21,28,29,30,58,32,
            39,40,41,42,43,44,45,46,47,48,
            49,50,51,25,15,24,26,27,59,23,
            6,7,5,8,9,10,11,12,13,3,
            0,91,15,69,0,74,25,0,2,71,
            61,40,41,42,43,44,45,46,47,48,
            49,50,51,25,15,24,26,27,59,23,
            68,67,63,16,64,62,65,66,56,57,
            55,54,52,53,4,14,31,17,18,19,
            20,21,28,29,30,58,1,32,39,70,
            6,7,5,8,9,10,11,12,13,60,
            33,34,35,36,37,3,0,4,2,81,
            72,38,86,76,77,24,96,69,74,27,
            26,0,75,78,91,15,74,0,80,0,
            69,82,1,73,89,90,85,87,16,17,
            31,32,18,19,20,21,4,14,28,29,
            30,2,81,83,72,38,86,88,75,78,
            26,27,92,93,94,96,95,15,91,74,
            76,77,24,0,22,1,75,78,69,0,
            38,96,0,92,0,4,0,22,1,0,
            81,38,88,0,22,4,38,81,0,83,
            38,0,69,31,32,16,17,18,19,20,
            21,14,83,85,87,88,89,90,75,76,
            77,24,15,91,78,26,27,92,93,94,
            28,29,30,95,1,2,81,86,96,74,
            4,38,72,0,26,27,15,25,76,77,
            24,3,74,75,78,0,4,76,77,24,
            6,7,5,8,9,10,11,12,13,60,
            33,34,35,36,37,3,0,2,3,0,
            1,73,0,2,69,0,93,0,26,27,
            74,15,91,0,72,69,31,32,16,17,
            18,19,4,20,21,14,1,82,85,87,
            73,89,90,28,29,30,95,22,38,2,
            0,94,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static byte nasb[] = {0,
            76,35,35,35,35,15,15,15,35,35,
            34,26,1,38,33,35,35,35,35,35,
            15,15,24,13,11,35,35,35,35,35,
            31,31,31,31,31,35,35,50,35,38,
            85,50,35,81,31,33,28,88,31,31,
            31,90,90,90,90,90,90,90,90,90,
            90,90,90,90,90,90,90,90,90,35,
            35,90,35,90,90,35,35,4,35,31,
            35,35,35,35,35,21,31,35,35,35,
            35,35,35,36,35,35,35,35,35,35,
            35,35,35,35,35,35,35,35,35,35,
            35,35,35,31,83,35,35,31,35,50,
            31,7,17,50,50,70,70,35,64,64,
            52,52,58,58,58,58,40,46,46,46,
            35,35,81,33,35,88,88,35,35,88,
            34,31,31,31,31,31,31,31,31,31,
            31,31,31,31,31,31,31,31,35,35,
            31,31,35,35,35,31,31,35,31,35,
            35,35,90,90,90,90,90,90,35,35,
            35,35,35,35,35,35,35,35,35,35,
            35,35,31,35,35,35,35,35,35,35,
            35,31,33,35,79,33,31,88,35,35,
            35,35,35,35,35,35,35,35,35,35,
            35,35,35,35,35,35,35,31,31,31,
            87,31,35,35,31,90,35,31,35,35,
            35,31,35,88,30,30,30,30,30,30,
            30,30,30,30,30,31,31,35,35,35,
            35,35,31,31,35,35,35,35,35,35,
            35,35,35,35,35,35,35,35,35,35,
            35,35,35,31,31,33,35,35,90,88,
            31,88,31,33,31,35,35,35,35,31,
            31,35
        };
    };
    public final static byte nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            3,78,0,80,81,0,2,5,7,0,
            56,0,79,0,49,0,2,5,86,0,
            62,77,0,59,0,58,0,90,0,43,
            2,5,4,3,0,92,0,50,0,3,
            2,5,4,37,0,5,3,4,35,2,
            0,3,2,5,4,33,0,5,2,3,
            4,29,0,5,2,3,4,27,0,3,
            2,5,4,24,0,59,75,56,57,0,
            65,0,85,0,54,0,69,43,0,41,
            0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            11,12,96,7,83,84,85,86,87,89,
            90,91,92,10,39,3,4,5,6,8,
            9,20,34,38,40,43,44,49,50,51,
            1,2,58,59,60,61,62,19,52,63,
            64,65,66,67,68,69,70,71,72,73,
            74,75,76,77,78,79,80,81,82,88,
            30,31,32,33,56,57,93,94,21,54,
            45,18,25,95,35,36,37,42,97,13,
            14,15,16,28,17,22,23,24,26,27,
            41,46,47,48,53,55,98
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            0,109,106,136,104,0,134,129,131,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,130,0,127,128,124,125,126,
            0,122,123,120,121,118,119,111,117,0,
            0,135,103,0,142,110,0,0,0,108,
            0,0,0,101,147,100,102,105,107,0,
            0,113,0,0,116,138,0,140,143,0,
            0,146,0,0,99,0,112,114,115,132,
            133,0,0,137,139,141,0,0,0,144,
            0,145,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            178,13,206,283,186,1,8,53,58,63,
            68,73,78,83,88,93,98,103,108,113,
            118,123,128,133,138,143,148,153,158,22,
            163,167,226,230,234,238,242,246,250,254,
            258,262,266,270,276,289,40,47,171,212,
            47,196,196,280,31,219,293,293,301,301,
            309,309,309,309,323,323,331,331,331,219
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            6,20,6,6,192,6,6,6,6,6,
            6,6,6,6,6,6,6,6,6,6,
            6,6,6,6,6,6,6,6,6,27,
            6,6,6,6,6,6,6,6,6,6,
            6,6,6,274,274,6,44,51,175,216,
            51,192,200,6,34,216,295,298,303,306,
            311,314,317,320,325,328,333,336,339,221
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            88,31,88,9,88,81,81,7,6,6,
            6,6,6,6,6,6,6,6,6,6,
            6,6,6,6,6,6,6,68,68,31,
            47,48,87,87,87,87,87,87,87,87,
            87,87,87,15,14,9,25,70,43,45,
            11,88,88,10,31,45,27,27,29,29,
            33,33,33,33,35,35,37,37,37,45
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            2,94,2,2,72,2,2,2,2,2,
            2,2,2,2,2,2,2,2,2,2,
            2,2,2,2,2,2,2,2,2,93,
            2,2,2,2,2,2,2,2,2,2,
            2,2,2,81,81,2,96,83,4,72,
            83,72,86,2,92,72,17,16,32,31,
            21,20,19,18,14,4,30,29,28,38
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static byte scopeStateSet[] = {
            2,15,2,8,2,4,4,7,6,6,
            6,6,6,6,6,6,6,6,6,6,
            6,6,6,6,6,6,6,1,1,15,
            91,91,2,2,2,2,2,2,2,2,
            2,2,2,8,8,8,11,1,99,79,
            8,2,2,8,15,79,13,13,15,15,
            19,19,19,19,21,21,24,24,24,79
        };
    };
    public final static byte scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            168,1,99,90,0,12,0,168,1,99,
            89,0,135,93,135,92,135,71,0,48,
            0,135,92,135,71,0,47,111,48,0,
            135,71,0,46,111,47,111,48,0,188,
            140,70,0,55,111,0,139,82,99,0,
            16,0,141,1,138,102,0,141,1,138,
            30,0,141,1,138,29,0,141,1,138,
            28,0,141,1,138,21,0,141,1,138,
            20,0,141,1,138,19,0,141,1,138,
            18,0,141,1,138,17,0,141,1,138,
            16,0,141,1,138,31,0,141,1,138,
            14,0,141,1,138,4,0,141,1,138,
            53,0,141,1,138,52,0,141,1,138,
            54,0,141,1,138,55,0,141,1,138,
            57,0,141,1,138,56,0,141,1,138,
            99,0,141,1,138,39,0,141,1,138,
            32,0,186,1,60,0,143,1,101,0,
            143,22,3,0,7,111,0,135,72,140,
            86,140,1,40,0,140,86,140,1,40,
            0,18,111,12,0,140,1,40,0,22,
            103,18,111,12,0,135,72,140,1,40,
            0,140,38,140,0,18,111,0,140,0,
            19,103,18,111,0,142,1,51,0,142,
            1,50,0,142,1,49,0,142,1,48,
            0,142,1,47,0,142,1,46,0,142,
            1,44,0,142,1,45,0,142,1,43,
            0,142,1,42,0,142,1,41,0,182,
            80,60,0,14,0,180,80,101,0,135,
            1,0,141,1,99,69,100,0,141,1,
            61,0,123,0,4,130,0,3,130,0,
            127,0,2,128,0,1,128,0,129,0,
            9,125,0,8,125,0,6,125,0,5,
            125,0,131,0,10,123,0,7,123,0,
            133,0,51,121,0,50,121,0,49,121,
            0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            345,405,0,344,0,405,345,3694,1491,315,
            3668,3642,3614,3586,3554,3522,3490,3458,3424,3390,
            3354,3318,3282,3203,3162,2245,3121,3080,3039,2998,
            2114,2069,432,359,2202,1518,2957,2916,1450,2875,
            2834,2793,2752,2711,1405,1360,1315,2670,1270,1225,
            1180,1135,1090,1045,1000,955,910,865,820,775,
            730,685,640,595,550,3244,505,2159,274,2629,
            2588,2547,2506,2465,2424,2383,2342,2301,2023,1977,
            1931,1885,1839,1793,1747,1701,1655,1609,1563,0,
            3808,3734,3719,3759,3753,3748,3739,0,908,863,
            2023,1977,1931,1885,1839,1793,1747,1701,1655,1609,
            1563,818,3818,773,728,683,638,3810,3797,593,
            1561,3784,3718,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,170,3,154,157,24,77,76,153,158,
            25,172,15,156,22,26,27,146,146,146,
            78,75,100,175,100,3,143,100,101,60,
            22,22,22,22,22,146,146,69,173,156,
            176,69,153,1,4,1,1,70,39,32,
            1,58,30,29,28,21,20,19,18,17,
            31,14,4,53,52,54,55,57,56,101,
            60,16,3,102,99,100,61,106,123,71,
            127,131,129,136,133,22,22,99,160,162,
            143,186,187,140,135,138,138,138,138,138,
            138,138,138,138,138,138,138,138,138,138,
            138,138,138,80,80,138,138,82,138,69,
            1,87,85,90,89,17,16,135,32,31,
            14,4,21,20,19,18,95,30,29,28,
            159,3,1,22,2,38,38,188,189,38,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,180,135,
            79,32,181,182,3,1,1,139,1,99,
            141,139,39,32,16,102,99,102,40,51,
            50,49,48,47,46,44,45,43,42,41,
            99,99,92,123,123,129,129,133,131,131,
            131,4,22,160,143,22,96,38,179,100,
            141,141,141,141,141,141,141,141,141,141,
            141,141,141,141,141,141,141,88,79,38,
            38,4,141,141,38,83,141,1,138,138,
            138,82,138,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,135,143,2,
            154,141,1,1,139,140,142,140,3,142,
            142,142,142,142,142,142,142,142,142,168,
            84,169,168,93,4,22,141,141,83,86,
            72,38,72,22,38,135,140,135,140,72,
            72,135
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "+",
            "-",
            "*",
            "/",
            ">",
            "<",
            "=",
            ">=",
            "<=",
            "<>",
            "(",
            ")",
            "{",
            "}",
            "[",
            "]",
            "->",
            "|",
            ",",
            ":",
            "::",
            ";",
            ".",
            "..",
            "@pre",
            "^",
            "^^",
            "?",
            "$empty",
            "NUMERIC_OPERATION",
            "STRING_LITERAL",
            "INTEGER_LITERAL",
            "REAL_LITERAL",
            "self",
            "inv",
            "pre",
            "post",
            "body",
            "context",
            "package",
            "endpackage",
            "def",
            "derive",
            "init",
            "if",
            "then",
            "else",
            "endif",
            "and",
            "or",
            "xor",
            "not",
            "implies",
            "let",
            "in",
            "true",
            "false",
            "Set",
            "Bag",
            "Sequence",
            "Collection",
            "OrderedSet",
            "iterate",
            "forAll",
            "exists",
            "isUnique",
            "any",
            "one",
            "collect",
            "select",
            "reject",
            "collectNested",
            "sortedBy",
            "closure",
            "oclIsKindOf",
            "oclIsTypeOf",
            "oclAsType",
            "oclIsNew",
            "oclIsUndefined",
            "oclIsInvalid",
            "oclIsInState",
            "allInstances",
            "String",
            "Integer",
            "UnlimitedNatural",
            "Real",
            "Boolean",
            "Tuple",
            "OclAny",
            "OclVoid",
            "Invalid",
            "OclMessage",
            "null",
            "OclInvalid",
            "EOF_TOKEN",
            "IDENTIFIER",
            "INTEGER_RANGE_START",
            "ERROR_TOKEN",
            "packageDeclarationCSm",
            "invOrDefCS",
            "prePostOrBodyDeclCS",
            "initOrDerValueCS",
            "variableCS",
            "keywordAsIdentifier",
            "packageDeclarationCS",
            "pathNameCS",
            "contextDeclCSm",
            "contextDeclCS",
            "simpleNameCS",
            "typeCS",
            "oclExpressionCS",
            "defExpressionCS",
            "operationCS1",
            "operationCS",
            "prePostOrBodyDeclCSm",
            "parametersCS",
            "impliesExpCS",
            "andOrXorExpCS",
            "andOrXorWithLet",
            "equalityExpCS",
            "equalityWithLet",
            "relationalExpCS",
            "relationalWithLet",
            "ifExpCSPrec",
            "additiveWithLet",
            "additiveExpCS",
            "multiplicativeExpCS",
            "multiplicativeWithLet",
            "unaryExpCS",
            "unaryWithLet",
            "dotArrowExpCS",
            "callExpCS",
            "messageExpCS",
            "keywordOperationCallExpCS",
            "argumentsCS",
            "collectionTypeIdentifierCS",
            "collectionLiteralPartsCS",
            "collectionLiteralPartCS",
            "variableListCS2",
            "featureCallExpCS",
            "loopExpCS",
            "iterContents",
            "variableCS2",
            "variableListCS",
            "letExpSubCS",
            "oclMessageArgumentsCS",
            "oclMessageArgCS"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 97,
           SCOPE_UBOUND      = 69,
           SCOPE_SIZE        = 70,
           MAX_NAME_LENGTH   = 26;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 312,
           NT_OFFSET         = 97,
           LA_STATE_OFFSET   = 4236,
           MAX_LA            = 1,
           NUM_RULES         = 273,
           NUM_NONTERMINALS  = 93,
           NUM_SYMBOLS       = 190,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 3718,
           IDENTIFIER_SYMBOL = 3,
           EOFT_SYMBOL       = 74,
           EOLT_SYMBOL       = 74,
           ACCEPT_ACTION     = 3962,
           ERROR_ACTION      = 3963;

    public final static boolean BACKTRACK = false;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
