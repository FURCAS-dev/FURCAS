/**
* <copyright>
*
* Copyright (c) 2005, 2007 IBM Corporation and others.
* All rights reserved.   This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   IBM - Initial API and implementation
*
* </copyright>
*
* $Id: OCLLPGParserprs.java,v 1.3 2007/02/02 20:06:28 cdamus Exp $
*/

package org.eclipse.ocl.internal.parser;

public class OCLLPGParserprs implements lpg.lpgjavaruntime.ParseTable, OCLLPGParsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,1,
            1,1,1,1,1,1,1,1,0,0,
            0,1,1,1,1,0,0,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,0,0,0,0,0,1,1,1,
            1,0,1,1,0,0,1,0,1,1,
            1,1,1,0,0,0,0,0,0,1,
            1,1,0,0,0,0,0,0,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            1,1,1,1,1,1,0,1,2,4,
            1,0,1,1,2,1,1,1,7,4,
            4,0,1,3,0,1,5,5,5,3,
            3,1,2,4,4,4,1,6,8,0,
            1,1,3,0,1,1,1,1,3,1,
            3,3,3,1,3,3,3,3,3,3,
            1,1,1,3,3,1,3,3,1,2,
            2,1,2,2,4,6,1,1,1,3,
            2,5,1,1,1,1,1,1,1,1,
            1,1,1,1,1,3,0,1,1,1,
            1,1,1,1,3,4,1,1,1,1,
            1,0,1,1,3,1,1,3,2,3,
            1,1,1,1,1,4,1,1,1,1,
            1,1,1,1,2,2,2,1,1,4,
            4,4,4,4,4,4,4,4,4,4,
            1,3,5,6,8,1,3,5,3,0,
            1,1,1,1,1,4,4,0,1,1,
            3,1,1,3,3,1,1,5,5,5,
            5,5,5,5,5,5,5,5,5,5,
            5,5,5,5,5,5,5,5,5,5,
            2,5,0,1,0,1,1,3,5,0,
            1,2,3,7,5,5,0,1,1,3,
            1,1,3,-97,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-77,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-125,0,0,0,
            0,0,-124,0,0,0,-2,0,-3,-23,
            -38,0,0,-42,0,0,0,0,-265,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-79,0,-4,0,-5,0,-93,
            0,-13,0,0,0,-98,0,0,-11,-25,
            -24,0,0,0,0,0,-14,-41,-214,0,
            0,-266,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-9,0,0,0,0,0,0,0,
            0,0,-10,0,0,0,0,-16,0,0,
            -126,0,0,-127,0,0,-6,0,0,0,
            0,0,0,0,-95,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-48,0,-164,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-147,0,-165,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-148,0,-166,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-151,0,-167,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-217,0,-168,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-253,0,-169,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-295,0,-170,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-297,0,-171,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-17,0,-172,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -18,0,-19,0,-173,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-20,0,-26,0,-174,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -27,0,-28,0,-175,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-29,0,-30,0,-176,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -36,0,-37,0,-177,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-39,0,-43,0,-178,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -50,0,-51,0,-179,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-52,0,-53,0,-180,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -54,0,-80,0,-181,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-81,0,-82,0,-182,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -83,0,-84,0,-184,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-87,0,-88,0,-185,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -89,0,-90,0,-186,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-91,0,-92,0,-224,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -128,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-94,-99,0,0,-225,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-100,0,
            -101,0,-254,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-163,-102,0,0,0,-255,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-103,
            -104,0,-105,0,-256,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-106,0,-107,0,
            -257,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-108,-109,0,-110,0,-258,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-111,-112,0,
            -113,0,-259,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-114,-115,0,-116,0,-260,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-117,
            -118,0,-120,0,-261,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-121,-122,0,-123,0,
            -262,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-142,-143,0,-146,0,-263,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-149,-150,0,
            -153,0,-264,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-154,-155,0,-156,0,-119,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-157,
            0,-251,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-40,0,-300,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-158,-161,-162,-183,-191,
            -192,-193,0,0,0,0,-194,-195,-196,0,
            -31,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-32,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-33,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-34,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-35,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-45,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-49,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-76,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-86,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-152,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -159,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-211,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-216,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-219,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-221,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-222,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-223,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-270,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-291,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-296,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -298,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-304,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-305,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-138,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-139,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-140,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-141,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-132,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-133,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-134,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -135,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-136,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-137,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-78,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -197,-198,-199,-200,-201,-202,-203,-12,-204,0,
            -129,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-160,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-205,-206,-207,-208,
            -85,-209,-210,-213,0,-130,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-131,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-1,
            -215,0,0,0,0,-7,0,0,-218,-226,
            -227,-228,-229,-230,-231,-292,0,0,0,0,
            -15,0,-47,0,0,-232,-8,0,0,-233,
            -46,0,0,0,0,-234,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-21,
            0,0,0,0,0,0,0,0,0,0,
            -145,0,-44,0,0,-212,0,-96,0,0,
            -299,0,-144,0,0,-22,0,0,-220,-55,
            -235,-56,-57,-236,-237,-58,-238,-59,0,-60,
            -61,0,0,-62,-239,0,0,0,0,-63,
            0,0,0,0,-64,0,0,0,0,-65,
            0,0,0,0,0,0,0,0,0,-66,
            0,0,-67,-68,0,0,0,0,-69,-70,
            0,-71,-72,-73,-74,0,-75,0,-187,-188,
            0,-189,0,-190,-247,-294,-240,-241,-242,-243,
            0,-244,-245,0,0,-246,-248,-249,-250,0,
            0,-252,0,0,0,0,-267,0,-268,0,
            0,-269,0,-271,0,0,0,-272,-273,-274,
            -275,-276,-277,-278,-279,-280,-281,-282,-283,-284,
            -285,-286,-287,-288,-289,-290,-293,-301,-302,-303,
            -306,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            63,63,63,63,63,63,63,63,65,65,
            48,64,66,66,49,49,40,40,40,43,
            47,47,50,50,41,51,51,46,46,67,
            67,42,69,69,44,44,44,68,52,68,
            53,53,55,55,39,39,28,28,29,29,
            27,27,27,27,26,26,26,26,26,26,
            26,23,23,24,24,24,22,22,22,6,
            6,6,7,7,7,7,7,8,8,8,
            8,9,9,2,2,2,1,1,1,1,
            1,1,1,1,1,3,3,72,72,10,
            10,10,10,10,10,11,12,4,4,4,
            4,4,73,73,74,74,56,56,57,57,
            57,14,14,14,14,14,13,17,18,19,
            20,21,21,15,16,70,70,70,76,76,
            77,77,77,77,77,77,77,77,77,77,
            77,35,35,35,78,78,33,33,33,59,
            54,54,36,36,36,36,38,37,79,79,
            80,80,75,75,75,75,58,58,5,5,
            5,5,5,5,5,5,5,5,5,5,
            5,5,5,5,5,5,5,5,5,5,
            5,60,60,31,31,34,34,32,32,30,
            81,81,82,82,25,71,71,61,61,62,
            62,45,45,45,1,83,3087,1051,1016,79,
            66,334,72,77,78,99,100,101,102,103,
            104,121,122,123,124,125,1086,54,1053,62,
            1088,1123,1816,1121,47,486,83,3087,1051,1016,
            79,71,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,645,83,3094,
            114,116,177,687,83,3094,1607,258,177,762,
            746,830,83,96,830,83,1156,1750,1817,125,
            83,3087,1051,1016,79,66,334,72,77,78,
            99,100,101,102,103,104,121,122,123,124,
            125,1086,54,1053,62,1088,1123,221,1121,47,
            14,16,17,18,688,135,371,176,118,1783,
            926,137,874,176,219,350,830,83,1818,834,
            729,366,290,136,138,139,946,538,614,44,
            3143,3145,125,83,3087,1051,1016,79,66,334,
            72,77,78,99,100,101,102,103,104,121,
            122,123,124,125,1086,54,1053,62,1088,1123,
            221,1121,47,425,37,32,948,15,16,17,
            18,403,33,719,73,74,3122,219,864,338,
            351,830,83,2837,830,83,2839,810,83,45,
            358,1678,1679,3146,3145,314,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,54,1053,
            62,1088,1123,207,1121,47,771,1714,906,1681,
            314,83,3087,1051,1016,79,66,334,72,77,
            78,99,100,101,102,103,104,121,122,123,
            124,125,1086,54,1053,62,1088,1123,207,1121,
            47,340,1714,906,2952,314,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,54,1053,
            62,1088,1123,207,1121,47,43,1714,906,2953,
            314,83,3087,1051,1016,79,66,334,72,77,
            78,99,100,101,102,103,104,121,122,123,
            124,125,1086,54,1053,62,1088,1123,207,1121,
            47,171,1714,906,2954,314,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,54,1053,
            62,1088,1123,207,1121,47,212,1714,906,2955,
            314,83,3087,1051,1016,79,66,334,72,77,
            78,99,100,101,102,103,104,121,122,123,
            124,125,1086,54,1053,62,1088,1123,207,1121,
            47,213,1714,906,2966,314,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,54,1053,
            62,1088,1123,207,1121,47,3129,1714,906,2970,
            314,83,3087,1051,1016,79,66,334,72,77,
            78,99,100,101,102,103,104,121,122,123,
            124,125,1086,54,1053,62,1088,1123,207,1121,
            47,3148,1714,906,2976,314,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,54,1053,
            62,1088,1123,207,1121,47,3150,1714,875,3031,
            314,83,3087,1051,1016,79,66,334,72,77,
            78,99,100,101,102,103,104,121,122,123,
            124,125,1086,54,1053,62,1088,1123,207,1121,
            47,878,1714,879,3034,314,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,54,1053,
            62,1088,1123,207,1121,47,880,1714,254,3035,
            314,83,3087,1051,1016,79,66,334,72,77,
            78,99,100,101,102,103,104,121,122,123,
            124,125,1086,54,1053,62,1088,1123,207,1121,
            47,884,1714,797,3037,314,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,54,1053,
            62,1088,1123,207,1121,47,893,1714,902,3045,
            314,83,3087,1051,1016,79,66,334,72,77,
            78,99,100,101,102,103,104,121,122,123,
            124,125,1086,54,1053,62,1088,1123,207,1121,
            47,886,1714,891,3097,314,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,54,1053,
            62,1088,1123,207,1121,47,716,1714,804,3098,
            314,83,3087,1051,1016,79,66,334,72,77,
            78,99,100,101,102,103,104,121,122,123,
            124,125,1086,54,1053,62,1088,1123,207,1121,
            47,913,1714,582,3099,314,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,54,1053,
            62,1088,1123,207,1121,47,839,1714,876,3100,
            314,83,3087,1051,1016,79,66,334,72,77,
            78,99,100,101,102,103,104,121,122,123,
            124,125,1086,54,1053,62,1088,1123,207,1121,
            47,881,1714,785,3102,314,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,54,1053,
            62,1088,1123,207,1121,47,168,1714,53,3103,
            314,83,3087,1051,1016,79,66,334,72,77,
            78,99,100,101,102,103,104,121,122,123,
            124,125,1086,54,1053,62,1088,1123,207,1121,
            47,911,1714,744,3106,314,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,54,1053,
            62,1088,1123,207,1121,47,749,1714,917,3107,
            314,83,3087,1051,1016,79,66,334,72,77,
            78,99,100,101,102,103,104,121,122,123,
            124,125,1086,54,1053,62,1088,1123,207,1121,
            47,916,1714,920,3108,314,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,54,1053,
            62,1088,1123,207,1121,47,921,1714,924,3109,
            63,83,3087,1051,1016,79,66,334,72,77,
            78,99,100,101,102,103,104,121,122,123,
            124,125,1086,54,1053,62,1088,1123,1816,1121,
            47,593,83,3087,1051,1016,79,66,334,72,
            77,78,99,100,101,102,103,104,121,122,
            123,124,125,2887,927,930,115,116,314,83,
            3087,1051,1016,79,66,334,72,77,78,99,
            100,101,102,103,104,121,122,123,124,125,
            1086,54,1053,62,1088,1123,207,1121,47,934,
            1714,936,3124,431,83,3087,1051,1016,79,66,
            334,72,77,78,99,100,101,102,103,104,
            121,122,123,124,125,1086,54,1053,62,1088,
            1123,151,1121,47,992,938,3131,2951,3130,431,
            83,3087,1051,1016,79,66,334,72,77,78,
            99,100,101,102,103,104,121,122,123,124,
            125,1086,54,1053,62,1088,1123,151,1121,47,
            940,942,3131,944,3133,431,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,54,1053,
            62,1088,1123,151,1121,47,2950,946,3131,948,
            3134,431,83,3087,1051,1016,79,66,334,72,
            77,78,99,100,101,102,103,104,121,122,
            123,124,125,1086,54,1053,62,1088,1123,151,
            1121,47,950,952,3131,954,3135,431,83,3087,
            1051,1016,79,66,334,72,77,78,99,100,
            101,102,103,104,121,122,123,124,125,1086,
            54,1053,62,1088,1123,151,1121,47,956,960,
            3131,962,3136,431,83,3087,1051,1016,79,66,
            334,72,77,78,99,100,101,102,103,104,
            121,122,123,124,125,1086,54,1053,62,1088,
            1123,151,1121,47,964,970,3131,972,3137,431,
            83,3087,1051,1016,79,66,334,72,77,78,
            99,100,101,102,103,104,121,122,123,124,
            125,1086,54,1053,62,1088,1123,151,1121,47,
            974,976,3131,978,3138,431,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,54,1053,
            62,1088,1123,151,1121,47,966,980,3131,982,
            3139,431,83,3087,1051,1016,79,66,334,72,
            77,78,99,100,101,102,103,104,121,122,
            123,124,125,1086,54,1053,62,1088,1123,151,
            1121,47,984,814,3131,985,3140,431,83,3087,
            1051,1016,79,66,334,72,77,78,99,100,
            101,102,103,104,121,122,123,124,125,1086,
            54,1053,62,1088,1123,151,1121,47,22,958,
            3131,987,3141,431,83,3087,1051,1016,79,66,
            334,72,77,78,99,100,101,102,103,104,
            121,122,123,124,125,1086,54,1053,62,1088,
            1123,151,1121,47,986,677,3131,861,3142,259,
            83,3087,1051,1016,79,66,334,72,77,78,
            99,100,101,102,103,104,121,122,123,124,
            125,1086,54,1053,62,1088,1123,207,1121,47,
            990,1819,259,83,3087,1051,1016,79,66,334,
            72,77,78,99,100,101,102,103,104,121,
            122,123,124,125,1086,54,1053,62,1088,1123,
            207,1121,47,868,3128,192,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,54,1053,
            62,1088,1123,221,1121,47,412,991,422,819,
            996,998,1002,15,16,17,18,1004,1008,1010,
            220,259,83,3087,1051,1016,79,66,334,72,
            77,78,99,100,101,102,103,104,121,122,
            123,124,125,1086,54,1053,62,1088,1123,21,
            1121,47,259,83,3087,1051,1016,79,66,334,
            72,77,78,99,100,101,102,103,104,121,
            122,123,124,125,1086,54,1053,62,1088,1123,
            20,1121,47,259,83,3087,1051,1016,79,66,
            334,72,77,78,99,100,101,102,103,104,
            121,122,123,124,125,1086,54,1053,62,1088,
            1123,36,1121,47,259,83,3087,1051,1016,79,
            66,334,72,77,78,99,100,101,102,103,
            104,121,122,123,124,125,1086,54,1053,62,
            1088,1123,35,1121,47,259,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,54,1053,
            62,1088,1123,34,1121,47,259,83,3087,1051,
            1016,79,66,334,72,77,78,99,100,101,
            102,103,104,121,122,123,124,125,1086,54,
            1053,62,1088,1123,158,1121,47,259,83,3087,
            1051,1016,79,66,334,72,77,78,99,100,
            101,102,103,104,121,122,123,124,125,1086,
            54,1053,62,1088,1123,1284,1121,47,259,83,
            3087,1051,1016,79,66,334,72,77,78,99,
            100,101,102,103,104,121,122,123,124,125,
            1086,54,1053,62,1088,1123,1606,1121,47,259,
            83,3087,1051,1016,79,66,334,72,77,78,
            99,100,101,102,103,104,121,122,123,124,
            125,1086,54,1053,62,1088,1123,27,1121,47,
            259,83,3087,1051,1016,79,66,334,72,77,
            78,99,100,101,102,103,104,121,122,123,
            124,125,1086,54,1053,62,1088,1123,2949,1121,
            47,259,83,3087,1051,1016,79,66,334,72,
            77,78,99,100,101,102,103,104,121,122,
            123,124,125,1086,54,1053,62,1088,1123,119,
            1121,47,259,83,3087,1051,1016,79,66,334,
            72,77,78,99,100,101,102,103,104,121,
            122,123,124,125,1086,54,1053,62,1088,1123,
            30,1121,47,259,83,3087,1051,1016,79,66,
            334,72,77,78,99,100,101,102,103,104,
            121,122,123,124,125,1086,54,1053,62,1088,
            1123,209,1121,47,259,83,3087,1051,1016,79,
            66,334,72,77,78,99,100,101,102,103,
            104,121,122,123,124,125,1086,54,1053,62,
            1088,1123,208,1121,47,259,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,54,1053,
            62,1088,1123,159,1121,47,259,83,3087,1051,
            1016,79,66,334,72,77,78,99,100,101,
            102,103,104,121,122,123,124,125,1086,54,
            1053,62,1088,1123,120,1121,47,259,83,3087,
            1051,1016,79,66,334,72,77,78,99,100,
            101,102,103,104,121,122,123,124,125,1086,
            54,1053,62,1088,1123,118,1121,47,259,83,
            3087,1051,1016,79,66,334,72,77,78,99,
            100,101,102,103,104,121,122,123,124,125,
            1086,54,1053,62,1088,1123,3147,1121,47,259,
            83,3087,1051,1016,79,66,334,72,77,78,
            99,100,101,102,103,104,121,122,123,124,
            125,1086,54,1053,62,1088,1123,29,1121,47,
            259,83,3087,1051,1016,79,66,334,72,77,
            78,99,100,101,102,103,104,121,122,123,
            124,125,1086,54,1053,62,1088,1123,3149,1121,
            47,259,83,3087,1051,1016,79,66,334,72,
            77,78,99,100,101,102,103,104,121,122,
            123,124,125,1086,54,1053,62,1088,1123,152,
            1121,47,259,83,3087,1051,1016,79,66,334,
            72,77,78,99,100,101,102,103,104,121,
            122,123,124,125,1086,54,1053,62,1088,1123,
            3151,1121,47,259,83,3087,1051,1016,79,66,
            334,72,77,78,99,100,101,102,103,104,
            121,122,123,124,125,1086,54,1053,62,1088,
            1123,153,1121,47,539,83,3087,1051,1016,79,
            66,334,72,77,78,99,100,101,102,103,
            104,121,122,123,124,125,1086,54,1053,62,
            1088,2889,539,83,3087,1051,1016,79,66,334,
            72,77,78,99,100,101,102,103,104,121,
            122,123,124,125,1086,54,1053,62,2890,539,
            83,3087,1051,1016,79,66,334,72,77,78,
            99,100,101,102,103,104,121,122,123,124,
            125,1086,54,1053,62,2892,539,83,3087,1051,
            1016,79,66,334,72,77,78,99,100,101,
            102,103,104,121,122,123,124,125,1086,54,
            1053,62,2893,539,83,3087,1051,1016,79,66,
            334,72,77,78,99,100,101,102,103,104,
            121,122,123,124,125,1086,60,1053,62,539,
            83,3087,1051,1016,79,66,334,72,77,78,
            99,100,101,102,103,104,121,122,123,124,
            125,1086,59,1053,62,539,83,3087,1051,1016,
            79,66,334,72,77,78,99,100,101,102,
            103,104,121,122,123,124,125,1086,58,1053,
            62,539,83,3087,1051,1016,79,66,334,72,
            77,78,99,100,101,102,103,104,121,122,
            123,124,125,1086,57,1053,62,539,83,3087,
            1051,1016,79,66,334,72,77,78,99,100,
            101,102,103,104,121,122,123,124,125,1086,
            56,1053,62,539,83,3087,1051,1016,79,66,
            334,72,77,78,99,100,101,102,103,104,
            121,122,123,124,125,1086,55,1053,62,486,
            83,3087,1051,1016,79,70,334,72,77,78,
            99,100,101,102,103,104,121,122,123,124,
            125,1012,1014,1016,1018,1020,1022,1024,678,1026,
            1609,593,83,3087,1051,1016,79,66,334,72,
            77,78,99,100,101,102,103,104,121,122,
            123,124,125,2888,369,83,3087,1051,1016,79,
            70,334,72,77,78,99,100,101,102,103,
            104,121,122,123,124,125,9,831,870,777,
            115,915,177,244,1028,1609,593,83,3087,1051,
            1016,79,68,334,72,77,78,99,100,101,
            102,103,104,121,122,123,124,125,593,83,
            3087,1051,1016,79,67,334,72,77,78,99,
            100,101,102,103,104,121,122,123,124,125,
            796,776,162,1642,843,876,810,83,45,3,
            1031,993,1035,1036,1039,1040,776,162,28,843,
            876,742,162,905,843,876,1044,810,83,45,
            1047,742,162,6,843,876,1048,161,163,164,
            14,16,17,18,4,773,393,336,8,357,
            338,403,161,163,164,38,170,841,163,164,
            810,83,45,287,1,2838,806,1193,163,164,
            39,742,162,895,843,876,742,162,929,843,
            876,742,162,895,843,876,810,83,45,929,
            280,1051,280,280,1052,1055,280,1058,280,911,
            280,280,1226,1228,280,1059,42,359,163,164,
            280,173,3117,163,164,256,42,223,163,164,
            280,1285,175,1319,1321,913,1158,1355,1191,1390,
            280,1391,1393,280,280,1427,2894,172,1191,280,
            280,1429,280,280,280,280,1462,180,174,280,
            280,1463,280,1715,816,280,280,1062,1063,1066,
            1067,1465,1070,1071,1498,1499,1074,1075,1078,1079,
            1501,1534,1082,1535,1537,1570,1571,1084,1573,1085,
            1607,1462,646,1609,1087,3112,82,202,829,836,
            1090,708,817,1091,1094,1095,1098,1099,1102,1103,
            1107,1108,1111,1112,1115,1000,1116,1086,1117,1119,
            1120,1122,3154,3154
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,0,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,0,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,0,44,45,46,47,48,49,
            50,51,0,53,54,0,4,5,6,7,
            8,9,0,1,64,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,81,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,41,42,84,44,45,46,47,
            48,49,50,51,0,53,54,0,4,5,
            6,7,8,9,0,1,64,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,0,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,38,39,40,41,42,0,44,45,
            46,47,48,49,50,51,0,53,54,0,
            4,5,6,7,8,9,19,20,71,72,
            0,0,1,69,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,0,22,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,38,
            39,40,41,42,55,44,45,46,47,48,
            49,50,51,0,53,54,67,4,5,6,
            7,8,9,0,1,0,1,0,0,1,
            69,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,0,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,0,44,45,46,47,48,49,50,51,
            55,53,54,0,1,58,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,55,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,0,44,45,46,
            47,48,49,50,51,0,53,54,0,1,
            0,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,0,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,0,44,45,46,47,48,49,50,51,
            0,0,1,55,0,60,61,62,58,0,
            0,1,64,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,0,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,52,44,45,46,47,48,49,
            50,51,58,53,54,0,1,76,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,0,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,41,42,0,44,
            45,46,47,48,49,50,51,0,0,1,
            55,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,0,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,0,44,45,46,47,48,49,50,51,
            0,53,0,1,57,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,0,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,41,42,0,44,45,46,47,
            48,49,50,51,0,0,65,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,0,22,23,24,25,
            26,27,28,60,61,62,0,0,34,35,
            36,37,38,39,40,41,0,0,0,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,0,22,23,
            24,25,26,27,28,0,71,72,0,43,
            34,35,36,37,38,39,40,41,0,85,
            86,87,88,89,90,91,92,93,94,95,
            96,0,66,0,3,0,0,70,0,1,
            43,10,11,12,13,14,15,16,17,18,
            73,0,75,56,77,78,23,24,25,21,
            29,30,31,32,33,0,0,59,3,0,
            52,63,21,42,0,10,11,12,13,14,
            15,16,17,18,79,0,0,52,3,23,
            24,25,57,0,29,30,31,32,33,0,
            26,27,3,0,1,0,0,42,0,10,
            11,12,13,14,15,16,17,18,0,0,
            0,22,3,0,21,0,3,21,0,10,
            11,12,13,14,15,16,17,18,52,19,
            20,22,57,58,59,60,61,62,63,43,
            0,43,59,0,4,70,63,0,52,0,
            55,43,56,0,0,0,3,0,0,0,
            0,21,67,0,21,0,68,4,19,20,
            0,56,0,1,0,21,68,3,21,21,
            21,0,1,65,0,0,21,3,3,74,
            0,21,0,1,0,0,0,3,2,0,
            0,2,2,0,57,0,0,52,0,0,
            1,3,52,0,1,0,1,0,1,0,
            1,0,1,0,1,0,1,0,1,0,
            1,0,1,0,1,0,1,0,43,0,
            1,0,1,0,1,0,43,2,43,0,
            1,0,1,0,1,0,1,0,1,0,
            1,0,1,0,0,0,0,4,2,0,
            0,0,0,83,3,0,1,0,1,0,
            43,0,1,0,1,21,80,0,1,0,
            1,0,1,0,1,0,1,0,1,0,
            1,0,1,0,1,0,1,0,43,2,
            0,0,2,43,0,0,2,2,0,0,
            2,2,43,0,52,2,0,0,2,2,
            0,0,2,2,0,66,2,0,0,2,
            2,0,0,2,2,0,0,2,2,0,
            0,2,2,0,0,2,2,0,0,2,
            2,0,1,0,0,0,0,4,2,0,
            0,2,2,0,0,2,2,0,0,2,
            2,0,0,2,2,21,0,0,2,2,
            0,0,2,2,0,0,0,2,0,0,
            2,0,0,2,0,0,0,0,0,0,
            0,0,0,0,0,21,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,82,0,0,
            0,0,56,0,0,56,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            112,2048,3154,1018,3073,3044,3041,3040,3038,3070,
            3242,3240,3241,3243,3244,3245,3246,3247,3248,3055,
            3050,3154,3238,3036,3033,3032,3060,2864,255,3261,
            3262,3263,3264,3265,3079,3074,3080,3083,3085,3084,
            3030,3082,983,22,981,3284,3281,3283,3285,3286,
            3287,3288,50,2017,458,3154,2783,2731,2705,2679,
            2653,2757,3154,2048,2141,1018,3073,3044,3041,3040,
            3038,3070,3242,3240,3241,3243,3244,3245,3246,3247,
            3248,3055,3050,2358,3238,3036,3033,3032,3060,2864,
            255,3261,3262,3263,3264,3265,3079,3074,3080,3083,
            3085,3084,3030,3082,983,2203,981,3284,3281,3283,
            3285,3286,3287,3288,53,2017,458,3154,2783,2731,
            2705,2679,2653,2757,217,2048,2141,1018,3073,3044,
            3041,3040,3038,3070,3242,3240,3241,3243,3244,3245,
            3246,3247,3248,3055,3050,3154,3238,3036,3033,3032,
            3060,2809,255,3261,3262,3263,3264,3265,3079,3074,
            3080,3083,3085,3084,3030,3082,983,63,981,3284,
            3281,3283,3285,3286,3287,3288,52,2017,458,203,
            2783,2731,2705,2679,2653,2757,2918,2896,408,738,
            3154,3154,2048,3144,1018,3073,3044,3041,3040,3038,
            3070,3242,3240,3241,3243,3244,3245,3246,3247,3248,
            3055,3050,3154,3238,3036,3033,3032,3060,2809,255,
            3261,3262,3263,3264,3265,3079,3074,3080,3083,3085,
            3084,3030,3082,983,3358,981,3284,3281,3283,3285,
            3286,3287,3288,51,2017,458,1719,2783,2731,2705,
            2679,2653,2757,95,3013,128,203,3154,3154,2048,
            3144,1018,3073,3044,3041,3040,3038,3070,3242,3240,
            3241,3243,3244,3245,3246,3247,3248,3055,3050,203,
            3238,3036,3033,3032,3060,2809,255,3261,3262,3263,
            3264,3265,3079,3074,3080,3083,3085,3084,3030,3082,
            983,3154,981,3284,3281,3283,3285,3286,3287,3288,
            3358,2017,458,205,2048,3153,1018,3073,3044,3041,
            3040,3038,3070,3242,3240,3241,3243,3244,3245,3246,
            3247,3248,3055,3050,3358,3238,3036,3033,3032,3060,
            2809,255,3261,3262,3263,3264,3265,3079,3074,3080,
            3083,3085,3084,3030,3082,983,3154,981,3284,3281,
            3283,3285,3286,3287,3288,3154,2017,458,3154,2048,
            23,1018,3073,3044,3041,3040,3038,3070,3242,3240,
            3241,3243,3244,3245,3246,3247,3248,3055,3050,3154,
            3238,3036,3033,3032,3060,2809,255,3261,3262,3263,
            3264,3265,3079,3074,3080,3083,3085,3084,3030,3082,
            983,117,981,3284,3281,3283,3285,3286,3287,3288,
            3154,105,1288,3358,26,2967,2946,417,5,3154,
            3154,2048,2327,3132,3073,3044,3041,3040,3038,3070,
            3242,3240,3241,3243,3244,3245,3246,3247,3248,3055,
            3050,3154,3238,3036,3033,3032,3060,2809,255,3261,
            3262,3263,3264,3265,3079,3074,3080,3083,3085,3084,
            3030,3082,983,96,981,3284,3281,3283,3285,3286,
            3287,3288,3,2017,458,3154,2048,2296,1018,3073,
            3044,3041,3040,3038,3070,3242,3240,3241,3243,3244,
            3245,3246,3247,3248,3055,3050,3154,3238,3036,3033,
            3032,3060,2809,255,3261,3262,3263,3264,3265,3079,
            3074,3080,3083,3085,3084,3030,3082,983,3154,981,
            3284,3281,3283,3285,3286,3287,3288,11,3154,2048,
            3358,1018,3073,3044,3041,3040,3038,3070,3242,3240,
            3241,3243,3244,3245,3246,3247,3248,3055,3050,3154,
            3238,3036,3033,3032,3060,2809,255,3261,3262,3263,
            3264,3265,3079,3074,3080,3083,3085,3084,3030,3082,
            983,3154,981,3284,3281,3283,3285,3286,3287,3288,
            3154,2017,3154,2048,342,1018,3073,3044,3041,3040,
            3038,3070,3242,3240,3241,3243,3244,3245,3246,3247,
            3248,3055,3050,31,3238,3036,3033,3032,3060,2809,
            255,3261,3262,3263,3264,3265,3079,3074,3080,3083,
            3085,3084,3030,3082,983,3154,981,3284,3281,3283,
            3285,3286,3287,3288,3154,19,3018,3239,3073,3044,
            3041,3040,3038,3070,3242,3240,3241,3243,3244,3245,
            3246,3247,3248,3090,3050,3154,3238,3036,3033,3032,
            3060,3092,3089,2967,2946,417,3154,2,3079,3074,
            3080,3083,3085,3084,3030,3082,3154,69,3154,3239,
            3073,3044,3041,3040,3038,3070,3242,3240,3241,3243,
            3244,3245,3246,3247,3248,3090,3050,3154,3238,3036,
            3033,3032,3060,3092,3089,3154,23,23,3154,3029,
            3079,3074,3080,3083,3085,3084,3030,3082,25,1820,
            2836,2835,2834,2832,2833,2831,1829,1828,1827,1822,
            1821,3154,3280,48,3249,12,3154,349,96,3023,
            703,3242,3240,3241,3243,3244,3245,3246,3247,3248,
            277,156,283,2451,414,411,2626,2599,2572,3011,
            3261,3262,3263,3264,3265,160,49,3026,3249,3154,
            294,3000,2961,878,61,3242,3240,3241,3243,3244,
            3245,3246,3247,3248,3164,22,165,291,289,2626,
            2599,2572,342,24,3261,3262,3263,3264,3265,44,
            2841,1261,3239,3154,3013,203,85,878,3154,3242,
            3240,3241,3243,3244,3245,3246,3247,3248,3154,3154,
            65,3238,3239,3154,3016,3154,3249,2961,3154,3242,
            3240,3241,3243,3244,3245,3246,3247,3248,291,2918,
            2896,3238,342,7,25,2967,2946,417,25,156,
            156,2234,26,3154,2265,349,26,13,95,64,
            3358,2234,156,3154,3154,85,808,3154,3154,3154,
            3154,2961,1752,157,1831,3154,3095,1986,2918,2896,
            3154,2420,3154,2971,40,1862,3096,289,1893,1924,
            1955,3154,2963,224,168,3154,2891,289,289,668,
            46,2079,3154,425,3154,41,3154,1643,1645,3154,
            3154,3320,3321,169,342,210,3154,95,3154,3154,
            1354,1717,346,3154,460,3154,495,3154,530,3154,
            565,3154,600,3154,635,3154,670,3154,705,3154,
            740,3154,775,3154,810,3154,845,211,493,3154,
            880,3154,915,3154,950,3154,528,3234,563,3154,
            985,3154,1020,3154,1055,3154,1090,81,1125,3154,
            1160,3154,1195,3154,3154,206,3154,2172,3229,3154,
            113,97,98,2544,3249,3154,633,3154,1323,218,
            598,3154,1359,3154,1395,2941,2110,3154,1431,3154,
            1467,3154,1503,3154,1539,3154,1575,3154,1611,3154,
            1647,3154,1683,3154,299,3154,362,3154,2234,3119,
            3154,3154,3354,1230,3154,3154,3353,3352,3154,3154,
            3351,3349,1785,3154,291,3348,3154,3154,3347,3346,
            3154,3154,3345,3344,3154,3260,3342,3154,3154,3341,
            3340,3154,3154,3339,3338,3154,3154,3337,3336,3154,
            3154,3335,3334,3154,3154,3333,3332,3154,3154,3350,
            3343,201,1125,3154,3154,3154,3154,2389,3230,3154,
            3154,3304,3303,3154,3154,3302,3301,3154,3154,3300,
            3299,3154,3154,3298,3297,2956,3154,3154,3296,3295,
            3154,3154,3294,3370,222,3154,3154,3369,3154,3154,
            3308,3154,3154,3309,3154,3154,3154,3154,3154,3154,
            3154,3154,3154,3154,3154,3021,3154,3154,3154,3154,
            3154,3154,3154,3154,3154,3154,3154,3154,3154,3154,
            3154,3154,3154,3154,3154,3154,3154,3154,3154,3154,
            3154,3154,3154,3154,3154,3154,3154,3368,3154,3154,
            3154,3154,2482,3154,3154,2513
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            419,252,100,244,245,168,168,168,427,428,
            163,365,163,251,37,179,179,179,179,179,
            168,168,108,296,302,301,353,233,417,417,
            114,114,114,114,114,179,179,153,461,460,
            293,153,248,230,114,37,230,163,114,417,
            254,254,256,304,416,416,416,416,416,416,
            416,416,416,258,416,416,416,416,416,416,
            416,416,416,416,257,114,369,369,260,266,
            264,268,277,274,163,114,300,231,487,231,
            231,487,165,306,181,163,1,153,417,417,
            417,417,417,417,417,417,417,417,417,417,
            417,417,417,417,417,417,417,417,114,321,
            231,417,417,131,54,153,153,116,116,116,
            116,115,115,115,115,115,115,115,115,115,
            115,98,308,230,37,179,163,163,166,165,
            163,114,231,487,313,311,314,316,114,368,
            313,320,230,181,181,181,181,181,181,181,
            181,181,181,181,181,181,181,181,181,181,
            181,181,362,181,181,181,416,416,416,257,
            417,417,417,417,417,417,417,417,417,417,
            417,417,417,417,264,264,274,268,268,268,
            114,37,231,245,431,114,163,452,114,163,
            114,114,114,2,181,231,454,231,231,231,
            231,231,231,231,231,231,231,231,231,231,
            231,231,231,231,231,231,259,231,231,231,
            114,321,163,114,114,114,114,114,114,114,
            114,114,114,114,112,112,98,179,457,114,
            231,362,105,231,359,463,231,231,231,231,
            231,231,231,231,231,231,231,486,487,231,
            114,432,490,259,163,114,163,114,37,113,
            360,231,360,114,114,231
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            66,27,64,28,1,38,39,37,41,36,
            34,35,4,9,26,19,20,5,6,7,
            8,23,24,25,40,48,49,45,47,46,
            50,51,22,44,53,54,11,12,10,13,
            14,15,16,17,18,42,29,30,31,32,
            33,3,0,86,87,88,90,89,91,92,
            93,94,95,96,85,11,12,10,13,14,
            15,16,17,18,22,3,38,39,37,41,
            36,34,35,9,26,27,19,20,5,6,
            7,8,28,23,24,25,40,4,0,2,
            43,84,58,21,56,74,0,79,57,52,
            0,2,69,54,53,1,29,30,31,32,
            33,42,48,49,45,47,46,50,51,44,
            38,39,37,41,36,34,35,4,9,26,
            27,19,20,5,6,7,8,28,23,24,
            25,40,22,11,12,10,13,14,15,16,
            17,18,3,0,43,84,0,22,3,11,
            12,10,13,14,15,16,17,18,21,0,
            27,28,1,38,39,37,41,36,34,35,
            4,9,26,19,20,5,6,7,8,23,
            24,25,40,29,30,31,32,33,42,48,
            49,45,47,46,50,51,22,11,12,10,
            13,14,15,16,17,18,44,53,54,3,
            2,0,4,2,66,56,43,74,60,61,
            62,84,52,58,72,71,0,59,63,79,
            57,58,0,65,0,52,67,1,55,77,
            78,73,75,19,20,26,27,4,9,5,
            6,7,8,23,24,25,2,66,68,56,
            43,74,76,59,63,71,72,80,81,82,
            84,83,57,79,58,60,61,62,0,21,
            1,59,63,52,0,80,0,21,1,0,
            21,4,43,66,0,66,43,76,0,52,
            26,27,19,20,5,6,7,8,9,68,
            73,75,76,77,78,59,60,61,62,57,
            79,63,71,72,80,81,82,23,24,25,
            83,1,2,66,74,84,58,4,43,56,
            0,68,43,0,58,70,0,64,44,11,
            12,10,13,14,15,16,17,18,22,3,
            51,50,46,19,47,45,48,49,42,29,
            30,31,32,33,38,39,37,41,36,34,
            35,4,9,26,27,20,5,6,7,8,
            28,23,24,25,40,55,1,0,71,72,
            57,70,60,61,62,3,58,59,63,0,
            4,60,61,62,11,12,10,13,14,15,
            16,17,18,42,29,30,31,32,33,3,
            0,81,0,2,52,0,71,72,58,57,
            79,0,56,52,26,27,19,20,5,6,
            4,7,8,9,1,67,73,75,55,77,
            78,23,24,25,83,21,2,43,0,82,
            0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static byte nasb[] = {0,
            39,33,33,33,33,27,27,27,33,33,
            32,34,16,23,31,33,33,33,33,33,
            27,27,9,21,19,33,33,33,33,33,
            30,30,30,30,30,33,33,7,33,23,
            25,7,33,46,30,31,44,51,30,33,
            33,33,33,33,4,4,4,4,4,4,
            4,4,4,4,4,4,4,4,4,4,
            4,4,4,4,4,30,1,1,11,33,
            33,33,33,33,36,30,33,33,33,33,
            33,33,14,33,30,48,30,7,33,33,
            33,33,33,33,33,33,33,33,33,33,
            33,33,33,33,33,33,33,33,30,33,
            33,33,33,7,6,7,7,30,30,30,
            30,30,30,30,30,30,30,30,30,30,
            30,33,33,46,31,33,51,51,33,33,
            51,30,33,33,33,33,33,33,30,1,
            33,33,32,30,30,30,30,30,30,30,
            30,30,30,30,30,30,30,30,30,30,
            30,30,33,30,30,30,4,4,4,4,
            33,33,33,33,33,33,33,33,33,33,
            33,33,33,33,33,33,33,33,33,33,
            30,31,33,42,31,30,51,33,30,50,
            30,30,30,30,30,33,33,33,33,33,
            33,33,33,33,33,33,33,33,33,33,
            33,33,33,33,33,33,4,33,33,33,
            30,33,51,29,29,29,29,29,29,29,
            29,29,29,29,30,30,33,33,33,30,
            33,33,33,33,33,33,33,33,33,33,
            33,33,33,33,33,33,33,33,33,33,
            30,31,33,4,51,30,51,30,31,30,
            33,33,33,30,30,33
        };
    };
    public final static byte nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            3,2,4,31,0,76,2,0,49,0,
            70,71,0,82,0,3,68,0,46,0,
            69,0,40,0,44,0,39,0,33,2,
            4,3,0,48,0,52,67,0,49,65,
            46,47,0,80,0,55,0,75,0,59,
            33,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            11,12,96,7,5,6,8,9,10,83,
            84,85,86,87,89,90,91,92,3,4,
            20,34,49,50,51,1,2,52,58,59,
            60,61,62,75,76,77,78,79,80,81,
            82,88,19,30,31,32,33,56,57,93,
            94,21,45,54,25,18,39,95,35,36,
            37,38,42,97,13,14,15,16,28,40,
            43,44,17,22,23,24,26,27,41,46,
            47,48,53,55,63,64,65,66,67,68,
            69,70,71,72,73,74,98
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            0,108,105,127,0,122,123,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,121,119,120,0,118,117,110,116,0,
            0,126,103,0,133,109,0,0,0,107,
            0,0,0,101,138,100,102,104,106,0,
            0,112,0,0,115,129,0,131,134,0,
            0,137,0,0,99,0,111,113,114,124,
            125,0,0,128,130,132,0,0,0,135,
            0,136,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            178,13,206,283,186,1,8,53,58,63,
            68,73,78,83,88,93,98,103,108,113,
            118,123,128,133,138,143,148,153,158,22,
            163,167,226,230,234,238,242,246,250,254,
            258,262,266,270,276,289,40,47,171,212,
            47,196,196,280,31,219,219
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            6,20,6,6,192,6,6,6,6,6,
            6,6,6,6,6,6,6,6,6,6,
            6,6,6,6,6,6,6,6,6,27,
            6,6,6,6,6,6,6,6,6,6,
            6,6,6,274,274,6,44,51,175,216,
            51,192,200,6,34,216,221
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            78,25,78,7,78,71,71,5,5,5,
            5,5,5,5,5,5,5,5,5,5,
            5,5,5,5,5,5,5,5,5,25,
            37,38,77,77,77,77,77,77,77,77,
            77,77,77,13,12,7,30,60,33,35,
            9,78,78,8,25,35,35
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            2,82,2,2,56,2,2,2,2,2,
            2,2,2,2,2,2,2,2,2,2,
            2,2,2,2,2,2,2,2,2,81,
            2,2,2,2,2,2,2,2,2,2,
            2,2,2,66,66,2,84,68,4,56,
            68,56,74,2,80,56,43
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static byte scopeStateSet[] = {
            2,15,2,8,2,4,4,6,6,6,
            6,6,6,6,6,6,6,6,6,6,
            6,6,6,6,6,6,6,6,6,15,
            91,91,2,2,2,2,2,2,2,2,
            2,2,2,8,8,8,25,1,99,79,
            8,2,2,8,15,79,79
        };
    };
    public final static byte scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            158,1,99,78,0,12,0,158,1,99,
            77,0,125,81,125,80,125,53,0,48,
            0,125,80,125,53,0,47,110,48,0,
            125,53,0,46,110,47,110,48,0,178,
            130,54,0,55,110,0,129,67,99,0,
            16,0,131,1,128,25,0,131,1,128,
            24,0,131,1,128,23,0,131,1,128,
            28,0,131,1,128,8,0,131,1,128,
            7,0,131,1,128,6,0,131,1,128,
            5,0,131,1,128,20,0,131,1,128,
            19,0,131,1,128,27,0,131,1,128,
            26,0,131,1,128,9,0,131,1,128,
            4,0,131,1,128,35,0,131,1,128,
            34,0,131,1,128,36,0,131,1,128,
            41,0,131,1,128,37,0,131,1,128,
            39,0,131,1,128,38,0,131,1,128,
            99,0,176,1,42,0,133,1,101,0,
            133,21,3,0,7,110,0,125,56,130,
            74,130,1,85,0,130,74,130,1,85,
            0,18,110,12,0,130,1,85,0,22,
            103,18,110,12,0,125,56,130,1,85,
            0,130,43,130,0,18,110,0,130,0,
            19,103,18,110,0,132,1,96,0,132,
            1,95,0,132,1,94,0,132,1,93,
            0,132,1,92,0,132,1,91,0,132,
            1,89,0,132,1,90,0,132,1,88,
            0,132,1,87,0,132,1,86,0,172,
            65,42,0,14,0,170,65,101,0,125,
            1,0,131,1,99,52,100,0,131,1,
            44,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            283,277,0,334,0,277,283,2864,2918,2896,
            2841,1261,2809,255,2626,2599,2572,2544,2783,2757,
            2731,2705,2679,2653,2513,2482,1785,2451,2420,2389,
            2358,362,299,1752,1288,1230,2327,2296,2265,2234,
            2203,2172,1195,1160,1125,1090,1055,1020,985,950,
            915,880,845,810,775,740,705,670,635,600,
            565,530,495,460,2141,2110,1719,224,425,2079,
            2048,2017,1986,1955,1924,1893,1862,1831,1683,1647,
            1611,1575,1539,1503,1467,1431,1395,1359,1323,0,
            3021,2956,2941,3016,3011,2971,2961,0,703,668,
            1683,1647,1611,1575,1539,1503,1467,1431,1395,1359,
            1323,633,3029,598,563,528,493,3023,3018,458,
            2963,3013,2940,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,160,3,144,147,62,61,60,143,148,
            70,162,57,146,21,71,72,136,136,136,
            63,59,100,165,100,3,133,100,101,42,
            21,21,21,21,21,136,136,52,163,146,
            166,52,143,1,4,1,1,54,53,44,
            42,101,3,100,40,25,24,23,8,7,
            6,5,20,19,26,9,4,35,34,36,
            41,37,39,38,99,1,28,27,104,121,
            119,123,126,124,21,21,99,150,152,133,
            176,177,130,125,1,65,65,52,128,128,
            128,128,128,128,128,128,128,128,128,128,
            128,128,128,128,128,128,128,128,67,128,
            125,128,128,75,73,78,77,27,26,20,
            19,8,7,6,5,9,4,83,25,24,
            23,149,3,1,21,2,43,43,178,179,
            43,80,131,129,172,3,170,125,64,27,
            171,99,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,129,1,1,1,28,19,27,99,
            85,96,95,94,93,92,91,89,90,88,
            87,86,99,99,119,119,124,123,123,123,
            4,21,150,133,21,84,43,125,43,43,
            4,76,64,43,1,169,100,131,131,131,
            131,131,131,131,131,131,131,131,131,131,
            131,131,131,131,131,131,68,131,131,131,
            67,128,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,133,2,144,81,
            131,129,130,132,130,3,132,132,132,132,
            132,132,132,132,132,132,158,69,159,158,
            4,21,125,68,74,56,43,56,21,43,
            130,125,130,56,56,125
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "", //$NON-NLS-1$
            "+", //$NON-NLS-1$
            "-", //$NON-NLS-1$
            "*", //$NON-NLS-1$
            "/", //$NON-NLS-1$
            ">", //$NON-NLS-1$
            "<", //$NON-NLS-1$
            "=", //$NON-NLS-1$
            ">=", //$NON-NLS-1$
            "<=", //$NON-NLS-1$
            "<>", //$NON-NLS-1$
            "(", //$NON-NLS-1$
            ")", //$NON-NLS-1$
            "{", //$NON-NLS-1$
            "}", //$NON-NLS-1$
            "[", //$NON-NLS-1$
            "]", //$NON-NLS-1$
            "->", //$NON-NLS-1$
            "|", //$NON-NLS-1$
            ",", //$NON-NLS-1$
            ":", //$NON-NLS-1$
            "::", //$NON-NLS-1$
            ";", //$NON-NLS-1$
            ".", //$NON-NLS-1$
            "..", //$NON-NLS-1$
            "@pre", //$NON-NLS-1$
            "^", //$NON-NLS-1$
            "^^", //$NON-NLS-1$
            "?", //$NON-NLS-1$
            "$empty", //$NON-NLS-1$
            "NUMERIC_OPERATION", //$NON-NLS-1$
            "STRING_LITERAL", //$NON-NLS-1$
            "INTEGER_LITERAL", //$NON-NLS-1$
            "REAL_LITERAL", //$NON-NLS-1$
            "self", //$NON-NLS-1$
            "inv", //$NON-NLS-1$
            "pre", //$NON-NLS-1$
            "post", //$NON-NLS-1$
            "body", //$NON-NLS-1$
            "context", //$NON-NLS-1$
            "package", //$NON-NLS-1$
            "endpackage", //$NON-NLS-1$
            "def", //$NON-NLS-1$
            "derive", //$NON-NLS-1$
            "init", //$NON-NLS-1$
            "if", //$NON-NLS-1$
            "then", //$NON-NLS-1$
            "else", //$NON-NLS-1$
            "endif", //$NON-NLS-1$
            "and", //$NON-NLS-1$
            "or", //$NON-NLS-1$
            "xor", //$NON-NLS-1$
            "not", //$NON-NLS-1$
            "implies", //$NON-NLS-1$
            "let", //$NON-NLS-1$
            "in", //$NON-NLS-1$
            "true", //$NON-NLS-1$
            "false", //$NON-NLS-1$
            "Set", //$NON-NLS-1$
            "Bag", //$NON-NLS-1$
            "Sequence", //$NON-NLS-1$
            "Collection", //$NON-NLS-1$
            "OrderedSet", //$NON-NLS-1$
            "iterate", //$NON-NLS-1$
            "forAll", //$NON-NLS-1$
            "exists", //$NON-NLS-1$
            "isUnique", //$NON-NLS-1$
            "any", //$NON-NLS-1$
            "one", //$NON-NLS-1$
            "collect", //$NON-NLS-1$
            "select", //$NON-NLS-1$
            "reject", //$NON-NLS-1$
            "collectNested", //$NON-NLS-1$
            "sortedBy", //$NON-NLS-1$
            "closure", //$NON-NLS-1$
            "oclIsKindOf", //$NON-NLS-1$
            "oclIsTypeOf", //$NON-NLS-1$
            "oclAsType", //$NON-NLS-1$
            "oclIsNew", //$NON-NLS-1$
            "oclIsUndefined", //$NON-NLS-1$
            "oclIsInvalid", //$NON-NLS-1$
            "oclIsInState", //$NON-NLS-1$
            "allInstances", //$NON-NLS-1$
            "String", //$NON-NLS-1$
            "Integer", //$NON-NLS-1$
            "UnlimitedNatural", //$NON-NLS-1$
            "Real", //$NON-NLS-1$
            "Boolean", //$NON-NLS-1$
            "Tuple", //$NON-NLS-1$
            "OclAny", //$NON-NLS-1$
            "OclVoid", //$NON-NLS-1$
            "Invalid", //$NON-NLS-1$
            "OclMessage", //$NON-NLS-1$
            "null", //$NON-NLS-1$
            "OclInvalid", //$NON-NLS-1$
            "EOF_TOKEN", //$NON-NLS-1$
            "IDENTIFIER", //$NON-NLS-1$
            "INTEGER_RANGE_START", //$NON-NLS-1$
            "ERROR_TOKEN", //$NON-NLS-1$
            "packageDeclarationCSm", //$NON-NLS-1$
            "invOrDefCS", //$NON-NLS-1$
            "prePostOrBodyDeclCS", //$NON-NLS-1$
            "initOrDerValueCS", //$NON-NLS-1$
            "variableCS", //$NON-NLS-1$
            "packageDeclarationCS", //$NON-NLS-1$
            "pathNameCS", //$NON-NLS-1$
            "contextDeclCSm", //$NON-NLS-1$
            "contextDeclCS", //$NON-NLS-1$
            "simpleNameCS", //$NON-NLS-1$
            "typeCS", //$NON-NLS-1$
            "oclExpressionCS", //$NON-NLS-1$
            "defExpressionCS", //$NON-NLS-1$
            "operationCS1", //$NON-NLS-1$
            "operationCS", //$NON-NLS-1$
            "prePostOrBodyDeclCSm", //$NON-NLS-1$
            "parametersCS", //$NON-NLS-1$
            "oclExp0CS", //$NON-NLS-1$
            "oclExp1CS", //$NON-NLS-1$
            "oclExp2CS", //$NON-NLS-1$
            "oclExp3CS", //$NON-NLS-1$
            "oclExp4CS", //$NON-NLS-1$
            "oclExp5CS", //$NON-NLS-1$
            "oclExp6CS", //$NON-NLS-1$
            "oclExp7CS", //$NON-NLS-1$
            "callExpCS", //$NON-NLS-1$
            "messageExpCS", //$NON-NLS-1$
            "argumentsCS", //$NON-NLS-1$
            "collectionTypeIdentifierCS", //$NON-NLS-1$
            "collectionLiteralPartsCS", //$NON-NLS-1$
            "collectionLiteralPartCS", //$NON-NLS-1$
            "variableListCS2", //$NON-NLS-1$
            "featureCallExpCS", //$NON-NLS-1$
            "loopExpCS", //$NON-NLS-1$
            "iterContents", //$NON-NLS-1$
            "variableCS2", //$NON-NLS-1$
            "variableListCS", //$NON-NLS-1$
            "letExpSubCS", //$NON-NLS-1$
            "oclMessageArgumentsCS", //$NON-NLS-1$
            "oclMessageArgCS" //$NON-NLS-1$
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 97,
           SCOPE_UBOUND      = 56,
           SCOPE_SIZE        = 57,
           MAX_NAME_LENGTH   = 26;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 306,
           NT_OFFSET         = 97,
           LA_STATE_OFFSET   = 3377,
           MAX_LA            = 2,
           NUM_RULES         = 223,
           NUM_NONTERMINALS  = 83,
           NUM_SYMBOLS       = 180,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 2940,
           IDENTIFIER_SYMBOL = 3,
           EOFT_SYMBOL       = 58,
           EOLT_SYMBOL       = 58,
           ACCEPT_ACTION     = 3153,
           ERROR_ACTION      = 3154;

    public final static boolean BACKTRACK = false;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
