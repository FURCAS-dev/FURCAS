/**
* <copyright>
*
* Copyright (c) 2005, 2006 IBM Corporation and others.
* All rights reserved.   This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   IBM - Initial API and implementation
*
* </copyright>
*
* $Id: OCLLPGParserprs.java,v 1.1 2007/01/25 18:24:35 cdamus Exp $
*/

package org.eclipse.ocl.internal.parser;

public class OCLLPGParserprs implements lpg.lpgjavaruntime.ParseTable, OCLLPGParsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,1,
            1,1,1,1,1,1,1,1,0,0,
            0,1,1,1,1,0,0,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,0,0,0,0,0,1,1,1,
            1,0,1,1,0,0,1,0,1,1,
            1,1,1,0,0,0,0,0,0,1,
            1,1,0,0,0,0,0,0,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            1,1,1,1,1,1,0,1,2,4,
            1,0,1,1,2,1,1,1,7,4,
            4,0,1,3,0,1,5,5,5,3,
            3,1,2,4,4,4,1,6,8,0,
            1,1,3,0,1,1,1,1,3,1,
            3,3,3,1,3,3,3,3,3,3,
            1,1,1,3,3,1,3,3,1,2,
            2,1,2,2,4,1,1,1,3,2,
            5,1,1,1,1,1,1,1,1,1,
            1,1,1,1,3,0,1,1,1,1,
            1,1,1,3,4,1,1,1,1,1,
            0,1,1,3,1,1,3,2,3,1,
            1,1,1,1,4,1,1,1,1,1,
            1,1,1,2,2,2,1,1,4,4,
            4,4,4,4,4,4,4,4,4,1,
            3,5,6,8,1,3,5,3,0,1,
            1,1,1,1,4,4,0,1,1,3,
            1,1,3,3,1,1,5,5,5,5,
            5,5,5,5,5,5,5,5,5,5,
            5,5,5,5,5,5,5,5,5,2,
            5,0,1,0,1,1,3,5,0,1,
            2,3,7,5,5,0,1,1,3,1,
            1,3,-97,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-77,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-125,0,0,0,0,
            0,-124,0,0,0,-2,0,-3,-23,-38,
            0,0,-42,0,0,0,0,-264,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-79,0,-4,0,-5,0,-93,0,
            -13,0,0,0,-98,0,0,-11,-25,-24,
            0,0,0,0,0,-14,-41,-214,0,0,
            -265,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-9,0,0,0,0,0,0,0,0,
            0,-10,0,0,0,0,-16,0,0,-126,
            0,0,-127,0,0,-6,0,0,0,0,
            0,0,0,-95,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-17,0,0,-164,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-18,
            -19,0,0,-165,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-20,-26,0,0,-166,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-27,
            -28,0,0,-167,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-29,-30,0,0,-168,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-36,
            -37,0,0,-169,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-39,-43,0,0,-170,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-50,
            -51,0,0,-171,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-52,-53,0,0,-172,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-54,
            -80,0,0,-173,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-81,-82,0,0,-174,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-83,
            -84,0,0,-175,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-87,-88,0,0,-176,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-89,
            -90,0,0,-177,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-91,-92,0,0,-178,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-94,
            -99,0,0,-179,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-100,-101,0,0,-180,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-102,
            -103,0,0,-181,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-104,-105,0,0,-182,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-106,
            -107,0,0,-184,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-108,-109,0,0,-185,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-110,
            -111,0,0,-186,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-112,-113,0,0,-224,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-128,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-114,-115,0,0,-253,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-163,0,-116,
            0,0,-254,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-117,0,-118,-120,0,-255,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-121,-122,0,-256,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-123,0,-142,-143,0,
            -257,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-146,0,-149,-150,0,-258,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-153,0,-154,
            -155,0,-259,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-156,0,-157,-158,0,-260,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-161,
            0,-162,-183,0,-261,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-191,0,-192,-193,0,
            -262,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-194,0,-195,-196,0,-263,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-197,0,-198,
            -199,0,-119,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-200,-201,0,-250,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-40,-202,0,
            -298,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-203,-204,-205,-206,-207,-208,0,0,0,
            0,-209,-210,-213,-218,0,-31,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-32,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-33,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-34,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -35,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-45,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-49,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-76,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-86,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-152,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-159,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-211,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-216,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-219,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -221,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-222,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-223,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-269,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-289,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-294,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-296,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-302,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-303,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-138,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-139,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-140,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-141,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-132,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-133,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -134,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-135,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-136,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-137,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-78,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-225,-226,-227,-228,
            -229,-230,-231,-12,-232,0,-129,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-160,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-233,-234,-235,-236,-85,-237,-238,-239,
            0,-130,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-131,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-1,-215,0,0,0,
            0,-7,0,0,-240,-241,-242,-243,-244,-245,
            -247,-290,0,0,0,0,-15,0,-248,0,
            0,-249,-251,-266,-267,-46,0,0,0,0,
            -268,-270,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-271,0,0,0,-8,0,0,0,0,
            0,0,0,0,-44,0,-145,0,-47,0,
            0,-212,0,-144,0,0,-297,0,-96,0,
            0,-21,0,0,-22,0,0,-55,-272,-48,
            -220,-273,-274,-56,0,-275,0,-276,-57,-58,
            0,-59,0,0,0,0,-277,0,0,0,
            0,-60,0,0,0,-61,-278,0,0,0,
            0,0,0,0,0,-62,0,-63,0,0,
            0,-64,0,-65,-66,-67,-68,0,-69,-70,
            -71,-72,0,-73,-74,-75,0,0,0,0,
            -147,-148,-151,0,-187,-188,0,-189,0,-190,
            -217,-252,0,-246,0,0,0,0,-292,0,
            0,0,0,-293,0,0,0,-295,-279,-280,
            -281,-282,0,0,0,0,0,-283,0,-284,
            0,-285,0,0,0,-286,-287,-288,-291,0,
            -299,-300,-301,-304,0,0,0,0,0,0,
            0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            63,63,63,63,63,63,63,63,65,65,
            48,64,66,66,49,49,40,40,40,43,
            47,47,50,50,41,51,51,46,46,67,
            67,42,69,69,44,44,44,68,52,68,
            53,53,55,55,39,39,28,28,29,29,
            27,27,27,27,26,26,26,26,26,26,
            26,23,23,24,24,24,22,22,22,6,
            6,6,7,7,7,7,8,8,8,8,
            9,9,2,2,2,1,1,1,1,1,
            1,1,1,1,3,3,72,72,10,10,
            10,10,10,10,11,12,4,4,4,4,
            4,73,73,74,74,56,56,57,57,57,
            14,14,14,14,14,13,17,18,19,20,
            21,21,15,16,70,70,70,76,76,77,
            77,77,77,77,77,77,77,77,77,77,
            35,35,35,78,78,32,32,32,59,54,
            54,36,36,36,36,38,37,79,79,80,
            80,75,75,75,75,58,58,5,5,5,
            5,5,5,5,5,5,5,5,5,5,
            5,5,5,5,5,5,5,5,5,5,
            60,60,31,31,34,34,33,33,30,81,
            81,82,82,25,71,71,61,61,62,62,
            45,45,45,1,82,3056,770,735,78,66,
            333,72,76,77,98,99,100,101,102,103,
            120,121,122,123,124,805,54,771,62,806,
            841,1537,840,47,486,82,3056,770,735,78,
            71,333,72,76,77,98,99,100,101,102,
            103,120,121,122,123,124,645,82,3070,113,
            115,176,687,82,3070,1393,258,176,762,746,
            830,82,95,830,82,875,1536,1570,125,82,
            3056,770,735,78,66,333,72,76,77,98,
            99,100,101,102,103,120,121,122,123,124,
            805,54,771,62,806,841,220,840,47,14,
            16,17,18,688,134,371,175,118,1748,909,
            136,874,175,218,349,830,82,1572,834,422,
            366,289,135,137,138,665,538,614,44,3102,
            3107,125,82,3056,770,735,78,66,333,72,
            76,77,98,99,100,101,102,103,120,121,
            122,123,124,805,54,771,62,806,841,220,
            840,47,425,37,32,666,15,16,17,18,
            402,33,719,73,74,2941,218,864,337,350,
            830,82,1782,830,82,1783,810,82,45,357,
            1464,1465,3108,3107,314,82,3056,770,735,78,
            66,333,72,76,77,98,99,100,101,102,
            103,120,121,122,123,124,805,54,771,62,
            806,841,206,840,47,490,875,1500,1498,314,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,54,771,62,806,841,206,840,47,
            878,879,1500,2799,314,82,3056,770,735,78,
            66,333,72,76,77,98,99,100,101,102,
            103,120,121,122,123,124,805,54,771,62,
            806,841,206,840,47,880,254,1500,2800,314,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,54,771,62,806,841,206,840,47,
            884,729,1500,2801,314,82,3056,770,735,78,
            66,333,72,76,77,98,99,100,101,102,
            103,120,121,122,123,124,805,54,771,62,
            806,841,206,840,47,893,902,1500,2802,314,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,54,771,62,806,841,206,840,47,
            886,891,1500,2803,314,82,3056,770,735,78,
            66,333,72,76,77,98,99,100,101,102,
            103,120,121,122,123,124,805,54,771,62,
            806,841,206,840,47,716,804,1500,2805,314,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,54,771,62,806,841,206,840,47,
            915,423,1500,2853,314,82,3056,770,735,78,
            66,333,72,76,77,98,99,100,101,102,
            103,120,121,122,123,124,805,54,771,62,
            806,841,206,840,47,582,868,1500,2854,314,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,54,771,62,806,841,206,840,47,
            876,785,1500,2855,314,82,3056,770,735,78,
            66,333,72,76,77,98,99,100,101,102,
            103,120,121,122,123,124,805,54,771,62,
            806,841,206,840,47,168,53,1500,2856,314,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,54,771,62,806,841,206,840,47,
            839,744,1500,2858,314,82,3056,770,735,78,
            66,333,72,76,77,98,99,100,101,102,
            103,120,121,122,123,124,805,54,771,62,
            806,841,206,840,47,749,917,1500,2859,314,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,54,771,62,806,841,206,840,47,
            881,923,1500,2860,314,82,3056,770,735,78,
            66,333,72,76,77,98,99,100,101,102,
            103,120,121,122,123,124,805,54,771,62,
            806,841,206,840,47,927,904,1500,2915,314,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,54,771,62,806,841,206,840,47,
            913,931,1500,2916,314,82,3056,770,735,78,
            66,333,72,76,77,98,99,100,101,102,
            103,120,121,122,123,124,805,54,771,62,
            806,841,206,840,47,934,936,1500,2917,314,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,54,771,62,806,841,206,840,47,
            938,940,1500,2918,314,82,3056,770,735,78,
            66,333,72,76,77,98,99,100,101,102,
            103,120,121,122,123,124,805,54,771,62,
            806,841,206,840,47,942,944,1500,2919,314,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,54,771,62,806,841,206,840,47,
            948,950,1500,2920,314,82,3056,770,735,78,
            66,333,72,76,77,98,99,100,101,102,
            103,120,121,122,123,124,805,54,771,62,
            806,841,206,840,47,953,955,1500,2921,314,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,54,771,62,806,841,206,840,47,
            957,959,1500,2929,314,82,3056,770,735,78,
            66,333,72,76,77,98,99,100,101,102,
            103,120,121,122,123,124,805,54,771,62,
            806,841,206,840,47,961,963,1500,2932,63,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,54,771,62,806,841,1537,840,47,
            593,82,3056,770,735,78,66,333,72,76,
            77,98,99,100,101,102,103,120,121,122,
            123,124,1784,965,967,114,115,431,82,3056,
            770,735,78,66,333,72,76,77,98,99,
            100,101,102,103,120,121,122,123,124,805,
            54,771,62,806,841,150,840,47,994,3002,
            969,2798,2999,431,82,3056,770,735,78,66,
            333,72,76,77,98,99,100,101,102,103,
            120,121,122,123,124,805,54,771,62,806,
            841,150,840,47,971,3002,973,975,3006,431,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,54,771,62,806,841,150,840,47,
            2797,3002,977,980,3008,431,82,3056,770,735,
            78,66,333,72,76,77,98,99,100,101,
            102,103,120,121,122,123,124,805,54,771,
            62,806,841,150,840,47,982,3002,984,814,
            3017,431,82,3056,770,735,78,66,333,72,
            76,77,98,99,100,101,102,103,120,121,
            122,123,124,805,54,771,62,806,841,150,
            840,47,978,3002,22,946,3027,431,82,3056,
            770,735,78,66,333,72,76,77,98,99,
            100,101,102,103,120,121,122,123,124,805,
            54,771,62,806,841,150,840,47,985,3002,
            986,677,3089,431,82,3056,770,735,78,66,
            333,72,76,77,98,99,100,101,102,103,
            120,121,122,123,124,805,54,771,62,806,
            841,150,840,47,861,3002,926,560,3090,431,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,54,771,62,806,841,150,840,47,
            990,3002,991,819,3091,431,82,3056,770,735,
            78,66,333,72,76,77,98,99,100,101,
            102,103,120,121,122,123,124,805,54,771,
            62,806,841,150,840,47,995,3002,1000,1002,
            3092,431,82,3056,770,735,78,66,333,72,
            76,77,98,99,100,101,102,103,120,121,
            122,123,124,805,54,771,62,806,841,150,
            840,47,1004,3002,1006,1008,3098,431,82,3056,
            770,735,78,66,333,72,76,77,98,99,
            100,101,102,103,120,121,122,123,124,805,
            54,771,62,806,841,150,840,47,1010,3002,
            1012,1014,3100,259,82,3056,770,735,78,66,
            333,72,76,77,98,99,100,101,102,103,
            120,121,122,123,124,805,54,771,62,806,
            841,206,840,47,1016,1018,1573,259,82,3056,
            770,735,78,66,333,72,76,77,98,99,
            100,101,102,103,120,121,122,123,124,805,
            54,771,62,806,841,206,840,47,849,1020,
            2942,192,82,3056,770,735,78,66,333,72,
            76,77,98,99,100,101,102,103,120,121,
            122,123,124,805,54,771,62,806,841,220,
            840,47,1022,1024,831,870,777,115,15,16,
            17,18,177,244,1026,3,219,259,82,3056,
            770,735,78,66,333,72,76,77,98,99,
            100,101,102,103,120,121,122,123,124,805,
            54,771,62,806,841,21,840,47,259,82,
            3056,770,735,78,66,333,72,76,77,98,
            99,100,101,102,103,120,121,122,123,124,
            805,54,771,62,806,841,20,840,47,259,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,54,771,62,806,841,36,840,47,
            259,82,3056,770,735,78,66,333,72,76,
            77,98,99,100,101,102,103,120,121,122,
            123,124,805,54,771,62,806,841,35,840,
            47,259,82,3056,770,735,78,66,333,72,
            76,77,98,99,100,101,102,103,120,121,
            122,123,124,805,54,771,62,806,841,34,
            840,47,259,82,3056,770,735,78,66,333,
            72,76,77,98,99,100,101,102,103,120,
            121,122,123,124,805,54,771,62,806,841,
            157,840,47,259,82,3056,770,735,78,66,
            333,72,76,77,98,99,100,101,102,103,
            120,121,122,123,124,805,54,771,62,806,
            841,980,840,47,259,82,3056,770,735,78,
            66,333,72,76,77,98,99,100,101,102,
            103,120,121,122,123,124,805,54,771,62,
            806,841,1392,840,47,259,82,3056,770,735,
            78,66,333,72,76,77,98,99,100,101,
            102,103,120,121,122,123,124,805,54,771,
            62,806,841,27,840,47,259,82,3056,770,
            735,78,66,333,72,76,77,98,99,100,
            101,102,103,120,121,122,123,124,805,54,
            771,62,806,841,1795,840,47,259,82,3056,
            770,735,78,66,333,72,76,77,98,99,
            100,101,102,103,120,121,122,123,124,805,
            54,771,62,806,841,118,840,47,259,82,
            3056,770,735,78,66,333,72,76,77,98,
            99,100,101,102,103,120,121,122,123,124,
            805,54,771,62,806,841,30,840,47,259,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,54,771,62,806,841,208,840,47,
            259,82,3056,770,735,78,66,333,72,76,
            77,98,99,100,101,102,103,120,121,122,
            123,124,805,54,771,62,806,841,207,840,
            47,259,82,3056,770,735,78,66,333,72,
            76,77,98,99,100,101,102,103,120,121,
            122,123,124,805,54,771,62,806,841,158,
            840,47,259,82,3056,770,735,78,66,333,
            72,76,77,98,99,100,101,102,103,120,
            121,122,123,124,805,54,771,62,806,841,
            119,840,47,259,82,3056,770,735,78,66,
            333,72,76,77,98,99,100,101,102,103,
            120,121,122,123,124,805,54,771,62,806,
            841,117,840,47,259,82,3056,770,735,78,
            66,333,72,76,77,98,99,100,101,102,
            103,120,121,122,123,124,805,54,771,62,
            806,841,3109,840,47,259,82,3056,770,735,
            78,66,333,72,76,77,98,99,100,101,
            102,103,120,121,122,123,124,805,54,771,
            62,806,841,29,840,47,259,82,3056,770,
            735,78,66,333,72,76,77,98,99,100,
            101,102,103,120,121,122,123,124,805,54,
            771,62,806,841,3112,840,47,259,82,3056,
            770,735,78,66,333,72,76,77,98,99,
            100,101,102,103,120,121,122,123,124,805,
            54,771,62,806,841,151,840,47,259,82,
            3056,770,735,78,66,333,72,76,77,98,
            99,100,101,102,103,120,121,122,123,124,
            805,54,771,62,806,841,3114,840,47,259,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,54,771,62,806,841,152,840,47,
            539,82,3056,770,735,78,66,333,72,76,
            77,98,99,100,101,102,103,120,121,122,
            123,124,805,54,771,62,806,1786,539,82,
            3056,770,735,78,66,333,72,76,77,98,
            99,100,101,102,103,120,121,122,123,124,
            805,54,771,62,1787,539,82,3056,770,735,
            78,66,333,72,76,77,98,99,100,101,
            102,103,120,121,122,123,124,805,54,771,
            62,1792,539,82,3056,770,735,78,66,333,
            72,76,77,98,99,100,101,102,103,120,
            121,122,123,124,805,54,771,62,1793,539,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,60,771,62,539,82,3056,770,735,
            78,66,333,72,76,77,98,99,100,101,
            102,103,120,121,122,123,124,805,59,771,
            62,539,82,3056,770,735,78,66,333,72,
            76,77,98,99,100,101,102,103,120,121,
            122,123,124,805,58,771,62,539,82,3056,
            770,735,78,66,333,72,76,77,98,99,
            100,101,102,103,120,121,122,123,124,805,
            57,771,62,539,82,3056,770,735,78,66,
            333,72,76,77,98,99,100,101,102,103,
            120,121,122,123,124,805,56,771,62,539,
            82,3056,770,735,78,66,333,72,76,77,
            98,99,100,101,102,103,120,121,122,123,
            124,805,55,771,62,486,82,3056,770,735,
            78,70,333,72,76,77,98,99,100,101,
            102,103,120,121,122,123,124,1030,998,1034,
            1035,1038,1039,1042,678,1045,1426,593,82,3056,
            770,735,78,66,333,72,76,77,98,99,
            100,101,102,103,120,121,122,123,124,1785,
            369,82,3056,770,735,78,70,333,72,76,
            77,98,99,100,101,102,103,120,121,122,
            123,124,9,1046,1049,1052,1053,918,1056,1057,
            1060,1426,593,82,3056,770,735,78,68,333,
            72,76,77,98,99,100,101,102,103,120,
            121,122,123,124,593,82,3056,770,735,78,
            67,333,72,76,77,98,99,100,101,102,
            103,120,121,122,123,124,796,776,161,1428,
            561,595,810,82,45,1061,1064,1065,1068,1069,
            1072,1073,776,161,28,561,595,742,161,1076,
            561,595,1077,1080,1027,1082,742,161,6,561,
            595,646,829,160,162,163,14,16,17,18,
            4,491,392,335,8,356,337,402,160,162,
            163,38,836,560,162,163,810,82,45,286,
            1,2804,911,162,163,895,39,742,161,905,
            561,595,742,161,895,561,595,742,161,930,
            561,595,810,82,45,810,82,45,280,1083,
            911,930,708,817,280,525,1084,42,1087,280,
            280,169,280,358,162,163,42,1088,2934,162,
            163,172,280,222,162,163,280,1091,876,981,
            910,630,339,174,631,1015,280,1794,280,910,
            1016,1050,256,1051,280,280,280,280,171,280,
            280,280,280,1085,280,280,180,1086,945,946,
            173,911,911,911,1501,280,280,1120,280,1121,
            816,911,911,1155,280,1156,1190,1191,1225,280,
            1226,1283,1284,1320,911,1354,1356,1357,911,1092,
            1095,1096,1099,43,170,211,1393,1155,1100,1426,
            1104,2933,1105,212,2962,81,1108,1109,1110,1111,
            201,1113,1114,1115,1117,3123,3111,3123,3123,3123,
            3113,3123,3123
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,0,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,0,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,0,44,45,46,47,48,49,
            50,51,0,53,54,0,4,5,6,7,
            8,9,0,1,64,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,81,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,41,42,84,44,45,46,47,
            48,49,50,51,0,53,54,0,4,5,
            6,7,8,9,0,1,64,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,0,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,38,39,40,41,42,0,44,45,
            46,47,48,49,50,51,0,53,54,0,
            4,5,6,7,8,9,19,20,71,72,
            0,0,1,69,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,0,22,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,38,
            39,40,41,42,55,44,45,46,47,48,
            49,50,51,0,53,54,67,4,5,6,
            7,8,9,0,1,0,1,0,0,1,
            69,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,0,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,0,44,45,46,47,48,49,50,51,
            55,53,54,0,1,58,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,55,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,0,44,45,46,
            47,48,49,50,51,0,53,54,0,1,
            0,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,0,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,0,44,45,46,47,48,49,50,51,
            0,0,0,55,0,60,61,62,58,0,
            0,1,64,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,0,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,52,44,45,46,47,48,49,
            50,51,58,53,54,0,1,65,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,0,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,41,42,0,44,
            45,46,47,48,49,50,51,0,0,1,
            55,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,0,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,0,44,45,46,47,48,49,50,51,
            0,53,0,1,57,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,0,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,41,42,76,44,45,46,47,
            48,49,50,51,0,0,65,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,0,22,23,24,25,
            26,27,28,60,61,62,0,0,34,35,
            36,37,38,39,40,41,0,0,0,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,0,22,23,
            24,25,26,27,28,0,71,72,0,43,
            34,35,36,37,38,39,40,41,0,85,
            86,87,88,89,90,91,92,93,94,95,
            96,0,66,0,3,0,0,70,0,1,
            43,10,11,12,13,14,15,16,17,18,
            73,0,75,56,77,78,23,24,25,21,
            29,30,31,32,33,0,0,59,3,0,
            52,63,21,42,0,10,11,12,13,14,
            15,16,17,18,79,0,0,52,3,23,
            24,25,57,0,29,30,31,32,33,0,
            26,27,3,0,1,0,0,42,0,10,
            11,12,13,14,15,16,17,18,0,0,
            0,22,3,0,21,0,3,21,0,10,
            11,12,13,14,15,16,17,18,0,19,
            20,22,57,58,59,60,61,62,63,43,
            0,43,59,0,4,70,63,0,52,0,
            55,43,56,0,0,0,3,0,0,0,
            0,21,67,0,21,0,68,4,19,20,
            0,56,0,1,0,21,68,3,21,21,
            21,0,1,0,0,57,21,3,0,74,
            0,21,0,3,0,1,0,0,2,52,
            3,83,0,43,2,0,0,52,2,0,
            0,1,3,0,1,0,1,0,1,0,
            1,0,1,0,1,0,43,0,1,0,
            1,43,0,1,0,1,0,1,0,1,
            0,1,0,1,0,1,0,1,0,1,
            0,1,0,1,0,1,0,0,2,0,
            1,0,1,0,0,0,2,4,43,0,
            0,66,80,0,0,1,3,0,21,0,
            1,0,1,0,1,0,1,0,1,0,
            1,0,1,0,1,0,1,0,1,0,
            1,0,1,0,1,0,0,2,43,0,
            4,2,43,0,0,2,2,0,0,2,
            2,0,52,2,0,0,2,2,0,52,
            2,0,0,2,2,0,0,2,2,0,
            0,2,2,0,0,2,2,0,0,2,
            2,0,0,2,2,0,0,2,2,0,
            1,0,0,0,2,2,0,0,2,2,
            0,0,2,2,0,0,2,2,0,0,
            2,2,21,0,0,2,2,0,0,0,
            0,2,0,0,0,2,0,0,2,0,
            0,0,0,0,0,0,0,0,21,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,43,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,56,0,
            56,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,82,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            111,2014,3123,736,3046,3036,3026,3022,3012,3045,
            3210,3208,3209,3211,3212,3213,3214,3215,3216,3042,
            3038,3123,3206,3010,3009,3004,3044,2830,254,3229,
            3230,3231,3232,3233,3049,3047,3050,3052,3055,3054,
            2998,3051,701,22,700,3252,3249,3251,3253,3254,
            3255,3256,50,1983,3000,3123,2749,2697,2671,2645,
            2619,2723,3123,2014,2107,736,3046,3036,3026,3022,
            3012,3045,3210,3208,3209,3211,3212,3213,3214,3215,
            3216,3042,3038,2324,3206,3010,3009,3004,3044,2830,
            254,3229,3230,3231,3232,3233,3049,3047,3050,3052,
            3055,3054,2998,3051,701,2169,700,3252,3249,3251,
            3253,3254,3255,3256,53,1983,3000,3123,2749,2697,
            2671,2645,2619,2723,216,2014,2107,736,3046,3036,
            3026,3022,3012,3045,3210,3208,3209,3211,3212,3213,
            3214,3215,3216,3042,3038,3123,3206,3010,3009,3004,
            3044,2775,254,3229,3230,3231,3232,3233,3049,3047,
            3050,3052,3055,3054,2998,3051,701,63,700,3252,
            3249,3251,3253,3254,3255,3256,52,1983,3000,202,
            2749,2697,2671,2645,2619,2723,2884,2862,407,456,
            3123,3123,2014,3106,736,3046,3036,3026,3022,3012,
            3045,3210,3208,3209,3211,3212,3213,3214,3215,3216,
            3042,3038,3123,3206,3010,3009,3004,3044,2775,254,
            3229,3230,3231,3232,3233,3049,3047,3050,3052,3055,
            3054,2998,3051,701,3326,700,3252,3249,3251,3253,
            3254,3255,3256,51,1983,3000,1683,2749,2697,2671,
            2645,2619,2723,94,2975,127,202,3123,3123,2014,
            3106,736,3046,3036,3026,3022,3012,3045,3210,3208,
            3209,3211,3212,3213,3214,3215,3216,3042,3038,202,
            3206,3010,3009,3004,3044,2775,254,3229,3230,3231,
            3232,3233,3049,3047,3050,3052,3055,3054,2998,3051,
            701,3123,700,3252,3249,3251,3253,3254,3255,3256,
            3326,1983,3000,204,2014,3122,736,3046,3036,3026,
            3022,3012,3045,3210,3208,3209,3211,3212,3213,3214,
            3215,3216,3042,3038,3326,3206,3010,3009,3004,3044,
            2775,254,3229,3230,3231,3232,3233,3049,3047,3050,
            3052,3055,3054,2998,3051,701,3123,700,3252,3249,
            3251,3253,3254,3255,3256,3123,1983,3000,3123,2014,
            23,736,3046,3036,3026,3022,3012,3045,3210,3208,
            3209,3211,3212,3213,3214,3215,3216,3042,3038,3123,
            3206,3010,3009,3004,3044,2775,254,3229,3230,3231,
            3232,3233,3049,3047,3050,3052,3055,3054,2998,3051,
            701,3123,700,3252,3249,3251,3253,3254,3255,3256,
            3123,25,3123,3326,26,2966,2912,416,5,3123,
            3123,2014,2293,3003,3046,3036,3026,3022,3012,3045,
            3210,3208,3209,3211,3212,3213,3214,3215,3216,3042,
            3038,3123,3206,3010,3009,3004,3044,2775,254,3229,
            3230,3231,3232,3233,3049,3047,3050,3052,3055,3054,
            2998,3051,701,293,700,3252,3249,3251,3253,3254,
            3255,3256,3,1983,3000,3123,2014,2989,736,3046,
            3036,3026,3022,3012,3045,3210,3208,3209,3211,3212,
            3213,3214,3215,3216,3042,3038,3123,3206,3010,3009,
            3004,3044,2775,254,3229,3230,3231,3232,3233,3049,
            3047,3050,3052,3055,3054,2998,3051,701,3123,700,
            3252,3249,3251,3253,3254,3255,3256,11,3123,2014,
            3326,736,3046,3036,3026,3022,3012,3045,3210,3208,
            3209,3211,3212,3213,3214,3215,3216,3042,3038,116,
            3206,3010,3009,3004,3044,2775,254,3229,3230,3231,
            3232,3233,3049,3047,3050,3052,3055,3054,2998,3051,
            701,3123,700,3252,3249,3251,3253,3254,3255,3256,
            3123,1983,3123,2014,341,736,3046,3036,3026,3022,
            3012,3045,3210,3208,3209,3211,3212,3213,3214,3215,
            3216,3042,3038,31,3206,3010,3009,3004,3044,2775,
            254,3229,3230,3231,3232,3233,3049,3047,3050,3052,
            3055,3054,2998,3051,701,2262,700,3252,3249,3251,
            3253,3254,3255,3256,3123,19,223,3207,3046,3036,
            3026,3022,3012,3045,3210,3208,3209,3211,3212,3213,
            3214,3215,3216,3066,3038,3123,3206,3010,3009,3004,
            3044,3068,3065,2966,2912,416,3123,2,3049,3047,
            3050,3052,3055,3054,2998,3051,3123,69,3123,3207,
            3046,3036,3026,3022,3012,3045,3210,3208,3209,3211,
            3212,3213,3214,3215,3216,3066,3038,3123,3206,3010,
            3009,3004,3044,3068,3065,3123,23,23,3123,3001,
            3049,3047,3050,3052,3055,3054,2998,3051,164,1606,
            1749,1715,1714,1680,1681,1678,1645,1644,1642,1609,
            1608,3123,3248,48,3217,12,3123,348,95,2984,
            3088,3210,3208,3209,3211,3212,3213,3214,3215,3216,
            276,155,282,2417,413,410,2592,2565,2538,2977,
            3229,3230,3231,3232,3233,159,49,2995,3217,3123,
            290,2992,2927,596,61,3210,3208,3209,3211,3212,
            3213,3214,3215,3216,3133,22,3123,290,288,2592,
            2565,2538,341,24,3229,3230,3231,3232,3233,44,
            2807,1260,3207,3123,2975,202,84,596,3123,3210,
            3208,3209,3211,3212,3213,3214,3215,3216,3123,3123,
            65,3206,3207,3123,2982,3123,3217,2927,46,3210,
            3208,3209,3211,3212,3213,3214,3215,3216,13,2884,
            2862,3206,341,7,25,2966,2912,416,25,155,
            155,2200,26,3123,2231,348,26,84,94,64,
            3326,2200,155,3123,3123,3123,526,3123,3123,3123,
            41,2927,1717,156,1797,3123,3074,1952,2884,2862,
            3123,2386,3123,2936,40,1828,3079,288,1859,1890,
            1921,3123,2979,168,167,341,2857,288,209,3084,
            3123,2045,3123,288,3123,424,3123,3123,1462,94,
            1429,2510,3123,3061,3288,3123,3123,345,3289,3123,
            3123,1318,1534,3123,459,3123,494,3123,529,3123,
            564,3123,599,3123,634,210,3062,3123,669,3123,
            704,3063,3123,739,3123,774,3123,809,3123,844,
            3123,879,3123,914,3123,949,3123,984,3123,1019,
            3123,1054,3123,1089,80,1124,3123,3123,3202,3123,
            1159,3123,1194,3123,3123,205,3198,2138,3071,112,
            104,3228,2076,96,3123,3072,3217,97,2907,3123,
            1287,3123,1323,3123,1359,3123,1395,3123,1431,3123,
            1467,3123,1503,3123,1539,3123,1575,3123,1611,3123,
            1647,3123,298,3123,361,3123,3123,2935,2200,3123,
            2355,3322,1229,3123,3123,3321,3320,3123,3123,3319,
            3317,3123,95,3316,3123,3123,3315,3314,3123,290,
            3313,3123,3123,3312,3310,3123,3123,3309,3308,3123,
            3123,3307,3306,3123,3123,3305,3304,3123,3123,3303,
            3302,3123,3123,3301,3300,3123,3123,3318,3311,200,
            1124,3123,3123,3123,3272,3271,3123,3123,3270,3269,
            3123,3123,3268,3267,3123,3123,3266,3265,3123,3123,
            3264,3263,2922,3123,3123,3262,3338,221,217,3123,
            3123,3337,3123,3123,3123,3276,3123,3123,3277,3123,
            3123,3123,3123,3123,3123,3123,3123,3123,2987,3123,
            3123,3123,3123,3123,3123,3123,3123,3123,3123,3123,
            3123,3123,3123,3123,3123,3123,3123,3123,3123,3123,
            3123,1751,3123,3123,3123,3123,3123,3123,3123,3123,
            3123,3123,3123,3123,3123,3123,3123,3123,2448,3123,
            2479,3123,3123,3123,3123,3123,3123,3123,3123,3123,
            3123,3123,3123,3123,3123,3123,3123,3123,3123,3123,
            3123,3123,3336
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            452,169,100,333,334,171,171,171,460,461,
            163,398,163,168,37,182,182,182,182,182,
            171,171,108,284,290,289,381,375,450,450,
            114,114,114,114,114,182,182,153,240,239,
            281,153,236,233,114,37,233,163,114,450,
            242,242,244,292,449,449,449,449,449,449,
            449,449,449,246,449,449,449,449,449,449,
            449,449,449,449,245,114,402,402,248,254,
            252,256,265,262,163,114,288,234,509,234,
            234,509,165,294,184,163,1,153,450,450,
            450,450,450,450,450,450,450,450,450,450,
            450,450,450,450,450,450,450,450,114,296,
            234,450,450,131,54,153,153,116,116,116,
            116,115,115,115,115,115,115,115,115,115,
            115,98,337,233,37,182,163,163,166,165,
            163,114,234,509,342,340,343,345,114,401,
            342,349,233,184,184,184,184,184,184,184,
            184,184,184,184,184,184,184,184,184,184,
            184,184,390,184,184,184,449,449,449,245,
            450,450,450,450,450,450,450,450,450,450,
            450,450,450,450,252,252,262,256,256,256,
            114,37,234,334,464,114,163,393,114,163,
            114,114,114,2,234,395,234,234,234,234,
            234,234,234,234,234,234,234,234,234,234,
            234,234,234,234,234,247,234,234,234,114,
            296,163,114,114,114,114,114,114,114,114,
            114,114,114,112,112,98,182,331,114,390,
            105,234,387,485,234,234,234,234,234,234,
            234,234,234,234,234,508,509,234,114,465,
            512,247,163,114,163,114,37,113,388,234,
            388,114,114,234
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            66,27,64,28,1,38,39,37,41,36,
            34,35,4,9,26,19,20,5,6,7,
            8,23,24,25,40,48,49,45,47,46,
            50,51,22,44,53,54,11,12,10,13,
            14,15,16,17,18,42,29,30,31,32,
            33,3,0,86,87,88,90,89,91,92,
            93,94,95,96,85,11,12,10,13,14,
            15,16,17,18,22,3,38,39,37,41,
            36,34,35,9,26,27,19,20,5,6,
            7,8,28,23,24,25,40,4,0,2,
            43,84,58,21,56,74,0,79,57,52,
            0,2,69,54,53,1,29,30,31,32,
            33,42,48,49,45,47,46,50,51,44,
            38,39,37,41,36,34,35,4,9,26,
            27,19,20,5,6,7,8,28,23,24,
            25,40,22,11,12,10,13,14,15,16,
            17,18,3,0,43,84,0,57,58,0,
            22,3,11,12,10,13,14,15,16,17,
            18,21,0,27,28,1,38,39,37,41,
            36,34,35,4,9,26,19,20,5,6,
            7,8,23,24,25,40,29,30,31,32,
            33,42,48,49,45,47,46,50,51,22,
            11,12,10,13,14,15,16,17,18,44,
            53,54,3,2,0,59,63,58,57,79,
            0,65,0,52,67,1,55,77,78,73,
            75,19,20,26,27,4,9,5,6,7,
            8,23,24,25,2,66,68,56,43,74,
            76,59,63,71,72,80,81,82,84,83,
            57,79,58,60,61,62,0,21,1,59,
            63,52,0,80,0,26,27,19,20,5,
            6,4,7,8,9,2,66,68,73,56,
            43,74,75,76,77,78,59,60,61,62,
            63,80,81,82,23,24,25,83,84,1,
            57,79,58,72,71,0,21,1,0,21,
            4,43,66,0,66,43,76,0,26,27,
            19,20,5,6,7,8,9,68,73,75,
            76,77,78,59,57,79,63,80,81,82,
            23,24,25,83,60,61,62,71,72,52,
            2,66,74,84,58,4,43,56,0,68,
            43,0,81,0,2,52,0,58,70,0,
            64,44,11,12,10,13,14,15,16,17,
            18,22,3,51,50,46,19,47,45,48,
            49,42,29,30,31,32,33,38,39,37,
            41,36,34,35,4,9,26,27,20,5,
            6,7,8,28,23,24,25,40,55,1,
            0,71,72,57,70,60,61,62,3,58,
            59,63,0,4,60,61,62,11,12,10,
            13,14,15,16,17,18,42,29,30,31,
            32,33,3,0,56,52,26,27,19,20,
            5,6,4,7,8,9,1,67,73,75,
            55,77,78,23,24,25,83,21,2,43,
            0,82,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static byte nasb[] = {0,
            39,33,33,33,33,27,27,27,33,33,
            32,34,16,23,31,33,33,33,33,33,
            27,27,9,21,19,33,33,33,33,33,
            30,30,30,30,30,33,33,7,33,23,
            25,7,33,44,30,31,46,51,30,33,
            33,33,33,33,4,4,4,4,4,4,
            4,4,4,4,4,4,4,4,4,4,
            4,4,4,4,4,30,1,1,11,33,
            33,33,33,33,36,30,33,33,33,33,
            33,33,14,33,30,48,30,7,33,33,
            33,33,33,33,33,33,33,33,33,33,
            33,33,33,33,33,33,33,33,30,33,
            33,33,33,7,6,7,7,30,30,30,
            30,30,30,30,30,30,30,30,30,30,
            30,33,33,44,31,33,51,51,33,33,
            51,30,33,33,33,33,33,33,30,1,
            33,33,32,30,30,30,30,30,30,30,
            30,30,30,30,30,30,30,30,30,30,
            30,30,33,30,30,30,4,4,4,4,
            33,33,33,33,33,33,33,33,33,33,
            33,33,33,33,33,33,33,33,33,33,
            30,31,33,42,31,30,51,33,30,50,
            30,30,30,30,33,33,33,33,33,33,
            33,33,33,33,33,33,33,33,33,33,
            33,33,33,33,33,4,33,33,33,30,
            33,51,29,29,29,29,29,29,29,29,
            29,29,29,30,30,33,33,33,30,33,
            33,33,33,33,33,33,33,33,33,33,
            33,33,33,33,33,33,33,33,30,31,
            33,4,51,30,51,30,31,30,33,33,
            33,30,30,33
        };
    };
    public final static byte nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            2,4,3,31,0,76,2,0,49,0,
            70,71,0,82,0,3,68,0,46,0,
            69,0,40,0,44,0,39,0,32,2,
            4,3,0,48,0,52,67,0,49,65,
            46,47,0,55,0,80,0,75,0,59,
            32,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            11,12,96,7,5,6,8,9,10,83,
            84,85,86,87,89,90,91,92,3,4,
            20,34,49,50,51,1,2,52,58,59,
            60,61,62,75,76,77,78,79,80,81,
            82,88,19,30,31,32,33,56,57,93,
            94,21,45,54,25,18,39,95,35,36,
            37,38,42,97,13,14,15,16,28,40,
            43,44,17,22,23,24,26,27,41,46,
            47,48,53,55,63,64,65,66,67,68,
            69,70,71,72,73,74,98
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            0,108,105,127,0,122,123,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,121,119,120,0,118,117,110,116,0,
            0,103,126,0,133,109,0,0,0,107,
            0,0,0,101,138,100,102,104,106,0,
            0,112,0,0,115,129,0,131,134,0,
            0,137,0,0,99,0,111,113,114,124,
            125,0,0,128,130,132,0,0,0,135,
            0,136,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            178,13,206,186,1,8,53,58,63,68,
            73,78,83,88,93,98,103,108,113,118,
            123,128,133,138,143,148,153,158,22,163,
            167,226,230,234,238,242,246,250,254,258,
            262,266,270,276,283,40,47,171,212,47,
            196,196,280,31,219,219
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            6,20,6,192,6,6,6,6,6,6,
            6,6,6,6,6,6,6,6,6,6,
            6,6,6,6,6,6,6,6,27,6,
            6,6,6,6,6,6,6,6,6,6,
            6,6,274,274,6,44,51,175,216,51,
            192,200,6,34,216,221
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            78,25,78,78,71,71,5,5,5,5,
            5,5,5,5,5,5,5,5,5,5,
            5,5,5,5,5,5,5,5,25,37,
            38,77,77,77,77,77,77,77,77,77,
            77,77,13,12,7,30,60,32,35,9,
            78,78,8,25,35,35
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            2,82,2,56,2,2,2,2,2,2,
            2,2,2,2,2,2,2,2,2,2,
            2,2,2,2,2,2,2,2,81,2,
            2,2,2,2,2,2,2,2,2,2,
            2,2,66,66,2,84,68,4,56,68,
            56,74,2,80,56,43
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static byte scopeStateSet[] = {
            2,15,2,2,4,4,6,6,6,6,
            6,6,6,6,6,6,6,6,6,6,
            6,6,6,6,6,6,6,6,15,90,
            90,2,2,2,2,2,2,2,2,2,
            2,2,8,8,8,25,1,98,78,8,
            2,2,8,15,78,78
        };
    };
    public final static byte scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            158,1,99,78,0,12,0,158,1,99,
            77,0,125,81,125,80,125,53,0,48,
            0,125,80,125,53,0,47,110,48,0,
            125,53,0,46,110,47,110,48,0,178,
            129,54,0,55,110,0,130,67,99,0,
            16,0,131,1,128,25,0,131,1,128,
            24,0,131,1,128,23,0,131,1,128,
            28,0,131,1,128,8,0,131,1,128,
            7,0,131,1,128,6,0,131,1,128,
            5,0,131,1,128,20,0,131,1,128,
            19,0,131,1,128,27,0,131,1,128,
            26,0,131,1,128,9,0,131,1,128,
            4,0,131,1,128,35,0,131,1,128,
            34,0,131,1,128,36,0,131,1,128,
            41,0,131,1,128,37,0,131,1,128,
            39,0,131,1,128,38,0,131,1,128,
            99,0,176,1,42,0,133,1,101,0,
            133,21,3,0,7,110,0,125,56,129,
            74,129,1,85,0,129,74,129,1,85,
            0,18,110,12,0,129,1,85,0,22,
            103,18,110,12,0,125,56,129,1,85,
            0,129,43,129,0,18,110,0,129,0,
            19,103,18,110,0,132,1,96,0,132,
            1,95,0,132,1,94,0,132,1,93,
            0,132,1,92,0,132,1,91,0,132,
            1,89,0,132,1,90,0,132,1,88,
            0,132,1,87,0,132,1,86,0,172,
            65,42,0,14,0,170,65,101,0,125,
            1,0,131,1,44,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            282,276,0,333,0,276,282,2830,2884,2862,
            2807,1260,2775,254,2592,2565,2538,2510,2749,2723,
            2697,2671,2645,2619,2479,2448,1751,2417,2386,2355,
            2324,361,298,1717,1229,2293,2262,2231,2200,2169,
            2138,1194,1159,1124,1089,1054,1019,984,949,914,
            879,844,809,774,739,704,669,634,599,564,
            529,494,459,2107,2076,1683,223,424,2045,2014,
            1983,1952,1921,1890,1859,1828,1797,1647,1611,1575,
            1539,1503,1467,1431,1395,1359,1323,1287,0,2987,
            2922,2907,2982,2977,2936,2927,0,3088,3084,1647,
            1611,1575,1539,1503,1467,1431,1395,1359,1323,1287,
            3072,3001,3071,3063,3062,3061,2984,2989,3000,2979,
            2975,2906,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,160,3,144,147,62,61,60,143,148,
            70,162,57,146,21,71,72,136,136,136,
            63,59,100,165,100,3,133,100,101,42,
            21,21,21,21,21,136,136,52,163,146,
            166,52,143,1,4,1,1,54,53,44,
            42,101,3,100,40,25,24,23,8,7,
            6,5,20,19,26,9,4,35,34,36,
            41,37,39,38,99,1,28,27,104,121,
            119,123,126,124,21,21,99,150,152,133,
            176,177,129,125,1,65,65,52,128,128,
            128,128,128,128,128,128,128,128,128,128,
            128,128,128,128,128,128,128,128,67,128,
            125,128,128,75,73,78,77,27,26,20,
            19,8,7,6,5,9,4,83,25,24,
            23,149,3,1,21,2,43,43,178,179,
            43,80,131,130,172,3,170,125,64,27,
            171,99,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,130,1,1,1,28,19,27,99,
            85,96,95,94,93,92,91,89,90,88,
            87,86,99,99,119,119,124,123,123,123,
            4,21,150,133,21,84,43,125,43,43,
            4,76,64,43,169,100,131,131,131,131,
            131,131,131,131,131,131,131,131,131,131,
            131,131,131,131,131,68,131,131,131,67,
            128,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,133,2,144,81,130,
            129,132,129,3,132,132,132,132,132,132,
            132,132,132,132,158,69,159,158,4,21,
            125,68,74,56,43,56,21,43,129,125,
            129,56,56,125
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "+",
            "-",
            "*",
            "/",
            ">",
            "<",
            "=",
            ">=",
            "<=",
            "<>",
            "(",
            ")",
            "{",
            "}",
            "[",
            "]",
            "->",
            "|",
            ",",
            ":",
            "::",
            ";",
            ".",
            "..",
            "@pre",
            "^",
            "^^",
            "?",
            "$empty",
            "NUMERIC_OPERATION",
            "STRING_LITERAL",
            "INTEGER_LITERAL",
            "REAL_LITERAL",
            "self",
            "inv",
            "pre",
            "post",
            "body",
            "context",
            "package",
            "endpackage",
            "def",
            "derive",
            "init",
            "if",
            "then",
            "else",
            "endif",
            "and",
            "or",
            "xor",
            "not",
            "implies",
            "let",
            "in",
            "true",
            "false",
            "Set",
            "Bag",
            "Sequence",
            "Collection",
            "OrderedSet",
            "iterate",
            "forAll",
            "exists",
            "isUnique",
            "any",
            "one",
            "collect",
            "select",
            "reject",
            "collectNested",
            "sortedBy",
            "closure",
            "oclIsKindOf",
            "oclIsTypeOf",
            "oclAsType",
            "oclIsNew",
            "oclIsUndefined",
            "oclIsInvalid",
            "oclIsInState",
            "allInstances",
            "String",
            "Integer",
            "UnlimitedNatural",
            "Real",
            "Boolean",
            "Tuple",
            "OclAny",
            "OclVoid",
            "Invalid",
            "OclMessage",
            "null",
            "OclInvalid",
            "EOF_TOKEN",
            "IDENTIFIER",
            "INTEGER_RANGE_START",
            "ERROR_TOKEN",
            "packageDeclarationCSm",
            "invOrDefCS",
            "prePostOrBodyDeclCS",
            "initOrDerValueCS",
            "variableCS",
            "packageDeclarationCS",
            "pathNameCS",
            "contextDeclCSm",
            "contextDeclCS",
            "simpleNameCS",
            "typeCS",
            "oclExpressionCS",
            "defExpressionCS",
            "operationCS1",
            "operationCS",
            "prePostOrBodyDeclCSm",
            "parametersCS",
            "oclExp0CS",
            "oclExp1CS",
            "oclExp2CS",
            "oclExp3CS",
            "oclExp4CS",
            "oclExp5CS",
            "oclExp6CS",
            "oclExp7CS",
            "callExpCS",
            "messageExpCS",
            "argumentsCS",
            "collectionTypeIdentifierCS",
            "collectionLiteralPartsCS",
            "collectionLiteralPartCS",
            "variableListCS2",
            "featureCallExpCS",
            "loopExpCS",
            "iterContents",
            "variableCS2",
            "variableListCS",
            "letExpSubCS",
            "oclMessageArgumentsCS",
            "oclMessageArgCS"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 97,
           SCOPE_UBOUND      = 55,
           SCOPE_SIZE        = 56,
           MAX_NAME_LENGTH   = 26;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 304,
           NT_OFFSET         = 97,
           LA_STATE_OFFSET   = 3345,
           MAX_LA            = 2,
           NUM_RULES         = 222,
           NUM_NONTERMINALS  = 83,
           NUM_SYMBOLS       = 180,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 2906,
           IDENTIFIER_SYMBOL = 3,
           EOFT_SYMBOL       = 58,
           EOLT_SYMBOL       = 58,
           ACCEPT_ACTION     = 3122,
           ERROR_ACTION      = 3123;

    public final static boolean BACKTRACK = false;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
