/**
* Essential OCL Grammar
* <copyright>
*
* Copyright (c) 2005, 2009 IBM Corporation and others.
* All rights reserved.   This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   IBM - Initial API and implementation
*   E.D.Willink - Elimination of some shift-reduce conflicts
*   E.D.Willink - Remove unnecessary warning suppression
*   E.D.Willink - Bugs 184048, 225493, 243976, 259818, 282882, 287993, 288040, 292112
*   Borland - Bug 242880
*   Adolfo Sanchez-Barbudo Herrera (Open Canarias) - LPG v 2.0.17 adoption (242153)
*   Adolfo Sanchez-Barbudo Herrera (Open Canarias) - Introducing new LPG templates (299396)
*
* </copyright>
*
* $Id: OCLBacktrackingParserprs.java,v 1.15 2010/01/22 18:38:07 asanchez Exp $
*/
/**
* Complete OCL Grammar
* <copyright>
*
* Copyright (c) 2005, 2009 IBM Corporation and others.
* All rights reserved.   This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   IBM - Initial API and implementation
*   E.D.Willink - Bug 259818, 285633, 292112
*   Adolfo Sanchez-Barbudo Herrera (Open Canarias) - LPG v 2.0.17 adoption (242153)
*   Adolfo Sanchez-Barbudo Herrera (Open Canarias) - Introducing new LPG templates (299396)
* </copyright>
*/

package org.eclipse.ocl.parser.backtracking;

/**
 * The backtracking variant of the OCL parser parse table.
 * 
 * @noextend This class is not intended to be subclassed by clients.
 * 
 * @since 1.3
 */
@SuppressWarnings("nls")
public class OCLBacktrackingParserprs implements lpg.runtime.ParseTable, OCLBacktrackingParsersym {
    public final static int ERROR_SYMBOL = 1;
    public final int getErrorSymbol() { return ERROR_SYMBOL; }

    public final static int SCOPE_UBOUND = 53;
    public final int getScopeUbound() { return SCOPE_UBOUND; }

    public final static int SCOPE_SIZE = 54;
    public final int getScopeSize() { return SCOPE_SIZE; }

    public final static int MAX_NAME_LENGTH = 29;
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int NUM_STATES = 255;
    public final int getNumStates() { return NUM_STATES; }

    public final static int NT_OFFSET = 78;
    public final int getNtOffset() { return NT_OFFSET; }

    public final static int LA_STATE_OFFSET = 4690;
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }

    public final static int MAX_LA = 1;
    public final int getMaxLa() { return MAX_LA; }

    public final static int NUM_RULES = 333;
    public final int getNumRules() { return NUM_RULES; }

    public final static int NUM_NONTERMINALS = 122;
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }

    public final static int NUM_SYMBOLS = 200;
    public final int getNumSymbols() { return NUM_SYMBOLS; }

    public final static int SEGMENT_SIZE = 8192;
    public final int getSegmentSize() { return SEGMENT_SIZE; }

    public final static int START_STATE = 3970;
    public final int getStartState() { return START_STATE; }

    public final static int IDENTIFIER_SYMBOL = 5;
    public final int getIdentifier_SYMBOL() { return IDENTIFIER_SYMBOL; }

    public final static int EOFT_SYMBOL = 72;
    public final int getEoftSymbol() { return EOFT_SYMBOL; }

    public final static int EOLT_SYMBOL = 72;
    public final int getEoltSymbol() { return EOLT_SYMBOL; }

    public final static int ACCEPT_ACTION = 4356;
    public final int getAcceptAction() { return ACCEPT_ACTION; }

    public final static int ERROR_ACTION = 4357;
    public final int getErrorAction() { return ERROR_ACTION; }

    public final static boolean BACKTRACK = true;
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int getStartSymbol() { return lhs(0); }
    public final boolean isValidForParser() { return OCLBacktrackingParsersym.isValidForParser; }


    public interface IsNullable {
        public final static byte isNullable[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            1,0,0,0,1,1,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            1,0,1,1,0,0,0,0,0,0,
            1,0,1,0,0,1,0,0,0,0,
            0,0,1,0,0,0,0,0,0,0
        };
    };
    public final static byte isNullable[] = IsNullable.isNullable;
    public final boolean isNullable(int index) { return isNullable[index] != 0; }

    public interface ProsthesesIndex {
        public final static byte prosthesesIndex[] = {0,
            12,122,9,10,14,16,17,11,28,29,
            30,31,32,37,38,39,40,41,42,43,
            45,46,47,48,49,50,51,52,53,58,
            59,60,85,87,88,89,90,99,82,83,
            84,79,80,81,76,77,78,73,74,75,
            70,71,72,67,68,69,64,65,66,23,
            54,61,62,63,20,120,6,8,13,24,
            55,98,56,15,21,22,57,96,93,27,
            86,108,109,110,111,26,35,36,94,95,
            102,25,33,34,97,100,101,104,107,113,
            114,115,118,119,2,3,4,18,19,44,
            91,92,103,105,106,112,116,117,121,1,
            5,7
        };
    };
    public final static byte prosthesesIndex[] = ProsthesesIndex.prosthesesIndex;
    public final int prosthesesIndex(int index) { return prosthesesIndex[index]; }

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,0,0,0,1,0,0,1,1,
            1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,1,
            0,1,1,1,1,1,1,1,1,0,
            1,1,0,0,1,1,1,0,0,1,
            1,0,0,1,1,1,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,3,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,4,4,0,1,1,
            3,1,3,3,5,1,1,1,1,1,
            1,1,1,1,1,1,1,4,4,0,
            1,1,3,1,1,3,1,1,1,1,
            1,1,1,4,1,3,1,1,1,2,
            1,1,1,1,1,1,1,1,1,1,
            1,1,8,10,10,8,10,1,1,1,
            5,6,8,8,7,7,5,6,9,1,
            4,6,4,7,5,0,0,1,1,3,
            1,1,1,1,1,1,1,1,1,3,
            1,3,1,1,1,3,1,3,1,1,
            1,3,1,3,1,1,1,3,1,3,
            1,1,1,3,3,1,3,3,1,1,
            1,3,3,3,3,1,3,3,3,3,
            1,1,1,3,3,1,3,3,1,1,
            1,3,3,1,3,3,1,1,1,2,
            2,1,2,2,1,1,1,1,1,1,
            3,7,4,1,3,1,1,1,1,1,
            0,1,1,1,1,1,1,1,1,1,
            1,1,0,1,1,0,1,7,2,2,
            1,6,6,0,1,1,3,1,3,1,
            1,1,2,1,1,4,1,0,1,1,
            2,1,1,1,7,1,2,3,3,3,
            5,1,2,4,4,5,3,3,3,1,
            2,4,4,4,6,8,0,1,1,3,
            1,1,1,1,4,2,1,4,7,5,
            3,3,3,4,4,3,2,2,3,3,
            4,5,2,1,7,3,3,3,3,2,
            2,5,4,-90,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,44,45,46,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,61,62,63,64,-97,1,
            2,-80,-2,5,-14,1,2,-3,-9,5,
            -20,-13,-77,1,2,-82,-15,5,-22,-222,
            87,88,-95,1,2,-24,93,94,-91,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,82,83,84,85,82,83,84,
            85,-96,1,2,106,107,-98,1,2,90,
            -76,-27,-29,-32,98,87,88,-37,-79,-128,
            119,93,94,-196,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,44,45,46,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,61,62,63,64,65,72,
            73,72,73,70,-35,-36,-38,79,75,89,
            -176,-39,-40,-41,-43,-145,-159,1,2,86,
            -236,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,70,72,73,79,
            -45,71,-46,-47,-48,75,-49,-33,-237,1,
            2,3,4,5,6,7,86,-189,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            23,24,25,26,27,28,29,30,31,32,
            33,34,35,36,37,38,39,40,41,42,
            43,44,45,46,47,48,49,50,51,52,
            53,54,55,56,57,58,59,60,61,62,
            63,64,74,-12,1,2,79,-50,5,-51,
            -52,-53,-54,-55,-56,-60,-61,-62,-63,-64,
            -65,-66,-67,95,-123,-68,-72,100,91,-147,
            -184,1,2,96,97,-190,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,41,42,43,44,
            45,46,47,48,49,50,51,52,53,54,
            55,56,57,58,59,60,61,62,63,64,
            70,72,73,79,-85,-86,76,-87,-93,-94,
            -99,-106,-107,-108,-119,-120,-121,-124,-125,-126,
            117,-127,92,-129,100,-131,91,-181,-232,1,
            2,96,97,-130,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,44,45,46,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,61,62,63,64,70,72,
            73,-132,-133,-134,71,-209,-135,-218,-136,-148,
            77,-179,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,38,
            39,40,41,42,43,44,45,46,47,48,
            49,50,51,52,53,54,55,56,57,58,
            59,60,61,62,63,64,-137,72,73,72,
            73,72,71,-228,-138,-248,-139,-140,77,-187,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,24,25,26,27,28,29,30,
            31,32,33,34,35,36,37,38,39,40,
            41,42,43,44,45,46,47,48,49,50,
            51,52,53,54,55,56,57,58,59,60,
            61,62,63,64,-141,72,73,72,73,-143,
            -144,-146,-149,-150,-151,-152,-153,-154,-155,-156,
            -157,-158,-162,-163,-164,-165,87,88,-208,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,-166,-167,-168,-169,-170,-175,71,
            -182,-183,-188,-191,-194,77,-211,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,38,39,40,41,42,43,
            44,45,46,47,48,49,50,51,52,53,
            54,55,56,57,58,59,60,61,62,63,
            64,-195,-197,-198,-199,-200,-202,71,-204,-205,
            -206,-207,-210,77,-212,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,38,39,40,41,42,43,44,45,
            46,47,48,49,50,51,52,53,54,55,
            56,57,58,59,60,61,62,63,64,-213,
            -214,-215,-216,-217,-223,71,-226,-227,-229,-230,
            -240,77,-239,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,41,42,43,44,45,46,47,
            48,49,50,51,52,53,54,55,56,57,
            58,59,60,61,62,63,64,-241,-242,-243,
            -244,-245,-246,71,-247,-249,-253,-254,-255,77,
            -84,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,0,0,0,0,0,
            0,71,-193,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,41,42,43,44,45,46,47,
            48,49,50,51,52,53,54,55,56,57,
            58,59,60,61,62,63,64,0,0,0,
            0,0,0,71,-225,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,38,39,40,41,42,43,44,45,
            46,47,48,49,50,51,52,53,54,55,
            56,57,58,59,60,61,62,63,64,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-17,1,2,
            3,4,5,6,7,91,-235,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,38,39,40,41,42,43,
            44,45,46,47,48,49,50,51,52,53,
            54,55,56,57,58,59,60,61,62,63,
            64,74,0,0,0,0,0,71,-16,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,-18,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,44,45,46,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,61,62,63,64,-19,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,-42,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,44,45,46,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,61,62,63,64,-44,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,-69,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,44,45,46,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,61,62,63,64,-70,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,-71,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,44,45,46,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,61,62,63,64,-75,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,-117,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,44,45,46,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,61,62,63,64,-142,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,-160,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,44,45,46,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,61,62,63,64,-171,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,-172,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,44,45,46,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,61,62,63,64,-180,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,-186,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,44,45,46,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,61,62,63,64,-203,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,-231,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,44,45,46,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,61,62,63,64,-233,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,-250,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,44,45,46,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,61,62,63,64,-251,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,-252,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,44,45,46,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,61,62,63,64,-100,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,-116,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,-101,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,41,42,43,44,
            45,46,47,48,49,50,51,52,53,-115,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,24,25,26,27,28,29,30,
            31,32,33,34,35,36,37,38,39,40,
            41,42,43,44,45,46,47,48,49,50,
            -102,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,-103,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,-111,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,38,39,40,41,42,43,
            44,-112,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,38,
            39,40,41,42,43,44,-113,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,38,39,40,41,42,43,
            44,-114,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,38,
            39,40,41,42,43,44,-104,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,38,39,40,41,-105,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            -57,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,-58,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,24,25,26,27,28,29,30,
            31,32,33,34,35,36,37,38,0,0,
            0,81,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            81,-109,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,38,
            -110,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,-1,
            1,2,81,-92,1,2,3,4,5,6,
            7,-185,1,2,0,-173,1,2,0,-238,
            1,2,3,4,5,6,7,-31,-4,0,
            -5,0,0,0,0,0,0,0,0,0,
            0,81,0,0,0,-177,1,2,0,0,
            0,-21,0,0,-201,-6,1,2,3,4,
            0,0,0,0,65,-23,-25,0,0,70,
            0,0,0,0,75,76,65,74,79,80,
            65,82,83,84,85,70,0,0,89,90,
            75,76,0,74,66,80,66,98,99,-7,
            1,2,3,4,105,-8,1,2,3,4,
            65,112,113,114,95,70,89,66,103,104,
            75,76,67,68,69,80,-10,1,2,3,
            4,66,66,78,-11,1,2,3,4,-26,
            1,2,3,4,90,118,0,0,103,104,
            -161,1,2,3,4,5,6,7,-174,1,
            2,3,4,5,6,7,67,68,69,-34,
            116,0,67,68,69,0,0,78,-78,1,
            2,3,4,78,-178,1,2,3,4,5,
            6,7,0,67,68,69,-81,1,2,3,
            4,67,68,69,78,0,67,68,69,-28,
            -30,-73,78,-88,1,2,-122,78,-83,1,
            2,3,4,0,74,-192,1,2,3,4,
            -219,-221,74,-224,1,2,3,4,5,6,
            7,-220,1,2,0,67,68,69,-74,1,
            2,82,83,84,85,-89,1,2,74,-118,
            1,2,0,67,68,69,0,0,99,-234,
            1,2,-59,1,2,66,66,66,0,0,
            0,0,66,70,115,67,68,69,0,76,
            0,0,67,68,69,0,66,66,0,0,
            0,0,0,0,0,92,65,74,0,0,
            0,70,0,65,0,0,75,76,0,0,
            65,80,0,110,65,0,0,0,0,0,
            0,0,0,0,65,0,0,0,0,0,
            0,0,70,0,75,0,0,0,0,101,
            102,0,0,0,0,86,0,0,0,0,
            101,102,0,108,109,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,111,0,0,0,0,0,0,
            0,0,0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            105,106,106,106,106,106,106,106,106,106,
            106,106,106,106,106,106,107,121,121,121,
            121,121,121,121,121,121,121,121,67,122,
            68,68,68,8,1,69,69,5,5,4,
            4,4,4,4,4,4,4,3,3,3,
            3,3,74,74,74,74,6,7,108,108,
            109,109,75,65,76,70,92,92,86,86,
            80,80,80,80,9,9,9,9,10,10,
            93,93,94,94,87,87,88,12,12,12,
            12,12,12,12,11,110,110,14,15,16,
            16,17,17,18,19,20,13,13,13,21,
            21,23,23,24,24,24,25,25,22,22,
            22,27,27,27,27,27,27,27,27,27,
            29,28,28,30,30,30,73,77,77,71,
            71,60,60,32,31,61,61,64,64,62,
            62,63,63,58,58,57,57,59,59,55,
            55,54,54,56,56,52,52,51,51,53,
            53,49,49,48,48,48,50,50,50,46,
            46,45,45,45,45,45,47,47,47,47,
            47,43,43,42,42,42,44,44,44,40,
            40,39,39,39,41,41,41,81,81,33,
            33,33,34,34,34,26,26,35,35,35,
            35,35,37,36,111,111,105,105,105,105,
            105,105,121,121,121,121,121,121,121,121,
            121,121,121,78,78,4,95,95,27,30,
            72,73,38,38,96,96,97,97,91,91,
            91,35,112,112,113,113,98,114,115,115,
            99,99,82,82,82,83,116,116,90,90,
            84,84,100,100,79,79,79,101,101,85,
            118,118,89,89,89,102,117,103,103,104,
            104,66,119,2,1,6,11,110,30,37,
            37,37,37,26,38,38,84,101,101,79,
            79,79,102,102,102,117,117,89,89,89,
            90,90,98,98,79,518,304,604,106,596,
            603,108,143,219,74,75,76,77,87,88,
            597,90,91,92,93,217,109,110,111,112,
            605,118,119,120,130,768,218,201,204,595,
            212,220,261,681,776,196,684,775,186,683,
            777,176,687,774,169,685,778,163,771,773,
            157,770,779,151,1045,141,780,146,772,829,
            790,304,37,198,1122,832,37,304,612,378,
            4140,659,504,832,37,304,1129,870,785,913,
            1056,82,84,832,1120,304,1035,1037,1047,126,
            518,304,604,106,596,603,108,143,219,74,
            75,76,77,87,88,597,90,91,92,93,
            217,109,110,111,112,605,118,119,120,130,
            768,218,201,204,595,212,220,261,681,776,
            196,684,775,186,683,777,176,687,774,169,
            685,778,163,771,773,157,770,779,151,1045,
            141,780,146,772,271,272,273,274,271,272,
            273,274,832,1121,304,16,606,832,970,304,
            277,732,1114,1121,1126,263,82,84,808,786,
            839,880,1048,1047,245,968,304,604,106,596,
            603,108,143,219,74,75,76,77,87,88,
            597,90,91,92,93,217,109,110,111,112,
            605,118,119,120,130,768,218,201,204,595,
            212,220,261,681,776,196,684,775,186,683,
            777,176,687,774,169,685,778,163,771,773,
            157,770,779,151,1360,1364,780,146,772,1363,
            866,865,251,131,1361,76,129,39,283,68,
            291,989,703,1097,523,82,1145,832,874,304,
            1362,464,1046,304,604,106,596,603,108,143,
            219,74,75,76,77,87,88,597,90,91,
            92,93,217,109,110,111,112,605,118,119,
            120,130,768,218,201,204,595,212,220,261,
            681,776,196,684,775,186,683,777,176,687,
            774,169,685,778,163,771,773,157,770,779,
            151,139,141,780,146,772,69,225,251,1214,
            283,939,1445,119,1030,590,68,149,681,759,
            37,304,783,52,786,54,55,1443,1,518,
            304,604,106,596,603,108,143,219,74,75,
            76,77,87,88,597,90,91,92,93,217,
            109,110,111,112,605,118,119,120,130,768,
            218,201,204,595,212,220,261,681,776,196,
            684,775,186,683,777,176,687,774,169,685,
            778,163,771,773,157,770,779,151,260,141,
            780,146,772,247,832,514,304,282,702,688,
            213,451,1100,933,639,1034,1031,125,1115,249,
            1109,1127,24,232,295,1008,376,1128,519,256,
            1012,832,963,304,1289,1291,40,518,304,604,
            106,596,603,108,143,219,74,75,76,77,
            87,88,597,90,91,92,93,217,109,110,
            111,112,605,118,119,120,130,768,218,201,
            204,595,212,220,261,681,776,196,684,775,
            186,683,777,176,687,774,169,685,778,163,
            771,773,157,770,779,151,260,141,780,146,
            772,67,251,1215,282,340,487,66,853,77,
            920,733,543,1058,1136,1131,860,1139,867,885,
            895,3998,1137,96,1017,601,787,256,1145,832,
            874,304,1292,1291,173,518,304,604,106,596,
            603,108,143,219,74,75,76,77,87,88,
            597,90,91,92,93,217,109,110,111,112,
            605,118,119,120,130,768,218,201,204,595,
            212,220,261,681,776,196,684,775,186,683,
            777,176,687,774,169,685,778,163,771,773,
            157,770,779,151,139,141,780,146,772,1438,
            251,135,1061,613,1138,1212,892,1142,984,966,
            1047,1211,209,518,304,604,106,596,603,108,
            143,219,74,75,76,77,87,88,597,90,
            91,92,93,217,109,110,111,112,605,118,
            119,120,130,768,218,201,204,595,212,220,
            261,681,776,196,684,775,186,683,777,176,
            687,774,169,685,778,163,771,773,157,770,
            779,151,139,141,780,146,772,306,251,1368,
            866,865,1282,1212,1145,813,1003,1143,1144,1287,
            464,518,304,604,106,596,603,108,143,219,
            74,75,76,77,87,88,597,90,91,92,
            93,217,109,110,111,112,605,118,119,120,
            130,768,218,201,204,595,212,220,261,681,
            776,196,684,775,186,683,777,176,687,774,
            169,685,778,163,771,773,157,770,779,151,
            1045,141,780,146,772,1076,251,134,866,865,
            425,712,1147,857,1148,908,1149,974,685,891,
            809,1080,1082,987,1065,1069,1084,83,84,281,
            518,304,604,106,596,603,108,143,219,74,
            75,76,77,87,88,597,90,91,92,93,
            217,109,110,111,112,605,118,119,120,130,
            768,218,201,204,595,212,220,261,681,776,
            196,684,775,186,683,777,176,687,774,169,
            685,778,163,771,773,157,770,779,151,139,
            141,780,146,772,1088,956,831,882,1152,1151,
            1212,1153,1155,392,756,1004,1367,317,518,304,
            604,106,596,603,108,143,219,74,75,76,
            77,87,88,597,90,91,92,93,217,109,
            110,111,112,605,118,119,120,130,768,218,
            201,204,595,212,220,261,681,776,196,684,
            775,186,683,777,176,687,774,169,685,778,
            163,771,773,157,770,779,151,139,141,780,
            146,772,1164,1158,1169,1157,1175,1183,1212,1184,
            1163,1171,1189,1091,1369,353,518,304,604,106,
            596,603,108,143,219,74,75,76,77,87,
            88,597,90,91,92,93,217,109,110,111,
            112,605,118,119,120,130,768,218,201,204,
            595,212,220,261,681,776,196,684,775,186,
            683,777,176,687,774,169,685,778,163,771,
            773,157,770,779,151,139,141,780,146,772,
            1194,1173,910,1188,1190,1106,1212,1198,1177,1205,
            1206,1207,1370,428,518,304,604,106,596,603,
            108,143,219,74,75,76,77,87,88,597,
            90,91,92,93,217,109,110,111,112,605,
            118,119,120,130,768,218,201,204,595,212,
            220,261,681,776,196,684,775,186,683,777,
            176,687,774,169,685,778,163,771,773,157,
            770,779,151,139,141,780,146,772,1200,1211,
            1212,1216,1108,1217,1212,1110,1218,1223,1224,1225,
            1446,464,518,304,604,106,596,603,108,143,
            219,74,75,76,77,87,88,597,90,91,
            92,93,217,109,110,111,112,605,118,119,
            120,130,768,218,201,204,595,212,220,261,
            681,776,196,684,775,186,683,777,176,687,
            774,169,685,778,163,771,773,157,770,779,
            151,139,141,780,146,772,4357,4357,4357,4357,
            4357,4357,884,464,518,304,604,106,596,603,
            108,143,219,74,75,76,77,87,88,597,
            90,91,92,93,217,109,110,111,112,605,
            118,119,120,130,768,218,201,204,595,212,
            220,261,681,776,196,684,775,186,683,777,
            176,687,774,169,685,778,163,771,773,157,
            770,779,151,139,141,780,146,772,4357,4357,
            4357,4357,4357,4357,1293,389,518,304,604,106,
            596,603,108,143,219,74,75,76,77,87,
            88,597,90,91,92,93,217,109,110,111,
            112,605,118,119,120,130,768,218,201,204,
            595,212,220,261,681,776,196,684,775,186,
            683,777,176,687,774,169,685,778,163,771,
            773,157,770,779,151,260,141,780,146,772,
            4357,4357,4357,4357,4357,4357,4357,4357,4357,4357,
            4357,4357,4357,4357,4357,4357,4357,4357,783,37,
            304,783,52,786,54,55,257,464,518,304,
            604,106,596,603,108,143,219,74,75,76,
            77,87,88,597,90,91,92,93,217,109,
            110,111,112,605,118,119,120,130,768,218,
            201,204,595,212,220,261,681,776,196,684,
            775,186,683,777,176,687,774,169,685,778,
            163,771,773,157,770,779,151,139,141,780,
            146,772,781,4357,4357,4357,4357,4357,1442,464,
            518,304,604,106,596,603,108,143,219,74,
            75,76,77,87,88,597,90,91,92,93,
            217,109,110,111,112,605,118,119,120,130,
            768,218,201,204,595,212,220,261,681,776,
            196,684,775,186,683,777,176,687,774,169,
            685,778,163,771,773,157,770,779,151,64,
            141,780,146,772,464,518,304,604,106,596,
            603,108,143,219,74,75,76,77,87,88,
            597,90,91,92,93,217,109,110,111,112,
            605,118,119,120,130,768,218,201,204,595,
            212,220,261,681,776,196,684,775,186,683,
            777,176,687,774,169,685,778,163,771,773,
            157,770,779,151,279,141,780,146,772,464,
            518,304,604,106,596,603,108,143,219,74,
            75,76,77,87,88,597,90,91,92,93,
            217,109,110,111,112,605,118,119,120,130,
            768,218,201,204,595,212,220,261,681,776,
            196,684,775,186,683,777,176,687,774,169,
            685,778,163,771,773,157,770,779,151,278,
            141,780,146,772,500,518,304,604,106,596,
            603,108,143,219,74,75,76,77,87,88,
            597,90,91,92,93,217,109,110,111,112,
            605,118,119,120,130,768,218,201,204,595,
            212,220,261,681,776,196,684,775,186,683,
            777,176,687,774,169,685,778,163,771,773,
            157,770,779,151,869,141,780,146,772,464,
            518,304,604,106,596,603,108,143,219,74,
            75,76,77,87,88,597,90,91,92,93,
            217,109,110,111,112,605,118,119,120,130,
            768,218,201,204,595,212,220,261,681,776,
            196,684,775,186,683,777,176,687,774,169,
            685,778,163,771,773,157,770,779,151,871,
            141,780,146,772,464,518,304,604,106,596,
            603,108,143,219,74,75,76,77,87,88,
            597,90,91,92,93,217,109,110,111,112,
            605,118,119,120,130,768,218,201,204,595,
            212,220,261,681,776,196,684,775,186,683,
            777,176,687,774,169,685,778,163,771,773,
            157,770,779,151,294,141,780,146,772,464,
            518,304,604,106,596,603,108,143,219,74,
            75,76,77,87,88,597,90,91,92,93,
            217,109,110,111,112,605,118,119,120,130,
            768,218,201,204,595,212,220,261,681,776,
            196,684,775,186,683,777,176,687,774,169,
            685,778,163,771,773,157,770,779,151,293,
            141,780,146,772,464,518,304,604,106,596,
            603,108,143,219,74,75,76,77,87,88,
            597,90,91,92,93,217,109,110,111,112,
            605,118,119,120,130,768,218,201,204,595,
            212,220,261,681,776,196,684,775,186,683,
            777,176,687,774,169,685,778,163,771,773,
            157,770,779,151,292,141,780,146,772,464,
            518,304,604,106,596,603,108,143,219,74,
            75,76,77,87,88,597,90,91,92,93,
            217,109,110,111,112,605,118,119,120,130,
            768,218,201,204,595,212,220,261,681,776,
            196,684,775,186,683,777,176,687,774,169,
            685,778,163,771,773,157,770,779,151,284,
            141,780,146,772,464,518,304,604,106,596,
            603,108,143,219,74,75,76,77,87,88,
            597,90,91,92,93,217,109,110,111,112,
            605,118,119,120,130,768,218,201,204,595,
            212,220,261,681,776,196,684,775,186,683,
            777,176,687,774,169,685,778,163,771,773,
            157,770,779,151,65,141,780,146,772,464,
            518,304,604,106,596,603,108,143,219,74,
            75,76,77,87,88,597,90,91,92,93,
            217,109,110,111,112,605,118,119,120,130,
            768,218,201,204,595,212,220,261,681,776,
            196,684,775,186,683,777,176,687,774,169,
            685,778,163,771,773,157,770,779,151,1213,
            141,780,146,772,464,518,304,604,106,596,
            603,108,143,219,74,75,76,77,87,88,
            597,90,91,92,93,217,109,110,111,112,
            605,118,119,120,130,768,218,201,204,595,
            212,220,261,681,776,196,684,775,186,683,
            777,176,687,774,169,685,778,163,771,773,
            157,770,779,151,223,141,780,146,772,464,
            518,304,604,106,596,603,108,143,219,74,
            75,76,77,87,88,597,90,91,92,93,
            217,109,110,111,112,605,118,119,120,130,
            768,218,201,204,595,212,220,261,681,776,
            196,684,775,186,683,777,176,687,774,169,
            685,778,163,771,773,157,770,779,151,288,
            141,780,146,772,464,518,304,604,106,596,
            603,108,143,219,74,75,76,77,87,88,
            597,90,91,92,93,217,109,110,111,112,
            605,118,119,120,130,768,218,201,204,595,
            212,220,261,681,776,196,684,775,186,683,
            777,176,687,774,169,685,778,163,771,773,
            157,770,779,151,287,141,780,146,772,464,
            518,304,604,106,596,603,108,143,219,74,
            75,76,77,87,88,597,90,91,92,93,
            217,109,110,111,112,605,118,119,120,130,
            768,218,201,204,595,212,220,261,681,776,
            196,684,775,186,683,777,176,687,774,169,
            685,778,163,771,773,157,770,779,151,140,
            141,780,146,772,464,518,304,604,106,596,
            603,108,143,219,74,75,76,77,87,88,
            597,90,91,92,93,217,109,110,111,112,
            605,118,119,120,130,768,218,201,204,595,
            212,220,261,681,776,196,684,775,186,683,
            777,176,687,774,169,685,778,163,771,773,
            157,770,779,151,86,141,780,146,772,464,
            518,304,604,106,596,603,108,143,219,74,
            75,76,77,87,88,597,90,91,92,93,
            217,109,110,111,112,605,118,119,120,130,
            768,218,201,204,595,212,220,261,681,776,
            196,684,775,186,683,777,176,687,774,169,
            685,778,163,771,773,157,770,779,151,1365,
            141,780,146,772,464,518,304,604,106,596,
            603,108,143,219,74,75,76,77,87,88,
            597,90,91,92,93,217,109,110,111,112,
            605,118,119,120,130,768,218,201,204,595,
            212,220,261,681,776,196,684,775,186,683,
            777,176,687,774,169,685,778,163,771,773,
            157,770,779,151,1371,141,780,146,772,464,
            518,304,604,106,596,603,108,143,219,74,
            75,76,77,87,88,597,90,91,92,93,
            217,109,110,111,112,605,118,119,120,130,
            768,218,201,204,595,212,220,261,681,776,
            196,684,775,186,683,777,176,687,774,169,
            685,778,163,771,773,157,770,779,151,1439,
            141,780,146,772,464,518,304,604,106,596,
            603,108,143,219,74,75,76,77,87,88,
            597,90,91,92,93,217,109,110,111,112,
            605,118,119,120,130,768,218,201,204,595,
            212,220,261,681,776,196,684,775,186,683,
            777,176,687,774,169,685,778,163,771,773,
            157,770,779,151,1447,141,780,146,772,464,
            518,304,604,106,596,603,108,143,219,74,
            75,76,77,87,88,597,90,91,92,93,
            217,109,110,111,112,605,118,119,120,130,
            768,218,201,204,595,212,220,261,681,776,
            196,684,775,186,683,777,176,687,774,169,
            685,778,163,771,773,157,770,779,151,1448,
            141,780,146,772,464,518,304,604,106,596,
            603,108,143,219,74,75,76,77,87,88,
            597,90,91,92,93,217,109,110,111,112,
            605,118,119,120,130,768,218,201,204,595,
            212,220,261,681,776,196,684,775,186,683,
            777,176,687,774,169,685,778,163,771,773,
            157,770,779,151,1449,141,780,146,772,464,
            518,304,604,106,596,603,108,143,219,74,
            75,76,77,87,88,597,90,91,92,93,
            217,109,110,111,112,605,118,119,120,130,
            1123,218,201,204,595,212,220,261,681,776,
            196,684,775,186,683,777,176,687,774,169,
            685,778,163,771,773,157,153,1124,152,464,
            518,304,604,106,596,603,108,143,219,74,
            75,76,77,87,88,597,90,91,92,93,
            217,109,110,111,112,605,118,119,120,130,
            1207,218,201,204,595,212,220,261,681,776,
            196,684,775,186,683,777,176,687,774,169,
            685,778,163,159,1208,158,464,518,304,604,
            106,596,603,108,143,219,74,75,76,77,
            87,88,597,90,91,92,93,217,109,110,
            111,112,605,118,119,120,130,1125,218,201,
            204,595,212,220,261,681,776,196,684,775,
            186,683,777,176,687,774,169,165,1126,164,
            464,518,304,604,106,596,603,108,143,219,
            74,75,76,77,87,88,597,90,91,92,
            93,217,109,110,111,112,605,118,119,120,
            130,1205,218,201,204,595,212,220,261,681,
            776,196,684,775,186,683,777,176,171,1206,
            170,464,518,304,604,106,596,603,108,143,
            219,74,75,76,77,87,88,597,90,91,
            92,93,217,109,110,111,112,605,118,119,
            120,130,1127,218,201,204,595,212,220,261,
            681,776,196,684,775,186,179,1128,178,464,
            518,304,604,106,596,603,108,143,219,74,
            75,76,77,87,88,597,90,91,92,93,
            217,109,110,111,112,605,118,119,120,130,
            1127,218,201,204,595,212,220,261,681,776,
            196,684,775,186,179,1129,177,464,518,304,
            604,106,596,603,108,143,219,74,75,76,
            77,87,88,597,90,91,92,93,217,109,
            110,111,112,605,118,119,120,130,1133,218,
            201,204,595,212,220,261,681,776,196,191,
            1134,190,464,518,304,604,106,596,603,108,
            143,219,74,75,76,77,87,88,597,90,
            91,92,93,217,109,110,111,112,605,118,
            119,120,130,1133,218,201,204,595,212,220,
            261,681,776,196,191,1135,189,464,518,304,
            604,106,596,603,108,143,219,74,75,76,
            77,87,88,597,90,91,92,93,217,109,
            110,111,112,605,118,119,120,130,1133,218,
            201,204,595,212,220,261,681,776,196,191,
            1136,188,464,518,304,604,106,596,603,108,
            143,219,74,75,76,77,87,88,597,90,
            91,92,93,217,109,110,111,112,605,118,
            119,120,130,1133,218,201,204,595,212,220,
            261,681,776,196,191,1204,187,464,518,304,
            604,106,596,603,108,143,219,74,75,76,
            77,87,88,597,90,91,92,93,217,109,
            110,111,112,605,118,119,120,130,1130,218,
            201,204,595,212,220,261,199,1131,198,464,
            518,304,604,106,596,603,108,143,219,74,
            75,76,77,87,88,597,90,91,92,93,
            217,109,110,111,112,605,118,119,120,130,
            1130,218,201,204,595,212,220,261,199,1132,
            197,464,518,304,604,106,596,603,108,143,
            219,74,75,76,77,87,88,597,90,91,
            92,93,217,109,110,111,112,605,118,119,
            120,130,872,218,207,214,595,212,220,261,
            464,518,304,604,106,596,603,108,143,219,
            74,75,76,77,87,88,597,90,91,92,
            93,217,109,110,111,112,605,118,119,120,
            130,872,218,207,213,595,212,220,261,4357,
            4357,4357,211,4357,4357,4357,4357,4357,4357,4357,
            4357,4357,4357,4357,4357,4357,4357,4357,4357,4357,
            4357,4357,4357,4357,4357,4357,4357,4357,4357,4357,
            4357,4357,4357,4357,4357,4357,4357,4357,4357,4357,
            4357,210,464,518,304,604,106,596,603,108,
            143,219,74,75,76,77,87,88,597,90,
            91,92,93,217,109,110,111,112,605,118,
            119,120,130,872,218,207,206,595,212,220,
            261,464,518,304,604,106,596,603,108,143,
            219,74,75,76,77,87,88,597,90,91,
            92,93,217,109,110,111,112,605,118,119,
            120,130,872,218,207,205,595,212,220,261,
            911,408,304,203,783,37,304,783,52,786,
            54,55,832,967,304,4357,750,408,304,4357,
            536,37,304,783,52,786,54,55,658,561,
            4357,706,4357,4357,4357,4357,4357,4357,4357,4357,
            4357,4357,202,4357,4357,4357,1020,408,304,4357,
            4357,4357,723,4357,4357,1037,559,35,304,30,
            31,4357,4357,4357,4357,72,761,843,4357,4357,
            73,4357,4357,4357,4357,70,71,61,1115,227,
            230,72,270,272,273,274,73,4357,4357,228,
            229,70,71,4357,247,331,299,330,264,412,
            587,35,304,30,31,403,610,35,304,30,
            31,72,417,262,265,296,73,290,329,1284,
            1285,70,71,32,36,4022,299,633,35,304,
            30,31,328,327,411,656,35,304,30,31,
            679,35,304,30,31,276,511,4357,4357,1286,
            1285,783,37,304,783,52,786,54,55,783,
            37,304,783,52,786,54,55,32,36,4036,
            1019,420,4357,32,36,4037,4357,4357,419,806,
            35,879,30,31,426,783,37,304,783,52,
            786,54,55,4357,32,36,4180,806,35,304,
            30,31,32,36,4181,512,4357,32,36,4182,
            858,957,971,513,1073,963,304,538,787,806,
            35,304,30,31,4357,1283,806,35,304,30,
            31,1092,1098,63,783,37,304,783,52,786,
            54,55,832,408,304,4357,32,36,878,1054,
            4187,304,270,272,273,274,717,967,304,4025,
            1054,4187,304,4357,32,36,38,4357,4357,416,
            832,1441,304,832,874,304,320,319,321,4357,
            4357,4357,4357,318,67,402,32,36,520,4357,
            66,4357,4357,32,36,966,4357,322,325,4357,
            4357,4357,4357,4357,4357,4357,95,72,259,4357,
            4357,4357,73,4357,876,4357,4357,70,71,4357,
            4357,60,300,4357,886,876,4357,4357,4357,4357,
            4357,4357,4357,4357,4357,69,4357,4357,4357,4357,
            4357,4357,4357,224,4357,68,4357,4357,4357,4357,
            285,875,4357,4357,4357,4357,1440,4357,4357,4357,
            4357,286,875,4357,964,969,4357,4357,4357,4357,
            4357,4357,4357,4357,4357,4357,4357,4357,4357,4357,
            4357,4357,4357,4357,873,4357,0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,0,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,0,24,2,26,27,28,29,
            30,31,32,33,34,35,0,1,0,0,
            1,2,3,0,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,24,24,64,26,27,28,29,30,
            31,32,33,34,35,0,0,1,0,1,
            2,0,0,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,65,24,64,26,27,28,29,30,31,
            32,33,34,35,39,40,41,42,0,0,
            39,40,41,42,0,0,1,2,0,51,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,0,24,
            74,26,27,28,29,30,31,32,33,34,
            35,43,44,45,46,0,38,43,44,45,
            46,23,0,1,2,3,51,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,47,24,0,26,27,
            28,29,30,31,32,33,34,35,0,1,
            2,3,0,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,0,24,2,26,27,28,29,30,31,
            32,33,34,35,0,1,2,3,0,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,55,24,72,
            26,27,28,29,30,31,32,33,34,35,
            0,1,2,3,0,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,55,24,0,26,27,28,29,
            30,31,32,33,34,35,0,1,2,3,
            0,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,0,
            24,2,26,27,28,29,30,31,32,33,
            34,35,0,1,2,3,51,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,0,24,0,26,27,
            28,29,30,31,32,33,34,35,0,1,
            2,0,1,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,0,24,38,26,27,28,29,30,31,
            32,33,34,35,0,1,2,0,1,2,
            3,54,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            0,24,64,26,27,28,29,30,31,32,
            33,34,35,0,1,2,75,0,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,0,24,2,26,
            27,28,29,30,31,32,33,34,35,0,
            1,2,52,0,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,0,24,2,26,27,28,29,30,
            31,32,33,34,35,0,1,0,1,2,
            5,4,0,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,0,1,
            0,1,4,5,4,62,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,39,40,41,42,63,0,1,53,0,
            4,5,57,58,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,0,
            1,0,0,4,5,4,4,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,0,1,23,23,4,5,0,50,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,0,1,0,0,4,
            5,23,4,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,0,1,
            0,1,4,5,0,47,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,0,0,1,2,0,1,6,7,4,
            53,0,1,2,57,58,0,1,38,3,
            0,5,0,1,23,0,4,43,44,45,
            46,0,0,1,54,3,56,36,37,59,
            39,40,41,42,43,44,45,46,47,0,
            1,50,3,52,5,0,55,2,0,1,
            0,1,61,5,4,63,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,0,1,53,0,0,5,57,58,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,0,1,0,0,2,
            5,25,0,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,0,1,
            0,0,1,5,6,7,5,51,0,54,
            2,56,0,1,59,38,4,39,40,41,
            42,23,0,23,26,48,0,0,1,0,
            1,4,6,7,36,37,0,60,2,0,
            4,43,44,45,46,47,38,47,50,23,
            52,0,23,55,0,73,48,6,7,61,
            0,0,36,37,0,39,40,41,42,43,
            44,45,46,47,23,53,50,0,52,0,
            0,1,0,6,7,5,4,36,37,0,
            39,40,41,42,43,44,45,46,47,38,
            23,50,0,43,44,45,46,53,0,48,
            71,57,58,36,37,7,39,40,41,42,
            43,44,45,46,47,0,0,1,49,65,
            4,6,7,53,54,0,56,57,58,59,
            0,1,62,0,4,37,66,67,69,6,
            7,71,72,0,52,2,0,4,0,70,
            25,36,37,7,39,40,41,42,43,44,
            45,46,0,0,2,2,4,0,25,36,
            37,0,39,40,41,42,0,1,0,0,
            1,38,3,37,5,39,40,41,42,0,
            0,48,49,0,0,6,0,7,4,6,
            38,25,54,60,56,38,0,59,2,38,
            48,49,69,0,1,0,38,0,5,48,
            0,54,60,56,0,36,59,37,0,36,
            6,60,0,1,6,0,1,5,3,0,
            62,0,25,0,68,25,7,0,7,6,
            0,0,1,6,48,4,0,0,1,0,
            36,4,66,67,36,0,1,0,0,0,
            3,51,3,0,0,25,37,4,37,36,
            0,66,67,36,4,0,0,0,0,4,
            0,4,25,76,25,0,0,0,0,4,
            3,0,0,0,0,4,0,0,0,23,
            0,0,0,23,0,3,0,0,68,63,
            61,23,0,0,50,2,4,25,0,61,
            0,3,0,23,0,70,0,3,2,25,
            23,25,0,0,38,3,3,0,0,0,
            62,3,48,0,51,25,3,0,50,0,
            3,65,55,52,0,0,0,3,3,3,
            0,0,25,3,25,0,0,0,0,4,
            3,49,0,0,0,3,3,3,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,49,0,
            0,0,0,0,0,0,0,0,0,0,
            49,0,0,0,0,49,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            4357,4660,2019,254,4357,4391,3810,4460,4404,4405,
            4406,4407,4408,4399,4397,4400,4398,4396,602,4401,
            4403,4402,4602,4357,4456,4226,3771,4454,4455,4390,
            1954,4243,4458,4459,4462,4461,4357,882,89,4357,
            4660,2019,254,4357,4391,3810,4460,4404,4405,4406,
            4407,4408,4399,4397,4400,4398,4396,602,4401,4403,
            4402,4602,4457,4456,1290,3771,4454,4455,4390,1954,
            4243,4458,4459,4462,4461,209,4357,4668,4357,4660,
            2019,4357,4357,4391,3810,4460,4404,4405,4406,4407,
            4408,4399,4397,4400,4398,4396,602,4401,4403,4402,
            4602,4623,4456,1290,3771,4454,4455,4390,1954,4243,
            4458,4459,4462,4461,215,215,215,215,173,4357,
            507,399,423,502,4357,4357,4660,2019,4357,80,
            4391,3810,4460,4404,4405,4406,4407,4408,4399,4397,
            4400,4398,4396,602,4401,4403,4402,4602,167,4456,
            2409,3771,4454,4455,4390,1954,4243,4458,4459,4462,
            4461,179,179,179,179,4357,4189,3642,3597,3552,
            3507,171,4357,4660,2019,137,80,4391,3810,4460,
            4404,4405,4406,4407,4408,4399,4397,4400,4398,4396,
            602,4401,4403,4402,4602,171,4456,4357,3771,4454,
            4455,4390,1954,4243,4458,4459,4462,4461,4357,4660,
            2019,137,149,4391,3810,4460,4404,4405,4406,4407,
            4408,4399,4397,4400,4398,4396,602,4401,4403,4402,
            4602,4357,4456,3974,3771,4454,4455,4390,1954,4243,
            4458,4459,4462,4461,4357,4660,2019,4478,4357,4391,
            3810,4460,4404,4405,4406,4407,4408,4399,4397,4400,
            4398,4396,602,4401,4403,4402,4602,153,4456,4356,
            3771,4454,4455,4390,1954,4243,4458,4459,4462,4461,
            4357,4660,2019,137,4357,4391,3810,4460,4404,4405,
            4406,4407,4408,4399,4397,4400,4398,4396,602,4401,
            4403,4402,4602,3249,4456,4357,3771,4454,4455,4390,
            1954,4243,4458,4459,4462,4461,4357,4660,2019,137,
            4357,4391,3810,4460,4404,4405,4406,4407,4408,4399,
            4397,4400,4398,4396,602,4401,4403,4402,4602,4357,
            4456,894,3771,4454,4455,4390,1954,4243,4458,4459,
            4462,4461,4357,4660,2019,137,4436,4391,3810,4460,
            4404,4405,4406,4407,4408,4399,4397,4400,4398,4396,
            602,4401,4403,4402,4602,53,4456,4357,3771,4454,
            4455,4390,1954,4243,4458,4459,4462,4461,4357,4660,
            2019,4357,4667,4391,3810,4460,4404,4405,4406,4407,
            4408,4399,4397,4400,4398,4396,602,4401,4403,4402,
            4602,4357,4456,4167,3771,4454,4455,4390,1954,4243,
            4458,4459,4462,4461,4357,4672,698,4357,4660,2019,
            137,4110,4391,3810,4460,4404,4405,4406,4407,4408,
            4399,4397,4400,4398,4396,602,4401,4403,4402,4602,
            155,4456,1290,3771,4454,4455,4390,1954,4243,4458,
            4459,4462,4461,4357,4660,2019,2799,4357,4391,3810,
            4460,4404,4405,4406,4407,4408,4399,4397,4400,4398,
            4396,602,4401,4403,4402,4602,249,4456,251,3771,
            4454,4455,4390,1954,4243,4458,4459,4462,4461,4357,
            870,2019,159,267,4391,3810,4460,4404,4405,4406,
            4407,4408,4399,4397,4400,4398,4396,602,4401,4403,
            4402,4602,4357,4456,3974,3771,4454,4455,4390,1954,
            4243,4458,4459,4462,4461,4357,4660,4357,1209,3986,
            4391,4129,208,4404,4405,4406,4407,4408,4399,4397,
            4400,4398,4396,782,4401,4403,4402,4602,4357,4660,
            4357,4658,243,4391,1824,764,4404,4405,4406,4407,
            4408,4399,4397,4400,4398,4396,4385,4401,4403,4402,
            4602,216,216,216,216,429,4357,4660,246,161,
            243,4391,246,246,4404,4405,4406,4407,4408,4399,
            4397,4400,4398,4396,4385,4401,4403,4402,4602,4357,
            4660,62,4357,243,4391,1678,4121,4404,4405,4406,
            4407,4408,4399,4397,4400,4398,4396,4385,4401,4403,
            4402,4602,4357,4660,1759,1759,243,4391,4357,165,
            4404,4405,4406,4407,4408,4399,4397,4400,4398,4396,
            4385,4401,4403,4402,4602,4357,4660,4357,4357,243,
            4391,3459,2084,4404,4405,4406,4407,4408,4399,4397,
            4400,4398,4396,4385,4401,4403,4402,4602,4357,4660,
            4357,4673,243,4391,175,3411,4404,4405,4406,4407,
            4408,4399,4397,4400,4398,4396,4385,4401,4403,4402,
            4602,142,4357,4663,4226,4357,4658,192,200,1889,
            4076,4357,4671,796,4070,4026,4357,4660,4149,58,
            4357,4391,4357,4658,172,4357,244,3642,3597,3552,
            3507,289,4357,4670,4097,4578,4105,192,200,409,
            216,216,216,216,180,180,180,180,172,4357,
            4660,166,297,160,4391,4357,154,1139,4357,4660,
            4357,4658,148,4391,244,4184,4404,4405,4406,4407,
            4408,4399,4397,4400,4398,4396,782,4401,4403,4402,
            4602,246,4357,4660,4076,280,4357,4391,4070,4026,
            4404,4405,4406,4407,4408,4399,4397,4400,4398,4396,
            782,4401,4403,4402,4602,4357,4660,144,200,136,
            4391,791,85,4404,4405,4406,4407,4408,4399,4397,
            4400,4398,4396,4385,4401,4403,4402,4602,4357,4660,
            168,4357,4660,4391,4370,4371,4391,4451,136,4097,
            972,4105,4357,4658,409,37,244,216,216,216,
            216,4367,4357,3459,4360,868,154,4357,4658,4357,
            4674,244,192,200,4369,4372,38,1451,4016,226,
            4155,4366,4363,4365,4364,4368,38,3411,4358,172,
            4361,160,2604,4362,304,2734,868,192,200,4359,
            174,136,192,200,4357,216,216,216,216,180,
            180,180,180,172,172,4607,166,166,160,4357,
            4357,4660,4357,192,200,4391,2149,192,200,303,
            216,216,216,216,180,180,180,180,172,38,
            172,166,4357,3642,3597,3552,3507,326,193,868,
            405,326,326,192,200,199,216,216,216,216,
            180,180,180,180,172,172,4357,4658,2929,4689,
            244,192,200,4076,4097,59,4105,4070,4026,409,
            4357,4658,764,180,244,199,3999,4001,889,192,
            200,405,231,144,3306,136,192,1678,281,4669,
            3982,192,200,200,216,216,216,216,180,180,
            180,180,144,133,136,1217,4129,4357,611,192,
            200,136,216,216,216,216,4357,4665,268,4357,
            4660,37,297,200,4391,216,216,216,216,181,
            4357,868,62,4357,4357,191,4357,3931,2214,3687,
            37,2669,4097,1451,4105,4167,4357,409,524,37,
            868,62,62,4357,877,275,4167,4357,4391,868,
            303,4097,1451,4105,185,191,409,3892,184,3729,
            3687,1523,4357,962,3687,4357,4662,4391,4413,195,
            764,194,607,183,888,307,3931,182,3931,3687,
            4357,4357,4658,3687,868,689,107,4357,4658,4357,
            3729,3990,3999,4001,3729,4357,4666,4357,145,4357,
            4480,307,4481,4357,4357,2669,3892,4219,3892,3729,
            4357,3999,4001,3729,2279,37,63,4357,269,413,
            4357,4230,2669,2474,2669,4357,333,4357,303,4121,
            4414,4357,81,4357,136,4129,4357,150,162,2344,
            301,156,4357,2539,138,4484,298,4357,1044,334,
            3189,324,258,4357,3360,1295,4204,1050,4357,147,
            255,4201,4357,323,4357,4579,132,4202,1373,2669,
            2344,4212,4357,4357,4196,4485,4610,69,4357,141,
            764,4609,868,4357,4435,1595,4479,4357,3360,4357,
            4482,302,3249,3306,4357,4357,4357,4483,4605,4473,
            4357,4357,4240,4470,1687,62,4357,4357,4357,4129,
            4486,2864,4357,4357,4357,4474,4472,4471,4357,4357,
            4357,4357,4357,4357,4357,4357,4357,4357,4357,4357,
            4357,4357,4357,4357,4357,4357,4357,4357,2994,4357,
            4357,4357,4357,4357,4357,4357,4357,4357,4357,4357,
            3059,4357,4357,4357,4357,3124
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            454,104,52,505,505,489,489,489,58,489,
            489,249,145,249,103,220,234,220,220,506,
            505,506,505,506,505,489,506,505,506,505,
            192,364,365,508,64,369,60,106,149,153,
            150,220,347,220,68,72,70,78,76,64,
            80,79,252,254,256,259,220,220,249,49,
            436,262,264,81,273,32,32,266,220,220,
            220,506,505,249,220,187,249,234,97,320,
            234,319,234,220,32,280,194,249,404,1,
            1,234,323,326,249,249,34,249,405,220,
            220,220,220,220,220,64,352,506,220,220,
            220,220,220,220,220,220,220,249,216,215,
            355,356,366,363,360,321,102,61,371,375,
            442,408,410,406,506,55,443,441,442,443,
            405,220,31,31,196,369,60,196,64,80,
            64,78,64,72,72,64,68,68,249,220,
            234,64,70,70,70,70,64,76,64,79,
            220,220,404,234,313,97,404,234,375,220,
            63,406,55,249,249,220,220,445,218,218,
            32,234,220,280,32,375,216,406,55,406,
            465,406,220,406,54,55,406,375,61,372,
            375,375,406,278,277,276,55,413,505,249,
            505,141,448,234,219,406,280,63,406,406,
            220,249,220,249,220,220,199,468,375,406,
            278,406,278,451,55,278,55,414,406,220,
            220,220,406,406,406
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            51,31,6,26,30,8,9,10,11,12,
            18,34,35,7,32,33,24,28,27,17,
            14,16,13,15,19,21,20,22,29,5,
            1,2,0,1,5,50,61,26,52,55,
            44,46,45,43,23,47,36,6,7,37,
            0,72,23,4,3,25,0,54,0,60,
            38,2,48,39,40,41,42,7,37,36,
            6,43,44,45,46,23,47,50,52,55,
            61,3,51,68,49,25,73,74,75,70,
            76,53,57,58,66,67,62,1,56,54,
            59,65,71,72,0,36,6,7,37,43,
            44,23,45,46,47,3,51,68,39,49,
            25,40,73,41,42,74,75,70,50,52,
            55,61,76,56,53,57,54,58,59,24,
            65,1,67,66,71,72,62,0,1,2,
            63,0,36,6,7,37,43,44,23,45,
            46,47,3,51,68,39,49,25,40,73,
            41,42,74,75,70,50,52,55,61,76,
            56,54,66,67,59,63,62,71,65,72,
            1,57,58,53,0,2,48,0,17,14,
            16,13,15,19,21,20,22,5,8,9,
            10,11,12,18,1,23,0,3,64,31,
            6,26,2,30,34,35,7,32,33,24,
            28,27,29,17,14,16,13,15,19,21,
            20,22,8,9,10,11,12,18,5,1,
            0,61,0,52,0,23,47,0,36,6,
            0,50,0,55,0,53,57,58,66,67,
            1,38,3,72,23,25,69,49,0,2,
            36,6,7,37,43,44,45,46,47,3,
            51,68,39,49,25,40,73,41,42,74,
            75,70,50,52,55,61,76,53,57,58,
            66,67,23,56,71,54,59,72,62,1,
            65,0,74,1,0,36,6,7,37,43,
            44,23,45,46,47,2,60,38,48,74,
            50,52,55,61,1,70,39,40,42,41,
            0,76,25,0,23,1,4,2,0,53,
            57,58,2,4,1,56,54,59,38,0,
            1,68,25,0,31,6,26,2,30,8,
            9,10,11,12,18,34,35,7,32,33,
            24,28,27,17,14,16,13,15,19,21,
            20,22,29,5,1,3,0,51,25,23,
            4,0,69,36,6,7,37,23,47,3,
            39,25,40,41,42,50,52,55,61,49,
            38,2,48,4,60,43,44,45,46,0,
            73,25,51,0,75,1,0,70,1,0,
            49,4,0,72,71,62,56,54,59,53,
            57,58,5,1,67,66,0,53,57,58,
            17,14,16,13,15,19,21,20,22,1,
            5,8,9,10,11,12,18,0,8,9,
            10,11,12,17,14,16,13,15,19,21,
            20,22,18,5,1,4,0,65,1,62,
            38,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static byte nasb[] = {0,
            89,26,26,94,94,98,98,98,26,98,
            98,32,6,39,8,22,38,22,22,26,
            94,26,94,26,94,98,26,94,26,94,
            92,26,30,90,26,26,14,26,26,26,
            26,22,26,22,26,26,26,26,26,26,
            26,26,26,26,26,26,83,83,113,26,
            26,26,26,26,26,26,26,26,22,22,
            22,26,94,105,22,12,39,100,16,4,
            98,6,98,22,26,26,26,102,110,22,
            22,38,26,26,25,25,1,25,26,41,
            53,65,65,77,77,26,26,26,83,83,
            71,71,71,71,59,47,22,105,26,26,
            26,94,30,26,26,26,26,18,26,22,
            26,26,26,26,26,26,26,26,26,26,
            26,22,26,26,18,26,18,14,26,26,
            26,26,26,26,26,26,26,26,27,22,
            38,26,26,26,26,26,26,26,26,26,
            22,22,25,38,26,16,25,38,22,22,
            18,26,26,35,107,22,22,26,22,22,
            26,98,22,26,26,20,26,26,26,26,
            96,26,22,26,26,26,26,22,18,26,
            22,22,26,26,26,26,26,14,94,25,
            94,10,26,38,22,26,26,18,26,26,
            22,27,22,25,22,22,38,38,22,26,
            26,26,26,26,26,26,26,14,26,22,
            22,22,26,26,26
        };
    };
    public final static byte nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            1,107,0,119,0,82,0,98,0,90,
            0,89,0,72,0,79,0,73,0,65,
            70,3,6,16,1,0,1,70,0,100,
            0,1,117,0,1,92,0,3,5,0,
            1,6,16,3,59,0,3,6,16,1,
            56,0,1,6,16,3,53,0,3,6,
            16,1,50,0,1,6,16,3,47,0,
            3,6,16,1,44,0,1,6,16,3,
            41,0,1,6,16,3,34,0,1,99,
            0,118,0,66,0,116,0,69,0,2,
            0,1,110,0,102,101,1,65,0,109,
            1,0,1,111,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            79,11,12,20,76,2,3,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,74,7,32,19,41,30,31,33,34,
            43,45,46,47,48,1,4,21,17,23,
            26,27,5,6,8,9,10,25,18,38,
            14,39,64,69,40,63,65,70,73,15,
            42,66,13,28,68,71,72,16,22,37,
            67,75,24,35,36,44,77,78
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            82,148,81,0,84,86,0,0,0,0,
            0,0,0,0,0,96,0,0,0,0,
            0,0,0,0,0,98,0,0,0,0,
            101,0,0,126,127,0,0,0,122,123,
            124,119,120,121,116,117,118,113,114,115,
            110,111,112,107,108,109,104,105,106,89,
            99,102,0,103,88,146,0,0,83,90,
            100,133,0,85,0,0,0,0,130,93,
            125,138,0,0,0,92,95,0,131,132,
            135,91,0,94,0,0,134,136,137,140,
            141,142,0,145,0,0,80,0,87,97,
            128,129,0,0,0,139,143,144,147,0,
            0,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            215,251,261,149,183,191,237,271,225,18,
            57,18,169,176,43,51,158,209,143,199,
            245,9,164,9,9,35,39,279,285,289,
            293,39,35,1,6,1,64,6,6,6,
            82,82,90,90,98,98,98,98,112,112,
            120,125,130,135
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            49,49,49,49,49,49,49,49,233,4,
            49,70,49,49,49,49,49,49,140,205,
            233,4,49,25,72,4,4,283,283,283,
            49,49,140,4,4,49,67,14,29,76,
            84,87,92,95,100,103,106,109,114,117,
            122,127,132,137
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            25,24,24,27,27,27,25,24,25,37,
            27,37,27,27,38,38,27,27,30,27,
            25,37,27,37,37,30,6,11,10,10,
            7,6,30,26,37,35,36,37,37,37,
            41,41,44,44,47,47,47,47,50,50,
            53,56,59,63
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            3,3,3,3,3,3,3,3,49,1,
            3,70,3,3,3,3,3,3,68,25,
            49,1,3,75,75,1,1,51,51,51,
            3,3,68,1,1,3,76,74,74,74,
            37,7,6,36,46,45,44,43,47,23,
            50,52,55,61
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static byte scopeStateSet[] = {
            9,9,9,9,9,9,9,9,9,9,
            9,9,9,9,9,9,9,9,9,9,
            9,9,9,9,9,9,1,9,9,9,
            1,1,9,9,9,9,9,9,9,9,
            13,13,15,15,19,19,19,19,21,21,
            22,23,24,25
        };
    };
    public final static byte scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            138,2,0,1,0,138,30,0,138,74,
            138,30,0,74,138,1,0,138,75,138,
            74,138,30,0,75,138,1,0,74,138,
            75,138,1,0,149,60,79,0,152,2,
            81,0,174,2,79,41,104,0,3,0,
            174,2,79,42,104,0,155,2,150,79,
            39,104,0,189,31,0,76,138,0,70,
            0,75,138,70,0,74,138,75,138,70,
            0,118,0,37,112,0,7,112,0,121,
            0,6,119,0,36,119,0,124,0,46,
            122,0,45,122,0,44,122,0,43,122,
            0,127,0,47,125,0,23,125,0,130,
            0,50,128,0,133,0,52,131,0,136,
            0,55,134,0,142,0,61,137,0,68,
            151,0,149,60,79,40,104,0,155,2,
            151,147,38,83,40,104,0,155,2,147,
            38,83,0,155,2,151,79,0,155,2,
            151,79,40,104,0,155,2,151,185,40,
            104,0,149,25,79,2,79,39,104,0,
            149,25,139,2,79,39,104,0,139,2,
            79,39,104,0,25,149,3,0,138,2,
            79,39,104,0,138,49,148,69,164,2,
            79,39,104,0,148,69,164,2,79,39,
            104,0,49,138,3,0,138,49,148,2,
            79,39,104,0,148,2,79,39,104,0,
            138,49,164,25,143,2,79,39,104,0,
            138,49,164,25,79,2,79,39,104,0,
            138,49,164,2,79,39,104,0,188,63,
            18,0,51,0,171,63,84,0,171,63,
            81,0,186,2,18,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            3990,689,4204,4155,4129,4121,3974,1678,3931,3892,
            3810,3771,3729,3687,3642,3597,3552,3507,3459,3411,
            3360,3306,3249,3189,3124,3059,2994,1373,611,1687,
            2929,2864,1595,1295,1217,1139,2799,524,1523,796,
            698,1050,2734,2669,972,2604,2539,2474,2409,894,
            2344,429,334,1451,2279,2214,2149,2084,2019,1954,
            1889,1824,1759,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,183,79,66,67,58,57,53,59,54,
            56,62,177,71,190,23,4,4,4,156,
            147,156,147,156,147,54,156,147,156,147,
            195,79,83,83,113,83,79,94,18,84,
            81,30,104,2,117,123,120,129,126,109,
            135,132,142,133,127,121,26,6,31,118,
            124,130,136,140,152,18,81,83,4,4,
            4,156,147,4,4,196,4,38,178,193,
            38,177,38,60,151,150,48,63,2,63,
            63,2,138,1,41,42,40,39,138,61,
            52,47,23,6,36,109,189,79,37,7,
            46,45,44,43,50,55,23,4,180,143,
            1,79,83,147,80,197,1,147,149,2,
            188,1,79,186,79,187,171,138,172,171,
            152,74,79,79,185,83,79,79,109,136,
            109,130,109,124,124,109,118,118,25,76,
            4,109,121,121,121,121,109,127,109,133,
            23,23,2,4,1,178,2,4,2,25,
            68,155,149,25,25,73,25,138,2,2,
            151,38,60,151,150,2,152,181,182,181,
            152,155,75,174,64,175,174,2,147,149,
            2,2,138,148,164,143,139,79,3,25,
            3,194,138,4,25,155,151,68,155,155,
            49,69,49,25,25,25,4,4,2,138,
            148,138,164,79,149,164,149,79,155,49,
            49,49,138,138,138
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "+",
            "-",
            "*",
            "/",
            ">",
            "<",
            "=",
            ">=",
            "<=",
            "<>",
            "(",
            ")",
            "{",
            "}",
            "[",
            "]",
            "->",
            "|",
            ",",
            ":",
            "::",
            ";",
            ".",
            "..",
            "@",
            "^",
            "^^",
            "?",
            "$empty",
            "INTEGER_LITERAL",
            "REAL_LITERAL",
            "STRING_LITERAL",
            "self",
            "if",
            "then",
            "else",
            "endif",
            "and",
            "or",
            "xor",
            "not",
            "implies",
            "let",
            "in",
            "true",
            "false",
            "null",
            "invalid",
            "Set",
            "Bag",
            "Sequence",
            "Collection",
            "OrderedSet",
            "String",
            "Integer",
            "UnlimitedNatural",
            "Real",
            "Boolean",
            "Tuple",
            "OclAny",
            "OclVoid",
            "OclInvalid",
            "inv",
            "pre",
            "post",
            "context",
            "package",
            "endpackage",
            "def",
            "body",
            "derive",
            "init",
            "static",
            "OclMessage",
            "EOF_TOKEN",
            "IDENTIFIER",
            "SINGLE_LINE_COMMENT",
            "MULTI_LINE_COMMENT",
            "ERROR_TOKEN",
            "conceptualOperationNameCS",
            "CollectionTypeIdentifierCS",
            "simpleNameCS",
            "unreservedSimpleNameCS",
            "pathNameCS",
            "typeCS",
            "collectionTypeCS",
            "tupleTypePartsCS",
            "typedUninitializedVariableCS",
            "OclExpressionCS",
            "typedInitializedVariableCS",
            "initializedVariableCS",
            "uninitializedVariableCS",
            "VariableDeclarationCS",
            "CollectionLiteralPartsCS",
            "CollectionLiteralPartCS",
            "StringLiteralExpCS",
            "TupleLiteralPartsCS",
            "primaryExpCS",
            "notNameExpressionCS",
            "argumentsCS",
            "SimpleNameExpCS",
            "impliesNotNameNotLetCS",
            "impliesNotLetCS",
            "xorNotNameNotLetCS",
            "xorNotLetCS",
            "xorWithLetCS",
            "orNotNameNotLetCS",
            "orNotLetCS",
            "orWithLetCS",
            "andNotNameNotLetCS",
            "andNotLetCS",
            "andWithLetCS",
            "equalityNotNameNotLetCS",
            "equalityNotLetCS",
            "equalityWithLetCS",
            "relationalNotNameNotLetCS",
            "relationalNotLetCS",
            "relationalWithLetCS",
            "additiveNotNameNotLetCS",
            "additiveNotLetCS",
            "additiveWithLetCS",
            "multiplicativeNotNameNotLetCS",
            "multiplicativeNotLetCS",
            "multiplicativeWithLetCS",
            "unaryNotLetCS",
            "unaryWithLetCS",
            "primaryNotNameCS",
            "letVariablesCS",
            "packageDeclarationsCS",
            "invOrDefCS",
            "prePostOrBodyDeclCS",
            "initOrDerValueCS",
            "isMarkedPreCS",
            "OclMessageArgumentsCS",
            "OclMessageArgCS",
            "packageDeclarationCS_A",
            "contextDeclsCS",
            "contextDeclCS",
            "initOrDerValuesCS",
            "invOrDefsCS",
            "defExpressionCS",
            "operationCS1",
            "operationCS2",
            "prePostOrBodyDeclsCS",
            "parametersCS",
            "ERROR_Colon",
            "ERROR_Empty",
            "ERROR_SimpleNameCS"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    /**
     * assert(! goto_default);
     */
    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    /**
     * assert(! shift_default);
     */
    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
