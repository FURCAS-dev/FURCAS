/**
* Essential OCL Grammar
* <copyright>
*
* Copyright (c) 2005, 2009 IBM Corporation and others.
* All rights reserved.   This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   IBM - Initial API and implementation
*   E.D.Willink - Elimination of some shift-reduce conflicts
*   E.D.Willink - Remove unnecessary warning suppression
*   E.D.Willink - Bugs 184048, 225493, 243976, 259818, 282882, 287993, 288040, 292112
*   Borland - Bug 242880
*
* </copyright>
*
* $Id: OCLParserprs.java,v 1.16 2009/10/23 21:26:55 ewillink Exp $
*/
/**
* Complete OCL Grammar
* <copyright>
*
* Copyright (c) 2005, 2009 IBM Corporation and others.
* All rights reserved.   This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   IBM - Initial API and implementation
*   E.D.Willink - Bug 259818, 285633, 292112, 292594
* </copyright>
*/

package org.eclipse.ocl.parser;

/**
 * @noextend This interface is not intended to be extended by clients.
 */
@SuppressWarnings("nls")
public class OCLParserprs implements lpg.lpgjavaruntime.ParseTable, OCLParsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,0,0,0,0,
            0,0,0,1,1,1,1,1,0,1,
            1,1,1,0,0,0,1,1,1,1,
            1,1,1,0,0,0,0,0,1,1,
            0,1,1,1,1,1,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,3,1,1,1,1,1,1,1,
            1,1,1,1,1,1,4,4,1,1,
            1,1,1,1,1,1,3,3,3,3,
            1,1,3,1,3,0,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            4,3,1,1,1,3,0,1,4,3,
            3,1,3,1,1,1,1,1,7,7,
            7,7,7,5,5,4,7,1,3,0,
            1,0,4,4,7,2,2,5,1,1,
            1,8,10,6,8,10,1,1,1,1,
            7,4,1,1,1,1,3,3,1,1,
            3,3,1,1,3,3,1,1,3,3,
            1,1,3,3,3,3,1,1,3,3,
            3,3,3,3,3,3,1,1,3,3,
            3,3,1,1,3,3,3,3,1,1,
            2,2,2,2,1,1,1,3,1,1,
            1,1,1,1,0,1,1,1,1,1,
            1,1,1,1,1,1,1,1,0,1,
            1,0,1,2,6,6,0,1,1,3,
            1,1,3,1,3,5,4,4,1,2,
            1,2,3,3,3,6,6,1,3,0,
            1,4,4,4,1,2,5,3,3,1,
            2,1,1,1,1,2,0,1,4,1,
            1,2,-85,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-16,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-2,-3,-4,-5,-6,
            -7,-8,-9,-27,-28,-29,0,0,-72,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-19,0,0,-177,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-75,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-73,-35,-17,-30,-74,0,-164,
            -116,-31,-76,-34,0,0,-178,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-36,-37,-38,-39,-40,0,0,0,
            0,0,0,0,0,0,0,0,-41,-42,
            0,-14,-45,-47,0,-48,-49,-50,0,0,
            0,-51,-57,-58,0,0,-185,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-87,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-59,-163,-60,-61,0,-62,-63,-64,
            -65,-71,-81,-52,0,-135,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-82,-84,-88,0,0,0,-89,-90,
            -109,-110,-53,0,-136,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-111,-112,-113,0,-114,-115,-118,-119,-120,
            -121,-54,0,-172,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -122,-125,-126,-127,-129,-130,-131,-132,-133,-134,
            -137,-138,-142,-145,-146,-148,-149,-150,-151,-152,
            -153,-154,-155,-156,-157,-158,-159,0,0,-195,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-165,-170,-175,-176,0,
            -179,-180,-181,-183,-184,-187,-139,0,-196,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-188,-191,-192,0,-193,
            -194,-198,-201,-202,-204,-140,0,-197,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-205,-206,-207,0,-209,-210,
            -213,-214,-215,-217,-141,0,-199,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-218,-223,-225,0,-226,-227,-228,
            -231,-232,0,-143,0,-200,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-144,0,-208,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-147,0,-86,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-173,0,-182,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-203,0,-212,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-24,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-25,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -26,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-44,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-46,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-66,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-67,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -68,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-70,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-123,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-128,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-160,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -161,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-168,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-169,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-171,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-174,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -190,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-220,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-222,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-229,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-230,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -107,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-108,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-105,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-106,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -99,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-100,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -101,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-102,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-103,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-104,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-95,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-96,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-55,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-56,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-97,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-98,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -1,0,0,0,0,0,0,0,0,0,
            0,0,0,-124,0,0,0,0,0,0,
            0,0,0,0,0,0,-216,-18,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-93,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-10,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-11,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-12,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-117,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-13,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-15,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-91,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-92,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-33,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-189,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-224,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -20,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-94,0,0,0,0,0,
            0,0,0,0,0,0,-32,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-21,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-22,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-23,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-77,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -80,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-211,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-78,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-79,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-69,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-162,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-43,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-83,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-166,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-167,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -186,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -219,0,0,0,0,0,0,0,0,0,
            0,0,0,-221,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            95,61,61,61,61,96,96,96,96,96,
            96,96,96,96,62,97,1,2,2,2,
            2,2,2,2,2,2,2,2,3,69,
            69,69,69,69,69,98,98,63,70,64,
            99,71,71,71,4,5,6,6,6,13,
            13,13,100,100,100,12,12,12,12,14,
            14,15,15,16,7,7,7,7,7,7,
            7,7,11,11,11,11,11,65,67,66,
            66,66,66,57,57,57,57,56,56,56,
            56,59,59,59,83,83,101,101,8,8,
            17,9,10,18,19,20,21,21,21,21,
            21,22,84,85,85,103,103,102,102,23,
            86,86,104,104,24,24,24,24,24,25,
            25,25,25,25,25,25,25,25,60,60,
            68,68,58,27,27,27,27,28,28,29,
            29,29,30,30,31,31,31,32,32,33,
            33,34,35,53,53,54,55,54,55,51,
            52,51,52,49,50,49,50,47,48,47,
            48,45,46,45,46,45,46,43,44,43,
            44,43,44,43,44,43,44,41,42,41,
            42,41,42,39,40,39,40,39,40,36,
            37,36,37,36,37,26,26,26,26,95,
            95,95,95,95,95,95,69,69,69,69,
            69,69,69,69,69,69,69,72,72,75,
            75,7,87,87,58,38,38,88,88,89,
            89,82,82,82,26,76,76,74,73,74,
            74,90,90,107,107,77,108,109,92,92,
            91,91,80,80,80,110,110,78,81,81,
            111,111,79,79,79,93,93,112,112,94,
            105,106,106,481,44,45,46,56,57,58,
            47,567,566,564,568,773,842,572,559,704,
            107,108,109,110,127,124,128,217,149,573,
            150,151,159,157,158,160,215,216,210,203,
            204,254,693,198,574,188,696,182,695,178,
            699,174,698,170,701,166,906,700,164,667,
            44,45,46,56,57,58,47,49,50,51,
            55,59,60,61,3927,62,197,55,67,137,
            218,581,283,286,348,352,358,113,115,667,
            44,45,46,56,57,58,47,49,50,51,
            55,59,60,63,289,905,907,215,44,45,
            46,56,57,58,47,567,566,564,568,773,
            842,572,559,704,107,108,109,110,127,124,
            128,217,149,573,150,151,159,157,158,160,
            215,216,210,203,204,254,693,198,574,188,
            696,182,695,178,699,174,698,170,701,166,
            251,700,164,667,44,45,46,56,57,58,
            47,49,50,51,55,59,60,61,481,62,
            282,283,284,286,523,355,217,362,282,249,
            276,355,412,356,419,1057,1060,215,44,45,
            46,56,57,58,47,567,566,564,568,773,
            842,572,559,704,107,108,109,110,127,124,
            128,217,149,573,150,151,159,157,158,160,
            215,216,210,203,204,254,693,198,574,188,
            696,182,695,178,699,174,698,170,701,166,
            251,700,164,420,42,127,111,186,259,261,
            282,283,284,286,259,261,259,262,276,253,
            274,281,363,357,2,483,328,706,669,249,
            292,694,368,110,429,1061,1060,430,44,45,
            46,56,57,58,47,1126,1125,1065,568,1464,
            842,572,559,704,107,108,109,110,127,124,
            128,217,149,573,150,151,159,157,158,160,
            215,216,210,203,204,254,693,198,574,188,
            696,182,695,178,699,174,698,170,701,166,
            1064,700,164,371,91,260,1063,532,44,45,
            46,56,57,58,47,567,566,564,568,773,
            842,572,559,704,107,108,109,110,127,124,
            128,217,149,573,150,151,159,157,158,160,
            215,216,210,203,204,254,693,198,574,188,
            696,182,695,178,699,174,698,170,701,166,
            138,700,164,369,574,802,138,910,472,784,
            814,294,790,114,805,909,532,44,45,46,
            56,57,58,47,567,566,564,568,773,842,
            572,559,704,107,108,109,110,127,124,128,
            217,149,573,150,151,159,157,158,160,215,
            216,210,203,204,254,693,198,574,188,696,
            182,695,178,699,174,698,170,701,166,138,
            700,164,146,582,818,432,910,259,262,423,
            628,821,827,254,988,532,44,45,46,56,
            57,58,47,567,566,564,568,773,842,572,
            559,704,107,108,109,110,127,124,128,217,
            149,573,150,151,159,157,158,160,215,216,
            210,203,204,254,693,198,574,188,696,182,
            695,178,699,174,698,170,701,166,138,700,
            164,769,670,666,848,910,858,868,849,468,
            872,519,181,989,430,44,45,46,56,57,
            58,47,567,566,564,568,773,842,572,559,
            704,107,108,109,110,127,124,128,217,149,
            573,150,151,159,157,158,160,215,216,210,
            203,204,254,693,198,574,188,696,182,695,
            178,699,174,698,170,701,166,906,700,164,
            770,876,121,829,839,822,823,828,268,882,
            857,886,891,808,893,895,810,813,198,213,
            480,531,815,816,853,817,861,867,113,116,
            532,44,45,46,56,57,58,47,567,566,
            564,568,773,842,572,559,704,107,108,109,
            110,127,124,128,217,149,573,150,151,159,
            157,158,160,215,216,210,203,204,254,693,
            198,574,188,696,182,695,178,699,174,698,
            170,701,166,138,700,164,897,194,898,902,
            910,903,908,911,913,915,917,840,1131,532,
            44,45,46,56,57,58,47,567,566,564,
            568,773,842,572,559,704,107,108,109,110,
            127,124,128,217,149,573,150,151,159,157,
            158,160,215,216,210,203,204,254,693,198,
            574,188,696,182,695,178,699,174,698,170,
            701,166,138,700,164,991,919,921,926,910,
            884,927,272,621,929,781,840,1132,532,44,
            45,46,56,57,58,47,567,566,564,568,
            773,842,572,559,704,107,108,109,110,127,
            124,128,217,149,573,150,151,159,157,158,
            160,215,216,210,203,204,254,693,198,574,
            188,696,182,695,178,699,174,698,170,701,
            166,138,700,164,992,787,793,665,910,931,
            880,934,935,936,940,840,1133,532,44,45,
            46,56,57,58,47,567,566,564,568,773,
            842,572,559,704,107,108,109,110,127,124,
            128,217,149,573,150,151,159,157,158,160,
            215,216,210,203,204,254,693,198,574,188,
            696,182,695,178,699,174,698,170,701,166,
            138,700,164,993,941,942,906,910,947,923,
            948,952,953,4416,796,1134,532,44,45,46,
            56,57,58,47,567,566,564,568,773,842,
            572,559,704,107,108,109,110,127,124,128,
            217,149,573,150,151,159,157,158,160,215,
            216,210,203,204,254,693,198,574,188,696,
            182,695,178,699,174,698,170,701,166,138,
            700,164,994,4416,4416,4416,910,4416,4416,4416,
            4416,4416,4416,807,1194,532,44,45,46,56,
            57,58,47,567,566,564,568,773,842,572,
            559,704,107,108,109,110,127,124,128,217,
            149,573,150,151,159,157,158,160,215,216,
            210,203,204,254,693,198,574,188,696,182,
            695,178,699,174,698,170,701,166,138,700,
            164,995,4416,4416,4416,910,4416,4416,4416,4416,
            4416,4416,840,1195,430,44,45,46,56,57,
            58,47,567,566,564,568,773,842,572,559,
            704,107,108,109,110,127,124,128,217,149,
            573,150,151,159,157,158,160,215,216,210,
            203,204,254,693,198,574,188,696,182,695,
            178,699,174,698,170,701,166,138,700,164,
            996,4416,4416,840,908,430,44,45,46,56,
            57,58,47,567,566,564,568,773,842,572,
            559,704,107,108,109,110,127,124,128,217,
            149,573,150,151,159,157,158,160,215,216,
            210,203,204,254,693,198,574,188,696,182,
            695,178,699,174,698,170,701,166,138,700,
            164,148,4416,4416,799,1062,290,44,45,46,
            56,57,58,47,567,566,564,568,773,842,
            572,559,704,107,108,109,110,127,124,128,
            217,149,573,150,151,159,157,158,160,215,
            216,210,203,204,254,693,198,574,188,696,
            182,695,178,699,174,698,170,701,166,251,
            700,164,769,4416,4416,4416,4416,4416,4416,4416,
            4416,4416,4416,4416,4416,4416,4416,4416,4416,4416,
            4416,4416,4416,4416,4416,4416,4416,4416,250,430,
            44,45,46,56,57,58,47,567,566,564,
            568,773,842,572,559,704,107,108,109,110,
            127,124,128,217,149,573,150,151,159,157,
            158,160,215,216,210,203,204,254,693,198,
            574,188,696,182,695,178,699,174,698,170,
            701,166,93,700,164,430,44,45,46,56,
            57,58,47,567,566,564,568,773,842,572,
            559,704,107,108,109,110,127,124,128,217,
            149,573,150,151,159,157,158,160,215,216,
            210,203,204,254,693,198,574,188,696,182,
            695,178,699,174,698,170,701,166,279,700,
            164,430,44,45,46,56,57,58,47,567,
            566,564,568,773,842,572,559,704,107,108,
            109,110,127,124,128,217,149,573,150,151,
            159,157,158,160,215,216,210,203,204,254,
            693,198,574,188,696,182,695,178,699,174,
            698,170,701,166,278,700,164,430,44,45,
            46,56,57,58,47,567,566,564,568,773,
            842,572,559,704,107,108,109,110,127,124,
            128,217,149,573,150,151,159,157,158,160,
            215,216,210,203,204,254,693,198,574,188,
            696,182,695,178,699,174,698,170,701,166,
            763,700,164,430,44,45,46,56,57,58,
            47,567,566,564,568,773,842,572,559,704,
            107,108,109,110,127,124,128,217,149,573,
            150,151,159,157,158,160,215,216,210,203,
            204,254,693,198,574,188,696,182,695,178,
            699,174,698,170,701,166,764,700,164,430,
            44,45,46,56,57,58,47,567,566,564,
            568,773,842,572,559,704,107,108,109,110,
            127,124,128,217,149,573,150,151,159,157,
            158,160,215,216,210,203,204,254,693,198,
            574,188,696,182,695,178,699,174,698,170,
            701,166,274,700,164,430,44,45,46,56,
            57,58,47,567,566,564,568,773,842,572,
            559,704,107,108,109,110,127,124,128,217,
            149,573,150,151,159,157,158,160,215,216,
            210,203,204,254,693,198,574,188,696,182,
            695,178,699,174,698,170,701,166,273,700,
            164,430,44,45,46,56,57,58,47,567,
            566,564,568,773,842,572,559,704,107,108,
            109,110,127,124,128,217,149,573,150,151,
            159,157,158,160,215,216,210,203,204,254,
            693,198,574,188,696,182,695,178,699,174,
            698,170,701,166,272,700,164,430,44,45,
            46,56,57,58,47,567,566,564,568,773,
            842,572,559,704,107,108,109,110,127,124,
            128,217,149,573,150,151,159,157,158,160,
            215,216,210,203,204,254,693,198,574,188,
            696,182,695,178,699,174,698,170,701,166,
            257,700,164,430,44,45,46,56,57,58,
            47,567,566,564,568,773,842,572,559,704,
            107,108,109,110,127,124,128,217,149,573,
            150,151,159,157,158,160,215,216,210,203,
            204,254,693,198,574,188,696,182,695,178,
            699,174,698,170,701,166,162,700,164,430,
            44,45,46,56,57,58,47,567,566,564,
            568,773,842,572,559,704,107,108,109,110,
            127,124,128,217,149,573,150,151,159,157,
            158,160,215,216,210,203,204,254,693,198,
            574,188,696,182,695,178,699,174,698,170,
            701,166,987,700,164,430,44,45,46,56,
            57,58,47,567,566,564,568,773,842,572,
            559,704,107,108,109,110,127,124,128,217,
            149,573,150,151,159,157,158,160,215,216,
            210,203,204,254,693,198,574,188,696,182,
            695,178,699,174,698,170,701,166,264,700,
            164,430,44,45,46,56,57,58,47,567,
            566,564,568,773,842,572,559,704,107,108,
            109,110,127,124,128,217,149,573,150,151,
            159,157,158,160,215,216,210,203,204,254,
            693,198,574,188,696,182,695,178,699,174,
            698,170,701,166,263,700,164,430,44,45,
            46,56,57,58,47,567,566,564,568,773,
            842,572,559,704,107,108,109,110,127,124,
            128,217,149,573,150,151,159,157,158,160,
            215,216,210,203,204,254,693,198,574,188,
            696,182,695,178,699,174,698,170,701,166,
            121,700,164,430,44,45,46,56,57,58,
            47,567,566,564,568,773,842,572,559,704,
            107,108,109,110,127,124,128,217,149,573,
            150,151,159,157,158,160,215,216,210,203,
            204,254,693,198,574,188,696,182,695,178,
            699,174,698,170,701,166,120,700,164,430,
            44,45,46,56,57,58,47,567,566,564,
            568,773,842,572,559,704,107,108,109,110,
            127,124,128,217,149,573,150,151,159,157,
            158,160,215,216,210,203,204,254,693,198,
            574,188,696,182,695,178,699,174,698,170,
            701,166,112,700,164,430,44,45,46,56,
            57,58,47,567,566,564,568,773,842,572,
            559,704,107,108,109,110,127,124,128,217,
            149,573,150,151,159,157,158,160,215,216,
            210,203,204,254,693,198,574,188,696,182,
            695,178,699,174,698,170,701,166,139,700,
            164,430,44,45,46,56,57,58,47,567,
            566,564,568,773,842,572,559,704,107,108,
            109,110,127,124,128,217,149,573,150,151,
            159,157,158,160,215,216,210,203,204,254,
            693,198,574,188,696,182,695,178,699,174,
            698,170,701,166,1130,700,164,430,44,45,
            46,56,57,58,47,567,566,564,568,773,
            842,572,559,704,107,108,109,110,127,124,
            128,217,149,573,150,151,159,157,158,160,
            215,216,210,203,204,254,693,198,574,188,
            696,182,695,178,699,174,698,170,701,166,
            1198,700,164,430,44,45,46,56,57,58,
            47,567,566,564,568,773,842,572,559,704,
            107,108,109,110,127,124,128,217,149,573,
            150,151,159,157,158,160,215,216,210,203,
            204,254,693,198,574,188,696,182,695,178,
            699,174,698,170,701,166,1200,700,164,430,
            44,45,46,56,57,58,47,567,566,564,
            568,773,842,572,559,704,107,108,109,110,
            127,124,128,217,149,573,150,151,159,157,
            158,160,215,216,210,203,204,254,693,198,
            574,188,696,182,695,178,699,174,698,170,
            701,166,1201,700,164,430,44,45,46,56,
            57,58,47,567,566,564,568,773,842,572,
            559,704,107,108,109,110,127,124,128,217,
            149,573,150,151,159,157,158,160,215,216,
            210,203,204,254,693,198,574,188,696,182,
            695,178,699,174,698,170,701,166,1202,700,
            164,430,44,45,46,56,57,58,47,567,
            566,564,568,773,842,572,559,704,107,108,
            109,110,127,124,128,217,149,573,150,151,
            159,157,158,160,215,216,210,203,204,254,
            693,198,574,188,696,182,695,178,699,174,
            698,170,926,168,430,44,45,46,56,57,
            58,47,567,566,564,568,773,842,572,559,
            704,107,108,109,110,127,124,128,217,149,
            573,150,151,159,157,158,160,215,216,210,
            203,204,254,693,198,574,188,696,182,695,
            178,699,174,927,172,430,44,45,46,56,
            57,58,47,567,566,564,568,773,842,572,
            559,704,107,108,109,110,127,124,128,217,
            149,573,150,151,159,157,158,160,215,216,
            210,203,204,254,693,198,574,188,696,182,
            695,178,924,176,430,44,45,46,56,57,
            58,47,567,566,564,568,773,842,572,559,
            704,107,108,109,110,127,124,128,217,149,
            573,150,151,159,157,158,160,215,216,210,
            203,204,254,693,198,574,188,696,182,925,
            180,430,44,45,46,56,57,58,47,567,
            566,564,568,773,842,572,559,704,107,108,
            109,110,127,124,128,217,149,573,150,151,
            159,157,158,160,215,216,210,203,204,254,
            693,198,574,188,918,186,430,44,45,46,
            56,57,58,47,567,566,564,568,773,842,
            572,559,704,107,108,109,110,127,124,128,
            217,149,573,150,151,159,157,158,160,215,
            216,210,203,204,254,693,198,574,188,919,
            184,430,44,45,46,56,57,58,47,567,
            566,564,568,773,842,572,559,704,107,108,
            109,110,127,124,128,217,149,573,150,151,
            159,157,158,160,215,216,210,203,204,254,
            693,198,920,196,430,44,45,46,56,57,
            58,47,567,566,564,568,773,842,572,559,
            704,107,108,109,110,127,124,128,217,149,
            573,150,151,159,157,158,160,215,216,210,
            203,204,254,693,198,921,194,430,44,45,
            46,56,57,58,47,567,566,564,568,773,
            842,572,559,704,107,108,109,110,127,124,
            128,217,149,573,150,151,159,157,158,160,
            215,216,210,203,204,254,693,198,922,192,
            430,44,45,46,56,57,58,47,567,566,
            564,568,773,842,572,559,704,107,108,109,
            110,127,124,128,217,149,573,150,151,159,
            157,158,160,215,216,210,203,204,254,693,
            198,923,190,430,44,45,46,56,57,58,
            47,567,566,564,568,773,842,572,559,704,
            107,108,109,110,127,124,128,217,149,573,
            150,151,159,157,158,160,215,216,210,203,
            204,254,916,202,430,44,45,46,56,57,
            58,47,567,566,564,568,773,842,572,559,
            704,107,108,109,110,127,124,128,217,149,
            573,150,151,159,157,158,160,215,216,210,
            203,204,254,917,200,430,44,45,46,56,
            57,58,47,567,566,564,568,773,842,572,
            559,704,107,108,109,110,127,124,128,217,
            149,573,150,151,159,157,158,160,215,216,
            210,213,214,254,430,44,45,46,56,57,
            58,47,567,566,564,568,773,842,572,559,
            704,107,108,109,110,127,124,128,217,149,
            573,150,151,159,157,158,160,215,216,210,
            211,212,254,430,44,45,46,56,57,58,
            47,567,566,564,568,773,842,572,559,704,
            107,108,109,110,127,124,128,217,149,573,
            150,151,159,157,158,160,215,216,210,207,
            208,254,430,44,45,46,56,57,58,47,
            567,566,564,568,773,842,572,559,704,107,
            108,109,110,127,124,128,217,149,573,150,
            151,159,157,158,160,215,216,210,205,206,
            254,365,44,45,46,56,57,58,47,370,
            369,368,55,367,667,44,45,46,56,57,
            58,47,370,369,368,55,367,840,72,44,
            45,46,56,57,58,47,49,50,51,55,
            59,60,543,475,544,4416,4416,4416,4416,4416,
            4416,4416,4416,4416,4416,4416,4416,371,91,4416,
            224,4416,4416,4416,4416,4416,4416,4416,4416,4416,
            371,91,4416,95,259,221,4416,282,283,284,
            285,222,223,4416,4416,145,4416,4416,4416,37,
            39,41,42,4416,394,291,366,38,43,238,
            484,4416,4416,4416,4416,4416,219,476,143,44,
            45,46,56,57,58,47,49,50,51,55,
            59,60,1273,913,1204,4416,4416,4416,4416,4416,
            4416,4416,4416,4416,4416,4416,4416,3825,4416,1,
            44,45,46,56,57,58,47,49,50,51,
            55,59,60,237,1,44,45,46,56,57,
            58,47,49,50,51,55,59,60,237,37,
            39,1135,1066,1,44,45,46,56,57,58,
            47,49,50,51,55,59,60,237,4416,4416,
            4416,4416,4416,4416,4416,4416,4416,4416,4416,4416,
            37,39,41,42,35,36,40,997,38,43,
            238,240,4416,4416,374,37,39,41,42,4416,
            4416,4416,4416,38,43,238,240,4416,4416,375,
            4416,4416,4416,50,37,39,41,42,4416,4416,
            4416,4416,38,43,238,240,4416,4416,376,1,
            44,45,46,56,57,58,47,49,50,51,
            55,59,60,237,1,44,45,46,56,57,
            58,47,49,50,51,55,59,60,237,72,
            44,45,46,56,57,58,47,49,50,51,
            55,59,60,237,72,44,45,46,56,57,
            58,47,49,50,51,55,59,60,237,4416,
            37,39,41,42,280,4416,4416,4416,38,43,
            238,240,4416,4416,477,37,39,41,42,4416,
            4416,4416,4416,38,43,238,240,4416,4416,482,
            37,39,41,42,480,5,4416,4416,38,43,
            238,911,4416,4416,4416,37,39,41,42,4416,
            4416,4416,4416,38,43,238,912,625,44,45,
            46,56,57,58,47,49,50,51,560,59,
            60,547,559,546,625,44,45,46,56,57,
            58,47,49,50,51,560,59,60,547,559,
            546,583,44,45,46,56,57,58,47,49,
            50,51,560,59,60,547,559,546,4416,4416,
            4416,4416,4416,4416,4416,275,4416,4416,4416,4416,
            4416,4416,81,243,82,667,44,45,46,915,
            914,54,47,49,50,51,52,136,53,81,
            243,82,4416,4416,267,478,4416,4416,4416,4416,
            4416,4416,4416,4416,4416,4416,81,90,82,4416,
            4416,266,583,44,45,46,56,57,58,47,
            49,50,51,560,59,60,547,559,546,583,
            44,45,46,56,57,58,47,49,50,51,
            560,59,60,547,559,546,583,44,45,46,
            56,57,58,47,49,50,51,560,59,60,
            547,559,546,282,283,284,285,4416,4416,4416,
            4416,4416,4416,4416,4416,1342,4416,81,89,82,
            474,4416,4416,4416,4416,4416,4416,4416,4416,4416,
            4416,4416,4416,4416,81,88,82,4416,4416,702,
            4416,4416,4416,4416,4416,4416,4416,4416,4416,4416,
            4416,81,87,82,583,44,45,46,56,57,
            58,47,49,50,51,560,59,60,547,559,
            546,583,44,45,46,56,57,58,47,49,
            50,51,560,59,60,547,559,546,583,44,
            45,46,56,57,58,47,49,50,51,560,
            59,60,547,559,546,4416,4416,4416,4416,4416,
            4416,4416,4416,4416,4416,4416,4416,4416,4416,81,
            3713,82,705,44,45,46,56,57,58,47,
            370,369,368,55,367,4416,81,901,82,743,
            44,45,46,56,57,58,47,370,369,368,
            55,367,4416,81,253,82,667,44,45,46,
            56,57,58,47,837,836,834,55,833,60,
            832,4416,4416,4416,4416,4416,4416,4416,371,91,
            4416,268,705,44,45,46,56,57,58,47,
            370,369,368,55,367,371,91,4416,94,667,
            44,45,46,56,57,58,47,370,369,368,
            55,367,772,838,839,4416,4416,4416,4416,4416,
            4416,4416,841,667,44,45,46,56,57,58,
            47,370,369,368,55,367,4416,4416,371,91,
            840,268,667,44,45,46,56,57,58,47,
            370,369,368,55,367,371,91,4416,94,4416,
            4416,4416,4416,258,771,4416,4416,4416,4416,4416,
            4416,4416,4416,1056,839,4416,4416,4416,4416,903,
            904,4416,703,667,44,45,46,56,57,58,
            47,370,369,368,55,367,4416,4416,371,91,
            4416,269,4416,4416,4416,4416,4416,4416,4416,122,
            4416,667,44,45,46,56,57,58,47,370,
            369,368,55,367,4416,4416,4416,902,4416,4416,
            4416,4416,4416,4416,4416,4416,4416,4416,4416,903,
            904,667,44,45,46,56,57,58,47,370,
            369,368,55,367,667,44,45,46,56,57,
            58,47,370,369,368,55,367,371,91,123,
            1127,4416,4416,4416,4416,4416,4416,4416,4416,4416,
            4416,4416,4416,4416,4416,4416,4416,4416,4416,4416,
            4416,4416,4416,4416,4416,4416,4416,371,91,4416,
            1196,4416,4416,4416,4416,4416,4416,4416,4416,4416,
            371,91,4416,1199,4416,4416
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,0,1,0,0,4,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,0,38,
            39,0,1,2,44,45,46,0,48,0,
            50,51,52,53,0,51,2,57,58,59,
            60,61,62,63,60,61,0,0,2,69,
            70,0,72,73,74,75,76,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,0,
            0,62,63,0,4,44,45,46,5,48,
            0,50,51,52,53,5,0,1,57,58,
            59,60,61,62,63,0,0,0,2,4,
            69,70,0,72,73,74,75,76,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            0,1,40,41,42,0,44,52,75,4,
            81,49,83,0,85,86,0,0,78,57,
            58,59,65,66,67,68,64,65,66,67,
            68,69,0,71,0,1,0,0,38,2,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,0,0,40,41,4,4,44,45,
            46,47,65,66,67,68,73,0,54,55,
            56,0,5,0,1,0,5,65,66,67,
            68,0,0,87,2,0,70,2,0,0,
            1,38,39,0,80,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,24,25,26,27,28,29,30,
            31,32,33,34,35,36,37,0,1,40,
            41,4,51,44,45,46,47,62,63,0,
            52,60,61,54,55,56,79,0,0,2,
            79,0,59,2,0,0,0,0,4,2,
            0,0,0,2,0,38,39,0,0,80,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,48,48,50,50,39,53,53,41,
            48,0,48,2,50,51,52,53,0,0,
            2,2,0,1,60,61,62,63,0,0,
            1,0,64,77,70,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,24,25,26,27,28,29,30,
            31,32,33,34,35,36,37,0,40,40,
            41,0,5,44,45,46,47,49,0,0,
            0,1,51,54,55,56,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,0,40,
            40,41,0,5,44,45,46,47,49,58,
            0,0,1,0,54,55,56,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,0,
            40,40,41,0,52,44,45,46,47,49,
            0,0,0,0,3,54,55,56,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            0,48,42,50,0,5,53,0,1,47,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,0,43,0,0,0,2,0,0,
            1,47,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,0,0,1,43,0,4,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,0,38,39,77,82,0,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            0,1,2,0,4,5,0,1,2,0,
            4,5,0,1,2,0,4,5,0,4,
            2,0,4,5,0,1,0,0,4,0,
            4,4,0,0,0,0,0,0,38,39,
            0,0,0,43,38,39,0,0,0,43,
            38,39,5,38,39,43,38,39,0,0,
            57,43,38,42,38,39,39,0,0,2,
            41,3,0,41,40,40,0,0,42,2,
            0,5,42,49,49,76,0,0,42,2,
            42,0,71,64,3,0,64,38,3,0,
            42,0,69,0,3,0,1,71,5,72,
            0,1,0,1,0,1,0,0,2,78,
            3,0,0,1,3,0,84,0,1,57,
            0,1,0,1,0,1,0,1,0,59,
            0,3,0,3,58,0,0,2,0,3,
            0,3,2,0,0,0,3,3,3,0,
            0,0,3,3,3,0,0,0,43,3,
            3,0,0,74,3,3,0,0,0,0,
            0,0,0,0,0,43,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            239,126,51,4416,4416,51,4464,4515,4514,4518,
            4517,4492,4488,4491,4489,4490,4432,4433,4434,4435,
            4436,4437,4438,4439,4440,4441,4442,4443,4483,4481,
            4484,4482,4480,4485,4487,4486,4657,4444,4416,51,
            51,62,4122,4054,4430,4447,4449,4416,4644,4416,
            4648,4651,4643,4652,86,3653,3881,4417,4419,4420,
            4650,4642,4645,4647,3634,3619,85,4416,3952,4418,
            4649,4416,4450,4445,4446,4448,4646,4464,4515,4514,
            4518,4517,4492,4488,4491,4489,4490,4432,4433,4434,
            4435,4436,4437,4438,4439,4440,4441,4442,4443,4483,
            4481,4484,4482,4480,4485,4487,4486,4657,4444,209,
            80,372,373,4416,62,4430,4447,4449,3494,4644,
            4416,4648,4651,4643,4652,4283,4416,4139,4417,4419,
            4420,4650,4642,4645,4647,287,84,181,3969,379,
            4418,4649,4416,4450,4445,4446,4448,4646,4464,4515,
            4514,4518,4517,4492,4488,4491,4489,4490,4432,4433,
            4434,4435,4436,4437,4438,4439,4440,4441,4442,4443,
            4483,4481,4484,4482,4480,4485,4487,4486,4657,4444,
            60,142,4431,4424,4421,79,4430,3508,2053,61,
            3915,4423,3588,4416,3774,3759,4416,185,4535,4417,
            4419,4420,3200,3157,3114,3071,4425,4426,4427,4428,
            4429,4418,183,4422,247,1717,220,83,765,3986,
            4464,4515,4514,4518,4517,4492,4488,4491,4489,4490,
            4432,4433,4434,4435,4436,4437,4438,4439,4440,4441,
            4442,4443,4483,4481,4484,4482,4480,4485,4487,4486,
            4657,4444,4416,142,3364,4521,379,59,3325,1773,
            4199,563,3200,3157,3114,3071,2501,4416,4520,4516,
            4519,4416,2445,55,4071,277,2445,3200,3157,3114,
            3071,265,4416,4415,1605,4416,349,1661,290,4416,
            1717,765,59,165,1058,4464,4515,4514,4518,4517,
            4492,4488,4491,4489,4490,4432,4433,4434,4435,4436,
            4437,4438,4439,4440,4441,4442,4443,4483,4481,4484,
            4482,4480,4485,4487,4486,4657,4444,125,50,3364,
            4521,50,3653,3325,1773,4199,563,372,373,4416,
            3508,3634,3619,4520,4516,4519,1403,4416,4416,1829,
            3507,4416,2834,1885,4416,255,4416,4416,379,1941,
            4416,4416,4416,4156,225,50,50,61,197,1058,
            4464,4515,4514,4518,4517,4492,4488,4491,4489,4490,
            4432,4433,4434,4435,4436,4437,4438,4439,4440,4441,
            4442,4443,4483,4481,4484,4482,4480,4485,4487,4486,
            4657,4444,3729,3729,3744,3744,1344,562,562,3442,
            3729,4416,3729,1997,3744,3653,3508,562,4416,61,
            453,237,147,706,3634,3619,372,373,187,4416,
            1717,4416,3403,4223,349,4464,4515,4514,4518,4517,
            4492,4488,4491,4489,4490,4432,4433,4434,4435,4436,
            4437,4438,4439,4440,4441,4442,4443,4483,4481,4484,
            4482,4480,4485,4487,4486,4657,4444,271,3243,3364,
            4521,169,4242,3325,1773,4199,563,3284,4416,195,
            117,1717,4660,4520,4516,4519,4464,4515,4514,4518,
            4517,4492,4488,4491,4489,4490,4432,4433,4434,4435,
            4436,4437,4438,4439,4440,4441,4442,4443,4483,4481,
            4484,4482,4480,4485,4487,4486,4657,4444,97,3243,
            3364,4521,288,3494,3325,1773,4199,563,3284,2885,
            193,140,1717,4416,4520,4516,4519,4464,4515,4514,
            4518,4517,4492,4488,4491,4489,4490,4432,4433,4434,
            4435,4436,4437,4438,4439,4440,4441,4442,4443,4483,
            4481,4484,4482,4480,4485,4487,4486,4657,4444,4416,
            3243,3364,4521,256,3508,3325,1773,4199,563,3284,
            92,4416,4416,4416,4634,4520,4516,4519,4464,4515,
            4514,4518,4517,4492,4488,4491,4489,4490,4432,4433,
            4434,4435,4436,4437,4438,4439,4440,4441,4442,4443,
            4483,4481,4484,4482,4480,4485,4487,4486,4657,4444,
            4416,3729,1549,3744,242,4341,562,4416,775,545,
            4464,4515,4514,4518,4517,4492,4488,4491,4489,4490,
            4432,4433,4434,4435,4436,4437,4438,4439,4440,4441,
            4442,4443,4483,4481,4484,4482,4480,4485,4487,4486,
            4657,4444,4416,2557,4416,59,4416,3881,55,4416,
            4182,545,4464,4515,4514,4518,4517,4492,4488,4491,
            4489,4490,4432,4433,4434,4435,4436,4437,4438,4439,
            4440,4441,4442,4443,4483,4481,4484,4482,4480,4485,
            4487,4486,4657,4444,270,106,49,2613,4416,49,
            4464,4515,4514,4518,4517,4492,4488,4491,4489,4490,
            4432,4433,4434,4435,4436,4437,4438,4439,4440,4441,
            4442,4443,4483,4481,4484,4482,4480,4485,4487,4486,
            4657,4444,96,49,49,293,4354,4416,4464,4515,
            4514,4518,4517,4492,4488,4491,4489,4490,4432,4433,
            4434,4435,4436,4437,4438,4439,4440,4441,4442,4443,
            4483,4481,4484,4482,4480,4485,4487,4486,4657,4444,
            126,51,3952,173,51,85,125,50,3969,4416,
            50,84,106,49,3986,142,49,83,142,62,
            3881,177,59,86,142,637,142,4416,62,201,
            61,379,199,163,191,189,179,4416,51,51,
            4416,4416,114,85,50,50,4416,118,4416,84,
            49,49,844,765,62,83,765,59,4416,142,
            2934,86,765,3026,765,61,1405,51,4416,3952,
            3442,986,175,3442,3243,3243,141,50,3026,3969,
            167,2445,2165,3284,3284,4705,171,49,2221,3986,
            2277,4416,2981,3403,4494,4416,3403,765,4493,4416,
            2333,4416,2781,248,4552,4416,397,2981,1466,2109,
            4416,487,4416,577,4416,4311,4416,4416,3847,4527,
            4551,4416,4416,930,4550,4416,2389,4416,999,2934,
            4416,1068,144,1137,143,1206,4416,1275,4416,2834,
            4416,1129,4416,4662,2885,252,4416,4088,4416,4661,
            4416,4570,3864,4416,4416,4416,4548,4547,4546,4416,
            4416,4416,4553,4549,4545,4416,4416,4416,2669,4571,
            4568,4416,4416,4577,4572,4569,4416,4416,4416,4416,
            4416,4416,4416,4416,4416,2725
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            323,107,45,45,45,45,274,283,283,415,
            415,415,415,137,415,438,99,416,106,65,
            65,65,65,56,56,56,283,283,283,283,
            283,543,363,283,117,116,115,321,123,123,
            120,122,438,56,139,56,143,143,143,141,
            188,144,143,318,56,56,147,153,151,159,
            155,162,161,164,163,56,56,56,438,56,
            186,438,185,102,438,181,65,201,201,65,
            235,233,438,238,1,56,191,365,240,321,
            416,416,367,438,56,56,56,56,56,56,
            56,56,56,56,56,56,56,56,413,413,
            321,282,282,282,282,117,112,233,51,233,
            51,233,56,438,286,413,413,56,43,285,
            286,289,233,51,191,191,321,321,320,320,
            320,188,143,143,321,321,320,151,151,155,
            155,153,153,153,153,161,159,163,162,56,
            56,201,181,109,283,438,438,56,56,292,
            56,56,146,56,233,233,54,54,321,321,
            321,56,240,240,56,438,321,233,471,56,
            233,50,51,233,191,191,191,289,191,191,
            134,233,296,296,296,296,279,191,283,294,
            65,55,233,233,233,146,233,233,438,56,
            438,56,233,508,280,233,280,233,56,56,
            233,233
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            40,44,12,14,15,13,11,16,17,18,
            19,20,21,22,23,24,25,26,27,6,
            32,29,31,28,30,33,35,34,36,37,
            8,7,10,9,45,47,55,56,54,41,
            1,46,78,0,42,43,82,75,87,2,
            3,5,0,3,80,40,44,45,55,56,
            54,41,1,46,8,7,10,9,12,14,
            15,13,11,16,17,18,19,20,21,22,
            23,24,25,26,27,6,32,29,31,28,
            30,33,35,34,36,37,47,0,87,70,
            0,76,51,60,61,52,87,0,52,76,
            87,63,62,0,1,2,50,53,48,4,
            0,1,42,3,82,75,51,60,61,62,
            63,87,4,43,5,0,48,0,77,0,
            2,77,39,4,1,38,81,83,85,86,
            41,64,49,40,65,66,67,68,42,71,
            57,58,59,3,78,79,43,5,82,84,
            72,73,74,75,51,60,61,62,63,69,
            87,48,50,53,52,76,0,4,39,0,
            40,44,45,47,55,56,54,41,1,46,
            8,7,10,9,12,14,15,13,11,16,
            17,18,19,20,21,22,23,24,25,26,
            27,6,32,29,31,28,30,33,35,34,
            36,37,3,0,5,75,0,72,0,49,
            40,41,64,65,66,67,68,71,78,79,
            81,83,84,85,86,72,73,74,57,58,
            59,69,50,51,60,52,76,48,61,62,
            63,53,1,3,5,75,87,42,82,43,
            0,1,2,0,84,78,5,0,5,79,
            0,73,0,74,0,43,5,49,40,41,
            64,65,66,42,67,68,71,3,81,83,
            85,86,57,58,59,69,2,39,4,38,
            1,0,87,52,70,50,53,48,63,62,
            8,7,10,9,37,32,29,31,28,30,
            33,35,34,36,6,17,18,19,20,21,
            22,23,24,25,26,27,16,12,14,15,
            13,11,60,61,51,0,37,32,29,31,
            28,30,33,35,34,36,6,17,18,19,
            20,21,22,23,24,25,26,27,16,12,
            14,15,13,11,9,10,8,7,40,71,
            49,41,64,65,66,67,68,44,57,69,
            58,59,42,0,2,57,69,58,59,44,
            73,74,45,75,46,72,61,52,48,62,
            76,63,50,70,60,51,53,8,7,10,
            9,12,14,15,13,11,16,17,18,19,
            20,21,22,23,24,25,26,27,6,32,
            29,31,28,30,33,35,34,36,37,0,
            51,60,61,8,7,10,9,12,14,15,
            13,11,16,17,18,19,20,21,22,23,
            24,25,26,27,6,32,29,31,28,30,
            33,35,34,36,37,47,0,42,8,7,
            10,9,12,14,15,13,11,16,17,18,
            19,20,21,22,23,24,25,26,27,6,
            32,29,31,28,30,33,35,34,36,37,
            47,0,76,52,4,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            82,119,119,119,119,119,119,119,119,100,
            100,100,100,15,100,1,7,90,3,21,
            21,21,21,18,18,18,119,119,119,119,
            119,88,106,119,5,119,119,119,119,119,
            119,119,114,18,119,18,119,119,119,119,
            119,24,24,24,75,75,119,119,119,119,
            119,119,119,119,119,18,18,18,112,18,
            119,98,3,9,1,13,21,114,114,21,
            119,119,120,119,18,18,18,119,119,119,
            104,104,94,108,68,68,75,75,54,54,
            61,61,61,61,40,47,26,33,119,119,
            119,119,119,119,119,5,102,119,119,119,
            119,119,18,114,119,119,119,18,119,119,
            119,119,119,119,18,18,119,119,24,24,
            24,119,24,24,119,119,24,119,119,119,
            119,119,119,119,119,119,119,119,119,18,
            18,114,13,11,119,114,127,18,18,119,
            18,18,24,18,119,119,18,18,119,119,
            119,18,119,119,17,114,119,119,21,18,
            119,119,119,119,18,18,18,119,18,18,
            119,119,24,119,119,119,119,18,119,119,
            21,18,119,119,119,24,119,119,114,18,
            114,18,119,21,119,119,119,119,18,18,
            119,119
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            15,0,79,0,90,0,94,0,80,0,
            81,0,74,0,73,0,56,8,9,10,
            11,16,0,58,0,16,11,8,9,10,
            52,0,11,8,9,10,16,50,0,16,
            11,8,9,10,48,0,11,8,9,10,
            16,46,0,16,11,8,9,10,44,0,
            11,8,9,10,16,42,0,16,11,8,
            9,10,40,0,11,8,9,10,16,37,
            0,106,56,8,9,10,12,93,0,16,
            14,109,0,16,63,64,99,14,0,75,
            0,111,0,72,0,110,0,100,4,5,
            0,108,107,56,8,9,10,12,0,56,
            8,9,10,12,104,0,8,9,10,12,
            56,86,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            11,20,12,21,19,33,45,46,47,48,
            49,50,51,52,53,54,55,56,57,58,
            59,60,61,62,63,64,65,66,67,68,
            69,70,72,73,74,86,88,25,15,2,
            3,7,18,41,34,43,71,81,1,75,
            76,78,85,30,31,32,38,39,40,77,
            82,83,84,4,5,6,8,9,42,79,
            10,35,36,37,44,80,13,14,16,28,
            17,22,23,24,26,27,87,89,90,91
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            0,0,0,95,96,0,0,98,99,100,
            102,103,97,104,105,106,0,0,0,0,
            0,0,0,0,0,117,0,0,0,0,
            0,0,0,0,0,134,135,0,132,133,
            130,131,128,129,126,127,124,125,122,123,
            120,121,111,119,0,109,108,0,110,118,
            0,0,92,93,0,107,0,0,0,0,
            0,140,144,137,0,0,0,0,151,138,
            139,142,112,0,113,116,0,0,141,143,
            0,149,152,153,0,0,0,0,94,101,
            0,0,114,115,0,136,145,146,147,148,
            150,0,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            104,152,138,182,114,162,77,203,224,231,
            238,245,252,1,9,146,197,126,170,126,
            170,214,219,86,210,264,270,274,278,190,
            15,71,95,18,18,26,26,34,34,34,
            34,48,48,56,61,66,259
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            7,7,7,7,122,122,84,7,7,7,
            7,7,7,7,7,7,194,122,122,132,
            176,7,7,91,7,268,268,7,7,194,
            7,74,98,20,23,28,31,36,39,42,
            45,50,53,58,63,68,261
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            31,30,31,30,31,30,34,25,25,25,
            25,25,25,38,38,31,27,31,30,31,
            30,25,25,34,25,23,22,67,65,28,
            26,35,34,40,40,42,42,44,44,44,
            44,46,46,48,50,52,86
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            3,3,3,3,43,43,74,3,3,3,
            3,3,3,3,3,3,79,43,43,5,
            82,3,3,73,3,78,78,3,3,79,
            3,75,72,64,41,40,49,68,67,66,
            65,71,42,57,58,59,42
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static byte scopeStateSet[] = {
            4,4,4,4,4,4,4,4,4,4,
            4,4,4,4,4,4,4,4,4,4,
            4,4,4,4,4,4,4,60,60,4,
            4,4,4,8,8,10,10,14,14,14,
            14,16,16,17,18,19,1
        };
    };
    public final static byte scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            178,1,162,86,116,0,12,0,178,1,
            162,85,116,0,143,1,0,129,0,4,
            135,0,3,135,0,131,0,2,133,0,
            1,133,0,133,0,9,131,0,8,131,
            0,6,131,0,5,131,0,135,0,10,
            129,0,7,129,0,137,0,38,127,0,
            139,0,39,125,0,141,0,40,123,0,
            173,46,0,44,111,0,143,73,143,72,
            143,45,0,37,0,143,72,143,45,0,
            36,111,37,0,143,45,0,35,111,36,
            111,37,0,143,43,149,5,149,1,95,
            81,116,0,149,5,149,1,95,81,116,
            0,18,111,12,0,149,1,95,81,116,
            0,19,110,18,111,12,0,143,43,149,
            1,95,81,116,0,143,1,95,81,116,
            0,143,43,149,82,149,1,94,81,116,
            0,149,82,149,1,94,81,116,0,149,
            1,94,81,116,0,22,110,18,111,12,
            0,143,43,149,1,94,81,116,0,150,
            39,104,0,16,0,0,150,39,105,83,
            116,0,158,1,148,106,83,116,0,158,
            1,106,0,158,1,148,102,0,158,1,
            148,103,0,158,1,148,104,83,116,0,
            158,1,148,189,83,116,0,158,1,148,
            154,83,116,0,158,1,148,153,83,116,
            0,158,1,148,190,81,116,0,146,0,
            7,111,0,194,77,47,0,14,0,192,
            77,101,0,191,1,47,0,156,1,101,
            0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            4283,4223,0,3442,3403,3364,3325,3284,3243,3200,
            3157,3114,3071,3026,2981,2934,2885,2834,2725,2669,
            2613,2557,1466,1275,1206,1137,1068,999,930,2501,
            577,1405,487,397,2445,844,2389,2333,2277,2221,
            2165,775,706,2109,2053,2781,637,1344,293,1997,
            1941,1885,1829,1773,1717,1661,1605,1549,0,3864,
            4088,3847,4071,4054,3986,3969,3952,3881,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,185,102,100,99,98,146,62,63,61,
            60,51,48,53,50,70,196,52,183,2,
            2,2,2,42,2,2,165,165,165,165,
            165,105,199,162,105,104,106,47,106,104,
            105,101,46,1,47,45,100,99,98,101,
            104,106,102,103,44,40,116,131,129,135,
            133,139,137,144,141,2,2,2,2,2,
            202,4,183,200,2,180,2,1,1,1,
            173,143,77,143,77,39,1,38,148,148,
            86,85,83,81,40,49,64,41,71,42,
            68,67,66,65,58,57,69,59,198,146,
            104,102,100,99,98,105,156,181,182,191,
            173,156,75,5,194,146,147,72,192,143,
            193,150,158,150,1,1,162,162,189,154,
            153,105,106,104,95,94,190,129,129,133,
            133,131,131,131,131,137,135,141,139,42,
            42,1,180,201,3,5,5,42,42,143,
            84,5,79,5,158,158,1,1,148,148,
            148,39,148,148,1,1,148,181,2,73,
            178,80,179,178,1,1,1,150,1,1,
            149,143,102,100,99,98,149,1,3,143,
            2,5,158,158,158,79,158,158,5,43,
            82,43,158,2,149,143,149,143,43,43,
            143,143
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "+",
            "-",
            "*",
            "/",
            ">",
            "<",
            "=",
            ">=",
            "<=",
            "<>",
            "(",
            ")",
            "{",
            "}",
            "[",
            "]",
            "->",
            "|",
            ",",
            ":",
            "::",
            ";",
            ".",
            "..",
            "@",
            "^",
            "^^",
            "?",
            "$empty",
            "STRING_LITERAL",
            "INTEGER_LITERAL",
            "REAL_LITERAL",
            "self",
            "if",
            "then",
            "else",
            "endif",
            "and",
            "or",
            "xor",
            "not",
            "implies",
            "let",
            "in",
            "true",
            "false",
            "null",
            "invalid",
            "Set",
            "Bag",
            "Sequence",
            "Collection",
            "OrderedSet",
            "iterate",
            "forAll",
            "exists",
            "isUnique",
            "any",
            "one",
            "collect",
            "select",
            "reject",
            "collectNested",
            "sortedBy",
            "closure",
            "String",
            "Integer",
            "UnlimitedNatural",
            "Real",
            "Boolean",
            "Tuple",
            "OclAny",
            "OclVoid",
            "OclInvalid",
            "inv",
            "pre",
            "post",
            "context",
            "package",
            "endpackage",
            "def",
            "body",
            "derive",
            "init",
            "static",
            "OclMessage",
            "EOF_TOKEN",
            "IDENTIFIER",
            "SINGLE_LINE_COMMENT",
            "MULTI_LINE_COMMENT",
            "ERROR_TOKEN",
            "binaryKeywordCS",
            "unaryKeywordCS",
            "reservedPunctuationCS",
            "iterateNameCS",
            "iteratorNameCS",
            "literalSimpleNameCS",
            "BooleanLiteralExpCS",
            "InvalidLiteralExpCS",
            "NullLiteralExpCS",
            "notIteratorNorReservedSimpleNa" +
            "meCS",
            "CollectionTypeIdentifierCS",
            "notLiteralNorReservedSimpleNam" +
            "eCS",
            "notReservedSimpleNameCS",
            "pathNameCS",
            "qualifiedPathNameCS",
            "typeCS",
            "variableNameCS",
            "typedVariableCS",
            "VariableDeclarationCS",
            "OclExpressionCS",
            "variableDeclarationListCS",
            "CollectionLiteralPartCS",
            "CollectionLiteralPartsCS",
            "TupleLiteralPartsCS",
            "TupleLiteralPartCS",
            "primaryExpCS",
            "argumentsCS",
            "impliesExpCS",
            "xorExpCS",
            "xorLetCS",
            "orExpCS",
            "orLetCS",
            "andExpCS",
            "andLetCS",
            "equalityExpCS",
            "equalityLetCS",
            "relationalExpCS",
            "relationalLetCS",
            "additiveExpCS",
            "additiveLetCS",
            "multiplicativeExpCS",
            "multiplicativeLetCS",
            "unaryExpCS",
            "unaryLetCS",
            "packageDeclarationsCS",
            "invOrDefCS",
            "prePostOrBodyDeclCS",
            "initOrDerValueCS",
            "simpleNameCS",
            "OclMessageArgumentsCS",
            "OclMessageArgCS",
            "invOrDefsCS",
            "defCS",
            "defExpressionCS",
            "operationCS1",
            "operationCS2",
            "prePostOrBodyDeclsCS",
            "parametersCS",
            "initOrDerValuesCS",
            "contextDeclCS",
            "contextDeclsCS",
            "packageDeclarationCS"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 90,
           SCOPE_UBOUND      = 46,
           SCOPE_SIZE        = 47,
           MAX_NAME_LENGTH   = 34;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 232,
           NT_OFFSET         = 90,
           LA_STATE_OFFSET   = 4708,
           MAX_LA            = 1,
           NUM_RULES         = 292,
           NUM_NONTERMINALS  = 113,
           NUM_SYMBOLS       = 203,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 3481,
           IDENTIFIER_SYMBOL = 37,
           EOFT_SYMBOL       = 87,
           EOLT_SYMBOL       = 87,
           ACCEPT_ACTION     = 4415,
           ERROR_ACTION      = 4416;

    public final static boolean BACKTRACK = false;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
