/**
* <copyright>
*
* Copyright (c) 2005, 2009 IBM Corporation, Borland Software Corp., and others.
* All rights reserved.   This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   IBM - Initial API and implementation
*   E.D.Willink - Elimination of some shift-reduce conflicts
*   E.D.Willink - Remove unnecessary warning suppression
*   E.D.Willink - Bugs 225493, 243976, 259818, 282882, 287993
*   Borland - Bug 242880
*
* </copyright>
*
* $Id: OCLParserprs.java,v 1.11 2009/09/04 13:40:43 ewillink Exp $
*/

package org.eclipse.ocl.parser;

/**
 * @noextend This interface is not intended to be extended by clients.
 */
@SuppressWarnings("nls")
public class OCLParserprs implements lpg.lpgjavaruntime.ParseTable, OCLParsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,1,1,1,1,1,
            1,1,1,1,1,1,1,0,0,0,
            0,0,0,0,1,1,1,1,1,1,
            1,1,1,0,0,0,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,0,
            0,0,0,1,1,1,1,0,0,0,
            1,0,1,1,0,1,1,1,0,0,
            0,0,0,0,0,0,0,0,0,1,
            1,1,1,1,1,1,0,1,1,0,
            0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,6,8,0,1,1,3,
            0,1,1,1,1,1,3,3,1,1,
            3,3,3,3,3,3,1,1,3,3,
            3,3,1,1,3,3,3,3,3,3,
            3,3,1,1,1,1,3,3,3,3,
            1,1,3,3,3,3,1,1,2,2,
            1,2,2,4,6,1,1,1,1,3,
            2,2,5,5,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,3,0,
            1,1,1,1,1,1,1,3,3,4,
            1,1,1,1,1,0,1,1,3,1,
            1,3,2,3,1,1,1,1,1,4,
            1,1,1,1,1,1,1,1,2,2,
            2,2,1,1,4,6,8,6,8,1,
            3,1,5,3,0,1,1,1,1,1,
            4,4,0,1,1,3,1,1,3,3,
            1,1,5,5,5,1,5,2,2,5,
            0,1,0,1,1,3,4,7,5,5,
            0,1,1,3,1,1,3,1,1,1,
            1,1,1,0,1,2,4,1,0,1,
            1,2,1,1,1,7,1,2,3,3,
            3,1,2,4,4,1,2,3,3,3,
            1,2,4,4,4,-80,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-84,0,0,0,-2,-3,
            0,0,0,0,-4,-5,-14,0,-115,0,
            0,-19,0,-67,0,0,0,0,0,-87,
            0,0,0,-53,-13,0,0,0,0,0,
            0,0,0,-20,-69,0,0,-172,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-70,0,
            0,0,0,0,-12,0,0,0,0,0,
            0,-21,0,0,0,0,-22,-23,-15,-27,
            0,0,0,0,0,0,0,-173,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -88,0,0,0,-89,0,0,0,-28,-29,
            0,-30,-193,-38,-39,-10,-40,-41,-42,-43,
            -6,0,0,0,-44,0,0,-85,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -7,0,0,0,0,-114,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-45,-46,0,0,-8,0,
            0,0,0,-116,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-71,-47,0,0,-9,0,0,0,
            0,-160,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -48,-51,0,-52,0,-54,0,-56,-57,-58,
            -59,-60,-66,-75,-76,-77,-78,-79,-11,0,
            0,0,-92,0,0,-166,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-105,-106,0,-107,-108,
            -109,-110,0,-171,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-180,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-111,-117,-118,0,-121,-122,-123,
            -35,0,-82,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-124,-36,0,-83,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-125,-126,0,-169,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-68,-127,-37,
            0,-202,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-128,-133,-134,-135,0,0,0,0,-136,
            -137,-138,-140,-141,0,-17,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-18,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-34,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-55,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-61,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -62,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-63,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-65,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-72,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-112,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-119,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-139,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-148,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-149,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-158,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -159,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-162,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-163,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-190,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-198,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-200,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-210,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-211,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-101,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-102,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-103,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-104,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -95,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-96,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-97,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-98,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-99,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-100,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-93,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -94,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-90,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -91,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-32,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-33,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-120,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -86,0,0,0,-49,-142,0,0,0,0,
            0,0,0,0,0,-143,-81,-144,-145,-146,
            -1,-147,-154,-155,-156,-157,-167,-168,-174,-175,
            -176,-178,-25,-179,-204,0,0,-181,0,0,
            -205,0,0,-182,0,0,-183,-184,-50,-177,
            -185,-186,-16,0,0,0,0,0,-73,0,
            0,-187,0,0,-188,0,0,0,0,0,
            0,-150,0,0,0,0,0,0,0,0,
            0,0,0,-24,0,0,0,0,0,0,
            -151,0,-26,0,0,0,-74,0,-153,0,
            0,0,0,-31,0,0,0,0,0,-189,
            0,0,0,0,-64,0,-161,-129,0,0,
            -191,-113,-130,-131,0,0,0,-152,0,0,
            -194,0,0,-201,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-195,
            0,-170,0,0,0,-192,0,-197,-203,0,
            -199,0,-132,0,0,0,0,0,0,0,
            0,0,0,0,0,-164,-165,-196,-206,0,
            0,0,0,0,-207,-208,0,0,0,-209,
            -212,0,0,-213,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            82,10,10,10,10,10,10,10,10,10,
            10,10,10,10,10,10,10,10,10,67,
            67,6,6,6,6,6,6,6,6,6,
            6,6,7,7,7,7,7,7,7,7,
            7,7,7,8,8,11,11,9,15,68,
            83,84,12,106,106,85,86,69,69,71,
            71,56,56,46,46,47,48,47,48,44,
            45,44,44,44,45,45,45,42,43,42,
            43,42,43,40,41,40,41,40,41,40,
            41,40,41,36,36,38,37,38,37,38,
            37,34,35,34,35,34,35,16,32,16,
            16,17,17,17,17,17,18,18,18,18,
            18,19,19,19,19,3,3,3,1,2,
            2,2,2,2,2,2,2,2,4,4,
            89,89,20,20,20,20,20,20,21,21,
            22,5,5,5,5,5,90,90,91,91,
            72,72,73,73,73,24,24,24,24,24,
            23,27,28,29,30,31,31,25,26,87,
            87,87,87,93,93,94,94,94,95,95,
            50,49,50,50,75,70,70,53,53,53,
            53,55,54,96,96,76,76,92,92,92,
            92,74,74,74,13,14,97,13,77,77,
            77,51,51,57,57,52,52,33,39,88,
            88,78,78,79,79,63,63,63,82,82,
            82,82,82,82,82,99,99,80,98,100,
            100,81,81,58,58,58,61,101,101,66,
            66,59,102,102,64,62,64,64,103,103,
            60,104,104,65,65,65,1,519,125,2999,
            752,514,33,520,47,941,46,1100,994,118,
            119,2955,101,354,111,116,117,142,143,144,
            145,146,147,165,166,167,168,169,102,108,
            756,96,83,84,758,94,760,78,759,70,
            762,66,936,761,64,972,127,125,1047,181,
            851,33,43,47,148,1111,1116,69,138,1156,
            138,3043,1121,2975,1076,127,125,139,158,160,
            815,127,125,3074,151,25,1155,43,47,3113,
            46,1100,994,212,1122,149,935,938,157,519,
            125,2999,752,514,33,520,47,941,46,1100,
            994,118,119,2955,101,354,111,116,117,142,
            143,144,145,146,147,165,166,167,168,169,
            102,108,756,96,83,84,758,94,760,78,
            759,70,762,66,235,761,64,49,3068,1076,
            127,125,830,2983,179,69,138,211,216,3034,
            272,233,1123,1154,1160,246,2974,1124,1125,193,
            995,112,113,180,183,184,3002,3015,157,519,
            125,2999,752,514,33,520,47,941,46,1100,
            994,118,119,2955,101,354,111,116,117,142,
            143,144,145,146,147,165,166,167,168,169,
            102,108,756,96,83,84,758,94,760,78,
            759,70,762,66,235,761,64,252,253,254,
            255,1076,127,125,1161,1076,127,125,1162,615,
            152,233,467,1102,567,905,323,325,687,1107,
            885,1058,127,125,62,1126,3060,3015,399,519,
            125,2999,752,514,33,520,47,941,46,1100,
            994,118,119,2955,101,354,111,116,117,142,
            143,144,145,146,147,165,166,167,168,169,
            102,108,756,96,83,84,758,94,760,78,
            759,70,762,66,225,761,64,342,267,258,
            1152,1058,127,125,62,1099,399,519,125,2999,
            752,514,33,520,47,941,46,1100,994,118,
            119,2955,101,354,111,116,117,142,143,144,
            145,146,147,165,166,167,168,169,102,108,
            756,96,83,84,758,94,760,78,759,70,
            762,66,225,761,64,1127,1128,364,1152,1058,
            127,125,62,2973,399,519,125,2999,752,514,
            33,520,47,941,46,1100,994,118,119,2955,
            101,354,111,116,117,142,143,144,145,146,
            147,165,166,167,168,169,102,108,756,96,
            83,84,758,94,760,78,759,70,762,66,
            225,761,64,1024,1129,432,1152,1058,127,125,
            62,2976,79,519,125,2999,752,514,33,520,
            47,941,46,1100,994,118,119,2955,101,354,
            111,116,117,142,143,144,145,146,147,165,
            166,167,168,169,102,108,756,96,83,84,
            758,94,760,78,759,70,762,66,936,761,
            64,1130,1108,437,540,266,975,263,647,311,
            903,1042,912,1045,780,233,678,898,1141,1058,
            127,125,62,403,159,160,399,519,125,2999,
            752,514,33,520,47,941,46,1100,994,118,
            119,2955,101,354,111,116,117,142,143,144,
            145,146,147,165,166,167,168,169,102,108,
            756,96,83,84,758,94,760,78,759,70,
            762,66,225,761,64,438,1028,1151,1152,887,
            1006,1139,1153,2984,471,519,125,2999,752,514,
            33,520,47,941,46,1100,994,118,119,2955,
            101,354,111,116,117,142,143,144,145,146,
            147,165,166,167,168,169,102,108,756,96,
            83,84,758,94,760,78,759,70,762,66,
            2998,761,64,192,2997,399,519,125,2999,752,
            514,33,520,47,941,46,1100,994,118,119,
            2955,101,354,111,116,117,142,143,144,145,
            146,147,165,166,167,168,169,102,108,756,
            96,83,84,758,94,760,78,759,70,762,
            66,225,761,64,1008,1064,1155,1152,1163,1026,
            1081,469,3100,327,519,125,2999,752,514,33,
            520,47,941,46,1100,994,118,119,2955,101,
            354,111,116,117,142,143,144,145,146,147,
            165,166,167,168,169,102,108,756,96,83,
            84,758,94,760,78,759,70,762,66,225,
            761,64,766,1029,469,993,327,519,125,2999,
            752,514,33,520,47,941,46,1100,994,118,
            119,2955,101,354,111,116,117,142,143,144,
            145,146,147,165,166,167,168,169,102,108,
            756,96,83,84,758,94,760,78,759,70,
            762,66,225,761,64,767,1059,931,1046,327,
            519,125,2999,752,514,33,520,47,941,46,
            1100,994,118,119,2955,101,354,111,116,117,
            142,143,144,145,146,147,165,166,167,168,
            169,102,108,756,96,83,84,758,94,760,
            78,759,70,762,66,225,761,64,1138,1160,
            469,2988,242,519,125,2999,752,514,33,520,
            47,941,46,1100,994,118,119,2955,101,354,
            111,116,117,142,143,144,145,146,147,165,
            166,167,168,169,102,108,756,96,83,84,
            758,94,760,78,759,70,762,66,235,761,
            64,768,1165,1161,1166,1172,252,253,254,255,
            1174,1178,1180,1061,1094,234,327,519,125,2999,
            752,514,33,520,47,941,46,1100,994,118,
            119,2955,101,354,111,116,117,142,143,144,
            145,146,147,165,166,167,168,169,102,108,
            756,96,83,84,758,94,760,78,759,70,
            762,66,260,761,64,327,519,125,2999,752,
            514,33,520,47,941,46,1100,994,118,119,
            2955,101,354,111,116,117,142,143,144,145,
            146,147,165,166,167,168,169,102,108,756,
            96,83,84,758,94,760,78,759,70,762,
            66,259,761,64,327,519,125,2999,752,514,
            33,520,47,941,46,1100,994,118,119,2955,
            101,354,111,116,117,142,143,144,145,146,
            147,165,166,167,168,169,102,108,756,96,
            83,84,758,94,760,78,759,70,762,66,
            765,761,64,327,519,125,2999,752,514,33,
            520,47,941,46,1100,994,118,119,2955,101,
            354,111,116,117,142,143,144,145,146,147,
            165,166,167,168,169,102,108,756,96,83,
            84,758,94,760,78,759,70,762,66,773,
            761,64,327,519,125,2999,752,514,33,520,
            47,941,46,1100,994,118,119,2955,101,354,
            111,116,117,142,143,144,145,146,147,165,
            166,167,168,169,102,108,756,96,83,84,
            758,94,760,78,759,70,762,66,275,761,
            64,327,519,125,2999,752,514,33,520,47,
            941,46,1100,994,118,119,2955,101,354,111,
            116,117,142,143,144,145,146,147,165,166,
            167,168,169,102,108,756,96,83,84,758,
            94,760,78,759,70,762,66,274,761,64,
            327,519,125,2999,752,514,33,520,47,941,
            46,1100,994,118,119,2955,101,354,111,116,
            117,142,143,144,145,146,147,165,166,167,
            168,169,102,108,756,96,83,84,758,94,
            760,78,759,70,762,66,273,761,64,327,
            519,125,2999,752,514,33,520,47,941,46,
            1100,994,118,119,2955,101,354,111,116,117,
            142,143,144,145,146,147,165,166,167,168,
            169,102,108,756,96,83,84,758,94,760,
            78,759,70,762,66,264,761,64,327,519,
            125,2999,752,514,33,520,47,941,46,1100,
            994,118,119,2955,101,354,111,116,117,142,
            143,144,145,146,147,165,166,167,168,169,
            102,108,756,96,83,84,758,94,760,78,
            759,70,762,66,193,761,64,327,519,125,
            2999,752,514,33,520,47,941,46,1100,994,
            118,119,2955,101,354,111,116,117,142,143,
            144,145,146,147,165,166,167,168,169,102,
            108,756,96,83,84,758,94,760,78,759,
            70,762,66,227,761,64,327,519,125,2999,
            752,514,33,520,47,941,46,1100,994,118,
            119,2955,101,354,111,116,117,142,143,144,
            145,146,147,165,166,167,168,169,102,108,
            756,96,83,84,758,94,760,78,759,70,
            762,66,163,761,64,327,519,125,2999,752,
            514,33,520,47,941,46,1100,994,118,119,
            2955,101,354,111,116,117,142,143,144,145,
            146,147,165,166,167,168,169,102,108,756,
            96,83,84,758,94,760,78,759,70,762,
            66,2979,761,64,327,519,125,2999,752,514,
            33,520,47,941,46,1100,994,118,119,2955,
            101,354,111,116,117,142,143,144,145,146,
            147,165,166,167,168,169,102,108,756,96,
            83,84,758,94,760,78,759,70,762,66,
            269,761,64,327,519,125,2999,752,514,33,
            520,47,941,46,1100,994,118,119,2955,101,
            354,111,116,117,142,143,144,145,146,147,
            165,166,167,168,169,102,108,756,96,83,
            84,758,94,760,78,759,70,762,66,268,
            761,64,327,519,125,2999,752,514,33,520,
            47,941,46,1100,994,118,119,2955,101,354,
            111,116,117,142,143,144,145,146,147,165,
            166,167,168,169,102,108,756,96,83,84,
            758,94,760,78,759,70,762,66,164,761,
            64,327,519,125,2999,752,514,33,520,47,
            941,46,1100,994,118,119,2955,101,354,111,
            116,117,142,143,144,145,146,147,165,166,
            167,168,169,102,108,756,96,83,84,758,
            94,760,78,759,70,762,66,162,761,64,
            327,519,125,2999,752,514,33,520,47,941,
            46,1100,994,118,119,2955,101,354,111,116,
            117,142,143,144,145,146,147,165,166,167,
            168,169,102,108,756,96,83,84,758,94,
            760,78,759,70,762,66,194,761,64,327,
            519,125,2999,752,514,33,520,47,941,46,
            1100,994,118,119,2955,101,354,111,116,117,
            142,143,144,145,146,147,165,166,167,168,
            169,102,108,756,96,83,84,758,94,760,
            78,759,70,762,66,226,761,64,327,519,
            125,2999,752,514,33,520,47,941,46,1100,
            994,118,119,2955,101,354,111,116,117,142,
            143,144,145,146,147,165,166,167,168,169,
            102,108,756,96,83,84,758,94,760,78,
            759,70,762,66,3109,761,64,327,519,125,
            2999,752,514,33,520,47,941,46,1100,994,
            118,119,2955,101,354,111,116,117,142,143,
            144,145,146,147,165,166,167,168,169,102,
            108,756,96,83,84,758,94,760,78,759,
            70,762,66,3135,761,64,327,519,125,2999,
            752,514,33,520,47,941,46,1100,994,118,
            119,2955,101,354,111,116,117,142,143,144,
            145,146,147,165,166,167,168,169,102,108,
            756,96,83,84,758,94,760,78,759,70,
            762,66,3140,761,64,327,519,125,2999,752,
            514,33,520,47,941,46,1100,994,118,119,
            2955,101,354,111,116,117,142,143,144,145,
            146,147,165,166,167,168,169,102,108,756,
            96,83,84,758,94,760,78,759,70,762,
            66,3141,761,64,327,519,125,2999,752,514,
            33,520,47,941,46,1100,994,118,119,2955,
            101,354,111,116,117,142,143,144,145,146,
            147,165,166,167,168,169,102,108,756,96,
            83,84,758,94,760,78,759,70,762,66,
            3144,761,64,327,519,125,2999,752,514,33,
            520,47,941,46,1100,994,118,119,2955,101,
            354,111,116,117,142,143,144,145,146,147,
            165,166,167,168,169,102,108,756,96,83,
            84,758,94,760,78,759,70,2968,68,327,
            519,125,2999,752,514,33,520,47,941,46,
            1100,994,118,119,2955,101,354,111,116,117,
            142,143,144,145,146,147,165,166,167,168,
            169,102,108,756,96,83,84,758,94,760,
            78,2969,76,327,519,125,2999,752,514,33,
            520,47,941,46,1100,994,118,119,2955,101,
            354,111,116,117,142,143,144,145,146,147,
            165,166,167,168,169,102,108,756,96,83,
            84,758,94,760,78,2970,75,327,519,125,
            2999,752,514,33,520,47,941,46,1100,994,
            118,119,2955,101,354,111,116,117,142,143,
            144,145,146,147,165,166,167,168,169,102,
            108,756,96,83,84,758,94,760,78,2972,
            74,327,519,125,2999,752,514,33,520,47,
            941,46,1100,994,118,119,2955,101,354,111,
            116,117,142,143,144,145,146,147,165,166,
            167,168,169,102,108,756,96,83,84,758,
            94,2956,82,327,519,125,2999,752,514,33,
            520,47,941,46,1100,994,118,119,2955,101,
            354,111,116,117,142,143,144,145,146,147,
            165,166,167,168,169,102,108,756,96,83,
            84,758,94,2966,80,327,519,125,2999,752,
            514,33,520,47,941,46,1100,994,118,119,
            2955,101,354,111,116,117,142,143,144,145,
            146,147,165,166,167,168,169,102,108,756,
            96,91,92,758,94,327,519,125,2999,752,
            514,33,520,47,941,46,1100,994,118,119,
            2955,101,354,111,116,117,142,143,144,145,
            146,147,165,166,167,168,169,102,108,756,
            96,89,90,758,94,327,519,125,2999,752,
            514,33,520,47,941,46,1100,994,118,119,
            2955,101,354,111,116,117,142,143,144,145,
            146,147,165,166,167,168,169,102,108,756,
            96,87,88,758,94,327,519,125,2999,752,
            514,33,520,47,941,46,1100,994,118,119,
            2955,101,354,111,116,117,142,143,144,145,
            146,147,165,166,167,168,169,102,108,756,
            96,85,86,758,94,543,519,125,2999,752,
            514,33,520,47,941,46,1100,994,118,119,
            2955,101,354,111,116,117,142,143,144,145,
            146,147,165,166,167,168,169,102,108,1163,
            100,543,519,125,2999,752,514,33,520,47,
            941,46,1100,994,118,119,2955,101,354,111,
            116,117,142,143,144,145,146,147,165,166,
            167,168,169,102,108,1164,98,543,519,125,
            2999,752,514,33,520,47,941,46,1100,994,
            118,119,2955,105,354,111,116,117,142,143,
            144,145,146,147,165,166,167,168,169,106,
            108,543,519,125,2999,752,514,33,520,47,
            941,46,1100,994,118,119,2955,103,354,111,
            116,117,142,143,144,145,146,147,165,166,
            167,168,169,104,108,689,519,125,2999,752,
            514,33,520,47,941,46,1100,994,118,119,
            2955,110,354,111,116,117,142,143,144,145,
            146,147,165,166,167,168,169,689,519,125,
            2999,752,514,33,520,47,941,46,1100,994,
            118,119,2955,109,354,111,116,117,142,143,
            144,145,146,147,165,166,167,168,169,611,
            519,125,2999,752,514,33,520,47,941,46,
            1100,994,118,119,2955,109,354,111,116,117,
            142,143,144,145,146,147,165,166,167,168,
            169,756,127,125,3074,996,907,33,43,47,
            3073,46,1100,994,212,181,922,1150,964,312,
            319,1041,680,1182,1183,1159,1184,1189,1191,1185,
            1200,1193,1202,70,1203,1023,138,197,1096,509,
            510,1023,138,197,351,509,510,1097,1205,240,
            883,1027,1208,904,138,197,122,509,510,904,
            138,197,1210,509,510,1213,192,208,49,3068,
            192,243,904,138,197,182,509,510,211,251,
            253,254,255,266,5,240,241,242,196,198,
            199,1168,207,156,196,198,199,318,271,1168,
            121,245,439,329,73,55,440,198,199,939,
            1214,56,831,198,199,229,257,1150,469,238,
            355,1215,73,469,976,191,198,199,904,138,
            197,1216,509,510,904,138,197,365,509,510,
            192,59,251,253,254,255,192,205,192,59,
            1217,513,73,192,205,266,73,262,73,725,
            2980,73,2981,469,827,1098,192,210,2982,2977,
            2981,192,206,934,2978,218,469,469,469,475,
            764,3000,198,199,763,1219,507,237,198,199,
            1220,1222,209,832,1227,693,3182,3182,3182,3182,
            826,192,2994,3182,3182,192,60,192,3129,3182,
            192,3136,3182,3182,219,3182,3182,3182,265,3182,
            3182,3182,3182,3182,3182,3182,3182,124,123,220,
            3182,3182
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,0,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,0,25,26,27,28,29,
            30,31,32,33,34,35,0,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,0,0,
            2,71,0,69,2,6,0,73,0,1,
            2,3,82,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,0,25,26,27,28,29,30,31,
            32,33,34,35,90,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,65,66,67,77,78,0,71,
            0,0,1,0,6,0,0,1,2,3,
            82,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            0,25,26,27,28,29,30,31,32,33,
            34,35,0,37,38,39,40,41,42,43,
            44,45,46,47,48,49,50,51,52,53,
            54,55,56,57,58,59,60,61,62,63,
            64,65,66,67,69,77,78,71,0,74,
            2,76,0,83,79,85,4,87,88,0,
            1,0,1,2,3,89,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,73,25,26,27,28,
            29,30,31,32,33,34,35,97,37,38,
            39,40,41,42,43,44,45,46,47,48,
            49,50,51,52,53,54,55,56,57,58,
            59,60,61,62,63,64,65,66,67,70,
            0,0,71,3,3,5,5,0,0,2,
            81,3,0,5,0,1,0,1,2,3,
            89,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            0,25,26,27,28,29,30,31,32,33,
            34,35,0,37,38,39,40,41,42,43,
            44,45,46,47,48,49,50,51,52,53,
            54,55,56,57,58,59,60,61,62,63,
            64,65,66,67,70,0,74,71,0,1,
            2,3,0,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,72,25,26,27,28,29,30,31,
            32,33,34,35,84,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,65,66,67,0,1,0,71,
            0,1,2,3,0,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,92,25,26,27,28,29,
            30,31,32,33,34,35,0,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,70,0,
            1,71,0,1,2,3,72,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,0,25,26,27,
            28,29,30,31,32,33,34,35,72,37,
            38,39,40,41,42,43,44,45,46,47,
            48,49,50,51,52,53,54,55,56,57,
            58,59,60,61,62,63,64,65,66,67,
            0,1,2,3,0,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,68,25,26,27,28,29,
            30,31,32,33,34,35,0,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,0,1,0,
            34,35,3,69,5,0,0,1,0,1,
            2,3,82,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,0,25,26,27,28,29,30,31,
            32,33,34,35,0,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,65,66,0,70,2,3,0,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,0,
            25,26,27,28,29,30,31,32,33,34,
            35,0,37,38,39,40,41,42,43,44,
            45,46,47,48,49,50,51,52,53,54,
            55,56,57,58,0,36,2,3,94,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,0,25,
            26,27,28,29,30,31,32,33,34,35,
            0,37,38,39,40,41,42,43,44,45,
            46,47,48,49,50,51,52,53,54,55,
            56,57,58,0,24,96,3,4,5,6,
            7,8,0,0,0,1,0,1,0,7,
            8,18,19,20,21,22,23,0,1,26,
            27,28,0,0,0,2,0,34,35,36,
            24,0,9,10,11,12,13,14,15,16,
            17,0,20,21,22,23,20,21,22,23,
            0,1,29,30,31,32,33,26,27,28,
            0,20,21,22,23,72,73,74,75,76,
            77,78,79,80,70,0,83,84,85,86,
            87,88,59,0,91,92,93,94,95,96,
            97,0,68,2,0,0,1,6,7,8,
            9,10,11,12,13,14,15,16,17,26,
            27,28,18,19,0,0,25,3,0,69,
            29,30,31,32,33,0,1,0,37,38,
            39,40,41,42,43,44,45,46,47,48,
            49,50,0,0,2,0,0,0,0,24,
            3,9,10,11,12,13,14,15,16,17,
            0,0,2,36,0,70,6,7,8,0,
            24,29,30,31,32,33,81,0,0,2,
            0,36,36,0,36,70,9,10,11,12,
            13,14,15,16,17,0,81,2,18,19,
            0,59,25,3,9,10,11,12,13,14,
            15,16,17,0,36,0,0,74,72,76,
            25,0,79,75,24,80,0,0,7,8,
            0,18,19,73,74,0,76,77,78,79,
            0,0,0,0,0,0,0,0,0,0,
            90,36,36,75,24,91,95,0,0,24,
            0,1,4,80,24,24,24,24,24,0,
            0,2,0,3,0,0,4,2,0,0,
            0,1,0,4,0,0,1,0,72,2,
            75,0,1,0,1,69,69,0,1,0,
            1,0,0,0,0,4,4,4,0,1,
            0,1,0,68,68,68,68,68,36,0,
            36,0,0,4,0,4,4,0,4,0,
            73,4,0,0,0,0,0,4,0,0,
            4,0,4,4,0,4,0,69,36,0,
            4,0,1,24,0,0,0,0,24,24,
            86,0,0,0,0,0,0,0,36,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,93,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            156,1264,3310,3189,249,3190,3217,3218,3219,3313,
            3311,3312,3314,3315,3316,3317,3318,3319,517,3193,
            3194,3195,3196,3197,239,3308,3198,3199,3200,751,
            694,636,635,525,3191,2919,3182,518,3214,3203,
            3204,3205,3206,3207,3208,3209,3210,3211,3212,3213,
            3216,2855,3187,3188,3186,3185,3183,3184,3234,515,
            754,3356,3353,3355,3357,3358,3360,3054,3182,3182,
            3310,1313,3182,344,330,521,3182,337,3182,1264,
            3310,3189,1656,3190,3217,3218,3219,3313,3311,3312,
            3314,3315,3316,3317,3318,3319,517,3193,3194,3195,
            3196,3197,3182,3308,3198,3199,3200,751,694,636,
            635,525,3191,2919,425,518,3214,3203,3204,3205,
            3206,3207,3208,3209,3210,3211,3212,3213,3216,2855,
            3187,3188,3186,3185,3183,3184,3234,515,754,3356,
            3353,3355,3357,3358,3360,3054,639,581,270,1313,
            107,3182,3009,3182,521,3182,231,1264,3310,3189,
            1656,3190,3217,3218,3219,3313,3311,3312,3314,3315,
            3316,3317,3318,3319,517,3193,3194,3195,3196,3197,
            3182,3308,3198,3199,3200,751,694,636,635,525,
            3191,2887,248,518,3214,3203,3204,3205,3206,3207,
            3208,3209,3210,3211,3212,3213,3216,2855,3187,3188,
            3186,3185,3183,3184,3234,515,754,3356,3353,3355,
            3357,3358,3360,3054,419,639,581,1313,3182,697,
            829,769,3182,350,516,2951,3302,505,501,221,
            45,3182,1264,3310,3189,3012,3190,3217,3218,3219,
            3313,3311,3312,3314,3315,3316,3317,3318,3319,517,
            3193,3194,3195,3196,3197,337,3308,3198,3199,3200,
            751,694,636,635,525,3191,2887,3181,518,3214,
            3203,3204,3205,3206,3207,3208,3209,3210,3211,3212,
            3213,3216,2855,3187,3188,3186,3185,3183,3184,3234,
            515,754,3356,3353,3355,3357,3358,3360,3054,4331,
            69,73,1313,2513,2513,2471,2471,203,72,330,
            996,2513,3182,2471,172,10,3182,1264,3310,3189,
            3012,3190,3217,3218,3219,3313,3311,3312,3314,3315,
            3316,3317,3318,3319,517,3193,3194,3195,3196,3197,
            3182,3308,3198,3199,3200,751,694,636,635,525,
            3191,2887,3182,518,3214,3203,3204,3205,3206,3207,
            3208,3209,3210,3211,3212,3213,3216,2855,3187,3188,
            3186,3185,3183,3184,3234,515,754,3356,3353,3355,
            3357,3358,3360,3054,10,3182,697,1313,223,1264,
            3310,3189,3182,3190,3217,3218,3219,3313,3311,3312,
            3314,3315,3316,3317,3318,3319,517,3193,3194,3195,
            3196,3197,2097,3308,3198,3199,3200,751,694,636,
            635,525,3191,2887,3108,518,3214,3203,3204,3205,
            3206,3207,3208,3209,3210,3211,3212,3213,3216,2855,
            3187,3188,3186,3185,3183,3184,3234,515,754,3356,
            3353,3355,3357,3358,3360,3054,3182,3047,221,1313,
            3182,1264,3001,3189,3182,3190,3217,3218,3219,3313,
            3311,3312,3314,3315,3316,3317,3318,3319,517,3193,
            3194,3195,3196,3197,1705,3308,3198,3199,3200,751,
            694,636,635,525,3191,2887,3182,518,3214,3203,
            3204,3205,3206,3207,3208,3209,3210,3211,3212,3213,
            3216,2855,3187,3188,3186,3185,3183,3184,3234,515,
            754,3356,3353,3355,3357,3358,3360,3054,3404,3182,
            528,1313,3182,1264,3310,3189,2195,3190,3217,3218,
            3219,3313,3311,3312,3314,3315,3316,3317,3318,3319,
            517,3193,3194,3195,3196,3197,3182,3308,3198,3199,
            3200,751,694,636,635,525,3191,2887,2244,518,
            3214,3203,3204,3205,3206,3207,3208,3209,3210,3211,
            3212,3213,3216,2855,3187,3188,3186,3185,3183,3184,
            3234,515,754,3356,3353,3355,3357,3358,3360,3054,
            3182,1264,3310,3189,200,3190,3217,3218,3219,3313,
            3311,3312,3314,3315,3316,3317,3318,3319,517,3193,
            3194,3195,3196,3197,276,3308,3198,3199,3200,751,
            694,636,635,525,3191,2887,93,518,3214,3203,
            3204,3205,3206,3207,3208,3209,3210,3211,3212,3213,
            3216,2855,3187,3188,3186,3185,3183,3184,3234,515,
            754,3356,3353,3355,3357,3358,3360,3182,586,71,
            2751,2715,2513,344,2471,3182,177,44,3182,1264,
            3310,3189,1901,3190,3217,3218,3219,3313,3311,3312,
            3314,3315,3316,3317,3318,3319,517,3193,3194,3195,
            3196,3197,3182,3308,3198,3199,3200,751,694,636,
            635,525,3191,2887,3182,518,3214,3203,3204,3205,
            3206,3207,3208,3209,3210,3211,3212,3213,3216,2855,
            3187,3188,3186,3185,3183,3184,3234,515,754,3356,
            3353,3355,3357,3358,3360,3182,44,3310,3189,3182,
            3190,3217,3218,3219,3313,3311,3312,3314,3315,3316,
            3317,3318,3319,3192,3193,3194,3195,3196,3197,3182,
            3308,3198,3199,3200,3220,3221,3222,3223,3224,3191,
            3201,3182,3226,3214,3203,3204,3205,3206,3207,3208,
            3209,3210,3211,3212,3213,3216,3202,3187,3188,3186,
            3185,3183,3184,3234,3182,3072,3310,3189,3410,3190,
            3217,3218,3219,3313,3311,3312,3314,3315,3316,3317,
            3318,3319,3192,3193,3194,3195,3196,3197,3182,3308,
            3198,3199,3200,3220,3221,3222,3223,3224,3191,3201,
            190,3226,1153,3203,3204,3205,3206,3207,3208,3209,
            3210,3211,3212,3213,3216,3202,3187,3188,3186,3185,
            3183,3184,3234,45,3003,1607,3404,3404,3404,3404,
            3404,3404,3182,3182,48,43,3182,3041,3182,335,
            336,3404,3404,3404,3404,3404,3404,3182,339,3404,
            3404,3404,77,3182,3182,3310,81,3404,3404,3404,
            3022,65,3313,3311,3312,3314,3315,3316,3317,3318,
            3319,79,2675,2635,2595,2555,2675,2635,2595,2555,
            149,776,3333,3334,3335,3336,3337,2427,2383,2339,
            3182,2675,2635,2595,2555,3404,3404,3404,3404,3404,
            3404,3404,3404,3404,4689,3182,3404,3404,3404,3404,
            3404,3404,512,67,3404,3404,3404,3404,3404,3404,
            3404,3182,2967,3310,95,221,45,3217,3218,3219,
            3313,3311,3312,3314,3315,3316,3317,3318,3319,2427,
            2383,2339,2821,2787,191,221,3308,1558,3182,139,
            3220,3221,3222,3223,3224,139,3049,204,3226,3214,
            3203,3204,3205,3206,3207,3208,3209,3210,3211,3212,
            3213,3216,195,261,3310,3182,128,3182,3182,3078,
            1754,3313,3311,3312,3314,3315,3316,3317,3318,3319,
            244,63,330,3072,3182,4331,521,335,336,3182,
            3003,3333,3334,3335,3336,3337,1049,61,3182,3310,
            99,3067,190,3182,1999,3404,3313,3311,3312,3314,
            3315,3316,3317,3318,3319,3182,943,3310,2821,2787,
            190,512,3308,1950,3313,3311,3312,3314,3315,3316,
            3317,3318,3319,97,1999,3182,3182,697,190,769,
            3308,256,516,3126,3003,3352,127,3182,335,336,
            3182,2821,2787,337,697,3182,769,639,581,516,
            3182,3182,3182,3182,3182,42,41,40,39,38,
            425,1999,3111,3127,1166,3429,2293,250,3182,1215,
            3182,644,3383,3332,1362,1411,1460,3065,1509,3182,
            3182,940,3182,1803,161,140,3384,3310,141,3182,
            32,50,157,3296,224,3182,3102,57,2146,330,
            3128,33,51,3182,834,138,325,3182,368,3182,
            448,3182,3182,3182,3182,3397,3399,3396,3182,885,
            219,586,58,155,154,153,152,151,702,3182,
            1999,3182,3182,3071,3182,3081,3297,3182,3367,236,
            337,3412,232,3182,3182,3182,3182,3411,3182,3182,
            3395,3182,3370,3368,3182,3371,3182,344,3106,3182,
            3369,48,43,3084,3182,3182,3182,3182,2985,2991,
            1852,3182,3182,3182,3182,3182,3182,3182,1102,3182,
            3182,3182,3182,3182,3182,3182,3182,3182,3182,3182,
            3182,3182,3182,3182,3182,3182,3182,3182,3182,3182,
            3182,3182,3182,3182,3182,3182,3182,2048
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            415,426,69,272,272,261,261,261,261,171,
            261,146,77,146,425,52,82,82,272,272,
            272,272,272,480,212,395,252,148,391,391,
            146,84,84,82,409,409,409,169,169,173,
            173,216,275,274,274,274,274,274,276,275,
            398,391,278,282,82,284,290,286,295,292,
            82,82,82,146,82,317,136,316,209,136,
            312,82,52,484,74,478,391,391,391,1,
            146,82,82,114,319,93,93,136,136,83,
            83,386,83,83,82,82,82,82,82,82,
            82,82,82,82,388,388,390,393,478,478,
            477,82,146,319,484,319,407,400,82,4,
            406,406,404,412,412,218,478,477,409,173,
            275,277,173,391,173,391,391,391,82,282,
            282,286,286,292,290,290,290,82,82,52,
            484,52,484,478,478,428,478,82,82,2,
            146,82,82,277,277,319,391,219,82,146,
            82,80,80,431,478,477,383,478,478,319,
            412,160,258,478,453,478,476,477,478,82,
            272,146,163,272,478,277,146,82,146,82,
            52,81,487,51,433,259,478,259,478,82,
            82,478,478
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            80,71,67,60,38,50,6,7,8,39,
            40,41,42,43,44,45,46,47,48,49,
            25,66,37,62,18,63,61,64,65,58,
            56,57,55,54,52,53,5,34,19,20,
            21,22,23,26,27,28,1,35,51,82,
            3,10,11,9,12,13,14,15,16,17,
            59,29,30,31,32,33,2,0,4,72,
            84,97,24,36,96,0,97,90,0,4,
            89,71,67,60,66,62,63,61,64,65,
            59,1,58,56,57,55,54,52,53,3,
            5,34,18,19,20,21,22,23,26,27,
            28,35,51,37,39,40,41,42,43,44,
            45,46,47,48,49,38,50,6,7,8,
            29,30,31,32,33,25,10,11,9,12,
            13,14,15,16,17,2,0,3,4,80,
            36,77,78,96,6,7,8,97,69,72,
            84,0,73,91,97,8,7,0,68,0,
            74,0,34,35,18,19,20,21,3,22,
            23,5,4,80,75,83,72,36,84,85,
            86,87,88,76,74,92,93,94,26,27,
            28,95,96,7,8,79,1,70,73,91,
            97,77,78,6,0,81,70,69,34,35,
            18,19,20,21,22,23,5,75,83,85,
            86,87,88,76,77,78,73,91,74,92,
            93,94,26,27,28,95,6,7,8,79,
            1,4,80,84,96,97,3,36,72,0,
            25,2,10,11,9,12,13,14,15,16,
            17,24,0,68,1,81,70,87,88,83,
            85,18,19,34,35,20,21,22,23,3,
            5,26,27,28,4,80,75,72,36,84,
            86,77,78,92,93,94,96,6,7,8,
            95,97,74,76,79,73,91,0,4,71,
            60,38,50,6,29,30,31,32,33,39,
            40,41,42,43,44,45,46,47,48,49,
            10,11,9,12,13,14,15,16,17,2,
            25,66,37,62,18,63,61,64,65,59,
            58,56,57,55,54,52,53,3,5,34,
            19,20,21,22,23,26,27,28,1,35,
            51,67,8,7,0,92,0,3,0,24,
            1,0,1,24,76,79,74,69,0,80,
            36,86,0,24,3,36,80,0,1,70,
            0,75,36,0,90,76,79,74,77,78,
            6,8,7,2,73,97,0,4,69,0,
            93,0,77,78,6,10,11,9,12,13,
            14,15,16,17,59,29,30,31,32,33,
            2,0,72,34,35,18,19,20,21,3,
            22,23,5,1,81,83,69,85,70,87,
            88,26,27,28,95,24,36,4,0,91,
            73,69,0,4,2,0,94,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static byte nasb[] = {0,
            80,10,10,10,10,24,24,24,24,22,
            24,88,14,1,18,87,29,29,10,10,
            10,10,10,81,83,92,10,10,10,10,
            94,29,29,29,34,34,34,10,10,10,
            10,10,10,10,10,10,10,10,34,34,
            10,10,11,10,29,10,10,10,10,10,
            29,29,29,96,29,10,9,18,16,9,
            26,29,87,94,10,10,10,10,10,29,
            78,29,29,75,29,72,4,9,9,66,
            66,10,60,60,48,48,54,54,54,54,
            36,42,42,42,10,10,10,10,10,10,
            10,29,101,29,88,29,10,10,29,29,
            10,10,10,10,10,10,10,10,34,34,
            34,34,10,10,10,10,10,10,29,10,
            10,10,10,10,10,10,10,29,29,87,
            90,87,90,10,10,10,10,29,29,29,
            100,29,29,34,34,29,10,10,29,101,
            28,29,29,10,10,10,85,10,10,29,
            10,10,10,10,10,10,10,10,10,29,
            10,101,20,10,10,34,101,29,101,29,
            87,29,10,87,87,10,10,10,10,29,
            29,10,10
        };
    };
    public final static byte nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            4,86,0,6,83,12,68,93,3,0,
            87,88,0,80,0,65,0,58,0,66,
            0,62,0,56,0,64,0,50,7,1,
            5,12,0,51,0,7,1,5,12,45,
            0,7,12,1,5,43,0,7,1,5,
            12,41,0,7,12,1,5,37,0,7,
            12,1,5,35,0,7,1,5,12,32,
            0,12,68,14,3,9,0,92,0,99,
            81,0,104,0,101,0,5,4,0,71,
            0,102,0,76,0,49,85,103,0,75,
            50,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            11,99,7,12,10,55,56,57,88,89,
            90,91,92,94,95,96,97,3,4,5,
            6,8,9,20,34,46,47,48,63,64,
            65,66,67,1,2,19,58,68,69,70,
            71,72,73,74,75,76,77,78,79,87,
            49,80,81,82,83,84,85,86,93,30,
            31,32,33,53,54,59,51,13,21,25,
            42,18,38,41,16,35,36,37,62,14,
            15,100,17,22,23,24,26,27,28,39,
            40,43,44,45,50,52,98,60,61,101,
            102,103
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            139,0,107,116,140,104,105,0,108,0,
            106,113,0,137,109,132,134,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,133,0,130,131,127,128,129,0,125,
            126,123,124,121,122,119,120,0,146,118,
            0,138,147,0,0,0,0,158,0,0,
            0,161,151,153,154,155,0,110,0,0,
            117,142,0,144,148,149,0,0,150,156,
            157,0,111,112,114,115,135,136,0,0,
            141,143,145,0,0,0,0,0,152,0,
            159,160,162,163,0,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            83,117,13,111,141,168,91,125,1,8,
            53,58,63,22,68,72,147,151,157,174,
            46,76,161,46,101,131,101,131,165,40,
            31,178,178,186,186,194,194,194,194,208,
            208,216,216,216
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            6,6,20,6,6,6,97,97,6,6,
            6,6,6,27,6,6,6,155,155,6,
            50,80,50,50,97,97,105,135,6,43,
            34,180,183,188,191,196,199,202,205,210,
            213,218,221,224
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            95,94,39,95,94,17,95,94,88,88,
            14,13,74,39,54,55,94,23,22,17,
            77,50,19,19,95,94,95,94,18,33,
            39,35,35,37,37,41,41,41,41,43,
            43,45,45,45
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            4,4,94,4,4,4,72,72,4,4,
            4,4,4,93,4,4,4,80,80,4,
            75,3,75,75,72,72,84,36,4,96,
            92,19,18,35,34,23,22,21,20,5,
            3,28,27,26
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static byte scopeStateSet[] = {
            2,2,15,2,2,8,2,2,4,4,
            7,6,1,15,63,63,2,8,8,8,
            1,71,8,8,2,2,2,2,8,11,
            15,13,13,15,15,19,19,19,19,21,
            21,24,24,24
        };
    };
    public final static byte scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            180,1,105,88,0,12,0,180,1,105,
            87,0,148,93,148,92,148,71,0,45,
            0,148,92,148,71,0,44,119,45,0,
            148,71,0,43,119,44,119,45,0,178,
            67,0,52,119,0,154,81,105,0,16,
            0,0,159,1,153,111,0,159,1,153,
            113,0,159,1,153,170,0,198,1,59,
            0,155,1,107,0,155,24,2,0,7,
            119,0,148,72,152,84,152,1,185,0,
            152,84,152,1,185,0,18,119,12,0,
            152,1,185,0,22,118,18,119,12,0,
            148,72,152,1,185,0,148,72,152,36,
            152,1,186,0,152,36,152,1,186,0,
            152,1,186,0,19,118,18,119,12,0,
            148,72,152,1,186,0,148,1,186,0,
            194,68,59,0,14,0,192,68,107,0,
            154,81,117,0,148,1,0,159,1,105,
            69,106,0,159,1,60,0,136,0,4,
            133,0,3,133,0,140,0,2,131,0,
            1,131,0,142,0,9,128,0,8,128,
            0,6,128,0,5,128,0,144,0,10,
            126,0,7,126,0,146,0,48,124,0,
            47,124,0,46,124,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            2951,350,0,354,0,350,2951,2919,2887,2855,
            2821,2787,2751,2715,2675,2635,2595,2555,2513,2471,
            2427,2383,2339,2244,2195,1102,2146,2097,2048,885,
            448,368,834,1049,776,1999,1950,702,1901,1852,
            1803,1754,1705,1656,644,586,1607,2293,528,996,
            943,276,1558,1509,1460,1411,1362,1313,1264,1215,
            1166,0,2991,2985,3084,3078,3022,3009,3003,0,
            3111,3108,3106,834,3102,3067,3049,3041,3072,2967,
            3047,3054,2971,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,184,2,7,8,6,78,77,74,79,
            76,90,201,73,183,24,24,24,158,158,
            158,158,158,106,188,106,155,106,107,59,
            67,51,35,1,111,114,113,107,59,18,
            37,103,109,33,32,31,30,29,117,105,
            106,60,119,136,71,140,144,142,149,146,
            24,24,24,24,24,202,69,183,206,69,
            204,3,1,1,178,148,153,153,153,68,
            68,81,81,69,1,85,83,88,87,19,
            18,148,35,34,5,3,23,22,21,20,
            95,28,27,26,187,151,2,105,155,198,
            178,96,36,1,1,1,192,148,82,35,
            193,194,2,154,154,105,159,154,170,111,
            105,111,38,185,108,186,105,105,92,136,
            136,142,142,146,144,144,144,3,3,24,
            1,24,1,159,199,106,159,86,82,36,
            36,3,36,75,75,1,153,153,81,1,
            1,1,1,148,171,173,155,171,159,1,
            154,152,152,148,2,180,89,181,180,93,
            4,36,203,4,159,75,84,72,36,72,
            24,36,148,24,24,152,148,152,148,72,
            72,148,148
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "+",
            "-",
            "*",
            "/",
            ">",
            "<",
            "=",
            ">=",
            "<=",
            "<>",
            "(",
            ")",
            "{",
            "}",
            "[",
            "]",
            "->",
            "|",
            ",",
            ":",
            "::",
            ";",
            ".",
            "..",
            "@pre",
            "^",
            "^^",
            "?",
            "$empty",
            "NUMERIC_OPERATION",
            "STRING_LITERAL",
            "INTEGER_LITERAL",
            "REAL_LITERAL",
            "self",
            "inv",
            "pre",
            "post",
            "context",
            "package",
            "endpackage",
            "def",
            "if",
            "then",
            "else",
            "endif",
            "and",
            "or",
            "xor",
            "not",
            "implies",
            "let",
            "in",
            "true",
            "false",
            "body",
            "derive",
            "init",
            "null",
            "invalid",
            "attr",
            "oper",
            "static",
            "Set",
            "Bag",
            "Sequence",
            "Collection",
            "OrderedSet",
            "iterate",
            "forAll",
            "exists",
            "isUnique",
            "any",
            "one",
            "collect",
            "select",
            "reject",
            "collectNested",
            "sortedBy",
            "closure",
            "oclIsKindOf",
            "oclIsTypeOf",
            "oclAsType",
            "oclIsNew",
            "oclIsUndefined",
            "oclIsInvalid",
            "oclIsInState",
            "allInstances",
            "String",
            "Integer",
            "UnlimitedNatural",
            "Real",
            "Boolean",
            "Tuple",
            "OclAny",
            "OclVoid",
            "OclInvalid",
            "OclMessage",
            "EOF_TOKEN",
            "IDENTIFIER",
            "INTEGER_RANGE_START",
            "SINGLE_LINE_COMMENT",
            "MULTI_LINE_COMMENT",
            "ERROR_TOKEN",
            "iteratorIdentifier",
            "keywordAsIdentifier1",
            "binaryName",
            "simpleNameCS",
            "keywordAsName",
            "keywordAsName1",
            "unaryName",
            "iterateName",
            "iteratorName",
            "oclIsInStateName",
            "operationCS1",
            "operationCS2",
            "pathNameCS",
            "parametersCS",
            "variableCS",
            "oclExpressionCS",
            "impliesExpCS",
            "andOrXorExpCS",
            "andOrXorWithLet",
            "equalityExpCS",
            "equalityWithLet",
            "relationalExpCS",
            "relationalWithLet",
            "ifExpCSPrec",
            "additiveWithLet",
            "additiveExpCS",
            "multiplicativeExpCS",
            "multiplicativeWithLet",
            "unaryExpCS",
            "unaryWithLet",
            "dotArrowExpCS",
            "callExpCS",
            "messageExpCS",
            "keywordOperationCallExpCS",
            "argumentsCS",
            "simpleIdentifierCS",
            "collectionTypeIdentifierCS",
            "collectionLiteralPartsCS",
            "collectionLiteralPartCS",
            "variableListCS2",
            "featureCallExpCS",
            "loopExpCS",
            "typedVariableCS",
            "typeCS",
            "variableCS2",
            "variableListCS",
            "oclMessageArgumentsCS",
            "oclMessageArgCS",
            "packageDeclarationCSm",
            "invOrDefCS",
            "prePostOrBodyDeclCS",
            "initOrDerValueCS",
            "packageDeclarationCS",
            "contextDeclCSm",
            "contextDeclCS",
            "initOrDerValueCSm",
            "invOrDefCSm",
            "defCS",
            "defExpressionCS",
            "prePostOrBodyDeclCSm"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 102,
           SCOPE_UBOUND      = 43,
           SCOPE_SIZE        = 44,
           MAX_NAME_LENGTH   = 26;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 213,
           NT_OFFSET         = 102,
           LA_STATE_OFFSET   = 3457,
           MAX_LA            = 2,
           NUM_RULES         = 275,
           NUM_NONTERMINALS  = 106,
           NUM_SYMBOLS       = 208,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 2971,
           IDENTIFIER_SYMBOL = 2,
           EOFT_SYMBOL       = 97,
           EOLT_SYMBOL       = 97,
           ACCEPT_ACTION     = 3181,
           ERROR_ACTION      = 3182;

    public final static boolean BACKTRACK = false;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
