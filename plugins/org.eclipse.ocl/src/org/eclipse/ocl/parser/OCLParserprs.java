/**
* <copyright>
*
* Copyright (c) 2005, 2009 IBM Corporation and others.
* All rights reserved.   This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   IBM - Initial API and implementation
*   E.D.Willink - Elimination of some shift-reduce conflicts
*   E.D.Willink - Remove unnecessary warning suppression
*   E.D.Willink - Bugs 225493, 243976, 259818, 282882, 287993, 288040
*   Borland - Bug 242880
*
* </copyright>
*
* $Id: OCLParserprs.java,v 1.12 2009/10/02 20:56:31 ewillink Exp $
*/

package org.eclipse.ocl.parser;

/**
 * @noextend This interface is not intended to be extended by clients.
 */
@SuppressWarnings("nls")
public class OCLParserprs implements lpg.lpgjavaruntime.ParseTable, OCLParsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,1,1,1,1,1,1,
            1,1,1,1,1,1,0,0,0,0,
            0,0,0,0,1,1,1,1,1,1,
            1,1,1,0,0,0,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,0,
            0,0,0,1,1,1,1,0,0,0,
            1,0,1,1,0,1,1,1,0,0,
            0,0,0,0,0,0,0,0,0,1,
            1,1,1,1,1,1,0,1,1,0,
            0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,6,8,0,1,1,3,
            0,1,1,1,1,1,3,3,1,1,
            3,3,1,1,3,3,1,1,3,3,
            1,1,3,3,3,3,1,1,3,3,
            3,3,3,3,3,3,1,1,1,1,
            3,3,3,3,1,1,3,3,3,3,
            1,1,2,2,1,2,2,4,6,1,
            1,1,1,3,2,2,5,5,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,3,0,1,1,1,1,1,1,
            1,3,3,4,1,1,1,1,1,0,
            1,1,3,1,1,3,2,3,1,1,
            1,1,1,4,1,1,1,1,1,1,
            1,1,2,2,2,2,1,1,4,6,
            8,6,8,1,3,1,5,3,0,1,
            1,1,1,1,4,4,0,1,1,3,
            1,1,3,3,1,1,5,5,5,1,
            5,2,2,5,0,1,0,1,1,3,
            4,7,5,5,0,1,1,3,1,1,
            3,1,1,1,1,1,1,0,1,2,
            4,1,0,1,1,2,1,1,1,7,
            1,2,3,3,3,1,2,4,4,1,
            2,3,3,3,1,2,4,4,4,-82,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-86,0,0,0,-2,-3,0,0,
            0,0,-4,-5,-14,0,-117,0,0,-19,
            0,-69,0,0,0,0,0,-89,0,0,
            0,-53,-13,0,0,0,0,0,0,0,
            0,-20,-71,0,0,-174,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -72,0,0,0,0,0,-12,0,0,0,
            0,0,0,-21,0,0,0,0,-22,-23,
            -15,-27,0,0,0,0,0,0,0,-175,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-90,0,0,0,
            -91,0,0,0,-28,-29,0,-30,-195,-38,
            -39,-10,-40,-41,-42,-43,-6,0,0,0,
            -44,0,0,-87,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -7,0,0,0,0,-116,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-45,-46,
            0,0,-8,0,0,0,0,-118,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -73,-47,0,0,-9,0,0,0,0,-162,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-48,-51,0,-52,0,-54,0,-56,
            -57,-58,-59,-60,-61,-62,-68,-77,-78,-79,
            -11,0,0,0,-80,0,0,-168,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-81,-94,0,-107,-108,-109,-110,0,-173,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-182,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-111,-112,-113,
            0,-119,-120,-123,-35,0,-84,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -124,-36,0,-85,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-125,-126,0,
            -171,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-70,-127,-37,0,-204,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-128,-129,-130,-135,0,0,0,0,-136,
            -137,-138,-139,-140,0,-17,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-18,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-34,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-55,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-63,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -64,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-65,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-67,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-74,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-114,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-121,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-141,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-150,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-151,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-160,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -161,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-164,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-165,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-192,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-200,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-202,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-212,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-213,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-105,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-106,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-103,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-104,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-97,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-98,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-99,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-100,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-101,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-102,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-95,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-96,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-92,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-93,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-32,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-33,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -122,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-88,0,0,0,-142,-143,0,0,
            0,0,0,0,0,0,0,-144,-83,-145,
            -146,-147,-1,-148,-149,-156,-157,-158,-159,-169,
            -170,-176,-177,-178,-180,-179,-206,0,0,-181,
            0,0,-207,0,0,-183,0,0,-184,-76,
            -185,-186,-187,-188,-16,0,0,-189,0,0,
            -75,0,0,-25,0,0,-190,-31,-49,-191,
            -193,0,0,0,0,0,0,-152,0,0,
            0,0,0,0,0,0,0,0,0,-24,
            0,0,0,0,0,0,-26,0,-196,0,
            0,0,0,0,-153,0,0,0,0,-197,
            0,0,0,0,0,-155,0,0,0,0,
            0,0,-66,0,0,0,-154,0,0,0,
            0,0,0,-163,0,0,0,-203,0,0,
            0,0,0,-205,-115,-208,-172,0,-209,0,
            -194,0,0,0,0,-199,-210,0,0,-211,
            -201,-50,0,-131,0,-132,-133,-134,0,0,
            -166,0,-167,-198,0,0,-214,0,-215,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            86,10,10,10,10,10,10,10,10,10,
            10,10,10,10,10,10,10,10,10,71,
            71,6,6,6,6,6,6,6,6,6,
            6,6,7,7,7,7,7,7,7,7,
            7,7,7,8,8,11,11,9,15,72,
            87,88,12,110,110,89,90,73,73,75,
            75,60,60,50,50,51,52,51,52,48,
            49,48,49,46,47,46,47,44,45,44,
            45,42,43,42,43,42,43,40,41,40,
            41,40,41,40,41,40,41,36,36,38,
            37,38,37,38,37,34,35,34,35,34,
            35,16,32,16,16,17,17,17,17,17,
            18,18,18,18,18,19,19,19,19,3,
            3,3,1,2,2,2,2,2,2,2,
            2,2,4,4,93,93,20,20,20,20,
            20,20,21,21,22,5,5,5,5,5,
            94,94,95,95,76,76,77,77,77,24,
            24,24,24,24,23,27,28,29,30,31,
            31,25,26,91,91,91,91,97,97,98,
            98,98,99,99,54,53,54,54,79,74,
            74,57,57,57,57,59,58,100,100,80,
            80,96,96,96,96,78,78,78,13,14,
            101,13,81,81,81,55,55,61,61,56,
            56,33,39,92,92,82,82,83,83,67,
            67,67,86,86,86,86,86,86,86,103,
            103,84,102,104,104,85,85,62,62,62,
            65,105,105,70,70,63,106,106,68,66,
            68,68,107,107,64,108,108,69,69,69,
            1,535,129,3272,784,530,33,536,47,985,
            46,1156,1042,122,123,3179,105,362,115,120,
            121,146,147,148,149,150,151,169,170,171,
            172,173,106,112,788,100,87,88,790,98,
            792,82,791,78,794,74,793,70,796,66,
            983,795,64,972,131,129,1212,181,1047,33,
            43,47,152,1111,1113,69,142,1151,142,3207,
            1115,3138,1093,131,129,143,162,164,815,131,
            129,3277,151,25,1221,43,47,3278,46,1156,
            1042,216,1117,149,982,984,157,535,129,3272,
            784,530,33,536,47,985,46,1156,1042,122,
            123,3179,105,362,115,120,121,146,147,148,
            149,150,151,169,170,171,172,173,106,112,
            788,100,87,88,790,98,792,82,791,78,
            794,74,793,70,796,66,239,795,64,49,
            3274,1093,131,129,868,3174,183,69,142,215,
            220,3200,276,237,1120,1220,1222,250,3137,1121,
            1122,193,73,116,117,184,187,188,3164,3177,
            157,535,129,3272,784,530,33,536,47,985,
            46,1156,1042,122,123,3179,105,362,115,120,
            121,146,147,148,149,150,151,169,170,171,
            172,173,106,112,788,100,87,88,790,98,
            792,82,791,78,794,74,793,70,796,66,
            239,795,64,256,257,258,259,1093,131,129,
            1223,1093,131,129,1224,615,152,237,314,316,
            567,905,155,325,687,1043,885,1075,131,129,
            62,1059,3180,3177,399,535,129,3272,784,530,
            33,536,47,985,46,1156,1042,122,123,3179,
            105,362,115,120,121,146,147,148,149,150,
            151,169,170,171,172,173,106,112,788,100,
            87,88,790,98,792,82,791,78,794,74,
            793,70,796,66,229,795,64,350,271,262,
            1214,1075,131,129,62,1213,399,535,129,3272,
            784,530,33,536,47,985,46,1156,1042,122,
            123,3179,105,362,115,120,121,146,147,148,
            149,150,151,169,170,171,172,173,106,112,
            788,100,87,88,790,98,792,82,791,78,
            794,74,793,70,796,66,229,795,64,1064,
            1070,372,1214,1075,131,129,62,3136,399,535,
            129,3272,784,530,33,536,47,985,46,1156,
            1042,122,123,3179,105,362,115,120,121,146,
            147,148,149,150,151,169,170,171,172,173,
            106,112,788,100,87,88,790,98,792,82,
            791,78,794,74,793,70,796,66,229,795,
            64,1040,1072,444,1214,1075,131,129,62,3139,
            79,535,129,3272,784,530,33,536,47,985,
            46,1156,1042,122,123,3179,105,362,115,120,
            121,146,147,148,149,150,151,169,170,171,
            172,173,106,112,788,100,87,88,790,98,
            792,82,791,78,794,74,793,70,796,66,
            983,795,64,1123,1125,449,319,270,975,267,
            647,816,903,468,77,685,1126,312,964,679,
            882,1075,131,129,62,889,163,164,399,535,
            129,3272,784,530,33,536,47,985,46,1156,
            1042,122,123,3179,105,362,115,120,121,146,
            147,148,149,150,151,169,170,171,172,173,
            106,112,788,100,87,88,790,98,792,82,
            791,78,794,74,793,70,796,66,229,795,
            64,450,898,792,1214,1131,1147,887,1026,3150,
            471,535,129,3272,784,530,33,536,47,985,
            46,1156,1042,122,123,3179,105,362,115,120,
            121,146,147,148,149,150,151,169,170,171,
            172,173,106,112,788,100,87,88,790,98,
            792,82,791,78,794,74,793,70,796,66,
            3162,795,64,196,3161,399,535,129,3272,784,
            530,33,536,47,985,46,1156,1042,122,123,
            3179,105,362,115,120,121,146,147,148,149,
            150,151,169,170,171,172,173,106,112,788,
            100,87,88,790,98,792,82,791,78,794,
            74,793,70,796,66,229,795,64,1024,1148,
            1129,1214,1130,1142,1143,397,3220,327,535,129,
            3272,784,530,33,536,47,985,46,1156,1042,
            122,123,3179,105,362,115,120,121,146,147,
            148,149,150,151,169,170,171,172,173,106,
            112,788,100,87,88,790,98,792,82,791,
            78,794,74,793,70,796,66,229,795,64,
            800,1044,397,1099,327,535,129,3272,784,530,
            33,536,47,985,46,1156,1042,122,123,3179,
            105,362,115,120,121,146,147,148,149,150,
            151,169,170,171,172,173,106,112,788,100,
            87,88,790,98,792,82,791,78,794,74,
            793,70,796,66,229,795,64,805,1045,1058,
            1155,327,535,129,3272,784,530,33,536,47,
            985,46,1156,1042,122,123,3179,105,362,115,
            120,121,146,147,148,149,150,151,169,170,
            171,172,173,106,112,788,100,87,88,790,
            98,792,82,791,78,794,74,793,70,796,
            66,229,795,64,396,1061,397,3156,242,535,
            129,3272,784,530,33,536,47,985,46,1156,
            1042,122,123,3179,105,362,115,120,121,146,
            147,148,149,150,151,169,170,171,172,173,
            106,112,788,100,87,88,790,98,792,82,
            791,78,794,74,793,70,796,66,239,795,
            64,862,930,1155,1156,938,256,257,258,259,
            1157,1160,1162,1166,1168,238,327,535,129,3272,
            784,530,33,536,47,985,46,1156,1042,122,
            123,3179,105,362,115,120,121,146,147,148,
            149,150,151,169,170,171,172,173,106,112,
            788,100,87,88,790,98,792,82,791,78,
            794,74,793,70,796,66,264,795,64,327,
            535,129,3272,784,530,33,536,47,985,46,
            1156,1042,122,123,3179,105,362,115,120,121,
            146,147,148,149,150,151,169,170,171,172,
            173,106,112,788,100,87,88,790,98,792,
            82,791,78,794,74,793,70,796,66,263,
            795,64,327,535,129,3272,784,530,33,536,
            47,985,46,1156,1042,122,123,3179,105,362,
            115,120,121,146,147,148,149,150,151,169,
            170,171,172,173,106,112,788,100,87,88,
            790,98,792,82,791,78,794,74,793,70,
            796,66,799,795,64,327,535,129,3272,784,
            530,33,536,47,985,46,1156,1042,122,123,
            3179,105,362,115,120,121,146,147,148,149,
            150,151,169,170,171,172,173,106,112,788,
            100,87,88,790,98,792,82,791,78,794,
            74,793,70,796,66,863,795,64,327,535,
            129,3272,784,530,33,536,47,985,46,1156,
            1042,122,123,3179,105,362,115,120,121,146,
            147,148,149,150,151,169,170,171,172,173,
            106,112,788,100,87,88,790,98,792,82,
            791,78,794,74,793,70,796,66,279,795,
            64,327,535,129,3272,784,530,33,536,47,
            985,46,1156,1042,122,123,3179,105,362,115,
            120,121,146,147,148,149,150,151,169,170,
            171,172,173,106,112,788,100,87,88,790,
            98,792,82,791,78,794,74,793,70,796,
            66,278,795,64,327,535,129,3272,784,530,
            33,536,47,985,46,1156,1042,122,123,3179,
            105,362,115,120,121,146,147,148,149,150,
            151,169,170,171,172,173,106,112,788,100,
            87,88,790,98,792,82,791,78,794,74,
            793,70,796,66,277,795,64,327,535,129,
            3272,784,530,33,536,47,985,46,1156,1042,
            122,123,3179,105,362,115,120,121,146,147,
            148,149,150,151,169,170,171,172,173,106,
            112,788,100,87,88,790,98,792,82,791,
            78,794,74,793,70,796,66,268,795,64,
            327,535,129,3272,784,530,33,536,47,985,
            46,1156,1042,122,123,3179,105,362,115,120,
            121,146,147,148,149,150,151,169,170,171,
            172,173,106,112,788,100,87,88,790,98,
            792,82,791,78,794,74,793,70,796,66,
            197,795,64,327,535,129,3272,784,530,33,
            536,47,985,46,1156,1042,122,123,3179,105,
            362,115,120,121,146,147,148,149,150,151,
            169,170,171,172,173,106,112,788,100,87,
            88,790,98,792,82,791,78,794,74,793,
            70,796,66,231,795,64,327,535,129,3272,
            784,530,33,536,47,985,46,1156,1042,122,
            123,3179,105,362,115,120,121,146,147,148,
            149,150,151,169,170,171,172,173,106,112,
            788,100,87,88,790,98,792,82,791,78,
            794,74,793,70,796,66,167,795,64,327,
            535,129,3272,784,530,33,536,47,985,46,
            1156,1042,122,123,3179,105,362,115,120,121,
            146,147,148,149,150,151,169,170,171,172,
            173,106,112,788,100,87,88,790,98,792,
            82,791,78,794,74,793,70,796,66,3142,
            795,64,327,535,129,3272,784,530,33,536,
            47,985,46,1156,1042,122,123,3179,105,362,
            115,120,121,146,147,148,149,150,151,169,
            170,171,172,173,106,112,788,100,87,88,
            790,98,792,82,791,78,794,74,793,70,
            796,66,273,795,64,327,535,129,3272,784,
            530,33,536,47,985,46,1156,1042,122,123,
            3179,105,362,115,120,121,146,147,148,149,
            150,151,169,170,171,172,173,106,112,788,
            100,87,88,790,98,792,82,791,78,794,
            74,793,70,796,66,272,795,64,327,535,
            129,3272,784,530,33,536,47,985,46,1156,
            1042,122,123,3179,105,362,115,120,121,146,
            147,148,149,150,151,169,170,171,172,173,
            106,112,788,100,87,88,790,98,792,82,
            791,78,794,74,793,70,796,66,168,795,
            64,327,535,129,3272,784,530,33,536,47,
            985,46,1156,1042,122,123,3179,105,362,115,
            120,121,146,147,148,149,150,151,169,170,
            171,172,173,106,112,788,100,87,88,790,
            98,792,82,791,78,794,74,793,70,796,
            66,166,795,64,327,535,129,3272,784,530,
            33,536,47,985,46,1156,1042,122,123,3179,
            105,362,115,120,121,146,147,148,149,150,
            151,169,170,171,172,173,106,112,788,100,
            87,88,790,98,792,82,791,78,794,74,
            793,70,796,66,198,795,64,327,535,129,
            3272,784,530,33,536,47,985,46,1156,1042,
            122,123,3179,105,362,115,120,121,146,147,
            148,149,150,151,169,170,171,172,173,106,
            112,788,100,87,88,790,98,792,82,791,
            78,794,74,793,70,796,66,230,795,64,
            327,535,129,3272,784,530,33,536,47,985,
            46,1156,1042,122,123,3179,105,362,115,120,
            121,146,147,148,149,150,151,169,170,171,
            172,173,106,112,788,100,87,88,790,98,
            792,82,791,78,794,74,793,70,796,66,
            3254,795,64,327,535,129,3272,784,530,33,
            536,47,985,46,1156,1042,122,123,3179,105,
            362,115,120,121,146,147,148,149,150,151,
            169,170,171,172,173,106,112,788,100,87,
            88,790,98,792,82,791,78,794,74,793,
            70,796,66,3259,795,64,327,535,129,3272,
            784,530,33,536,47,985,46,1156,1042,122,
            123,3179,105,362,115,120,121,146,147,148,
            149,150,151,169,170,171,172,173,106,112,
            788,100,87,88,790,98,792,82,791,78,
            794,74,793,70,796,66,3270,795,64,327,
            535,129,3272,784,530,33,536,47,985,46,
            1156,1042,122,123,3179,105,362,115,120,121,
            146,147,148,149,150,151,169,170,171,172,
            173,106,112,788,100,87,88,790,98,792,
            82,791,78,794,74,793,70,796,66,3287,
            795,64,327,535,129,3272,784,530,33,536,
            47,985,46,1156,1042,122,123,3179,105,362,
            115,120,121,146,147,148,149,150,151,169,
            170,171,172,173,106,112,788,100,87,88,
            790,98,792,82,791,78,794,74,793,70,
            796,66,3289,795,64,327,535,129,3272,784,
            530,33,536,47,985,46,1156,1042,122,123,
            3179,105,362,115,120,121,146,147,148,149,
            150,151,169,170,171,172,173,106,112,788,
            100,87,88,790,98,792,82,791,78,794,
            74,793,70,3134,68,327,535,129,3272,784,
            530,33,536,47,985,46,1156,1042,122,123,
            3179,105,362,115,120,121,146,147,148,149,
            150,151,169,170,171,172,173,106,112,788,
            100,87,88,790,98,792,82,791,78,794,
            74,3135,72,327,535,129,3272,784,530,33,
            536,47,985,46,1156,1042,122,123,3179,105,
            362,115,120,121,146,147,148,149,150,151,
            169,170,171,172,173,106,112,788,100,87,
            88,790,98,792,82,791,78,3131,76,327,
            535,129,3272,784,530,33,536,47,985,46,
            1156,1042,122,123,3179,105,362,115,120,121,
            146,147,148,149,150,151,169,170,171,172,
            173,106,112,788,100,87,88,790,98,792,
            82,3132,80,327,535,129,3272,784,530,33,
            536,47,985,46,1156,1042,122,123,3179,105,
            362,115,120,121,146,147,148,149,150,151,
            169,170,171,172,173,106,112,788,100,87,
            88,790,98,3128,86,327,535,129,3272,784,
            530,33,536,47,985,46,1156,1042,122,123,
            3179,105,362,115,120,121,146,147,148,149,
            150,151,169,170,171,172,173,106,112,788,
            100,87,88,790,98,3130,84,327,535,129,
            3272,784,530,33,536,47,985,46,1156,1042,
            122,123,3179,105,362,115,120,121,146,147,
            148,149,150,151,169,170,171,172,173,106,
            112,788,100,95,96,790,98,327,535,129,
            3272,784,530,33,536,47,985,46,1156,1042,
            122,123,3179,105,362,115,120,121,146,147,
            148,149,150,151,169,170,171,172,173,106,
            112,788,100,93,94,790,98,327,535,129,
            3272,784,530,33,536,47,985,46,1156,1042,
            122,123,3179,105,362,115,120,121,146,147,
            148,149,150,151,169,170,171,172,173,106,
            112,788,100,91,92,790,98,327,535,129,
            3272,784,530,33,536,47,985,46,1156,1042,
            122,123,3179,105,362,115,120,121,146,147,
            148,149,150,151,169,170,171,172,173,106,
            112,788,100,89,90,790,98,543,535,129,
            3272,784,530,33,536,47,985,46,1156,1042,
            122,123,3179,105,362,115,120,121,146,147,
            148,149,150,151,169,170,171,172,173,106,
            112,3117,104,543,535,129,3272,784,530,33,
            536,47,985,46,1156,1042,122,123,3179,105,
            362,115,120,121,146,147,148,149,150,151,
            169,170,171,172,173,106,112,3118,102,543,
            535,129,3272,784,530,33,536,47,985,46,
            1156,1042,122,123,3179,109,362,115,120,121,
            146,147,148,149,150,151,169,170,171,172,
            173,110,112,543,535,129,3272,784,530,33,
            536,47,985,46,1156,1042,122,123,3179,107,
            362,115,120,121,146,147,148,149,150,151,
            169,170,171,172,173,108,112,689,535,129,
            3272,784,530,33,536,47,985,46,1156,1042,
            122,123,3179,114,362,115,120,121,146,147,
            148,149,150,151,169,170,171,172,173,689,
            535,129,3272,784,530,33,536,47,985,46,
            1156,1042,122,123,3179,113,362,115,120,121,
            146,147,148,149,150,151,169,170,171,172,
            173,611,535,129,3272,784,530,33,536,47,
            985,46,1156,1042,122,123,3179,113,362,115,
            120,121,146,147,148,149,150,151,169,170,
            171,172,173,756,131,129,3277,990,1081,33,
            43,47,3276,46,1156,1042,216,185,907,1049,
            921,1170,1073,989,1171,686,1173,1176,1175,1178,
            1183,1185,851,1189,1181,1197,311,1023,142,201,
            1198,525,526,1023,142,201,1074,525,526,351,
            678,1092,1200,1006,1203,904,142,201,1187,525,
            526,904,142,201,70,525,526,1188,231,976,
            1205,1190,196,212,49,3274,196,247,904,142,
            201,186,525,526,215,255,257,258,259,270,
            5,244,245,246,200,202,203,156,211,1195,
            200,202,203,196,209,1172,261,249,451,337,
            1208,55,452,202,203,1041,1172,56,978,202,
            203,196,209,539,126,242,363,904,142,201,
            980,525,526,275,1049,195,202,203,904,142,
            201,529,525,526,1206,231,475,231,798,1216,
            979,231,255,257,258,259,231,507,196,59,
            1218,231,240,270,397,266,397,875,397,196,
            59,397,373,397,397,1154,866,1221,3143,1223,
            3144,3343,3343,3343,3146,202,203,196,214,3145,
            3343,3144,3343,3343,797,241,202,203,196,210,
            196,3159,3343,721,196,60,3343,3343,3343,196,
            3256,3343,865,213,196,3267,3343,125,3343,3140,
            3343,3141,222,223,3343,3343,128,3343,127,224,
            269,3343,3343
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,0,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,0,25,26,27,28,29,
            30,31,32,33,34,35,0,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,0,0,
            2,71,0,69,5,3,0,73,0,1,
            2,3,82,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,26,25,26,27,28,29,30,31,
            32,33,34,35,90,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,65,66,67,77,78,0,71,
            0,0,1,5,0,0,0,1,2,3,
            82,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            0,25,26,27,28,29,30,31,32,33,
            34,35,0,37,38,39,40,41,42,43,
            44,45,46,47,48,49,50,51,52,53,
            54,55,56,57,58,59,60,61,62,63,
            64,65,66,67,69,77,78,71,74,74,
            0,76,2,83,79,85,0,87,88,0,
            1,0,1,2,3,89,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,73,25,26,27,28,
            29,30,31,32,33,34,35,97,37,38,
            39,40,41,42,43,44,45,46,47,48,
            49,50,51,52,53,54,55,56,57,58,
            59,60,61,62,63,64,65,66,67,70,
            0,0,71,0,1,0,6,7,0,1,
            81,6,7,0,0,1,0,1,2,3,
            89,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            0,25,26,27,28,29,30,31,32,33,
            34,35,0,37,38,39,40,41,42,43,
            44,45,46,47,48,49,50,51,52,53,
            54,55,56,57,58,59,60,61,62,63,
            64,65,66,67,70,0,0,71,0,1,
            2,3,91,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,72,25,26,27,28,29,30,31,
            32,33,34,35,84,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,65,66,67,70,0,73,71,
            0,1,2,3,0,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,27,25,26,27,28,29,
            30,31,32,33,34,35,0,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,0,0,
            2,71,0,1,2,3,72,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,0,25,26,27,
            28,29,30,31,32,33,34,35,72,37,
            38,39,40,41,42,43,44,45,46,47,
            48,49,50,51,52,53,54,55,56,57,
            58,59,60,61,62,63,64,65,66,67,
            0,1,2,3,0,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,68,25,26,27,28,29,
            30,31,32,33,34,35,0,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,0,0,2,
            34,35,4,69,0,0,0,1,0,1,
            2,3,82,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,27,25,26,27,28,29,30,31,
            32,33,34,35,0,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,65,66,0,70,2,3,0,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,95,
            25,26,27,28,29,30,31,32,33,34,
            35,0,37,38,39,40,41,42,43,44,
            45,46,47,48,49,50,51,52,53,54,
            55,56,57,58,0,0,2,3,3,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,23,25,
            26,27,28,29,30,31,32,33,34,35,
            0,37,38,39,40,41,42,43,44,45,
            46,47,48,49,50,51,52,53,54,55,
            56,57,58,0,0,1,3,4,5,6,
            7,0,1,92,0,1,0,1,0,1,
            17,18,19,20,21,22,23,0,1,26,
            27,28,0,0,0,2,0,34,35,36,
            24,8,9,10,11,12,13,14,15,16,
            0,19,20,21,22,19,20,21,22,0,
            1,0,29,30,31,32,33,0,1,19,
            20,21,22,93,70,72,73,74,75,76,
            77,78,79,80,70,81,83,84,85,86,
            87,88,59,0,91,92,93,94,95,96,
            97,0,68,2,0,0,5,6,7,8,
            9,10,11,12,13,14,15,16,0,0,
            2,17,18,5,6,7,25,0,69,36,
            29,30,31,32,33,0,17,18,37,38,
            39,40,41,42,43,44,45,46,47,48,
            49,50,0,0,2,0,1,4,0,24,
            8,9,10,11,12,13,14,15,16,0,
            0,36,0,0,0,70,0,3,0,24,
            2,29,30,31,32,33,81,0,0,96,
            0,73,74,0,76,77,78,79,24,0,
            24,0,0,0,0,3,2,72,90,36,
            0,59,8,9,10,11,12,13,14,15,
            16,0,0,36,2,23,36,17,18,25,
            8,9,10,11,12,13,14,15,16,36,
            0,69,0,74,0,76,0,25,79,0,
            0,0,0,80,0,0,68,36,0,0,
            0,68,75,3,24,75,24,68,24,68,
            24,0,0,24,24,24,0,0,75,3,
            0,4,2,28,0,0,0,1,4,0,
            1,0,1,72,36,0,1,0,1,0,
            0,0,0,2,0,0,4,0,36,4,
            0,4,0,1,0,1,0,0,0,0,
            68,36,4,69,0,26,0,0,28,0,
            4,4,0,4,0,0,4,0,4,80,
            24,4,0,24,0,0,36,0,24,4,
            0,4,0,36,4,0,4,86,0,1,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,69,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,94,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            160,1332,3475,3350,253,3378,3379,3380,3478,3476,
            3477,3479,3480,3481,3482,3483,3484,533,3354,3355,
            3356,3357,3358,3351,243,3473,3359,3360,3361,783,
            722,660,659,541,3352,3081,3343,534,3375,3364,
            3365,3366,3367,3368,3369,3370,3371,3372,3373,3374,
            3377,3017,3348,3349,3347,3346,3344,3345,3395,531,
            786,3521,3518,3520,3522,3523,3525,3178,3343,3343,
            3475,1385,195,352,537,1650,73,345,3343,1332,
            3475,3350,1756,3378,3379,3380,3478,3476,3477,3479,
            3480,3481,3482,3483,3484,533,3354,3355,3356,3357,
            3358,3351,2589,3473,3359,3360,3361,783,722,660,
            659,541,3352,3081,437,534,3375,3364,3365,3366,
            3367,3368,3369,3370,3371,3372,3373,3374,3377,3017,
            3348,3349,3347,3346,3344,3345,3395,531,786,3521,
            3518,3520,3522,3523,3525,3178,663,601,274,1385,
            111,3343,3171,537,3343,3343,235,1332,3475,3350,
            1756,3378,3379,3380,3478,3476,3477,3479,3480,3481,
            3482,3483,3484,533,3354,3355,3356,3357,3358,3351,
            3343,3473,3359,3360,3361,783,722,660,659,541,
            3352,3049,252,534,3375,3364,3365,3366,3367,3368,
            3369,3370,3371,3372,3373,3374,3377,3017,3348,3349,
            3347,3346,3344,3345,3395,531,786,3521,3518,3520,
            3522,3523,3525,3178,431,663,601,1385,725,725,
            3343,801,338,358,532,3113,3343,521,517,225,
            45,3343,1332,3475,3350,3168,3378,3379,3380,3478,
            3476,3477,3479,3480,3481,3482,3483,3484,533,3354,
            3355,3356,3357,3358,3351,345,3473,3359,3360,3361,
            783,722,660,659,541,3352,3049,3342,534,3375,
            3364,3365,3366,3367,3368,3369,3370,3371,3372,3373,
            3374,3377,3017,3348,3349,3347,3346,3344,3345,3395,
            531,786,3521,3518,3520,3522,3523,3525,3178,4496,
            3343,3343,1385,3343,3160,260,343,344,3343,544,
            1044,343,344,3343,176,10,3343,1332,3475,3350,
            3168,3378,3379,3380,3478,3476,3477,3479,3480,3481,
            3482,3483,3484,533,3354,3355,3356,3357,3358,3351,
            3343,3473,3359,3360,3361,783,722,660,659,541,
            3352,3049,3343,534,3375,3364,3365,3366,3367,3368,
            3369,3370,3371,3372,3373,3374,3377,3017,3348,3349,
            3347,3346,3344,3345,3395,531,786,3521,3518,3520,
            3522,3523,3525,3178,10,254,225,1385,227,1332,
            3475,3350,3594,3378,3379,3380,3478,3476,3477,3479,
            3480,3481,3482,3483,3484,533,3354,3355,3356,3357,
            3358,3351,2233,3473,3359,3360,3361,783,722,660,
            659,541,3352,3049,3266,534,3375,3364,3365,3366,
            3367,3368,3369,3370,3371,3372,3373,3374,3377,3017,
            3348,3349,3347,3346,3344,3345,3395,531,786,3521,
            3518,3520,3522,3523,3525,3178,3569,69,345,1385,
            3343,1332,3163,3350,3343,3378,3379,3380,3478,3476,
            3477,3479,3480,3481,3482,3483,3484,533,3354,3355,
            3356,3357,3358,3351,2543,3473,3359,3360,3361,783,
            722,660,659,541,3352,3049,3343,534,3375,3364,
            3365,3366,3367,3368,3369,3370,3371,3372,3373,3374,
            3377,3017,3348,3349,3347,3346,3344,3345,3395,531,
            786,3521,3518,3520,3522,3523,3525,3178,3343,3343,
            867,1385,3343,1332,3475,3350,2339,3378,3379,3380,
            3478,3476,3477,3479,3480,3481,3482,3483,3484,533,
            3354,3355,3356,3357,3358,3351,3343,3473,3359,3360,
            3361,783,722,660,659,541,3352,3049,2392,534,
            3375,3364,3365,3366,3367,3368,3369,3370,3371,3372,
            3373,3374,3377,3017,3348,3349,3347,3346,3344,3345,
            3395,531,786,3521,3518,3520,3522,3523,3525,3178,
            3343,1332,3475,3350,204,3378,3379,3380,3478,3476,
            3477,3479,3480,3481,3482,3483,3484,533,3354,3355,
            3356,3357,3358,3351,280,3473,3359,3360,3361,783,
            722,660,659,541,3352,3049,97,534,3375,3364,
            3365,3366,3367,3368,3369,3370,3371,3372,3373,3374,
            3377,3017,3348,3349,3347,3346,3344,3345,3395,531,
            786,3521,3518,3520,3522,3523,3525,207,3343,338,
            2913,2877,3467,352,63,71,181,44,3343,1332,
            3475,3350,2021,3378,3379,3380,3478,3476,3477,3479,
            3480,3481,3482,3483,3484,533,3354,3355,3356,3357,
            3358,3351,2543,3473,3359,3360,3361,783,722,660,
            659,541,3352,3049,3343,534,3375,3364,3365,3366,
            3367,3368,3369,3370,3371,3372,3373,3374,3377,3017,
            3348,3349,3347,3346,3344,3345,3395,531,786,3521,
            3518,3520,3522,3523,3525,3343,44,3475,3350,3343,
            3378,3379,3380,3478,3476,3477,3479,3480,3481,3482,
            3483,3484,3353,3354,3355,3356,3357,3358,3351,2445,
            3473,3359,3360,3361,3381,3382,3383,3384,3385,3352,
            3362,3343,3387,3375,3364,3365,3366,3367,3368,3369,
            3370,3371,3372,3373,3374,3377,3363,3348,3349,3347,
            3346,3344,3345,3395,3343,77,3475,3350,2675,3378,
            3379,3380,3478,3476,3477,3479,3480,3481,3482,3483,
            3484,3353,3354,3355,3356,3357,3358,3351,2633,3473,
            3359,3360,3361,3381,3382,3383,3384,3385,3352,3362,
            3343,3387,1215,3364,3365,3366,3367,3368,3369,3370,
            3371,3372,3373,3374,3377,3363,3348,3349,3347,3346,
            3344,3345,3395,45,225,45,3569,3569,3569,3569,
            3569,3343,606,1809,48,43,3343,3215,3343,347,
            3569,3569,3569,3569,3569,3569,3569,3343,668,3569,
            3569,3569,81,3343,3343,3475,85,3569,3569,3569,
            3188,3478,3476,3477,3479,3480,3481,3482,3483,3484,
            83,2837,2797,2757,2717,2837,2797,2757,2717,153,
            808,3343,3498,3499,3500,3501,3502,32,50,2837,
            2797,2757,2717,2180,4496,3569,3569,3569,3569,3569,
            3569,3569,3569,3569,4851,1101,3569,3569,3569,3569,
            3569,3569,528,3343,3569,3569,3569,3569,3569,3569,
            3569,3343,3129,3475,99,225,3378,3379,3380,3478,
            3476,3477,3479,3480,3481,3482,3483,3484,248,103,
            338,2983,2949,537,343,344,3473,3343,143,3255,
            3381,3382,3383,3384,3385,132,2983,2949,3387,3375,
            3364,3365,3366,3367,3368,3369,3370,3371,3372,3373,
            3374,3377,199,3343,3475,143,3226,3548,3343,3165,
            3478,3476,3477,3479,3480,3481,3482,3483,3484,265,
            3343,194,131,3343,194,3569,194,2074,3343,3237,
            1098,3498,3499,3500,3501,3502,987,3343,42,1703,
            3343,345,725,41,801,663,601,532,3165,40,
            3165,39,79,3343,61,2675,3475,194,437,3244,
            101,528,3478,3476,3477,3479,3480,3481,3482,3483,
            3484,3343,3343,2127,3475,2633,2127,2983,2949,3473,
            3478,3476,3477,3479,3480,3481,3482,3483,3484,2127,
            3343,142,3343,725,3343,801,3343,3473,532,3343,
            3343,3343,38,3517,3343,65,159,3271,208,3343,
            3343,158,3281,1862,1226,3283,1279,157,1438,156,
            1491,165,161,1544,3233,1597,3343,3343,3284,1915,
            144,3549,3475,2495,3343,228,3343,3257,3461,33,
            51,3343,870,2286,3255,3343,376,3343,460,75,
            67,57,3343,338,145,3343,3562,3343,730,3564,
            58,3561,3343,925,223,606,240,236,3343,3343,
            155,2127,3181,333,3343,2589,3343,3343,2495,3343,
            3209,3462,3343,3532,3343,3343,3577,3343,3576,3497,
            3248,3560,3343,3147,3343,3343,3261,3343,3153,3535,
            3343,3533,3343,1158,3536,3343,3534,1968,48,43,
            3343,3343,3343,3343,3343,3343,3343,3343,3343,3343,
            3343,3343,3343,352,3343,3343,3343,3343,3343,3343,
            3343,3343,3343,3343,3343,3343,3343,3343,3343,3343,
            3343,3343,3343,3343,3343,3343,3343,3343,3343,3343,
            3343,3343,3343,3343,3343,3343,3343,3343,3343,3343,
            3343,3343,3343,3343,3343,3343,3343,3343,3343,3343,
            3343,3343,3343,3343,3343,3343,3343,3343,3343,3575
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            415,426,69,272,272,261,261,261,261,171,
            261,146,77,146,425,52,82,82,272,272,
            272,272,272,483,212,395,252,148,391,391,
            146,84,84,82,404,404,404,169,169,173,
            173,216,275,274,274,274,274,274,276,275,
            398,391,278,282,82,284,290,286,293,292,
            295,294,82,82,82,146,82,317,136,316,
            209,136,312,82,52,453,74,481,391,391,
            391,1,146,82,82,114,319,93,93,136,
            136,83,83,386,83,83,82,82,82,82,
            82,82,82,82,82,82,388,388,390,393,
            481,481,480,82,146,319,453,319,410,400,
            82,4,409,409,407,412,412,218,481,480,
            404,173,275,277,173,391,173,391,391,391,
            82,282,282,286,286,292,290,294,293,82,
            82,52,453,52,453,481,481,428,481,82,
            82,2,146,82,82,277,277,319,391,219,
            82,146,82,80,80,431,481,480,383,481,
            481,319,412,160,258,481,456,481,479,480,
            481,82,272,146,163,272,481,277,146,82,
            146,82,52,81,487,51,433,259,481,259,
            481,82,82,481,481
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            80,71,67,60,38,50,5,6,7,39,
            40,41,42,43,44,45,46,47,48,49,
            25,66,37,62,17,63,61,64,65,58,
            56,57,55,54,52,53,23,34,18,19,
            20,21,22,26,27,28,1,35,51,82,
            3,9,10,8,11,12,13,14,15,16,
            59,29,30,31,32,33,2,0,4,72,
            84,97,24,36,96,0,97,90,0,4,
            89,71,67,60,66,62,63,61,64,65,
            59,1,58,56,57,55,54,52,53,3,
            23,34,17,18,19,20,21,22,26,27,
            28,35,51,37,39,40,41,42,43,44,
            45,46,47,48,49,38,50,5,6,7,
            29,30,31,32,33,25,9,10,8,11,
            12,13,14,15,16,2,0,3,4,80,
            36,77,78,96,5,6,7,97,69,72,
            84,0,73,91,97,7,6,0,68,0,
            74,0,34,35,17,18,19,20,3,21,
            22,23,4,80,75,83,72,36,84,85,
            86,87,88,76,74,92,93,94,26,27,
            28,95,96,6,7,79,1,70,73,91,
            97,77,78,5,0,81,70,69,34,35,
            17,18,19,20,21,22,23,75,83,85,
            86,87,88,76,77,78,73,91,74,92,
            93,94,26,27,28,95,5,6,7,79,
            1,4,80,84,96,97,3,36,72,0,
            25,2,9,10,8,11,12,13,14,15,
            16,24,0,68,1,81,70,87,88,83,
            85,17,18,34,35,19,20,21,22,3,
            23,26,27,28,4,80,75,72,36,84,
            86,77,78,92,93,94,96,5,6,7,
            95,97,74,76,79,73,91,0,4,71,
            60,38,50,5,29,30,31,32,33,39,
            40,41,42,43,44,45,46,47,48,49,
            9,10,8,11,12,13,14,15,16,2,
            25,66,37,62,17,63,61,64,65,59,
            58,56,57,55,54,52,53,3,23,34,
            18,19,20,21,22,26,27,28,1,35,
            51,67,7,6,0,92,0,3,0,24,
            1,0,1,24,76,79,74,69,0,80,
            36,86,0,1,70,0,24,3,36,80,
            0,75,36,0,90,76,79,74,77,78,
            5,7,6,2,73,97,0,4,69,0,
            93,0,77,78,5,9,10,8,11,12,
            13,14,15,16,59,29,30,31,32,33,
            2,0,4,2,0,72,34,35,17,18,
            19,20,3,21,22,23,1,81,83,69,
            85,70,87,88,26,27,28,95,24,36,
            4,0,91,73,69,0,94,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static byte nasb[] = {0,
            92,10,10,10,10,24,24,24,24,22,
            24,98,14,1,18,97,29,29,10,10,
            10,10,10,93,100,104,10,10,10,10,
            102,29,29,29,34,34,34,10,10,10,
            10,10,10,10,10,10,10,10,34,34,
            10,10,11,10,29,10,10,10,10,10,
            10,10,29,29,29,108,29,10,9,18,
            16,9,26,29,97,102,10,10,10,10,
            10,29,90,29,29,87,29,84,4,9,
            9,78,78,10,72,72,60,60,66,66,
            66,66,48,54,36,42,10,10,10,10,
            10,10,10,29,113,29,98,29,10,10,
            29,29,10,10,10,10,10,10,10,10,
            34,34,34,34,10,10,10,10,10,10,
            29,10,10,10,10,10,10,10,10,29,
            29,97,106,97,106,10,10,10,10,29,
            29,29,112,29,29,34,34,29,10,10,
            29,113,28,29,29,10,10,10,95,10,
            10,29,10,10,10,10,10,10,10,10,
            10,29,10,113,20,10,10,34,113,29,
            113,29,97,29,10,97,97,10,10,10,
            10,29,29,10,10
        };
    };
    public final static byte nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            4,90,0,6,87,12,72,97,3,0,
            91,92,0,84,0,69,0,62,0,70,
            0,66,0,60,0,68,0,54,7,1,
            5,12,0,55,0,7,1,5,12,49,
            0,7,12,1,5,47,0,7,1,5,
            12,45,0,7,12,1,5,43,0,7,
            1,5,12,41,0,7,12,1,5,37,
            0,7,12,1,5,35,0,7,1,5,
            12,32,0,12,72,14,3,9,0,96,
            0,103,85,0,105,0,5,4,0,108,
            0,80,0,106,0,75,0,53,89,107,
            0,79,54,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            11,99,7,12,55,56,57,88,89,90,
            91,92,94,95,96,97,3,4,5,6,
            8,9,10,20,34,46,47,48,63,64,
            65,66,67,1,2,19,58,68,69,70,
            71,72,73,74,75,76,77,78,79,87,
            49,80,81,82,83,84,85,86,93,30,
            31,32,33,53,54,59,51,13,21,25,
            42,18,38,41,16,35,36,37,62,14,
            15,100,17,22,23,24,26,27,28,39,
            40,43,44,45,50,52,98,60,61,101,
            102,103
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            143,0,107,116,144,104,105,0,108,0,
            106,113,0,141,109,136,138,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,137,0,134,135,131,132,133,0,129,
            130,127,128,125,126,123,124,121,122,119,
            120,0,150,118,0,142,151,0,0,0,
            0,162,0,0,0,165,155,157,158,159,
            0,110,0,0,117,146,0,148,152,153,
            0,0,154,160,161,0,111,112,114,115,
            139,140,0,0,145,147,149,0,0,0,
            0,0,156,0,163,164,166,167,0,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            83,117,13,111,141,168,91,125,1,8,
            53,58,63,22,68,72,147,151,157,174,
            46,76,161,46,101,131,101,131,165,40,
            31,178,178,186,186,194,194,194,194,208,
            208,216,221,226
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            6,6,20,6,6,6,97,97,6,6,
            6,6,6,27,6,6,6,155,155,6,
            50,80,50,50,97,97,105,135,6,43,
            34,180,183,188,191,196,199,202,205,210,
            213,218,223,228
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            99,98,39,99,98,17,99,98,92,92,
            14,13,78,39,58,59,98,23,22,17,
            81,54,19,19,99,98,99,98,18,33,
            39,35,35,37,37,41,41,41,41,43,
            43,45,47,49
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            4,4,94,4,4,4,72,72,4,4,
            4,4,4,93,4,4,4,80,80,4,
            75,3,75,75,72,72,84,36,4,96,
            92,18,17,35,34,22,21,20,19,23,
            3,26,27,28
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static byte scopeStateSet[] = {
            2,2,15,2,2,8,2,2,4,4,
            7,6,1,15,63,63,2,8,8,8,
            1,71,8,8,2,2,2,2,8,11,
            15,13,13,15,15,19,19,19,19,21,
            21,22,23,24
        };
    };
    public final static byte scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            184,1,105,88,0,12,0,184,1,105,
            87,0,152,93,152,92,152,71,0,45,
            0,152,92,152,71,0,44,119,45,0,
            152,71,0,43,119,44,119,45,0,182,
            67,0,52,119,0,158,81,105,0,16,
            0,0,163,1,157,111,0,163,1,157,
            113,0,163,1,157,174,0,202,1,59,
            0,159,1,107,0,159,24,2,0,7,
            119,0,152,72,156,84,156,1,189,0,
            156,84,156,1,189,0,18,119,12,0,
            156,1,189,0,22,118,18,119,12,0,
            152,72,156,1,189,0,152,72,156,36,
            156,1,190,0,156,36,156,1,190,0,
            156,1,190,0,19,118,18,119,12,0,
            152,72,156,1,190,0,152,1,190,0,
            198,68,59,0,14,0,196,68,107,0,
            158,81,117,0,152,1,0,163,1,105,
            69,106,0,163,1,60,0,136,0,4,
            137,0,3,137,0,140,0,2,135,0,
            1,135,0,142,0,9,132,0,8,132,
            0,6,132,0,5,132,0,144,0,10,
            130,0,7,130,0,146,0,46,128,0,
            148,0,47,126,0,150,0,48,124,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            3113,358,0,362,0,358,3113,3081,3049,3017,
            2983,2949,2913,2877,2837,2797,2757,2717,2675,2633,
            2589,2543,2495,2392,2339,1158,2286,2233,2180,925,
            460,376,870,1101,808,2127,2074,730,2021,1968,
            1915,1862,1809,1756,668,606,1703,2445,544,1044,
            987,280,1650,1597,1544,1491,1438,1385,1332,1279,
            1226,0,3153,3147,3248,3237,3188,3171,3165,0,
            3271,3266,3261,870,3257,3244,3226,3215,3255,3129,
            3160,3178,3133,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,188,2,6,7,5,78,77,74,79,
            76,90,205,73,187,24,24,24,162,162,
            162,162,162,106,192,106,159,106,107,59,
            67,51,35,1,111,114,113,107,59,17,
            37,103,109,33,32,31,30,29,117,105,
            106,60,119,136,71,140,144,142,148,146,
            153,150,24,24,24,24,24,206,69,187,
            210,69,208,3,1,1,182,152,157,157,
            157,68,68,81,81,69,1,85,83,88,
            87,18,17,152,35,34,23,3,22,21,
            20,19,27,26,95,28,191,155,2,105,
            159,202,182,96,36,1,1,1,196,152,
            82,35,197,198,2,158,158,105,163,158,
            174,111,105,111,38,189,108,190,105,105,
            92,136,136,142,142,146,144,150,148,3,
            3,24,1,24,1,163,203,106,163,86,
            82,36,36,3,36,75,75,1,157,157,
            81,1,1,1,1,152,175,177,159,175,
            163,1,158,156,156,152,2,184,89,185,
            184,93,4,36,207,4,163,75,84,72,
            36,72,24,36,152,24,24,156,152,156,
            152,72,72,152,152
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "+",
            "-",
            "*",
            "/",
            ">",
            "<",
            "=",
            ">=",
            "<=",
            "<>",
            "(",
            ")",
            "{",
            "}",
            "[",
            "]",
            "->",
            "|",
            ",",
            ":",
            "::",
            ";",
            ".",
            "..",
            "@pre",
            "^",
            "^^",
            "?",
            "$empty",
            "NUMERIC_OPERATION",
            "STRING_LITERAL",
            "INTEGER_LITERAL",
            "REAL_LITERAL",
            "self",
            "inv",
            "pre",
            "post",
            "context",
            "package",
            "endpackage",
            "def",
            "if",
            "then",
            "else",
            "endif",
            "and",
            "or",
            "xor",
            "not",
            "implies",
            "let",
            "in",
            "true",
            "false",
            "body",
            "derive",
            "init",
            "null",
            "invalid",
            "attr",
            "oper",
            "static",
            "Set",
            "Bag",
            "Sequence",
            "Collection",
            "OrderedSet",
            "iterate",
            "forAll",
            "exists",
            "isUnique",
            "any",
            "one",
            "collect",
            "select",
            "reject",
            "collectNested",
            "sortedBy",
            "closure",
            "oclIsKindOf",
            "oclIsTypeOf",
            "oclAsType",
            "oclIsNew",
            "oclIsUndefined",
            "oclIsInvalid",
            "oclIsInState",
            "allInstances",
            "String",
            "Integer",
            "UnlimitedNatural",
            "Real",
            "Boolean",
            "Tuple",
            "OclAny",
            "OclVoid",
            "OclInvalid",
            "OclMessage",
            "EOF_TOKEN",
            "IDENTIFIER",
            "INTEGER_RANGE_START",
            "SINGLE_LINE_COMMENT",
            "MULTI_LINE_COMMENT",
            "ERROR_TOKEN",
            "iteratorIdentifier",
            "keywordAsIdentifier1",
            "binaryName",
            "simpleNameCS",
            "keywordAsName",
            "keywordAsName1",
            "unaryName",
            "iterateName",
            "iteratorName",
            "oclIsInStateName",
            "operationCS1",
            "operationCS2",
            "pathNameCS",
            "parametersCS",
            "variableCS",
            "oclExpressionCS",
            "impliesExpCS",
            "xorExpCS",
            "xorWithLet",
            "orExpCS",
            "orWithLet",
            "andExpCS",
            "andWithLet",
            "equalityExpCS",
            "equalityWithLet",
            "relationalExpCS",
            "relationalWithLet",
            "ifExpCSPrec",
            "additiveWithLet",
            "additiveExpCS",
            "multiplicativeExpCS",
            "multiplicativeWithLet",
            "unaryExpCS",
            "unaryWithLet",
            "dotArrowExpCS",
            "callExpCS",
            "messageExpCS",
            "keywordOperationCallExpCS",
            "argumentsCS",
            "simpleIdentifierCS",
            "collectionTypeIdentifierCS",
            "collectionLiteralPartsCS",
            "collectionLiteralPartCS",
            "variableListCS2",
            "featureCallExpCS",
            "loopExpCS",
            "typedVariableCS",
            "typeCS",
            "variableCS2",
            "variableListCS",
            "oclMessageArgumentsCS",
            "oclMessageArgCS",
            "packageDeclarationCSm",
            "invOrDefCS",
            "prePostOrBodyDeclCS",
            "initOrDerValueCS",
            "packageDeclarationCS",
            "contextDeclCSm",
            "contextDeclCS",
            "initOrDerValueCSm",
            "invOrDefCSm",
            "defCS",
            "defExpressionCS",
            "prePostOrBodyDeclCSm"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 102,
           SCOPE_UBOUND      = 43,
           SCOPE_SIZE        = 44,
           MAX_NAME_LENGTH   = 26;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 215,
           NT_OFFSET         = 102,
           LA_STATE_OFFSET   = 3622,
           MAX_LA            = 2,
           NUM_RULES         = 279,
           NUM_NONTERMINALS  = 110,
           NUM_SYMBOLS       = 212,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 3133,
           IDENTIFIER_SYMBOL = 2,
           EOFT_SYMBOL       = 97,
           EOLT_SYMBOL       = 97,
           ACCEPT_ACTION     = 3342,
           ERROR_ACTION      = 3343;

    public final static boolean BACKTRACK = false;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
