// $ANTLR : OCLGrammar.g -> OclParserTokenTypes.txt$
OclParser    // output token vocab name
LITERAL_package="package"=4
LITERAL_endpackage="endpackage"=5
PATHNAME=6
NAME=7
NUMERICPATHNAME=8
LITERAL_context="context"=9
COLON=10
LPAREN=11
RPAREN=12
COMMA=13
LITERAL_pre="pre"=14
LITERAL_post="post"=15
LITERAL_body="body"=16
LITERAL_inv="inv"=17
LITERAL_implies="implies"=18
LITERAL_and="and"=19
LITERAL_or="or"=20
LITERAL_xor="xor"=21
EQUALS=22
NEQUALS=23
GT=24
GE=25
LT=26
LE=27
LITERAL_if="if"=28
LITERAL_then="then"=29
LITERAL_else="else"=30
LITERAL_endif="endif"=31
PLUS=32
MINUS=33
MULTIPLY=34
DIVIDE=35
LITERAL_not="not"=36
DOT=37
ARROW=38
PRE=39
LBRACKET=40
RBRACKET=41
LITERAL_let="let"=42
LITERAL_Integer="Integer"=43
LITERAL_String="String"=44
LITERAL_Real="Real"=45
LITERAL_Boolean="Boolean"=46
LITERAL_OclAny="OclAny"=47
LITERAL_OclVoid="OclVoid"=48
LITERAL_Set="Set"=49
LITERAL_Bag="Bag"=50
LITERAL_Sequence="Sequence"=51
LITERAL_Collection="Collection"=52
LITERAL_OrderedSet="OrderedSet"=53
LITERAL_Tuple="Tuple"=54
LITERAL_in="in"=55
NUMBER_LITERAL=56
REAL_LITERAL=57
LITERAL_true="true"=58
LITERAL_false="false"=59
STRING_LITERAL=60
LBRACE=61
RBRACE=62
DOTDOT=63
LITERAL_forAll="forAll"=64
LITERAL_exists="exists"=65
LITERAL_isUnique="isUnique"=66
LITERAL_any="any"=67
LITERAL_one="one"=68
LITERAL_collect="collect"=69
LITERAL_select="select"=70
LITERAL_reject="reject"=71
LITERAL_collectNested="collectNested"=72
LITERAL_sortedBy="sortedBy"=73
BAR=74
LITERAL_iterate="iterate"=75
SEMICOLON=76
LITERAL_oclAsType="oclAsType"=77
LITERAL_oclIsKindOf="oclIsKindOf"=78
LITERAL_oclIsTypeOf="oclIsTypeOf"=79
LITERAL_closure="closure"=80
LITERAL_closureAll="closureAll"=81
OPERATION_EXPR=82
WS=83
SL_COMMENT=84
DOUBLECOLON=85
EXPONENT=86
NUMERIC_URL=87
NUMBER_OR_REAL_OR_RANGE_OR_OPERATION=88
DIGIT=89
ESC=90
HEX_DIGIT=91
NONQUOTED_NAME=92
QUOTED_NAME=93
NAMEORDOTTEDNAME=94
NAME_OR_PATHNAME=95
