/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.testcases.case019.serializationcallback.__impl;

public class SerializationcallbackPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<com.sap.tc.moin.testcases.case019.serializationcallback.__impl.SerializationcallbackPackageImpl> implements com.sap.tc.moin.testcases.case019.serializationcallback.SerializationcallbackPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The SerializationcallbackPackage wrapper
     */
    public SerializationcallbackPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.tc.moin.testcases.case019.serializationcallback.__impl.SerializationcallbackPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private com.sap.tc.moin.testcases.case019.serializationcallback.__impl.SerializationcallbackPackageImpl getCastWrappedObject() {
        return (com.sap.tc.moin.testcases.case019.serializationcallback.__impl.SerializationcallbackPackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.testcases.case019.serializationcallback.__impl.SerializationcallbackPackageImpl unwrap() {
        return (com.sap.tc.moin.testcases.case019.serializationcallback.__impl.SerializationcallbackPackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getA19Serialization()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getA19Serialization(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getA19Serialization(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getB19Serialization()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getB19Serialization(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getB19Serialization(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    public java.lang.Class<com.sap.tc.moin.testcases.case019.serializationcallback.SerializationcallbackPackage> get___JmiInterface() {
        return com.sap.tc.moin.testcases.case019.serializationcallback.SerializationcallbackPackage.class;
    }
    
    protected String metaObjectToString() {
        return "com.sap.tc.moin.testcases.case019.serializationcallback.SerializationcallbackPackage (Java Type)\ntestcases.case019.serializationcallback (MOF Type)"; //$NON-NLS-1$
    }
}