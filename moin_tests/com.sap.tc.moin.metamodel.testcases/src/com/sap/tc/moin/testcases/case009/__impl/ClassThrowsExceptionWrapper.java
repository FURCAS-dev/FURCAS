/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.testcases.case009.__impl;

public class ClassThrowsExceptionWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefObjectWrapperImpl<com.sap.tc.moin.testcases.case009.__impl.ClassThrowsExceptionImpl> implements com.sap.tc.moin.testcases.case009.ClassThrowsException,com.sap.tc.moin.repository.Partitionable {

        
    private static final java.util.Map<java.lang.String, java.lang.Integer> OPERATION_IDS;
    
    static {
        
        OPERATION_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>();
        OPERATION_IDS.put("operationThrowsEx9", Integer.valueOf(0)); //$NON-NLS-1$
        OPERATION_IDS.put("operationThrowsEx9AndFx9", Integer.valueOf(1)); //$NON-NLS-1$
        OPERATION_IDS.put("changingOperationThrowsEx9AndFx9", Integer.valueOf(2)); //$NON-NLS-1$
    }

    public ClassThrowsExceptionWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.tc.moin.testcases.case009.__impl.ClassThrowsExceptionImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private com.sap.tc.moin.testcases.case009.__impl.ClassThrowsExceptionImpl getCastWrappedObject() {
        return (com.sap.tc.moin.testcases.case009.__impl.ClassThrowsExceptionImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.testcases.case009.__impl.ClassThrowsExceptionImpl unwrap() {
        return (com.sap.tc.moin.testcases.case009.__impl.ClassThrowsExceptionImpl) getWrappedObject();
    }
        
    // methods for attributes
     
    // methods for references
   
    // methods for modeled operations
    public java.lang.String operationThrowsEx9() throws com.sap.tc.moin.testcases.case009.Ex9Exception, com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(0);
        try {
            return (java.lang.String)___invokeOperation(connection, 0, "45F120A5C0D9907B30EE440F13239792D674B0BB", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            if (ex instanceof com.sap.tc.moin.testcases.case009.Ex9Exception) {
                throw (com.sap.tc.moin.testcases.case009.Ex9Exception) ex;
            }
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public void operationThrowsEx9AndFx9(boolean throwEx9, boolean throwFx9) throws com.sap.tc.moin.testcases.case009.Ex9Exception, com.sap.tc.moin.testcases.case009.Fx9Exception, com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(2);
        try {
            parameterList.add(throwEx9);
            parameterList.add(throwFx9);
            ___invokeOperation(connection, 1, "47A97A49D1B47D68D49311DCC1B3001558C93B47", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            if (ex instanceof com.sap.tc.moin.testcases.case009.Ex9Exception) {
                throw (com.sap.tc.moin.testcases.case009.Ex9Exception) ex;
            }
            if (ex instanceof com.sap.tc.moin.testcases.case009.Fx9Exception) {
                throw (com.sap.tc.moin.testcases.case009.Fx9Exception) ex;
            }
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    public void changingOperationThrowsEx9AndFx9(boolean throwEx9, boolean throwFx9) throws com.sap.tc.moin.testcases.case009.Ex9Exception, com.sap.tc.moin.testcases.case009.Fx9Exception, com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(2);
        try {
            parameterList.add(throwEx9);
            parameterList.add(throwFx9);
            ___invokeOperation(connection, 2, "47A97A49D1B47D6BD49311DC8F8E001558C93B47", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            if (ex instanceof com.sap.tc.moin.testcases.case009.Ex9Exception) {
                throw (com.sap.tc.moin.testcases.case009.Ex9Exception) ex;
            }
            if (ex instanceof com.sap.tc.moin.testcases.case009.Fx9Exception) {
                throw (com.sap.tc.moin.testcases.case009.Fx9Exception) ex;
            }
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    
    // methods for internal modeled operations
    private java.lang.String invoke__operationThrowsEx9(com.sap.tc.moin.repository.core.CoreConnection connection) throws com.sap.tc.moin.testcases.case009.Ex9Exception, com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // begin of implementation provided in tag org.omg.sap2mof.OperationCodeJava
        // ClassThrowsException.operationThrowsException
        java.lang.String message = "exception message";
        java.util.Collection<java.lang.String> causes = new java.util.Vector<java.lang.String>();
        causes.add("cause 1");
        causes.add("cause 2");
        java.util.List<com.sap.tc.moin.testcases.case009.A9> a9s = new java.util.Vector<com.sap.tc.moin.testcases.case009.A9>();
        com.sap.tc.moin.testcases.case009.Case009Package case009Package = (com.sap.tc.moin.testcases.case009.Case009Package)refImmediatePackage();
        com.sap.tc.moin.testcases.case009.A9 a9 = (com.sap.tc.moin.testcases.case009.A9)case009Package.getA9().refCreateInstance( );
        a9s.add((com.sap.tc.moin.testcases.case009.A9)case009Package.getA9().refCreateInstance( ));
        a9s.add((com.sap.tc.moin.testcases.case009.A9)case009Package.getA9().refCreateInstance( ));
        throw new com.sap.tc.moin.testcases.case009.Ex9Exception(message, causes, a9, a9s, this);
        // end of implementation provided in tag org.omg.sap2mof.OperationCodeJava
    }
    private void invoke__operationThrowsEx9AndFx9(com.sap.tc.moin.repository.core.CoreConnection connection, boolean throwEx9, boolean throwFx9) throws com.sap.tc.moin.testcases.case009.Ex9Exception, com.sap.tc.moin.testcases.case009.Fx9Exception, com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // begin of implementation provided in tag org.omg.sap2mof.OperationCodeJava
        // ClassThrowsException.operationThrowsEx9AndFx9
        if ( throwEx9 ) {
            throw new com.sap.tc.moin.testcases.case009.Ex9Exception( null, null, null, null, null );
        }
        if ( throwFx9 ) {
            throw new com.sap.tc.moin.testcases.case009.Fx9Exception( );
        }
        // end of implementation provided in tag org.omg.sap2mof.OperationCodeJava
    }
    private void invoke__changingOperationThrowsEx9AndFx9(com.sap.tc.moin.repository.core.CoreConnection connection, boolean throwEx9, boolean throwFx9) throws com.sap.tc.moin.testcases.case009.Ex9Exception, com.sap.tc.moin.testcases.case009.Fx9Exception, com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // begin of implementation provided in tag org.omg.sap2mof.OperationCodeJava
        // ClassThrowsException.changingOperationThrowsEx9AndFx9
        operationThrowsEx9AndFx9(throwEx9, throwFx9);
        // end of implementation provided in tag org.omg.sap2mof.OperationCodeJava
    }

    // reflective methods
    @Override
    public Object refInvokeOperation(com.sap.tc.moin.repository.core.CoreConnection connection, java.lang.String requestedOperation, java.util.List<? extends Object> args) throws com.sap.tc.moin.repository.mmi.reflect.RefException {
        if (requestedOperation == null) {
            throw new com.sap.tc.moin.repository.mmi.reflect.InvalidNameException(requestedOperation);
        }
        java.lang.Integer operationId = OPERATION_IDS.get(requestedOperation);
        if (operationId == null) {
            throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(requestedOperation, refMetaObject(), "refInvokeOperation(String)"); //$NON-NLS-1$
        }
        switch (operationId) {
                
            case 0:
                return ___invokeOperation( connection, operationId, "45F120A5C0D9907B30EE440F13239792D674B0BB", args ); //$NON-NLS-1$    
                
            case 1:
                return ___invokeOperation( connection, operationId, "47A97A49D1B47D68D49311DCC1B3001558C93B47", args ); //$NON-NLS-1$    
                
            case 2:
                return ___invokeOperation( connection, operationId, "47A97A49D1B47D6BD49311DC8F8E001558C93B47", args ); //$NON-NLS-1$    
            default:
                throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(requestedOperation, refMetaObject(), "refInvokeOperation(String)"); //$NON-NLS-1$
        }
    }
    
    @Override
    public Object invoke___Operation(com.sap.tc.moin.repository.core.CoreConnection connection, int operationId, java.util.List<? extends Object> args) throws com.sap.tc.moin.repository.mmi.reflect.RefException {
        switch (operationId) {
                
            case 0:
                return invoke__operationThrowsEx9(connection);    
                
            case 1:
                invoke__operationThrowsEx9AndFx9(connection, (java.lang.Boolean) args.get(0), (java.lang.Boolean) args.get(1));
                return null;    
                
            case 2:
                invoke__changingOperationThrowsEx9AndFx9(connection, (java.lang.Boolean) args.get(0), (java.lang.Boolean) args.get(1));
                return null;    
            default:
                throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException( operationId, refMetaObject( ), "invoke___Operation(int)"); //$NON-NLS-1$
        }
    
    }    

    // get the JMI interface
    public java.lang.Class<com.sap.tc.moin.testcases.case009.ClassThrowsException> get___JmiInterface() {
        return com.sap.tc.moin.testcases.case009.ClassThrowsException.class;
    }

    // to String
    protected String metaObjectToString() {
        return "com.sap.tc.moin.testcases.case009.ClassThrowsException (Java Type)\ntestcases.case009.ClassThrowsException (MOF Type)"; //$NON-NLS-1$
    }    
}