/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.testcases.case010.__impl;

public final class Case010PackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;
    
    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(15);
        FEATURE_IDS.put("A10", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("B10", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("C10", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("oneToManyNotChangeable", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("oneToManyChangeable", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("NotNavigableToNavigable", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("NotNavigableToNotNavigable", Integer.valueOf(6)); //$NON-NLS-1$
        FEATURE_IDS.put("NotChangeableToNotChangeable", Integer.valueOf(7)); //$NON-NLS-1$
        FEATURE_IDS.put("NotChangeableAndNavigableToNotChangeableAndNavigable", Integer.valueOf(8)); //$NON-NLS-1$
        FEATURE_IDS.put("oneToManyOrdered", Integer.valueOf(9)); //$NON-NLS-1$
        FEATURE_IDS.put("hasCs", Integer.valueOf(10)); //$NON-NLS-1$
    }

    // constructors    
    public Case010PackageImpl()
    {
        super();
    }
    public Case010PackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    // internal structure type creators
    // nested packages
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getA10(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "A10"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getB10(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "B10"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getC10(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "C10"); //$NON-NLS-1$
    }
    // associations
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getOneToManyNotChangeable(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "oneToManyNotChangeable"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getOneToManyChangeable(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "oneToManyChangeable"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getNotNavigableToNavigable(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "NotNavigableToNavigable"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getNotNavigableToNotNavigable(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "NotNavigableToNotNavigable"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getNotChangeableToNotChangeable(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "NotChangeableToNotChangeable"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getNotChangeableAndNavigableToNotChangeableAndNavigable(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "NotChangeableAndNavigableToNotChangeableAndNavigable"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getOneToManyOrdered(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "oneToManyOrdered"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getHasCs(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "hasCs"); //$NON-NLS-1$
    }
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.tc.moin.testcases.case010.__impl.A10Impl")); //$NON-NLS-1$
                case 1:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.tc.moin.testcases.case010.__impl.B10Impl")); //$NON-NLS-1$
                case 2:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("com.sap.tc.moin.testcases.case010.__impl.C10Impl")); //$NON-NLS-1$
                case 3:
                    return new com.sap.tc.moin.testcases.case010.__impl.OneToManyNotChangeableImpl(workspace, mofId, immediatePackage, metaObject);
                case 4:
                    return new com.sap.tc.moin.testcases.case010.__impl.OneToManyChangeableImpl(workspace, mofId, immediatePackage, metaObject);
                case 5:
                    return new com.sap.tc.moin.testcases.case010.__impl.NotNavigableToNavigableImpl(workspace, mofId, immediatePackage, metaObject);
                case 6:
                    return new com.sap.tc.moin.testcases.case010.__impl.NotNavigableToNotNavigableImpl(workspace, mofId, immediatePackage, metaObject);
                case 7:
                    return new com.sap.tc.moin.testcases.case010.__impl.NotChangeableToNotChangeableImpl(workspace, mofId, immediatePackage, metaObject);
                case 8:
                    return new com.sap.tc.moin.testcases.case010.__impl.NotChangeableAndNavigableToNotChangeableAndNavigableImpl(workspace, mofId, immediatePackage, metaObject);
                case 9:
                    return new com.sap.tc.moin.testcases.case010.__impl.OneToManyOrderedImpl(workspace, mofId, immediatePackage, metaObject);
                case 10:
                    return new com.sap.tc.moin.testcases.case010.__impl.HasCsImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    public java.lang.Class<com.sap.tc.moin.testcases.case010.Case010Package> get___JmiInterface() {
        return com.sap.tc.moin.testcases.case010.Case010Package.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(0);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefPackageAndName rpan = null;
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(3);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
            name = "A10"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.tc.moin.testcases.case010.A10"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "B10"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.tc.moin.testcases.case010.B10"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "C10"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "com.sap.tc.moin.testcases.case010.C10"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(8);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefAssociationAndName raan = null;
            name = "oneToManyNotChangeable"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.tc.moin.testcases.case010.OneToManyNotChangeable"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "oneToManyChangeable"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.tc.moin.testcases.case010.OneToManyChangeable"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "NotNavigableToNavigable"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.tc.moin.testcases.case010.NotNavigableToNavigable"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "NotNavigableToNotNavigable"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.tc.moin.testcases.case010.NotNavigableToNotNavigable"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "NotChangeableToNotChangeable"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.tc.moin.testcases.case010.NotChangeableToNotChangeable"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "NotChangeableAndNavigableToNotChangeableAndNavigable"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.tc.moin.testcases.case010.NotChangeableAndNavigableToNotChangeableAndNavigable"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "oneToManyOrdered"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.tc.moin.testcases.case010.OneToManyOrdered"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "hasCs"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "com.sap.tc.moin.testcases.case010.HasCs"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<com.sap.tc.moin.testcases.case010.__impl.Case010PackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new com.sap.tc.moin.testcases.case010.__impl.Case010PackageWrapper(conn, this, synchronize);
    }

}