/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.testcases.case023.__impl;

public class B23Wrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefObjectWrapperImpl<com.sap.tc.moin.testcases.case023.__impl.B23Impl> implements com.sap.tc.moin.testcases.case023.B23,com.sap.tc.moin.repository.Partitionable {

        
    private static final java.util.Map<java.lang.String, java.lang.Integer> OPERATION_IDS;
    
    static {
        
        OPERATION_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>();
        OPERATION_IDS.put("collectA", Integer.valueOf(0)); //$NON-NLS-1$
    }

    public B23Wrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.tc.moin.testcases.case023.__impl.B23Impl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private com.sap.tc.moin.testcases.case023.__impl.B23Impl getCastWrappedObject() {
        return (com.sap.tc.moin.testcases.case023.__impl.B23Impl) getWrappedObject();
    }
    
    public com.sap.tc.moin.testcases.case023.__impl.B23Impl unwrap() {
        return (com.sap.tc.moin.testcases.case023.__impl.B23Impl) getWrappedObject();
    }
        
    // methods for attributes
     
    // methods for references
   
    // methods for modeled operations
    public java.util.Collection<com.sap.tc.moin.testcases.case023.A23> collectA(java.util.Collection<? extends com.sap.tc.moin.testcases.case023.A23> source1, java.util.Collection<? extends com.sap.tc.moin.testcases.case023.A23> source2) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        java.util.List<java.lang.Object> parameterList = new java.util.ArrayList<java.lang.Object>(2);
        try {
            parameterList.add(source1);
            parameterList.add(source2);
            return (java.util.Collection<com.sap.tc.moin.testcases.case023.A23>)___invokeOperation(connection, 0, "4820126EDFCF5A931B4311DDB81200199904B925", parameterList); //$NON-NLS-1$
        } catch ( com.sap.tc.moin.repository.mmi.reflect.RefException ex ) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException( ex );
        }
    }

    
    // methods for internal modeled operations
    private java.util.Collection<com.sap.tc.moin.testcases.case023.A23> invoke__collectA(com.sap.tc.moin.repository.core.CoreConnection connection, java.util.Collection<? extends com.sap.tc.moin.testcases.case023.A23> source1, java.util.Collection<? extends com.sap.tc.moin.testcases.case023.A23> source2) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        // begin of implementation provided in tag org.omg.sap2mof.OperationCodeJava
        java.util.Set<com.sap.tc.moin.testcases.case023.A23> result = new java.util.HashSet<com.sap.tc.moin.testcases.case023.A23>();
        if (source1 != null) {
          result.addAll(source1);
        }
        if (source2 != null) {
          result.addAll(source2);
        }
        return result;
        // end of implementation provided in tag org.omg.sap2mof.OperationCodeJava
    }

    // reflective methods
    @Override
    public Object refInvokeOperation(com.sap.tc.moin.repository.core.CoreConnection connection, java.lang.String requestedOperation, java.util.List<? extends Object> args) throws com.sap.tc.moin.repository.mmi.reflect.RefException {
        if (requestedOperation == null) {
            throw new com.sap.tc.moin.repository.mmi.reflect.InvalidNameException(requestedOperation);
        }
        java.lang.Integer operationId = OPERATION_IDS.get(requestedOperation);
        if (operationId == null) {
            throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(requestedOperation, refMetaObject(), "refInvokeOperation(String)"); //$NON-NLS-1$
        }
        switch (operationId) {
                
            case 0:
                return ___invokeOperation( connection, operationId, "4820126EDFCF5A931B4311DDB81200199904B925", args ); //$NON-NLS-1$    
            default:
                throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(requestedOperation, refMetaObject(), "refInvokeOperation(String)"); //$NON-NLS-1$
        }
    }
    
    @Override
    public Object invoke___Operation(com.sap.tc.moin.repository.core.CoreConnection connection, int operationId, java.util.List<? extends Object> args) throws com.sap.tc.moin.repository.mmi.reflect.RefException {
        switch (operationId) {
                
            case 0:
                return invoke__collectA(connection, (java.util.Collection) args.get(0), (java.util.Collection) args.get(1));    
            default:
                throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException( operationId, refMetaObject( ), "invoke___Operation(int)"); //$NON-NLS-1$
        }
    
    }    

    // get the JMI interface
    public java.lang.Class<com.sap.tc.moin.testcases.case023.B23> get___JmiInterface() {
        return com.sap.tc.moin.testcases.case023.B23.class;
    }

    // to String
    protected String metaObjectToString() {
        return "com.sap.tc.moin.testcases.case023.B23 (Java Type)\ntestcases.case023.B23 (MOF Type)"; //$NON-NLS-1$
    }    
}