/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.testcases.case006.__impl;

public class ReferenceAtComponentWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<com.sap.tc.moin.testcases.case006.ReferenceAtComponent> implements com.sap.tc.moin.testcases.case006.ReferenceAtComponent,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ReferenceAtComponent wrapper
     */
    public ReferenceAtComponentWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.tc.moin.testcases.case006.__impl.ReferenceAtComponentImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private com.sap.tc.moin.testcases.case006.__impl.ReferenceAtComponentImpl getCastWrappedObject() {
        return (com.sap.tc.moin.testcases.case006.__impl.ReferenceAtComponentImpl) getWrappedObject();
    }

    public com.sap.tc.moin.testcases.case006.ReferenceAtComponent unwrap() {
        return (com.sap.tc.moin.testcases.case006.ReferenceAtComponent) getWrappedObject();
    }
    
    public boolean exists(com.sap.tc.moin.testcases.case006.C6 _Y, com.sap.tc.moin.testcases.case006.B6 _X) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Y), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _X));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Y), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _X)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.testcases.case006.C6 getY(com.sap.tc.moin.testcases.case006.B6 _X) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.testcases.case006.C6) wrapResult(getCastWrappedObject().getY(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _X)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.testcases.case006.C6) wrapResult(getCastWrappedObject().getY(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _X))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.testcases.case006.B6 getX(com.sap.tc.moin.testcases.case006.C6 _Y) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.testcases.case006.B6) wrapResult(getCastWrappedObject().getX(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Y)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.testcases.case006.B6) wrapResult(getCastWrappedObject().getX(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Y))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(com.sap.tc.moin.testcases.case006.C6 _Y, com.sap.tc.moin.testcases.case006.B6 _X) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Y), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _X));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Y), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _X)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(com.sap.tc.moin.testcases.case006.C6 _Y, com.sap.tc.moin.testcases.case006.B6 _X) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Y), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _X));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Y), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _X)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<com.sap.tc.moin.testcases.case006.ReferenceAtComponent> get___JmiInterface() {
        return com.sap.tc.moin.testcases.case006.ReferenceAtComponent.class;
    }

    protected String metaObjectToString() {
        return "com.sap.tc.moin.testcases.case006.ReferenceAtComponent (Java Type)\ntestcases.case006.ReferenceAtComponent (MOF Type)"; //$NON-NLS-1$
    }    
}