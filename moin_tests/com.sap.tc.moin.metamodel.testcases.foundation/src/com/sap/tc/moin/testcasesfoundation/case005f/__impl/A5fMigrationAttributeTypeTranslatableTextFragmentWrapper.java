/**
 * Generated by the MOIN Generator Version 3.0
 **/

package com.sap.tc.moin.testcasesfoundation.case005f.__impl;

public class A5fMigrationAttributeTypeTranslatableTextFragmentWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefObjectWrapperImpl<com.sap.tc.moin.testcasesfoundation.case005f.__impl.A5fMigrationAttributeTypeTranslatableTextFragmentImpl> implements com.sap.tc.moin.testcasesfoundation.case005f.A5fMigrationAttributeTypeTranslatableTextFragment,com.sap.tc.moin.repository.Partitionable {

    
    static {
    }

    public A5fMigrationAttributeTypeTranslatableTextFragmentWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, com.sap.tc.moin.testcasesfoundation.case005f.__impl.A5fMigrationAttributeTypeTranslatableTextFragmentImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private com.sap.tc.moin.testcasesfoundation.case005f.__impl.A5fMigrationAttributeTypeTranslatableTextFragmentImpl getCastWrappedObject() {
        return (com.sap.tc.moin.testcasesfoundation.case005f.__impl.A5fMigrationAttributeTypeTranslatableTextFragmentImpl) getWrappedObject();
    }
    
    private com.sap.tc.moin.testcasesfoundation.case005f.__impl.A5fMigrationAttributeTypeTranslatableTextFragmentImpl getCastWrappedObject(com.sap.tc.moin.repository.core.CorePartitionable resolved) {
        return (com.sap.tc.moin.testcasesfoundation.case005f.__impl.A5fMigrationAttributeTypeTranslatableTextFragmentImpl) resolved;
    }
    
    public com.sap.tc.moin.testcasesfoundation.case005f.__impl.A5fMigrationAttributeTypeTranslatableTextFragmentImpl unwrap() {
        return (com.sap.tc.moin.testcasesfoundation.case005f.__impl.A5fMigrationAttributeTypeTranslatableTextFragmentImpl) getWrappedObject();
    }
        
    // methods for attributes
    public com.sap.tc.moin.textverticalization.TranslatableTextFragment getTranslatableTextFragment() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        com.sap.tc.moin.repository.core.CorePartitionable resolved = mriReference.getIfResolved();
        if (resolved != null) {
            return getCastWrappedObject(resolved).getTranslatableTextFragment();
        }
            try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().getTranslatableTextFragment();
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().getTranslatableTextFragment(); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public void setTranslatableTextFragment(com.sap.tc.moin.textverticalization.TranslatableTextFragment newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    getCastWrappedObject().setTranslatableTextFragment(connection, newValue);
                }       
            }
            else {
                assertConnectionAlive();
                attachConnectionIfRequired();
                getCastWrappedObject().setTranslatableTextFragment(connection, newValue);
            } 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

    public com.sap.tc.moin.testcasesfoundation.case005f.structurebasedtexts.GeneralTranslatableTextFragment getGeneralTranslatableTextFragment() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        com.sap.tc.moin.repository.core.CorePartitionable resolved = mriReference.getIfResolved();
        if (resolved != null) {
            return getCastWrappedObject(resolved).getGeneralTranslatableTextFragment();
        }
            try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().getGeneralTranslatableTextFragment();
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().getGeneralTranslatableTextFragment(); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public void setGeneralTranslatableTextFragment(com.sap.tc.moin.testcasesfoundation.case005f.structurebasedtexts.GeneralTranslatableTextFragment newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    getCastWrappedObject().setGeneralTranslatableTextFragment(connection, newValue);
                }       
            }
            else {
                assertConnectionAlive();
                attachConnectionIfRequired();
                getCastWrappedObject().setGeneralTranslatableTextFragment(connection, newValue);
            } 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

    public com.sap.tc.moin.testcasesfoundation.case005f.structurebasedtexts.SpecializedTranslatableTextFragment getSpecializedTranslatableTextFragment() throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        com.sap.tc.moin.repository.core.CorePartitionable resolved = mriReference.getIfResolved();
        if (resolved != null) {
            return getCastWrappedObject(resolved).getSpecializedTranslatableTextFragment();
        }
            try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().getSpecializedTranslatableTextFragment();
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().getSpecializedTranslatableTextFragment(); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public void setSpecializedTranslatableTextFragment(com.sap.tc.moin.testcasesfoundation.case005f.structurebasedtexts.SpecializedTranslatableTextFragment newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    getCastWrappedObject().setSpecializedTranslatableTextFragment(connection, newValue);
                }       
            }
            else {
                assertConnectionAlive();
                attachConnectionIfRequired();
                getCastWrappedObject().setSpecializedTranslatableTextFragment(connection, newValue);
            } 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }

     
    // methods for references
   
    // methods for modeled operations
    
    // methods for internal modeled operations

    // reflective methods
    

    // get the JMI interface
    public java.lang.Class<com.sap.tc.moin.testcasesfoundation.case005f.A5fMigrationAttributeTypeTranslatableTextFragment> get___JmiInterface() {
        return com.sap.tc.moin.testcasesfoundation.case005f.A5fMigrationAttributeTypeTranslatableTextFragment.class;
    }

    // to String
    protected String metaObjectToString() {
        return "com.sap.tc.moin.testcasesfoundation.case005f.A5fMigrationAttributeTypeTranslatableTextFragment (Java Type)\ntestcasesfoundation.case005f.A5fMigrationAttributeTypeTranslatableTextFragment (MOF Type)"; //$NON-NLS-1$
    }    
}