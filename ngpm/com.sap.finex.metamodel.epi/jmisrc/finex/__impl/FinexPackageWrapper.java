/**
 * Generated by the MOIN Generator Version 3.0
 **/

package finex.__impl;

public class FinexPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<finex.__impl.FinexPackageImpl> implements finex.FinexPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The FinexPackage wrapper
     */
    public FinexPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, finex.__impl.FinexPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private finex.__impl.FinexPackageImpl getCastWrappedObject() {
        return (finex.__impl.FinexPackageImpl) getWrappedObject();
    }
    
    public finex.__impl.FinexPackageImpl unwrap() {
        return (finex.__impl.FinexPackageImpl) getWrappedObject();
    }
    
    public structure.StructurePackage getStructure()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (structure.StructurePackage) wrapResult(getCastWrappedObject().getStructure(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (structure.StructurePackage) wrapResult(getCastWrappedObject().getStructure(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavior.BehaviorPackage getBehavior()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavior.BehaviorPackage) wrapResult(getCastWrappedObject().getBehavior(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavior.BehaviorPackage) wrapResult(getCastWrappedObject().getBehavior(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public finex.modelmanagement.ModelmanagementPackage getModelmanagement()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (finex.modelmanagement.ModelmanagementPackage) wrapResult(getCastWrappedObject().getModelmanagement(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (finex.modelmanagement.ModelmanagementPackage) wrapResult(getCastWrappedObject().getModelmanagement(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    public java.lang.Class<finex.FinexPackage> get___JmiInterface() {
        return finex.FinexPackage.class;
    }
    
    protected String metaObjectToString() {
        return "finex.FinexPackage (Java Type)\nfinex (MOF Type)"; //$NON-NLS-1$
    }
}