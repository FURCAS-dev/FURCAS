/**
 * Generated by the MOIN Generator Version 3.0
 **/

package structure.__impl;

public class AssociationEndsWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<structure.AssociationEnds> implements structure.AssociationEnds,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The AssociationEnds wrapper
     */
    public AssociationEndsWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, structure.__impl.AssociationEndsImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private structure.__impl.AssociationEndsImpl getCastWrappedObject() {
        return (structure.__impl.AssociationEndsImpl) getWrappedObject();
    }

    public structure.AssociationEnds unwrap() {
        return (structure.AssociationEnds) getWrappedObject();
    }
    
    public boolean exists(structure.Field _Ends, structure.Association _Association) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Ends), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Association));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Ends), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Association)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.List getEnds(structure.Association _Association) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.List) wrapResult(getCastWrappedObject().getEnds(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Association)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.List) wrapResult(getCastWrappedObject().getEnds(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Association))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public structure.Association getAssociation(structure.Field _Ends) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (structure.Association) wrapResult(getCastWrappedObject().getAssociation(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Ends)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (structure.Association) wrapResult(getCastWrappedObject().getAssociation(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Ends))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(structure.Field _Ends, structure.Association _Association) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Ends), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Association));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Ends), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Association)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(structure.Field _Ends, structure.Association _Association) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Ends), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Association));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Ends), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Association)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<structure.AssociationEnds> get___JmiInterface() {
        return structure.AssociationEnds.class;
    }

    protected String metaObjectToString() {
        return "structure.AssociationEnds (Java Type)\nstructure.AssociationEnds (MOF Type)"; //$NON-NLS-1$
    }    
}