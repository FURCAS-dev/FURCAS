/**
 * Generated by the MOIN Generator Version 3.0
 **/

package structure.__impl;

public class AAssociationsClazzWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<structure.AAssociationsClazz> implements structure.AAssociationsClazz,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The AAssociationsClazz wrapper
     */
    public AAssociationsClazzWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, structure.__impl.AAssociationsClazzImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private structure.__impl.AAssociationsClazzImpl getCastWrappedObject() {
        return (structure.__impl.AAssociationsClazzImpl) getWrappedObject();
    }

    public structure.AAssociationsClazz unwrap() {
        return (structure.AAssociationsClazz) getWrappedObject();
    }
    
    public boolean exists(structure.Association _Associations, structure.FinexClass _Clazz) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Associations), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Clazz));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Associations), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Clazz)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getAssociations(structure.FinexClass _Clazz) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getAssociations(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Clazz)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getAssociations(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Clazz))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public structure.FinexClass getClazz(structure.Association _Associations) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (structure.FinexClass) wrapResult(getCastWrappedObject().getClazz(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Associations)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (structure.FinexClass) wrapResult(getCastWrappedObject().getClazz(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Associations))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(structure.Association _Associations, structure.FinexClass _Clazz) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Associations), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Clazz));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Associations), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Clazz)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(structure.Association _Associations, structure.FinexClass _Clazz) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Associations), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Clazz));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Associations), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Clazz)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<structure.AAssociationsClazz> get___JmiInterface() {
        return structure.AAssociationsClazz.class;
    }

    protected String metaObjectToString() {
        return "structure.AAssociationsClazz (Java Type)\nstructure.A_associations_clazz (MOF Type)"; //$NON-NLS-1$
    }    
}