/**
 * Generated by the MOIN Generator Version 3.0
 **/

package structure.__impl;

public class AFunctionsOwnerWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<structure.AFunctionsOwner> implements structure.AFunctionsOwner,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The AFunctionsOwner wrapper
     */
    public AFunctionsOwnerWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, structure.__impl.AFunctionsOwnerImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private structure.__impl.AFunctionsOwnerImpl getCastWrappedObject() {
        return (structure.__impl.AFunctionsOwnerImpl) getWrappedObject();
    }

    public structure.AFunctionsOwner unwrap() {
        return (structure.AFunctionsOwner) getWrappedObject();
    }
    
    public boolean exists(behavior.functions.Function _Functions, structure.FinexClass _Owner) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Functions), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Owner));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Functions), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Owner)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getFunctions(structure.FinexClass _Owner) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getFunctions(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Owner)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getFunctions(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Owner))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public structure.FinexClass getOwner(behavior.functions.Function _Functions) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (structure.FinexClass) wrapResult(getCastWrappedObject().getOwner(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Functions)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (structure.FinexClass) wrapResult(getCastWrappedObject().getOwner(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Functions))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(behavior.functions.Function _Functions, structure.FinexClass _Owner) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Functions), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Owner));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Functions), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Owner)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(behavior.functions.Function _Functions, structure.FinexClass _Owner) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Functions), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Owner));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Functions), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Owner)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<structure.AFunctionsOwner> get___JmiInterface() {
        return structure.AFunctionsOwner.class;
    }

    protected String metaObjectToString() {
        return "structure.AFunctionsOwner (Java Type)\nstructure.A_functions_owner (MOF Type)"; //$NON-NLS-1$
    }    
}