/**
 * Generated by the MOIN Generator Version 3.0
 **/

package structure.__impl;

public class ADeterminationDeterminationOfWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<structure.ADeterminationDeterminationOf> implements structure.ADeterminationDeterminationOf,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ADeterminationDeterminationOf wrapper
     */
    public ADeterminationDeterminationOfWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, structure.__impl.ADeterminationDeterminationOfImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private structure.__impl.ADeterminationDeterminationOfImpl getCastWrappedObject() {
        return (structure.__impl.ADeterminationDeterminationOfImpl) getWrappedObject();
    }

    public structure.ADeterminationDeterminationOf unwrap() {
        return (structure.ADeterminationDeterminationOf) getWrappedObject();
    }
    
    public boolean exists(behavior.expressions.Expression _Determination, structure.Field _DeterminationOf) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Determination), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DeterminationOf));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Determination), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DeterminationOf)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavior.expressions.Expression getDetermination(structure.Field _DeterminationOf) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavior.expressions.Expression) wrapResult(getCastWrappedObject().getDetermination(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DeterminationOf)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavior.expressions.Expression) wrapResult(getCastWrappedObject().getDetermination(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DeterminationOf))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public structure.Field getDeterminationOf(behavior.expressions.Expression _Determination) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (structure.Field) wrapResult(getCastWrappedObject().getDeterminationOf(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Determination)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (structure.Field) wrapResult(getCastWrappedObject().getDeterminationOf(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Determination))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(behavior.expressions.Expression _Determination, structure.Field _DeterminationOf) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Determination), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DeterminationOf));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Determination), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DeterminationOf)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(behavior.expressions.Expression _Determination, structure.Field _DeterminationOf) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Determination), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DeterminationOf));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Determination), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DeterminationOf)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<structure.ADeterminationDeterminationOf> get___JmiInterface() {
        return structure.ADeterminationDeterminationOf.class;
    }

    protected String metaObjectToString() {
        return "structure.ADeterminationDeterminationOf (Java Type)\nstructure.A_determination_determinationOf (MOF Type)"; //$NON-NLS-1$
    }    
}