/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavior.__impl;

public class BehaviorPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<behavior.__impl.BehaviorPackageImpl> implements behavior.BehaviorPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The BehaviorPackage wrapper
     */
    public BehaviorPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, behavior.__impl.BehaviorPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private behavior.__impl.BehaviorPackageImpl getCastWrappedObject() {
        return (behavior.__impl.BehaviorPackageImpl) getWrappedObject();
    }
    
    public behavior.__impl.BehaviorPackageImpl unwrap() {
        return (behavior.__impl.BehaviorPackageImpl) getWrappedObject();
    }
    
    public behavior.expressions.ExpressionsPackage getExpressions()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavior.expressions.ExpressionsPackage) wrapResult(getCastWrappedObject().getExpressions(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavior.expressions.ExpressionsPackage) wrapResult(getCastWrappedObject().getExpressions(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavior.actions.ActionsPackage getActions()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavior.actions.ActionsPackage) wrapResult(getCastWrappedObject().getActions(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavior.actions.ActionsPackage) wrapResult(getCastWrappedObject().getActions(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavior.functions.FunctionsPackage getFunctions()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavior.functions.FunctionsPackage) wrapResult(getCastWrappedObject().getFunctions(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavior.functions.FunctionsPackage) wrapResult(getCastWrappedObject().getFunctions(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    public java.lang.Class<behavior.BehaviorPackage> get___JmiInterface() {
        return behavior.BehaviorPackage.class;
    }
    
    protected String metaObjectToString() {
        return "behavior.BehaviorPackage (Java Type)\nbehavior (MOF Type)"; //$NON-NLS-1$
    }
}