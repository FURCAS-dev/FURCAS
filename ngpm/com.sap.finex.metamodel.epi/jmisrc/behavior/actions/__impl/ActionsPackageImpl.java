/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavior.actions.__impl;

public final class ActionsPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;

    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(26);
        FEATURE_IDS.put("Block", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("Statement", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("ExpressionStatement", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("StatementWithNestedBlock", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("Foreach", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("SingleBlockStatement", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("NamedValue", Integer.valueOf(6)); //$NON-NLS-1$
        FEATURE_IDS.put("NamedValueWithOptionalInitExpression", Integer.valueOf(7)); //$NON-NLS-1$
        FEATURE_IDS.put("Variable", Integer.valueOf(8)); //$NON-NLS-1$
        FEATURE_IDS.put("NamedValueDeclaration", Integer.valueOf(9)); //$NON-NLS-1$
        FEATURE_IDS.put("Assignment", Integer.valueOf(10)); //$NON-NLS-1$
        FEATURE_IDS.put("StatementWithArgument", Integer.valueOf(11)); //$NON-NLS-1$
        FEATURE_IDS.put("A_statements_block", Integer.valueOf(12)); //$NON-NLS-1$
        FEATURE_IDS.put("A_expression_expressionStatement", Integer.valueOf(13)); //$NON-NLS-1$
        FEATURE_IDS.put("A_nestedBlocks_owningStatement", Integer.valueOf(14)); //$NON-NLS-1$
        FEATURE_IDS.put("A_initExpression_namedValueWithOptionalInitExpression", Integer.valueOf(15)); //$NON-NLS-1$
        FEATURE_IDS.put("A_namedValue_namedValueDeclaration", Integer.valueOf(16)); //$NON-NLS-1$
        FEATURE_IDS.put("A_namedValues_block", Integer.valueOf(17)); //$NON-NLS-1$
        FEATURE_IDS.put("A_assignTo_assignment", Integer.valueOf(18)); //$NON-NLS-1$
    }

    // constructors    
    public ActionsPackageImpl()
    {
        super();
    }
    public ActionsPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    // internal structure type creators
    // nested packages
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getBlock(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Block"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getStatement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Statement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getExpressionStatement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ExpressionStatement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getStatementWithNestedBlock(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "StatementWithNestedBlock"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getForeach(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Foreach"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSingleBlockStatement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "SingleBlockStatement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getNamedValue(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "NamedValue"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getNamedValueWithOptionalInitExpression(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "NamedValueWithOptionalInitExpression"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getVariable(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Variable"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getNamedValueDeclaration(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "NamedValueDeclaration"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAssignment(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Assignment"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getStatementWithArgument(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "StatementWithArgument"); //$NON-NLS-1$
    }
    // associations
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAStatementsBlock(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_statements_block"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAExpressionExpressionStatement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_expression_expressionStatement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getANestedBlocksOwningStatement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_nestedBlocks_owningStatement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAInitExpressionNamedValueWithOptionalInitExpression(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_initExpression_namedValueWithOptionalInitExpression"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getANamedValueNamedValueDeclaration(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_namedValue_namedValueDeclaration"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getANamedValuesBlock(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_namedValues_block"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAAssignToAssignment(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_assignTo_assignment"); //$NON-NLS-1$
    }
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavior.actions.__impl.BlockImpl")); //$NON-NLS-1$
                case 1:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 2:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavior.actions.__impl.ExpressionStatementImpl")); //$NON-NLS-1$
                case 3:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 4:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavior.actions.__impl.ForeachImpl")); //$NON-NLS-1$
                case 5:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 6:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 7:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 8:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavior.actions.__impl.VariableImpl")); //$NON-NLS-1$
                case 9:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavior.actions.__impl.NamedValueDeclarationImpl")); //$NON-NLS-1$
                case 10:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavior.actions.__impl.AssignmentImpl")); //$NON-NLS-1$
                case 11:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 12:
                    return new behavior.actions.__impl.AStatementsBlockImpl(workspace, mofId, immediatePackage, metaObject);
                case 13:
                    return new behavior.actions.__impl.AExpressionExpressionStatementImpl(workspace, mofId, immediatePackage, metaObject);
                case 14:
                    return new behavior.actions.__impl.ANestedBlocksOwningStatementImpl(workspace, mofId, immediatePackage, metaObject);
                case 15:
                    return new behavior.actions.__impl.AInitExpressionNamedValueWithOptionalInitExpressionImpl(workspace, mofId, immediatePackage, metaObject);
                case 16:
                    return new behavior.actions.__impl.ANamedValueNamedValueDeclarationImpl(workspace, mofId, immediatePackage, metaObject);
                case 17:
                    return new behavior.actions.__impl.ANamedValuesBlockImpl(workspace, mofId, immediatePackage, metaObject);
                case 18:
                    return new behavior.actions.__impl.AAssignToAssignmentImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<behavior.actions.ActionsPackage> get___JmiInterface() {
        return behavior.actions.ActionsPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(0);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefPackageAndName rpan = null;
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(12);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
            name = "Block"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavior.actions.Block"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Statement"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavior.actions.Statement"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ExpressionStatement"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavior.actions.ExpressionStatement"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "StatementWithNestedBlock"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavior.actions.StatementWithNestedBlock"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Foreach"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavior.actions.Foreach"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "SingleBlockStatement"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavior.actions.SingleBlockStatement"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "NamedValue"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavior.actions.NamedValue"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "NamedValueWithOptionalInitExpression"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavior.actions.NamedValueWithOptionalInitExpression"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Variable"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavior.actions.Variable"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "NamedValueDeclaration"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavior.actions.NamedValueDeclaration"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Assignment"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavior.actions.Assignment"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "StatementWithArgument"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavior.actions.StatementWithArgument"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(7);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefAssociationAndName raan = null;
            name = "A_statements_block"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavior.actions.AStatementsBlock"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_expression_expressionStatement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavior.actions.AExpressionExpressionStatement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_nestedBlocks_owningStatement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavior.actions.ANestedBlocksOwningStatement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_initExpression_namedValueWithOptionalInitExpression"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavior.actions.AInitExpressionNamedValueWithOptionalInitExpression"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_namedValue_namedValueDeclaration"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavior.actions.ANamedValueNamedValueDeclaration"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_namedValues_block"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavior.actions.ANamedValuesBlock"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_assignTo_assignment"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavior.actions.AAssignToAssignment"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<behavior.actions.__impl.ActionsPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new behavior.actions.__impl.ActionsPackageWrapper(conn, this, synchronize);
    }

}