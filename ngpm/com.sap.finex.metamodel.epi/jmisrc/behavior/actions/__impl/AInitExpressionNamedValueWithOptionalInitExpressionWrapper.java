/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavior.actions.__impl;

public class AInitExpressionNamedValueWithOptionalInitExpressionWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<behavior.actions.AInitExpressionNamedValueWithOptionalInitExpression> implements behavior.actions.AInitExpressionNamedValueWithOptionalInitExpression,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The AInitExpressionNamedValueWithOptionalInitExpression wrapper
     */
    public AInitExpressionNamedValueWithOptionalInitExpressionWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, behavior.actions.__impl.AInitExpressionNamedValueWithOptionalInitExpressionImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private behavior.actions.__impl.AInitExpressionNamedValueWithOptionalInitExpressionImpl getCastWrappedObject() {
        return (behavior.actions.__impl.AInitExpressionNamedValueWithOptionalInitExpressionImpl) getWrappedObject();
    }

    public behavior.actions.AInitExpressionNamedValueWithOptionalInitExpression unwrap() {
        return (behavior.actions.AInitExpressionNamedValueWithOptionalInitExpression) getWrappedObject();
    }
    
    public boolean exists(behavior.expressions.Expression _InitExpression, behavior.actions.NamedValueWithOptionalInitExpression _NamedValueWithOptionalInitExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _InitExpression), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _NamedValueWithOptionalInitExpression));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _InitExpression), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _NamedValueWithOptionalInitExpression)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavior.expressions.Expression getInitExpression(behavior.actions.NamedValueWithOptionalInitExpression _NamedValueWithOptionalInitExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavior.expressions.Expression) wrapResult(getCastWrappedObject().getInitExpression(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _NamedValueWithOptionalInitExpression)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavior.expressions.Expression) wrapResult(getCastWrappedObject().getInitExpression(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _NamedValueWithOptionalInitExpression))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavior.actions.NamedValueWithOptionalInitExpression getNamedValueWithOptionalInitExpression(behavior.expressions.Expression _InitExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavior.actions.NamedValueWithOptionalInitExpression) wrapResult(getCastWrappedObject().getNamedValueWithOptionalInitExpression(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _InitExpression)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavior.actions.NamedValueWithOptionalInitExpression) wrapResult(getCastWrappedObject().getNamedValueWithOptionalInitExpression(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _InitExpression))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(behavior.expressions.Expression _InitExpression, behavior.actions.NamedValueWithOptionalInitExpression _NamedValueWithOptionalInitExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _InitExpression), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _NamedValueWithOptionalInitExpression));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _InitExpression), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _NamedValueWithOptionalInitExpression)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(behavior.expressions.Expression _InitExpression, behavior.actions.NamedValueWithOptionalInitExpression _NamedValueWithOptionalInitExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _InitExpression), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _NamedValueWithOptionalInitExpression));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _InitExpression), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _NamedValueWithOptionalInitExpression)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<behavior.actions.AInitExpressionNamedValueWithOptionalInitExpression> get___JmiInterface() {
        return behavior.actions.AInitExpressionNamedValueWithOptionalInitExpression.class;
    }

    protected String metaObjectToString() {
        return "behavior.actions.AInitExpressionNamedValueWithOptionalInitExpression (Java Type)\nbehavior.actions.A_initExpression_namedValueWithOptionalInitExpression (MOF Type)"; //$NON-NLS-1$
    }    
}