/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavior.expressions;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface WithArgument extends com.sap.tc.moin.repository.mmi.reflect.RefObject {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, behavior.expressions.WithArgument> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, behavior.expressions.WithArgument>("E0003E7B686A75D0BA2411DEC697001CBF0234BB", "sap.com/finex/metamodel", "behavior", "expressions", "WithArgument"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // references
    public behavior.expressions.Expression getArgument() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setArgument(behavior.expressions.Expression newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // operations
    public structure.Type getEnclosingTypeFromWithArgument() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public structure.Type getImplicitContextTypeFromWithArgument() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.WithArgument,behavior.expressions.Expression> __argument;
        /**
         * Returns the descriptor for the <code>argument</code> reference.
         * @return  the descriptor for the <code>argument</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.WithArgument,behavior.expressions.Expression> ARGUMENT( ) {
            if ( __argument == null ) {
                __argument = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.WithArgument,behavior.expressions.Expression>( "E0003E7B686804D0BA2411DECAC2001CBF0234BB", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "WithArgument", "argument" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __argument;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.WithArgument,structure.Type> __getEnclosingTypeFromWithArgument;
        /**
         * Returns the descriptor for the <code>getEnclosingTypeFromWithArgument</code> operation.
         * @return  the descriptor for the <code>getEnclosingTypeFromWithArgument</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.WithArgument,structure.Type> GET_ENCLOSING_TYPE_FROM_WITH_ARGUMENT( ) {
            if ( __getEnclosingTypeFromWithArgument == null ) {
                __getEnclosingTypeFromWithArgument = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.WithArgument,structure.Type>( "E0003E7B75D804C1D03C11DEB0E70019D29902CC", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "WithArgument", "getEnclosingTypeFromWithArgument" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __getEnclosingTypeFromWithArgument;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.WithArgument,structure.Type> __getImplicitContextTypeFromWithArgument;
        /**
         * Returns the descriptor for the <code>getImplicitContextTypeFromWithArgument</code> operation.
         * @return  the descriptor for the <code>getImplicitContextTypeFromWithArgument</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.WithArgument,structure.Type> GET_IMPLICIT_CONTEXT_TYPE_FROM_WITH_ARGUMENT( ) {
            if ( __getImplicitContextTypeFromWithArgument == null ) {
                __getImplicitContextTypeFromWithArgument = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.WithArgument,structure.Type>( "E0003E7B98495151D29711DE8ADD00155883529C", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "WithArgument", "getImplicitContextTypeFromWithArgument" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __getImplicitContextTypeFromWithArgument;
        }
    }
}    