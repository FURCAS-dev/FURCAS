/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavior.expressions;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface Expression extends structure.TypedElement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, behavior.expressions.Expression> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, behavior.expressions.Expression>("E0003E7B7484E77CB1A911DEBA5500155883529C", "sap.com/finex/metamodel", "behavior", "expressions", "Expression"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // references
    public behavior.expressions.BinaryOperator getLeftOf() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setLeftOf(behavior.expressions.BinaryOperator newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public behavior.expressions.BinaryOperator getRightOf() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setRightOf(behavior.expressions.BinaryOperator newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public behavior.expressions.FilterExpression getConditionOf() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setConditionOf(behavior.expressions.FilterExpression newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public behavior.expressions.UnaryOperator getOperandOf() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setOperandOf(behavior.expressions.UnaryOperator newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public behavior.expressions.WithArgument getWithArgument() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setWithArgument(behavior.expressions.WithArgument newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public behavior.expressions.Alias getAlias() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAlias(behavior.expressions.Alias newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // operations
    public boolean isNumeric() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isBoolean() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public structure.Type numericPostType(java.lang.String operator, structure.Type preType1, structure.Type preType2) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Determines the class within which this expression occurs. Usually, the class's fields and methods are in scope for an expression definition.
     */
    public structure.Type getEnclosingType() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isSideEffectFree() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * An expression occurs at some place in a program. This place (usually lexically) determines what the implicit context is for the expression. This implicit context is the object on which unqualified function or action calls as well as field accesses are based on. It's a bit like the implicit "this" pointer in languages such as Java or C++. However, other than in Java or C++ (and more like in OCL), there can be language constructs within an entity (class) that change what the implicit context is.
     * <p>
     * For example, if there is a .each() construct that executes a block for each element of a multi-object, the block's implicit context is determined by the value on which .each() is invoked. If in a path expression a condition is specified, inside the condition the implicit context is the element to which the condition will be applied.
     * <p>
     * This method determines the implicit context's type for this expression.
     */
    public structure.Type getImplicitContextType() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<behavior.expressions.Alias> getAllAliases() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<behavior.expressions.Tuple> getTuplesWhereThisIsFieldInitializer() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>type</code> reference.
         * @return  the descriptor for the <code>type</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,structure.TypedElement,structure.Type> TYPE( ) {
            return structure.TypedElement.DESCRIPTORS.TYPE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.BinaryOperator> __leftOf;
        /**
         * Returns the descriptor for the <code>leftOf</code> reference.
         * @return  the descriptor for the <code>leftOf</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.BinaryOperator> LEFT_OF( ) {
            if ( __leftOf == null ) {
                __leftOf = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.BinaryOperator>( "E0003E7BC45007B3B74111DEA08B00155883529C", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "Expression", "leftOf" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __leftOf;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.BinaryOperator> __rightOf;
        /**
         * Returns the descriptor for the <code>rightOf</code> reference.
         * @return  the descriptor for the <code>rightOf</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.BinaryOperator> RIGHT_OF( ) {
            if ( __rightOf == null ) {
                __rightOf = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.BinaryOperator>( "E0003E7BC45007B4B74111DEB1BC00155883529C", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "Expression", "rightOf" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __rightOf;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.FilterExpression> __conditionOf;
        /**
         * Returns the descriptor for the <code>conditionOf</code> reference.
         * @return  the descriptor for the <code>conditionOf</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.FilterExpression> CONDITION_OF( ) {
            if ( __conditionOf == null ) {
                __conditionOf = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.FilterExpression>( "E0003E7BC45007B5B74111DEB3B900155883529C", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "Expression", "conditionOf" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __conditionOf;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.UnaryOperator> __operandOf;
        /**
         * Returns the descriptor for the <code>operandOf</code> reference.
         * @return  the descriptor for the <code>operandOf</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.UnaryOperator> OPERAND_OF( ) {
            if ( __operandOf == null ) {
                __operandOf = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.UnaryOperator>( "E0003E7BC45007B6B74111DE96FF00155883529C", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "Expression", "operandOf" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __operandOf;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.WithArgument> __withArgument;
        /**
         * Returns the descriptor for the <code>withArgument</code> reference.
         * @return  the descriptor for the <code>withArgument</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.WithArgument> WITH_ARGUMENT( ) {
            if ( __withArgument == null ) {
                __withArgument = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.WithArgument>( "E0003E7B75D349D0D03C11DEB3B80019D29902CC", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "Expression", "withArgument" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __withArgument;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.Alias> __alias;
        /**
         * Returns the descriptor for the <code>alias</code> reference.
         * @return  the descriptor for the <code>alias</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.Alias> ALIAS( ) {
            if ( __alias == null ) {
                __alias = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.Alias>( "E0003E7B680E6A20D2F111DEC0770019D29902CC", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "Expression", "alias" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __alias;
        }
        /**
         * Returns the descriptor for the <code>getImpliedType</code> operation.
         * @return  the descriptor for the <code>getImpliedType</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,structure.TypedElement,structure.Type> GET_IMPLIED_TYPE( ) {
            return structure.TypedElement.DESCRIPTORS.GET_IMPLIED_TYPE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.lang.Boolean> __isNumeric;
        /**
         * Returns the descriptor for the <code>isNumeric</code> operation.
         * @return  the descriptor for the <code>isNumeric</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.lang.Boolean> IS_NUMERIC( ) {
            if ( __isNumeric == null ) {
                __isNumeric = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.lang.Boolean>( "E0003E7BDB8B1E71B27C11DEB93A00155883529C", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "Expression", "isNumeric" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __isNumeric;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.lang.Boolean> __isBoolean;
        /**
         * Returns the descriptor for the <code>isBoolean</code> operation.
         * @return  the descriptor for the <code>isBoolean</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.lang.Boolean> IS_BOOLEAN( ) {
            if ( __isBoolean == null ) {
                __isBoolean = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.lang.Boolean>( "E0003E7BDB8D8F70B27C11DEB87100155883529C", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "Expression", "isBoolean" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __isBoolean;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,structure.Type> __numericPostType;
        /**
         * Returns the descriptor for the <code>numericPostType</code> operation.
         * @return  the descriptor for the <code>numericPostType</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,structure.Type> NUMERIC_POST_TYPE( ) {
            if ( __numericPostType == null ) {
                __numericPostType = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,structure.Type>( "E0003E7BDB6760A3B2BA11DEB0810019D29902CC", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "Expression", "numericPostType" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __numericPostType;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,structure.Type> __getEnclosingType;
        /**
         * Returns the descriptor for the <code>getEnclosingType</code> operation.
         * @return  the descriptor for the <code>getEnclosingType</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,structure.Type> GET_ENCLOSING_TYPE( ) {
            if ( __getEnclosingType == null ) {
                __getEnclosingType = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,structure.Type>( "E0003E7BC45BEE91B74111DE872100155883529C", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "Expression", "getEnclosingType" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __getEnclosingType;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.lang.Boolean> __isSideEffectFree;
        /**
         * Returns the descriptor for the <code>isSideEffectFree</code> operation.
         * @return  the descriptor for the <code>isSideEffectFree</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.lang.Boolean> IS_SIDE_EFFECT_FREE( ) {
            if ( __isSideEffectFree == null ) {
                __isSideEffectFree = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.lang.Boolean>( "E0003E7BEAB6CF01B96811DEB969001A6BCDC3B3", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "Expression", "isSideEffectFree" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __isSideEffectFree;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,structure.Type> __getImplicitContextType;
        /**
         * Returns the descriptor for the <code>getImplicitContextType</code> operation.
         * @return  the descriptor for the <code>getImplicitContextType</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,structure.Type> GET_IMPLICIT_CONTEXT_TYPE( ) {
            if ( __getImplicitContextType == null ) {
                __getImplicitContextType = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,structure.Type>( "E0003E7B9846E051D29711DE801F00155883529C", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "Expression", "getImplicitContextType" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __getImplicitContextType;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.util.Collection<behavior.expressions.Alias>> __getAllAliases;
        /**
         * Returns the descriptor for the <code>getAllAliases</code> operation.
         * @return  the descriptor for the <code>getAllAliases</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.util.Collection<behavior.expressions.Alias>> GET_ALL_ALIASES( ) {
            if ( __getAllAliases == null ) {
                __getAllAliases = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.util.Collection<behavior.expressions.Alias>>( "E0003E7B680E6A22D2F111DE8CC20019D29902CC", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "Expression", "getAllAliases" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __getAllAliases;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.util.Collection<behavior.expressions.Tuple>> __getTuplesWhereThisIsFieldInitializer;
        /**
         * Returns the descriptor for the <code>getTuplesWhereThisIsFieldInitializer</code> operation.
         * @return  the descriptor for the <code>getTuplesWhereThisIsFieldInitializer</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.util.Collection<behavior.expressions.Tuple>> GET_TUPLES_WHERE_THIS_IS_FIELD_INITIALIZER( ) {
            if ( __getTuplesWhereThisIsFieldInitializer == null ) {
                __getTuplesWhereThisIsFieldInitializer = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.util.Collection<behavior.expressions.Tuple>>( "E0003E7B9B8C5CA0DA1111DEB6820019D29902CC", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "Expression", "getTuplesWhereThisIsFieldInitializer" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __getTuplesWhereThisIsFieldInitializer;
        }
    }
}    