/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavior.expressions.oql.__impl;

public class OqlPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<behavior.expressions.oql.__impl.OqlPackageImpl> implements behavior.expressions.oql.OqlPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The OqlPackage wrapper
     */
    public OqlPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, behavior.expressions.oql.__impl.OqlPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private behavior.expressions.oql.__impl.OqlPackageImpl getCastWrappedObject() {
        return (behavior.expressions.oql.__impl.OqlPackageImpl) getWrappedObject();
    }
    
    public behavior.expressions.oql.__impl.OqlPackageImpl unwrap() {
        return (behavior.expressions.oql.__impl.OqlPackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getOqlQuery()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getOqlQuery(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getOqlQuery(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getFromClause()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getFromClause(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getFromClause(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavior.expressions.oql.AFromClausesFromClauseOfOqlQuery getAFromClausesFromClauseOfOqlQuery()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavior.expressions.oql.AFromClausesFromClauseOfOqlQuery) wrapResult(getCastWrappedObject().getAFromClausesFromClauseOfOqlQuery(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavior.expressions.oql.AFromClausesFromClauseOfOqlQuery) wrapResult(getCastWrappedObject().getAFromClausesFromClauseOfOqlQuery(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavior.expressions.oql.AConditionConditionOfOqlQuery getAConditionConditionOfOqlQuery()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavior.expressions.oql.AConditionConditionOfOqlQuery) wrapResult(getCastWrappedObject().getAConditionConditionOfOqlQuery(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavior.expressions.oql.AConditionConditionOfOqlQuery) wrapResult(getCastWrappedObject().getAConditionConditionOfOqlQuery(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavior.expressions.oql.AFromExpressionFromClause getAFromExpressionFromClause()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavior.expressions.oql.AFromExpressionFromClause) wrapResult(getCastWrappedObject().getAFromExpressionFromClause(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavior.expressions.oql.AFromExpressionFromClause) wrapResult(getCastWrappedObject().getAFromExpressionFromClause(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavior.expressions.oql.AAliasFromClause getAAliasFromClause()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavior.expressions.oql.AAliasFromClause) wrapResult(getCastWrappedObject().getAAliasFromClause(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavior.expressions.oql.AAliasFromClause) wrapResult(getCastWrappedObject().getAAliasFromClause(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    public java.lang.Class<behavior.expressions.oql.OqlPackage> get___JmiInterface() {
        return behavior.expressions.oql.OqlPackage.class;
    }
    
    protected String metaObjectToString() {
        return "behavior.expressions.oql.OqlPackage (Java Type)\nbehavior.expressions.oql (MOF Type)"; //$NON-NLS-1$
    }
}