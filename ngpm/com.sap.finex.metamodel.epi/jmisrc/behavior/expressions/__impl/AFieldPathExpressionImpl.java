/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavior.expressions.__impl;

public final class AFieldPathExpressionImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationImpl
{
    // default constructor
    public AFieldPathExpressionImpl() {
        super();
    }

    // specific constructor
    public AFieldPathExpressionImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Field, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _PathExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return exists(get___CurrentConnection(), _Field, _PathExpression);
    }
    public boolean exists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Field, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _PathExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return ___existsMult1( connection, _PathExpression, _Field, "E0003E7BA21E5A00B74811DE9DB300155883529C"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefBaseObject getField(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _PathExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getField(get___CurrentConnection(), _PathExpression);
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefBaseObject getField(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _PathExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) ___getElementAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _PathExpression, "E0003E7BA21E5A00B74811DE9DB300155883529C"); //$NON-NLS-1$
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getPathExpression(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Field) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getPathExpression(get___CurrentConnection(), _Field);
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getPathExpression(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Field) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject>) ___queryElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _Field, get___EndAndMetaObject( 0 ) );
    }
    public boolean add(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Field, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _PathExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_Field, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_PathExpression);
    }
    public boolean add(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Field, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _PathExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Field, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_PathExpression);
    }
    public boolean remove(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Field, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _PathExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_Field, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_PathExpression);
    }
    public boolean remove(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Field, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _PathExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Field, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_PathExpression);
    }
    public boolean refLinkExists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefObject firstEnd, com.sap.tc.moin.repository.mmi.reflect.RefObject secondEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        if ( firstEnd == null || secondEnd == null ) { return false; }
        checkTypesForRefLinkExists( connection, firstEnd, secondEnd );
        return exists( connection, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) firstEnd, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) secondEnd );
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<behavior.expressions.AFieldPathExpression> get___JmiInterface() {
        return behavior.expressions.AFieldPathExpression.class;
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<behavior.expressions.AFieldPathExpression> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new behavior.expressions.__impl.AFieldPathExpressionWrapper(conn, this, synchronize);
    }
}