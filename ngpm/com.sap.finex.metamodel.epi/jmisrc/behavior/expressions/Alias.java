/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavior.expressions;

/**
 * An expression can be given an alias name which later can be used in a .tuple() expression when converting an expression tree into a tuple.
 * This interface is not intended to be implemented by clients.
 */
public interface Alias extends finex.modelmanagement.NamedElement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, behavior.expressions.Alias> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, behavior.expressions.Alias>("E0003E7B68132511D2F111DEC86C0019D29902CC", "sap.com/finex/metamodel", "behavior", "expressions", "Alias"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // references
    public behavior.expressions.Expression getAliasFor() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAliasFor(behavior.expressions.Expression newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,finex.modelmanagement.NamedElement,java.lang.String> NAME( ) {
            return finex.modelmanagement.NamedElement.DESCRIPTORS.NAME( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Alias,behavior.expressions.Expression> __aliasFor;
        /**
         * Returns the descriptor for the <code>aliasFor</code> reference.
         * @return  the descriptor for the <code>aliasFor</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Alias,behavior.expressions.Expression> ALIAS_FOR( ) {
            if ( __aliasFor == null ) {
                __aliasFor = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Alias,behavior.expressions.Expression>( "E0003E7B68132510D2F111DE88120019D29902CC", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "Alias", "aliasFor" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __aliasFor;
        }
    }
}    