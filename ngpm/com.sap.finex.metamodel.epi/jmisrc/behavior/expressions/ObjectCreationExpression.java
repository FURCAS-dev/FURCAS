/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavior.expressions;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface ObjectCreationExpression extends behavior.expressions.Expression {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, behavior.expressions.ObjectCreationExpression> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, behavior.expressions.ObjectCreationExpression>("E0003E7B5D7C25C0D38211DEC97A001A6BCDC3B3", "sap.com/finex/metamodel", "behavior", "expressions", "ObjectCreationExpression"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // references
    public structure.FinexClass getClassToInstantiate() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setClassToInstantiate(structure.FinexClass newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<behavior.expressions.FieldInitializer> getFieldInitializers() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>type</code> reference.
         * @return  the descriptor for the <code>type</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,structure.TypedElement,structure.Type> TYPE( ) {
            return structure.TypedElement.DESCRIPTORS.TYPE( );
        }
        /**
         * Returns the descriptor for the <code>leftOf</code> reference.
         * @return  the descriptor for the <code>leftOf</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.BinaryOperator> LEFT_OF( ) {
            return behavior.expressions.Expression.DESCRIPTORS.LEFT_OF( );
        }
        /**
         * Returns the descriptor for the <code>rightOf</code> reference.
         * @return  the descriptor for the <code>rightOf</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.BinaryOperator> RIGHT_OF( ) {
            return behavior.expressions.Expression.DESCRIPTORS.RIGHT_OF( );
        }
        /**
         * Returns the descriptor for the <code>conditionOf</code> reference.
         * @return  the descriptor for the <code>conditionOf</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.FilterExpression> CONDITION_OF( ) {
            return behavior.expressions.Expression.DESCRIPTORS.CONDITION_OF( );
        }
        /**
         * Returns the descriptor for the <code>operandOf</code> reference.
         * @return  the descriptor for the <code>operandOf</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.UnaryOperator> OPERAND_OF( ) {
            return behavior.expressions.Expression.DESCRIPTORS.OPERAND_OF( );
        }
        /**
         * Returns the descriptor for the <code>withArgument</code> reference.
         * @return  the descriptor for the <code>withArgument</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.WithArgument> WITH_ARGUMENT( ) {
            return behavior.expressions.Expression.DESCRIPTORS.WITH_ARGUMENT( );
        }
        /**
         * Returns the descriptor for the <code>alias</code> reference.
         * @return  the descriptor for the <code>alias</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.Expression,behavior.expressions.Alias> ALIAS( ) {
            return behavior.expressions.Expression.DESCRIPTORS.ALIAS( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.ObjectCreationExpression,structure.FinexClass> __classToInstantiate;
        /**
         * Returns the descriptor for the <code>classToInstantiate</code> reference.
         * @return  the descriptor for the <code>classToInstantiate</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.ObjectCreationExpression,structure.FinexClass> CLASS_TO_INSTANTIATE( ) {
            if ( __classToInstantiate == null ) {
                __classToInstantiate = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.ObjectCreationExpression,structure.FinexClass>( "E0003E7B5D61E700D38211DECC9B001A6BCDC3B3", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "ObjectCreationExpression", "classToInstantiate" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __classToInstantiate;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.ObjectCreationExpression,java.util.Collection<behavior.expressions.FieldInitializer>> __fieldInitializers;
        /**
         * Returns the descriptor for the <code>fieldInitializers</code> reference.
         * @return  the descriptor for the <code>fieldInitializers</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.ObjectCreationExpression,java.util.Collection<behavior.expressions.FieldInitializer>> FIELD_INITIALIZERS( ) {
            if ( __fieldInitializers == null ) {
                __fieldInitializers = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavior.expressions.ObjectCreationExpression,java.util.Collection<behavior.expressions.FieldInitializer>>( "E0003E7B9F8BB600D38811DE88C9001A6BCDC3B3", "sap.com/finex/metamodel", new java.lang.String[] { "behavior", "expressions", "ObjectCreationExpression", "fieldInitializers" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __fieldInitializers;
        }
        /**
         * Returns the descriptor for the <code>getImpliedType</code> operation.
         * @return  the descriptor for the <code>getImpliedType</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,structure.TypedElement,structure.Type> GET_IMPLIED_TYPE( ) {
            return structure.TypedElement.DESCRIPTORS.GET_IMPLIED_TYPE( );
        }
        /**
         * Returns the descriptor for the <code>isNumeric</code> operation.
         * @return  the descriptor for the <code>isNumeric</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.lang.Boolean> IS_NUMERIC( ) {
            return behavior.expressions.Expression.DESCRIPTORS.IS_NUMERIC( );
        }
        /**
         * Returns the descriptor for the <code>isBoolean</code> operation.
         * @return  the descriptor for the <code>isBoolean</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.lang.Boolean> IS_BOOLEAN( ) {
            return behavior.expressions.Expression.DESCRIPTORS.IS_BOOLEAN( );
        }
        /**
         * Returns the descriptor for the <code>numericPostType</code> operation.
         * @return  the descriptor for the <code>numericPostType</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,structure.Type> NUMERIC_POST_TYPE( ) {
            return behavior.expressions.Expression.DESCRIPTORS.NUMERIC_POST_TYPE( );
        }
        /**
         * Returns the descriptor for the <code>getEnclosingType</code> operation.
         * @return  the descriptor for the <code>getEnclosingType</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,structure.Type> GET_ENCLOSING_TYPE( ) {
            return behavior.expressions.Expression.DESCRIPTORS.GET_ENCLOSING_TYPE( );
        }
        /**
         * Returns the descriptor for the <code>isSideEffectFree</code> operation.
         * @return  the descriptor for the <code>isSideEffectFree</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.lang.Boolean> IS_SIDE_EFFECT_FREE( ) {
            return behavior.expressions.Expression.DESCRIPTORS.IS_SIDE_EFFECT_FREE( );
        }
        /**
         * Returns the descriptor for the <code>getImplicitContextType</code> operation.
         * @return  the descriptor for the <code>getImplicitContextType</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,structure.Type> GET_IMPLICIT_CONTEXT_TYPE( ) {
            return behavior.expressions.Expression.DESCRIPTORS.GET_IMPLICIT_CONTEXT_TYPE( );
        }
        /**
         * Returns the descriptor for the <code>getAllAliases</code> operation.
         * @return  the descriptor for the <code>getAllAliases</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.util.Collection<behavior.expressions.Alias>> GET_ALL_ALIASES( ) {
            return behavior.expressions.Expression.DESCRIPTORS.GET_ALL_ALIASES( );
        }
        /**
         * Returns the descriptor for the <code>getTuplesWhereThisIsFieldInitializer</code> operation.
         * @return  the descriptor for the <code>getTuplesWhereThisIsFieldInitializer</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavior.expressions.Expression,java.util.Collection<behavior.expressions.Tuple>> GET_TUPLES_WHERE_THIS_IS_FIELD_INITIALIZER( ) {
            return behavior.expressions.Expression.DESCRIPTORS.GET_TUPLES_WHERE_THIS_IS_FIELD_INITIALIZER( );
        }
    }
}    