/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavior.expressions;
/**
 * This interface is not intended to be implemented by clients.
 */
public interface AArgumentWithArgument extends com.sap.tc.moin.repository.mmi.reflect.RefAssociation
{
    // association extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.AssociationDescriptor<behavior.expressions.AArgumentWithArgument> ASSOCIATION_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.AssociationDescriptor<behavior.expressions.AArgumentWithArgument>("E0003E7B686A75D3BA2411DEAACD001CBF0234BB", "sap.com/finex/metamodel", "behavior", "expressions", "A_argument_withArgument"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 


    // association interface
    public boolean exists(behavior.expressions.Expression _Argument, behavior.expressions.WithArgument _WithArgument) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public behavior.expressions.Expression getArgument(behavior.expressions.WithArgument _WithArgument) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public behavior.expressions.WithArgument getWithArgument(behavior.expressions.Expression _Argument) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean add(behavior.expressions.Expression _Argument, behavior.expressions.WithArgument _WithArgument) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean remove(behavior.expressions.Expression _Argument, behavior.expressions.WithArgument _WithArgument) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
}