Function getAttribute(aClass As Class, aName As String) As Attribute
  Dim l_Attributes As AttributeCollection
  Dim l_Attribute As Attribute
  Dim l_Result As Attribute

  Set l_Result = Nothing
  Set l_Attributes = aClass.Attributes
  For m = 1 To l_Attributes.Count
    Set l_Attribute = l_Attributes.GetAt(m)
	
	If l_Attribute.Name Like aName Then
	
	  Set l_Result = l_Attribute
	End If
  Next m
  Set getAttribute = l_Result
End Function


Sub Main
	Dim l_Model As Model
	Dim l_Classes As ClassCollection
	Dim l_Class As Class
	Dim l_OtherClass As Class
	Dim l_Roles As RoleCollection
	Dim l_Role As Role
	Dim l_Attribute As Attribute

	Viewport.Open
	Viewport.Clear

	Set l_Model = RoseApp.CurrentModel
	Set l_Classes = l_Model.getAllClassesEx(true,true)

	For i = 1 To l_Classes.Count
		Set l_Class = l_Classes.GetAt(i)
		Set l_Roles = l_Class.getAssociateRoles()

'		Print l_Class.Name

		For j = 1 To l_Roles.Count
			Set l_Role = l_Roles.GetAt(j)
			If l_Role.Navigable And Len(l_Role.Name) > 0 Then
				Set l_OtherClass = l_Role.Class
				'Print ,l_Role.Name, l_OtherClass.Name
				Set l_Attribute = getAttribute(l_Class, l_Role.Name)
				If l_Attribute Is Nothing  Then
				    l_ReferenceName = l_Class.Name+"_"+l_Role.Name
  				   	Set l_Attribute = l_Class.addAttribute(l_Role.Name, l_OtherClass.Name, "")
				   	l_Attribute.Stereotype = "reference"
					Print "Added reference: ",l_Class.Name,l_Role.Name
				Else
					'Print "Reference already exists: ",l_Class.Name,l_Role.Name
				End If
			End If
		Next
	Next
End Sub
