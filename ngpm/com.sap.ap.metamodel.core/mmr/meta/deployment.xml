<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<!-- <!DOCTYPE XMI SYSTEM 'Model1311.DTD' > -->
<XMI xmi.version = '1.1' xmlns:Model='omg.org/mof.Model/1.3' timestamp = 'Fri Dec 11 14:26:20 2009' >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>Unisys.JCR.1</XMI.exporter>
   <XMI.exporterVersion>1.3.2</XMI.exporterVersion>
  </XMI.documentation>
  <XMI.metamodel xmi.name = 'org.omg.mof.Model' xmi.version = '1.3'/>
 </XMI.header>
<XMI.content>
<!-- ==================== deployment    [Package] ==================== -->
<Model:Package xmi.id = 'a4472ED94018E' 
  name = 'deployment' annotation = '' 
  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' >
  <Model:Namespace.contents>
    <!-- ==================== deployment.landscape    [Package] ==================== -->
    <Model:Package xmi.id = 'a4472EDA20076' 
      name = 'landscape' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' >
      <Model:ModelElement.annotation>A customer may describe the system landscape in an instance of this metamodel. In particular, this describes machines, network infrastructure, as well as software components installed on each of those.

This information can be used to determine a good configuration for a customer, given a selection of solutions that the customer wants. It may also be helpful in tracking and monitoring the landscape. Ideally, landscape configuration scripts could be generated from a selection of components and a plan as to how to distribute the components across the landscape.

Landscape components (source: Nestle): OS, DB, Network, middle tier software, business applications (SAP, non-SAP, legacy)</Model:ModelElement.annotation>
    </Model:Package>
    <!-- ==================== deployment.cachingandreplication    [Package] ==================== -->
    <Model:Package xmi.id = 'a44D754AF0266' 
      name = 'cachingandreplication' annotation = 'Talks about, depending on a specific deployment to a landscape, what to cache where and what to replicate from where to where. This will have to be based on the quantity structure of objects and calls (what will be under which amount of stress?) and on landscape information (computing power, network bandwidth, speed, latency, ...).' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' />
  </Model:Namespace.contents>
</Model:Package>
</XMI.content>
</XMI>
