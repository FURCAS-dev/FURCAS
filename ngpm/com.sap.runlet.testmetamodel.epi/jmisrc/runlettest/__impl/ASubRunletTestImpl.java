/**
 * Generated by the MOIN Generator Version 3.0
 **/

package runlettest.__impl;

public final class ASubRunletTestImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationImpl
{
    // default constructor
    public ASubRunletTestImpl() {
        super();
    }

    // specific constructor
    public ASubRunletTestImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Sub, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _RunletTest) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return exists(get___CurrentConnection(), _Sub, _RunletTest);
    }
    public boolean exists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Sub, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _RunletTest) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return ___existsMultN( connection, _RunletTest, _Sub, "E0BF480E8BFD96438B2011DE8C4E00155883529C"); //$NON-NLS-1$
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getSub(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _RunletTest) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getSub(get___CurrentConnection(), _RunletTest);
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getSub(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _RunletTest) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject>) ___getElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _RunletTest, get___EndAndMetaObject( 1 ) );
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefBaseObject getRunletTest(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Sub) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getRunletTest(get___CurrentConnection(), _Sub);
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefBaseObject getRunletTest(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Sub) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        com.sap.tc.moin.repository.core.EndAndMetaObject endAndMetaObject = get___EndAndMetaObject( 0 );
        return (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) get___CompositeParentForEndAndMetaObject( connection, _Sub, endAndMetaObject );
    }
    public boolean add(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Sub, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _RunletTest) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_Sub, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_RunletTest);
    }
    public boolean add(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Sub, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _RunletTest) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Sub, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_RunletTest);
    }
    public boolean remove(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Sub, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _RunletTest) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_Sub, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_RunletTest);
    }
    public boolean remove(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _Sub, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _RunletTest) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_Sub, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_RunletTest);
    }
    public boolean refLinkExists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefObject firstEnd, com.sap.tc.moin.repository.mmi.reflect.RefObject secondEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        if ( firstEnd == null || secondEnd == null ) { return false; }
        checkTypesForRefLinkExists( connection, firstEnd, secondEnd );
        return exists( connection, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) firstEnd, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) secondEnd );
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<runlettest.ASubRunletTest> get___JmiInterface() {
        return runlettest.ASubRunletTest.class;
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<runlettest.ASubRunletTest> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new runlettest.__impl.ASubRunletTestWrapper(conn, this, synchronize);
    }
}