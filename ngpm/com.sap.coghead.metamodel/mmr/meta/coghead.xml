<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<!-- <!DOCTYPE XMI SYSTEM 'Model1311.DTD' > -->
<XMI xmi.version = '1.1' xmlns:Model='omg.org/mof.Model/1.3' timestamp = 'Thu May 28 21:24:13 2009' >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>Unisys.JCR.1</XMI.exporter>
   <XMI.exporterVersion>1.3.2</XMI.exporterVersion>
  </XMI.documentation>
  <XMI.metamodel xmi.name = 'org.omg.mof.Model' xmi.version = '1.3'/>
 </XMI.header>
<XMI.content>
<!-- ==================== coghead    [Package] ==================== -->
<Model:Package xmi.id = 'a49D51EE50128' 
  name = 'coghead' annotation = '' 
  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' >
  <Model:Namespace.contents>
    <!-- ==================== coghead.action    [Package] ==================== -->
    <Model:Package xmi.id = 'a49DA21B101AE' 
      name = 'action' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' >
      <Model:Namespace.contents>
        <!-- ==================== coghead.action.SearchAction    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA38E3024F' 
          name = 'SearchAction' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA391F0099'/>  <!-- coghead.action.FinalAction -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.action.CreateAction    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA38EC01D2' 
          name = 'CreateAction' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA395801F0'/>  <!-- coghead.action.RedefinableAction -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.action.ReadAction    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA38F40339' 
          name = 'ReadAction' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA391F0099'/>  <!-- coghead.action.FinalAction -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.action.UpdateAction    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA38FC02EB' 
          name = 'UpdateAction' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA395801F0'/>  <!-- coghead.action.RedefinableAction -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.action.DeleteAction    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA39020126' 
          name = 'DeleteAction' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA395801F0'/>  <!-- coghead.action.RedefinableAction -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.action.FinalAction    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA391F0099' 
          name = 'FinalAction' annotation = 'Cannot be redefined' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49D52049036B'/>  <!-- coghead.action.Action -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.action.RedefinableAction    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA395801F0' 
          name = 'RedefinableAction' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.annotation>Can be redefined.
On redefintion, super action SHOULD be called.</Model:ModelElement.annotation>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49D52049036B'/>  <!-- coghead.action.Action -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.action.Signature    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA39C300B7' 
          name = 'Signature' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.constraints>
            <Model:Constraint xmi.idref = 'a4A1A7AD80000'/>  <!-- coghead.action.Signature.FormRequiredForInputSchema -->
          </Model:ModelElement.constraints>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.Signature.output    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA3B0302B9' 
              name = 'output' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5204F01F4'/>  <!-- coghead.Schema -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA3B0302B9'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.Signature.additionalInput    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA3B85021C' 
              name = 'additionalInput' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5204F01F4'/>  <!-- coghead.Schema -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA3B85021C'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.Signature.additionalInputForm    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA3C480055' 
              name = 'additionalInputForm' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5205A02AF'/>  <!-- coghead.Form -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA3C480055'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.Signature.FormRequiredForInputSchema    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a4A1A7AD80000' 
              name = 'FormRequiredForInputSchema' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context Signature
inv:
  self.additionalInput-&gt;notEmpty() implies self.additionalInputForm-&gt;notEmpty()</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a49DA39C300B7'/>  <!-- coghead.action.Signature -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.UserDefinedAction    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA3D2C011F' 
          name = 'UserDefinedAction' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49D52049036B'/>  <!-- coghead.action.Action -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.action.Statement    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA403F038B' 
          name = 'Statement' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.Statement.block    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA4D0802A1' 
              name = 'block' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA4C9701DB'/>  <!-- coghead.action.Block -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA4D0802A1'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.org.omg.sap2mof.store=yes    [Tag] ==================== -->
        <Model:Tag xmi.id = 'G.355' 
          name = 'org.omg.sap2mof.store=yes' annotation = '' 
          tagId = 'org.omg.sap2mof.store' >
          <Model:Tag.values>
            <XMI.any xmi.type = 'string' xmi.name = ''>yes</XMI.any>
          </Model:Tag.values>
          <Model:Tag.elements>
            <Model:ModelElement xmi.idref = 'ra49DA4D0802A1'/>  <!-- coghead.action.Statement.block -->
            <Model:ModelElement xmi.idref = 'ra49DA4EFB010B'/>  <!-- coghead.action.IfElseIfClause.switchStatement -->
            <Model:ModelElement xmi.idref = 'ra49DB7641016A'/>  <!-- coghead.action.BlockOwner.ownedBlock -->
            <Model:ModelElement xmi.idref = 'a49DA4D0802A1'/>
            <Model:ModelElement xmi.idref = 'a49DA4EFB010B'/>
            <Model:ModelElement xmi.idref = 'a49DB7641016A'/>
          </Model:Tag.elements>
        </Model:Tag>
        <!-- ==================== coghead.action.VariableDeclarationStatement    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA4053009D' 
          name = 'VariableDeclarationStatement' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.annotation>restrictions on variable names:

"Input", "Output", "AdditionalInput" are reserved names.

"Context", "ScratchPad" are also reserved.
context: storage for global variables (e.g. system environemt like test/production, user name)
scratchpad: a hack, transient storage as a collection of named slots to store data of any type (key value store)</Model:ModelElement.annotation>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA403F038B'/>  <!-- coghead.action.Statement -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.VariableDeclarationStatement.declaredVariable    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA499201B7' 
              name = 'declaredVariable' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA499201B7'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.Multiplicity    [DataType] ==================== -->
        <Model:DataType xmi.id = 'a49DA40CF032C' 
          name = 'Multiplicity' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' >
          <Model:DataType.typeCode>
            <XMI.CorbaTypeCode>
              <XMI.CorbaTcEnum xmi.tcName = 'Multiplicity'>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'SINGLE'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'COLLECTION'/>
              </XMI.CorbaTcEnum>
            </XMI.CorbaTypeCode>
          </Model:DataType.typeCode>
        </Model:DataType>
        <!-- ==================== coghead.action.SwitchStatement    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA42BF023F' 
          name = 'SwitchStatement' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA403F038B'/>  <!-- coghead.action.Statement -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.SwitchStatement.clauses    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA4EFB0109' 
              name = 'clauses' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '-1' is_ordered = 'true' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA4EF003A8'/>  <!-- coghead.action.IfElseIfClause -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA4EFB0109'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.org.omg.sap2mof.store=no    [Tag] ==================== -->
        <Model:Tag xmi.id = 'G.356' 
          name = 'org.omg.sap2mof.store=no' annotation = '' 
          tagId = 'org.omg.sap2mof.store' >
          <Model:Tag.values>
            <XMI.any xmi.type = 'string' xmi.name = ''>no</XMI.any>
          </Model:Tag.values>
          <Model:Tag.elements>
            <Model:ModelElement xmi.idref = 'ra49DA4EFB0109'/>  <!-- coghead.action.SwitchStatement.clauses -->
            <Model:ModelElement xmi.idref = 'ra49DA4D08029F'/>  <!-- coghead.action.Block.statements -->
            <Model:ModelElement xmi.idref = 'ra49DB7641016C'/>  <!-- coghead.action.Block.owner -->
            <Model:ModelElement xmi.idref = 'a49DA4D08029F'/>
            <Model:ModelElement xmi.idref = 'a49DA4EFB0109'/>
            <Model:ModelElement xmi.idref = 'a49DB7641016C'/>
          </Model:Tag.elements>
        </Model:Tag>
        <!-- ==================== coghead.action.WhileStatement    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA42D301C1' 
          name = 'WhileStatement' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA47C801AE'/>  <!-- coghead.action.LoopLikeStatement -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.WhileStatement.loopCondition    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA464A0014' 
              name = 'loopCondition' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA464A0014'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.ForEachStatement    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA42DB02BB' 
          name = 'ForEachStatement' annotation = 'iteratorVariable must have multiplicity collection.' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.constraints>
            <Model:Constraint xmi.idref = 'a49DB72C002FB'/>  <!-- coghead.action.ForEachStatement.IteratorOwnedByOwnedBlock -->
            <Model:Constraint xmi.idref = 'a4A1E6B4001C5'/>  <!-- coghead.action.ForEachStatement.CollectionVariableMustHaveCollectionMultiplicity -->
            <Model:Constraint xmi.idref = 'a4A1E6B72037A'/>  <!-- coghead.action.ForEachStatement.IteratorVariableMustHaveSingleMultiplicity -->
          </Model:ModelElement.constraints>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA47C801AE'/>  <!-- coghead.action.LoopLikeStatement -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.ForEachStatement.iteratorVariable    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA4B9F004E' 
              name = 'iteratorVariable' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA4B9F004E'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.ForEachStatement.collectionVariable    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra4A1E5F6602BF' 
              name = 'collectionVariable' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a4A1E5F6602BF'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.ForEachStatement.IteratorOwnedByOwnedBlock    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a49DB72C002FB' 
              name = 'IteratorOwnedByOwnedBlock' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context ForEachStatement
inv:
  self.ownedBlock.variables-&gt;includes(self.iteratorVariable)</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a49DA42DB02BB'/>  <!-- coghead.action.ForEachStatement -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
            <!-- ==================== coghead.action.ForEachStatement.CollectionVariableMustHaveCollectionMultiplicity    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a4A1E6B4001C5' 
              name = 'CollectionVariableMustHaveCollectionMultiplicity' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context ForEachStatement
inv:
  self.collectionVariable.multiplicity=Multiplicity::COLLECTION</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a49DA42DB02BB'/>  <!-- coghead.action.ForEachStatement -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
            <!-- ==================== coghead.action.ForEachStatement.IteratorVariableMustHaveSingleMultiplicity    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a4A1E6B72037A' 
              name = 'IteratorVariableMustHaveSingleMultiplicity' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context ForEachStatement
inv:
  self.iteratorVariable.multiplicity=Multiplicity::SINGLE</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a49DA42DB02BB'/>  <!-- coghead.action.ForEachStatement -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.BreakStatement    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA42E302EB' 
          name = 'BreakStatement' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.constraints>
            <Model:Constraint xmi.idref = 'a49DB73C50152'/>  <!-- coghead.action.BreakStatement.BreakOnlyValidInLoops -->
          </Model:ModelElement.constraints>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA403F038B'/>  <!-- coghead.action.Statement -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.BreakStatement.getLoop    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a49DB78C400A7' 
              name = 'getLoop' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.1' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a49DA47C801AE'/>  <!-- coghead.action.LoopLikeStatement -->
                  </Model:TypedElement.type>
                </Model:Parameter>
                <Model:Parameter xmi.id = 'XX.2' 
                  name = 'theBlock' annotation = '' 
                  direction = 'in_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a49DA4C9701DB'/>  <!-- coghead.action.Block -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
            <!-- ==================== coghead.action.BreakStatement.BreakOnlyValidInLoops    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a49DB73C50152' 
              name = 'BreakOnlyValidInLoops' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context BreakStatement
inv:
  self.getLoop(self.block)-&gt;notEmpty()</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a49DA42E302EB'/>  <!-- coghead.action.BreakStatement -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.org.omg.sap2mof.OperationCodeOcl=context BreakStatement::getLoop(theBlock:Block):LoopLikeStatement...    [Tag] ==================== -->
        <Model:Tag xmi.id = 'G.357' 
          name = 'org.omg.sap2mof.OperationCodeOcl=context BreakStatement::getLoop(theBlock:Block):LoopLikeStatement...' annotation = '' 
          tagId = 'org.omg.sap2mof.OperationCodeOcl' >
          <Model:Tag.values>
            <XMI.any xmi.type = 'string' xmi.name = ''>context BreakStatement::getLoop(theBlock:Block):LoopLikeStatement
body:
  if theBlock.owner.oclIsKindOf(LoopLikeStatement) then
    theBlock.owner.oclAsType(LoopLikeStatement)
  else
    if theBlock.owner.oclIsKindOf(IfElseIfClause) then
      self.getLoop(theBlock.owner.oclAsType(IfElseIfClause).switchStatement.block)
    else
      null
    endif
  endif</XMI.any>
          </Model:Tag.values>
          <Model:Tag.elements>
            <Model:ModelElement xmi.idref = 'a49DB78C400A7'/>  <!-- coghead.action.BreakStatement.getLoop -->
          </Model:Tag.elements>
        </Model:Tag>
        <!-- ==================== coghead.action.PerformActionStatement    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA42F503A8' 
          name = 'PerformActionStatement' annotation = 'action constrains input, additionalInput and output.' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA403F038B'/>  <!-- coghead.action.Statement -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.PerformActionStatement.action    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA51B10082' 
              name = 'action' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D52049036B'/>  <!-- coghead.action.Action -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA51B10082'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.PerformActionStatement.input    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA51E102AE' 
              name = 'input' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA51E102AE'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.PerformActionStatement.additionalInput    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA52190390' 
              name = 'additionalInput' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA52190390'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.PerformActionStatement.output    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA525E03C9' 
              name = 'output' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA525E03C9'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.SetValueStatement    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA43030158' 
          name = 'SetValueStatement' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA403F038B'/>  <!-- coghead.action.Statement -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.SetValueStatement.targetVariable    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA549800D2' 
              name = 'targetVariable' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA549800D2'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.SetValueStatement.assignments    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA5553029C' 
              name = 'assignments' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA554703C9'/>  <!-- coghead.action.Assignment -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA5553029C'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.XQueryStatement    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA431A032F' 
          name = 'XQueryStatement' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA403F038B'/>  <!-- coghead.action.Statement -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.XQueryStatement.input    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA540900C9' 
              name = 'input' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA540900C9'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.XQueryStatement.output    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA5410025C' 
              name = 'output' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA5410025C'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.XQueryStatement.queryString    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a49DA53AF01E4' 
              name = 'queryString' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
              </Model:TypedElement.type>
            </Model:Attribute>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.RetrieveRecordsStatement    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA432B03BE' 
          name = 'RetrieveRecordsStatement' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.annotation>constraints:
query: no projection and single collection
output: retrieveRecords multiplicity and action variable multiplicity must be identical</Model:ModelElement.annotation>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA403F038B'/>  <!-- coghead.action.Statement -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.RetrieveRecordsStatement.query    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA506A00B1' 
              name = 'query' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA506A00B1'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.RetrieveRecordsStatement.output    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA50BD0376' 
              name = 'output' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA50BD0376'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.RetrieveRecordsStatement.multiplicity    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a49DA50E0003E' 
              name = 'multiplicity' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA40CF032C'/>  <!-- coghead.action.Multiplicity -->
              </Model:TypedElement.type>
            </Model:Attribute>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.TerminateStatement    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA449F0396' 
          name = 'TerminateStatement' annotation = 'Abort execution of current Action and present message to user.' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA403F038B'/>  <!-- coghead.action.Statement -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.TerminateStatement.message    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a49DA45190046' 
              name = 'message' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
              </Model:TypedElement.type>
            </Model:Attribute>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.LoopLikeStatement    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA47C801AE' 
          name = 'LoopLikeStatement' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA403F038B'/>  <!-- coghead.action.Statement -->
            <Model:GeneralizableElement xmi.idref = 'a49DB74BA004A'/>  <!-- coghead.action.BlockOwner -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.action.Block    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA4C9701DB' 
          name = 'Block' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a4A0A69870218'/>  <!-- coghead.DefinitionEnvironment -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.Block.statements    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA4D08029F' 
              name = 'statements' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'true' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA403F038B'/>  <!-- coghead.action.Statement -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA4D08029F'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.Block.owner    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DB7641016C' 
              name = 'owner' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DB74BA004A'/>  <!-- coghead.action.BlockOwner -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DB7641016C'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.IfElseIfClause    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA4EF003A8' 
          name = 'IfElseIfClause' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.annotation>constraints:
condition must be of type Boolean</Model:ModelElement.annotation>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DB74BA004A'/>  <!-- coghead.action.BlockOwner -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.IfElseIfClause.switchStatement    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA4EFB010B' 
              name = 'switchStatement' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA42BF023F'/>  <!-- coghead.action.SwitchStatement -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA4EFB010B'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.Assignment    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA554703C9' 
          name = 'Assignment' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.annotation>constraints:
assignment target must refer to SchemaEntries that are declared in the schema of targetVariable.

if targetEntry's parent (in the schema) is a field group with cardinality &gt;1 then fieldGroupMode must be specified.

sourceEntry must refer to SchemaEntries of any ActionVariable visible to the current block.


</Model:ModelElement.annotation>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.Assignment.valueExpression    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA5632035C' 
              name = 'valueExpression' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA5632035C'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.Assignment.targetEntry    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA5B09039B' 
              name = 'targetEntry' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D542A602CE'/>  <!-- coghead.SchemaEntry -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA5B09039B'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.Assignment.sources    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA5CE1003D' 
              name = 'sources' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA5CD202F2'/>  <!-- coghead.action.AssignmentSource -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA5CE1003D'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.Assignment.fieldGroupMode    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a49DA5876007E' 
              name = 'fieldGroupMode' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA588C01FC'/>  <!-- coghead.action.FieldGroupMode -->
              </Model:TypedElement.type>
            </Model:Attribute>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.FieldGroupMode    [DataType] ==================== -->
        <Model:DataType xmi.id = 'a49DA588C01FC' 
          name = 'FieldGroupMode' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' >
          <Model:DataType.typeCode>
            <XMI.CorbaTypeCode>
              <XMI.CorbaTcEnum xmi.tcName = 'FieldGroupMode'>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'APPEND'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'REPLACE'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'NOT_DEFINED'/>
              </XMI.CorbaTcEnum>
            </XMI.CorbaTypeCode>
          </Model:DataType.typeCode>
        </Model:DataType>
        <!-- ==================== coghead.action.AssignmentSource    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DA5CD202F2' 
          name = 'AssignmentSource' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.annotation>constraint: 
filter is only applicable if sourceEntry's parent (in the schema) is FieldGroup with cardinality &gt; 1.</Model:ModelElement.annotation>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.AssignmentSource.sourceEntry    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA5CF803DD' 
              name = 'sourceEntry' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D542A602CE'/>  <!-- coghead.SchemaEntry -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA5CF803DD'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.AssignmentSource.filter    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA5D7D025F' 
              name = 'filter' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA5D7D025F'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.Action    [Class] ==================== -->
        <Model:Class xmi.id = 'a49D52049036B' 
          name = 'Action' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.annotation>Standard Actions: SCRUD
Search is special: account level action.
constraint: no implementation if nativeImpl is true.</Model:ModelElement.annotation>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DB74BA004A'/>  <!-- coghead.action.BlockOwner -->
            <Model:GeneralizableElement xmi.idref = 'a49F8605502CE'/>  <!-- coghead.packages.NamedElement -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.Action.signature    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA39E00088' 
              name = 'signature' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA39C300B7'/>  <!-- coghead.action.Signature -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA39E00088'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.Action.scope    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a49DA3B450009' 
              name = 'scope' annotation = 'static or instance Action' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA74F500E4'/>  <!-- coghead.ScopeEnum -->
              </Model:TypedElement.type>
            </Model:Attribute>
            <!-- ==================== coghead.action.Action.sideEffectFree    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a49DA3DE50285' 
              name = 'sideEffectFree' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
              </Model:TypedElement.type>
            </Model:Attribute>
            <!-- ==================== coghead.action.Action.executionTimeLimit    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a49DA3E630340' 
              name = 'executionTimeLimit' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA603A0'/>
              </Model:TypedElement.type>
            </Model:Attribute>
            <!-- ==================== coghead.action.Action.isNative    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a49DB677E0377' 
              name = 'isNative' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'false' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.3' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.org.omg.sap2mof.OperationCodeOcl=context Action::isNative():Boolean...    [Tag] ==================== -->
        <Model:Tag xmi.id = 'G.359' 
          name = 'org.omg.sap2mof.OperationCodeOcl=context Action::isNative():Boolean...' annotation = '' 
          tagId = 'org.omg.sap2mof.OperationCodeOcl' >
          <Model:Tag.values>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Action::isNative():Boolean
body:
  self.ownedBlock-&gt;isEmpty()</XMI.any>
          </Model:Tag.values>
          <Model:Tag.elements>
            <Model:ModelElement xmi.idref = 'a49DB677E0377'/>  <!-- coghead.action.Action.isNative -->
          </Model:Tag.elements>
        </Model:Tag>
        <!-- ==================== coghead.action.BlockOwner    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DB74BA004A' 
          name = 'BlockOwner' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.BlockOwner.ownedBlock    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DB7641016A' 
              name = 'ownedBlock' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA4C9701DB'/>  <!-- coghead.action.Block -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DB7641016A'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.ElseClause    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DB75460304' 
          name = 'ElseClause' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA4EF003A8'/>  <!-- coghead.action.IfElseIfClause -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.action.IfClause    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DB7556029C' 
          name = 'IfClause' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA4EF003A8'/>  <!-- coghead.action.IfElseIfClause -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.IfClause.condition    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DA4F3C0361' 
              name = 'condition' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DA4F3C0361'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.VariableAssignmentStatement    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DB7E6000B1' 
          name = 'VariableAssignmentStatement' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA403F038B'/>  <!-- coghead.action.Statement -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.action.NewClass    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DB7E7302E6' 
          name = 'NewClass' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' />
        <!-- ==================== coghead.action.Notification    [Class] ==================== -->
        <Model:Class xmi.id = 'a4A166C7D00CB' 
          name = 'Notification' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DA403F038B'/>  <!-- coghead.action.Statement -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.action.Notification.to    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra4A166D5000CB' 
              name = 'to' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a4A166D5000CB'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.Notification.subject    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra4A166D51037A' 
              name = 'subject' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a4A166D51037A'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.action.Notification.body    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra4A166D5301C5' 
              name = 'body' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a4A166D5301C5'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.action.A_signature_action    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA39DF00E6' 
          name = 'A_signature_action' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA39E00088' 
              name = 'signature' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA39C300B7'/>  <!-- coghead.action.Signature -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA39E0008A' 
              name = 'action' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D52049036B'/>  <!-- coghead.action.Action -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_output_signature    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA3B020374' 
          name = 'A_output_signature' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA3B0302B9' 
              name = 'output' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5204F01F4'/>  <!-- coghead.Schema -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA3B0302BB' 
              name = 'signature' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA39C300B7'/>  <!-- coghead.action.Signature -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_additionalInput_signature    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA3B850066' 
          name = 'A_additionalInput_signature' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA3B85021C' 
              name = 'additionalInput' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5204F01F4'/>  <!-- coghead.Schema -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA3B85022B' 
              name = 'signature' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA39C300B7'/>  <!-- coghead.action.Signature -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_additionalInputForm_signature    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA3C47015F' 
          name = 'A_additionalInputForm_signature' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:ModelElement.annotation>Reference to a form to collect data for input from user.
If there is an input schema, there has to be an input form.</Model:ModelElement.annotation>
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA3C480055' 
              name = 'additionalInputForm' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5205A02AF'/>  <!-- coghead.Form -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA3C480057' 
              name = 'signature' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA39C300B7'/>  <!-- coghead.action.Signature -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_loopCondition_whileStatement    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA4649016C' 
          name = 'A_loopCondition_whileStatement' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA464A0014' 
              name = 'loopCondition' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA464A0024' 
              name = 'whileStatement' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA42D301C1'/>  <!-- coghead.action.WhileStatement -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_declaredVariable_variableDeclarationStatement    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA499101D7' 
          name = 'A_declaredVariable_variableDeclarationStatement' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA499201B7' 
              name = 'declaredVariable' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA499201C7' 
              name = 'variableDeclarationStatement' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA4053009D'/>  <!-- coghead.action.VariableDeclarationStatement -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_iteratorVariable_forEachStatement    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA4B9D02EE' 
          name = 'A_iteratorVariable_forEachStatement' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA4B9F004E' 
              name = 'iteratorVariable' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA4B9F005E' 
              name = 'forEachStatement' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA42DB02BB'/>  <!-- coghead.action.ForEachStatement -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_statements_block    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA4D0702CD' 
          name = 'A_statements_block' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA4D08029F' 
              name = 'statements' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'true' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA403F038B'/>  <!-- coghead.action.Statement -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA4D0802A1' 
              name = 'block' annotation = '' 
              isNavigable = 'true' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA4C9701DB'/>  <!-- coghead.action.Block -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_clauses_switchStatement    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA4EFA0270' 
          name = 'A_clauses_switchStatement' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA4EFB0109' 
              name = 'clauses' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '-1' is_ordered = 'true' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA4EF003A8'/>  <!-- coghead.action.IfElseIfClause -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA4EFB010B' 
              name = 'switchStatement' annotation = '' 
              isNavigable = 'true' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA42BF023F'/>  <!-- coghead.action.SwitchStatement -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_condition_ifClause    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA4F3C011F' 
          name = 'A_condition_ifClause' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA4F3C0361' 
              name = 'condition' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA4F3C0371' 
              name = 'ifClause' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DB7556029C'/>  <!-- coghead.action.IfClause -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_query_retrieveRecordsStatement    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA5069015E' 
          name = 'A_query_retrieveRecordsStatement' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA506A00B1' 
              name = 'query' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA506A00C1' 
              name = 'retrieveRecordsStatement' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA432B03BE'/>  <!-- coghead.action.RetrieveRecordsStatement -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_output_retrieveRecordsStatement    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA50BD0089' 
          name = 'A_output_retrieveRecordsStatement' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA50BD0376' 
              name = 'output' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA50BD0378' 
              name = 'retrieveRecordsStatement' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA432B03BE'/>  <!-- coghead.action.RetrieveRecordsStatement -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_action_performActionStatement    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA51B0015D' 
          name = 'A_action_performActionStatement' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA51B10082' 
              name = 'action' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D52049036B'/>  <!-- coghead.action.Action -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA51B10092' 
              name = 'performActionStatement' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA42F503A8'/>  <!-- coghead.action.PerformActionStatement -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_input_performActionStatement    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA51E0035A' 
          name = 'A_input_performActionStatement' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA51E102AE' 
              name = 'input' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA51E102B0' 
              name = 'performActionStatement' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA42F503A8'/>  <!-- coghead.action.PerformActionStatement -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_additionalInput_performActionStatement    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA521900F0' 
          name = 'A_additionalInput_performActionStatement' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA52190390' 
              name = 'additionalInput' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA5219039F' 
              name = 'performActionStatement' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA42F503A8'/>  <!-- coghead.action.PerformActionStatement -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_output_performActionStatement    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA525E0129' 
          name = 'A_output_performActionStatement' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA525E03C9' 
              name = 'output' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA525E03CB' 
              name = 'performActionStatement' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA42F503A8'/>  <!-- coghead.action.PerformActionStatement -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_input_xQueryStatement    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA54080146' 
          name = 'A_input_xQueryStatement' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA540900C9' 
              name = 'input' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA540900CB' 
              name = 'xQueryStatement' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA431A032F'/>  <!-- coghead.action.XQueryStatement -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_output_xQueryStatement    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA540F0357' 
          name = 'A_output_xQueryStatement' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA5410025C' 
              name = 'output' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA5410026C' 
              name = 'xQueryStatement' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA431A032F'/>  <!-- coghead.action.XQueryStatement -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_targetVariable_setValueStatement    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA549701EB' 
          name = 'A_targetVariable_setValueStatement' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA549800D2' 
              name = 'targetVariable' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA549800E1' 
              name = 'setValueStatement' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA43030158'/>  <!-- coghead.action.SetValueStatement -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_assignments_setValueStatement    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA55520329' 
          name = 'A_assignments_setValueStatement' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA5553029C' 
              name = 'assignments' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA554703C9'/>  <!-- coghead.action.Assignment -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA5553029E' 
              name = 'setValueStatement' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA43030158'/>  <!-- coghead.action.SetValueStatement -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_valueExpression_assignment    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA563200BC' 
          name = 'A_valueExpression_assignment' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA5632035C' 
              name = 'valueExpression' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA5632036C' 
              name = 'assignment' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA554703C9'/>  <!-- coghead.action.Assignment -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_targetEntry_assignment    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA5B0803CA' 
          name = 'A_targetEntry_assignment' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA5B09039B' 
              name = 'targetEntry' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D542A602CE'/>  <!-- coghead.SchemaEntry -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA5B0903AA' 
              name = 'assignment' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA554703C9'/>  <!-- coghead.action.Assignment -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_sources_assignment    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA5CE00202' 
          name = 'A_sources_assignment' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA5CE1003D' 
              name = 'sources' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA5CD202F2'/>  <!-- coghead.action.AssignmentSource -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA5CE1003F' 
              name = 'assignment' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA554703C9'/>  <!-- coghead.action.Assignment -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_sourceEntry_assignmentSource    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA5CF800A1' 
          name = 'A_sourceEntry_assignmentSource' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA5CF803DD' 
              name = 'sourceEntry' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D542A602CE'/>  <!-- coghead.SchemaEntry -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA5CF803DF' 
              name = 'assignmentSource' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA5CD202F2'/>  <!-- coghead.action.AssignmentSource -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_filter_assignmentSource    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DA5D7C0398' 
          name = 'A_filter_assignmentSource' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DA5D7D025F' 
              name = 'filter' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DA5D7D026F' 
              name = 'assignmentSource' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA5CD202F2'/>  <!-- coghead.action.AssignmentSource -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_ownedBlock_owner    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DB764002C4' 
          name = 'A_ownedBlock_owner' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DB7641016A' 
              name = 'ownedBlock' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA4C9701DB'/>  <!-- coghead.action.Block -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DB7641016C' 
              name = 'owner' annotation = '' 
              isNavigable = 'true' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DB74BA004A'/>  <!-- coghead.action.BlockOwner -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_to_notification    [Association] ==================== -->
        <Model:Association xmi.id = 'a4A166D4E02DE' 
          name = 'A_to_notification' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a4A166D5000CB' 
              name = 'to' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a4A166D5000FA' 
              name = 'notification' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A166C7D00CB'/>  <!-- coghead.action.Notification -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_subject_notification    [Association] ==================== -->
        <Model:Association xmi.id = 'a4A166D50031C' 
          name = 'A_subject_notification' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a4A166D51037A' 
              name = 'subject' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a4A166D510399' 
              name = 'notification' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A166C7D00CB'/>  <!-- coghead.action.Notification -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_body_notification    [Association] ==================== -->
        <Model:Association xmi.id = 'a4A166D520261' 
          name = 'A_body_notification' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a4A166D5301C5' 
              name = 'body' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a4A166D5301E4' 
              name = 'notification' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A166C7D00CB'/>  <!-- coghead.action.Notification -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.action.A_collectionVariable_forEachStatement    [Association] ==================== -->
        <Model:Association xmi.id = 'a4A1E5F660128' 
          name = 'A_collectionVariable_forEachStatement' annotation = 'What to loop over' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a4A1E5F6602BF' 
              name = 'collectionVariable' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a4A1E5F6602DE' 
              name = 'forEachStatement' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DA42DB02BB'/>  <!-- coghead.action.ForEachStatement -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
      </Model:Namespace.contents>
    </Model:Package>
    <Model:Import xmi.id = 'G.358' 
      name = 'PrimitiveTypes' annotation = '' 
      visibility = 'public_vis' isClustered = 'false' >
      <Model:Import.importedNamespace>
        <Model:Namespace xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B5389EE0204'/>
      </Model:Import.importedNamespace>
    </Model:Import>
    <!-- ==================== coghead.xpath    [Package] ==================== -->
    <Model:Package xmi.id = 'a49DB512F03B9' 
      name = 'xpath' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' >
      <Model:Namespace.contents>
        <!-- ==================== coghead.xpath.XPathExpression    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC5C18004E' 
          name = 'XPathExpression' annotation = 'Corresponds to ExprSingle in the EBNF, mostly' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
            <Model:GeneralizableElement xmi.idref = 'a4A01E0830261'/>  <!-- coghead.xpath.WithContext -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.ForExpr    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC5CA20119' 
          name = 'ForExpr' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5EE6000F'/>  <!-- coghead.xpath.Iteration -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.xpath.ForExpr.getReturn    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a49DC612B0109' 
              name = 'getReturn' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.4' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.xpath.org.omg.sap2mof.OperationCodeOcl=context ForExpr::getReturn():XPathExpression...    [Tag] ==================== -->
        <Model:Tag xmi.id = 'G.360' 
          name = 'org.omg.sap2mof.OperationCodeOcl=context ForExpr::getReturn():XPathExpression...' annotation = '' 
          tagId = 'org.omg.sap2mof.OperationCodeOcl' >
          <Model:Tag.values>
            <XMI.any xmi.type = 'string' xmi.name = ''>context ForExpr::getReturn():XPathExpression
body:
  self.evaluate</XMI.any>
          </Model:Tag.values>
          <Model:Tag.elements>
            <Model:ModelElement xmi.idref = 'a49DC612B0109'/>  <!-- coghead.xpath.ForExpr.getReturn -->
          </Model:Tag.elements>
        </Model:Tag>
        <!-- ==================== coghead.xpath.IfExpr    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC5CA4004E' 
          name = 'IfExpr' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.constraints>
            <Model:Constraint xmi.idref = 'a49DDFB48001F'/>  <!-- coghead.xpath.IfExpr.OperandsInContext -->
          </Model:ModelElement.constraints>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.xpath.IfExpr.conditions    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DC62D800FA' 
              name = 'conditions' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DC62D800FA'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.IfExpr.then_    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DC62FA01D4' 
              name = 'then_' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DC62FA01D4'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.IfExpr.else_    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DC631B0203' 
              name = 'else_' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DC631B0203'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.IfExpr.OperandsInContext    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a49DDFB48001F' 
              name = 'OperandsInContext' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context IfExpr
inv:
  self.conditions-&gt;forAll(c | c.context_ = self) and
  self.then_.context_ = self and
  self.else_.context_ = self</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a49DC5CA4004E'/>  <!-- coghead.xpath.IfExpr -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.xpath.BooleanExpr    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC5CA50203' 
          name = 'BooleanExpr' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.constraints>
            <Model:Constraint xmi.idref = 'a49DDF8E40109'/>  <!-- coghead.xpath.BooleanExpr.OperandsInContext -->
          </Model:ModelElement.constraints>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.xpath.BooleanExpr.operands    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DC64BA00DA' 
              name = 'operands' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DC64BA00DA'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.BooleanExpr.OperandsInContext    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a49DDF8E40109' 
              name = 'OperandsInContext' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context BooleanExpr
inv:
  self.operands-&gt;forAll(e | e.context_ = self)</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a49DC5CA50203'/>  <!-- coghead.xpath.BooleanExpr -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.xpath.QuantifiedExpr    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC5CA6038A' 
          name = 'QuantifiedExpr' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5EE6000F'/>  <!-- coghead.xpath.Iteration -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.xpath.QuantifiedExpr.getSatisfies    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a49DC613802EE' 
              name = 'getSatisfies' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'true' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.5' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.xpath.org.omg.sap2mof.OperationCodeOcl=context QuantifiedExpr::getSatisfies():XPathExpression...    [Tag] ==================== -->
        <Model:Tag xmi.id = 'G.361' 
          name = 'org.omg.sap2mof.OperationCodeOcl=context QuantifiedExpr::getSatisfies():XPathExpression...' annotation = '' 
          tagId = 'org.omg.sap2mof.OperationCodeOcl' >
          <Model:Tag.values>
            <XMI.any xmi.type = 'string' xmi.name = ''>context QuantifiedExpr::getSatisfies():XPathExpression
body:
  self.evaluate</XMI.any>
          </Model:Tag.values>
          <Model:Tag.elements>
            <Model:ModelElement xmi.idref = 'a49DC613802EE'/>  <!-- coghead.xpath.QuantifiedExpr.getSatisfies -->
          </Model:Tag.elements>
        </Model:Tag>
        <!-- ==================== coghead.xpath.XPathVariable    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC5D2D0177' 
          name = 'XPathVariable' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' />
        <!-- ==================== coghead.xpath.Iteration    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC5EE6000F' 
          name = 'Iteration' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.constraints>
            <Model:Constraint xmi.idref = 'a49DDFB25030D'/>  <!-- coghead.xpath.Iteration.OperandsInContext -->
          </Model:ModelElement.constraints>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.xpath.Iteration.evaluate    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DC5CFF00DA' 
              name = 'evaluate' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DC5CFF00DA'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.Iteration.iteratorDeclarations    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DC5FEE035B' 
              name = 'iteratorDeclarations' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5FD8000F'/>  <!-- coghead.xpath.IteratorDeclaration -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DC5FEE035B'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.Iteration.OperandsInContext    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a49DDFB25030D' 
              name = 'OperandsInContext' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context Iteration
inv:
  self.evaluate.context_ = self</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a49DC5EE6000F'/>  <!-- coghead.xpath.Iteration -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.xpath.org.omg.sap2mof.store=yes    [Tag] ==================== -->
        <Model:Tag xmi.id = 'G.362' 
          name = 'org.omg.sap2mof.store=yes' annotation = '' 
          tagId = 'org.omg.sap2mof.store' >
          <Model:Tag.values>
            <XMI.any xmi.type = 'string' xmi.name = ''>yes</XMI.any>
          </Model:Tag.values>
          <Model:Tag.elements>
            <Model:ModelElement xmi.idref = 'ra49DC5FEE035B'/>  <!-- coghead.xpath.Iteration.iteratorDeclarations -->
            <Model:ModelElement xmi.idref = 'a49DC5FEE035B'/>
          </Model:Tag.elements>
        </Model:Tag>
        <!-- ==================== coghead.xpath.SomeQuantifiedExpr    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC5F9C0119' 
          name = 'SomeQuantifiedExpr' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5CA6038A'/>  <!-- coghead.xpath.QuantifiedExpr -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.EveryQuantifiedExpr    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC5F9D01E4' 
          name = 'EveryQuantifiedExpr' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5CA6038A'/>  <!-- coghead.xpath.QuantifiedExpr -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.IteratorDeclaration    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC5FD8000F' 
          name = 'IteratorDeclaration' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.constraints>
            <Model:Constraint xmi.idref = 'a49DDFBA500FA'/>  <!-- coghead.xpath.IteratorDeclaration.OperandsInContext -->
          </Model:ModelElement.constraints>
          <Model:Namespace.contents>
            <!-- ==================== coghead.xpath.IteratorDeclaration.variable    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DC5D8A031C' 
              name = 'variable' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5D2D0177'/>  <!-- coghead.xpath.XPathVariable -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DC5D8A031C'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.IteratorDeclaration.in_    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DC5DB902BF' 
              name = 'in_' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DC5DB902BF'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.IteratorDeclaration.iteration    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DC5FEE035D' 
              name = 'iteration' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5EE6000F'/>  <!-- coghead.xpath.Iteration -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DC5FEE035D'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.IteratorDeclaration.OperandsInContext    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a49DDFBA500FA' 
              name = 'OperandsInContext' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context IteratorDeclaration
inv:
  self.in_.context_ = self.iteration</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a49DC5FD8000F'/>  <!-- coghead.xpath.IteratorDeclaration -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.xpath.org.omg.sap2mof.store=no    [Tag] ==================== -->
        <Model:Tag xmi.id = 'G.363' 
          name = 'org.omg.sap2mof.store=no' annotation = '' 
          tagId = 'org.omg.sap2mof.store' >
          <Model:Tag.values>
            <XMI.any xmi.type = 'string' xmi.name = ''>no</XMI.any>
          </Model:Tag.values>
          <Model:Tag.elements>
            <Model:ModelElement xmi.idref = 'ra49DC5FEE035D'/>  <!-- coghead.xpath.IteratorDeclaration.iteration -->
            <Model:ModelElement xmi.idref = 'a49DC5FEE035D'/>
          </Model:Tag.elements>
        </Model:Tag>
        <!-- ==================== coghead.xpath.Comparator    [DataType] ==================== -->
        <Model:DataType xmi.id = 'a49DC63A100CB' 
          name = 'Comparator' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' >
          <Model:DataType.typeCode>
            <XMI.CorbaTypeCode>
              <XMI.CorbaTcEnum xmi.tcName = 'Comparator'>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'eq'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'ne'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'lt'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'le'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'gt'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'ge'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'EQUALS'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'NOTEQUALS'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'LESS'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'LESSEQUALS'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'GREATER'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'GREATEREQUALS'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'is'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'SHIFTLEFT'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'SHIFTRIGHT'/>
              </XMI.CorbaTcEnum>
            </XMI.CorbaTypeCode>
          </Model:DataType.typeCode>
        </Model:DataType>
        <!-- ==================== coghead.xpath.ComparisonExpr    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC641B0177' 
          name = 'ComparisonExpr' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.constraints>
            <Model:Constraint xmi.idref = 'a49DDFAFE0177'/>  <!-- coghead.xpath.ComparisonExpr.OperandsInContext -->
          </Model:ModelElement.constraints>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.xpath.ComparisonExpr.left    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DC645603D8' 
              name = 'left' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DC645603D8'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.ComparisonExpr.right    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DC646D0138' 
              name = 'right' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DC646D0138'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.ComparisonExpr.operator    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a49DC6424002E' 
              name = 'operator' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC63A100CB'/>  <!-- coghead.xpath.Comparator -->
              </Model:TypedElement.type>
            </Model:Attribute>
            <!-- ==================== coghead.xpath.ComparisonExpr.OperandsInContext    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a49DDFAFE0177' 
              name = 'OperandsInContext' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context ComparisonExpr
inv:
  self.left.context_ = self and self.right.context_ = self</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a49DC641B0177'/>  <!-- coghead.xpath.ComparisonExpr -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.xpath.AndExpr    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC64E300DA' 
          name = 'AndExpr' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5CA50203'/>  <!-- coghead.xpath.BooleanExpr -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.OrExpr    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC64E40138' 
          name = 'OrExpr' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5CA50203'/>  <!-- coghead.xpath.BooleanExpr -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.RangeExpr    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC663D03A9' 
          name = 'RangeExpr' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.constraints>
            <Model:Constraint xmi.idref = 'a49DDFBD40186'/>  <!-- coghead.xpath.RangeExpr.OperandsInContext -->
          </Model:ModelElement.constraints>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.xpath.RangeExpr.to    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DC679200AB' 
              name = 'to' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DC679200AB'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.RangeExpr.from    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DC679503D8' 
              name = 'from' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DC679503D8'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.RangeExpr.OperandsInContext    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a49DDFBD40186' 
              name = 'OperandsInContext' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context RangeExpr
inv:
  self.from.context_ = self and self.to.context_ = self</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a49DC663D03A9'/>  <!-- coghead.xpath.RangeExpr -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.xpath.NumericExpr    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC66910290' 
          name = 'NumericExpr' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.constraints>
            <Model:Constraint xmi.idref = 'a49DDFBEB03A9'/>  <!-- coghead.xpath.NumericExpr.OperandsInContext -->
          </Model:ModelElement.constraints>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.xpath.NumericExpr.operands    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DC66F60222' 
              name = 'operands' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '2' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DC66F60222'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.NumericExpr.operator    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a49DC66C4004E' 
              name = 'operator' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC66A6038A'/>  <!-- coghead.xpath.NumericOperator -->
              </Model:TypedElement.type>
            </Model:Attribute>
            <!-- ==================== coghead.xpath.NumericExpr.OperandsInContext    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a49DDFBEB03A9' 
              name = 'OperandsInContext' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context NumericExpr
inv:
  self.operands-&gt;forAll(o | o.context_ = self)</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a49DC66910290'/>  <!-- coghead.xpath.NumericExpr -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.xpath.NumericOperator    [DataType] ==================== -->
        <Model:DataType xmi.id = 'a49DC66A6038A' 
          name = 'NumericOperator' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' >
          <Model:DataType.typeCode>
            <XMI.CorbaTypeCode>
              <XMI.CorbaTcEnum xmi.tcName = 'NumericOperator'>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'PLUS'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'MINUS'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'TIMES'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'div'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'idiv'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'mod'/>
              </XMI.CorbaTcEnum>
            </XMI.CorbaTypeCode>
          </Model:DataType.typeCode>
        </Model:DataType>
        <!-- ==================== coghead.xpath.Literal    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC6E2501A5' 
          name = 'Literal' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.xpath.Literal.value    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a49DC6E73030D' 
              name = 'value' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
              </Model:TypedElement.type>
            </Model:Attribute>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.xpath.NumberLiteral    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC6E320213' 
          name = 'NumberLiteral' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC6E2501A5'/>  <!-- coghead.xpath.Literal -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.StringLiteral    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC6E380157' 
          name = 'StringLiteral' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC6E2501A5'/>  <!-- coghead.xpath.Literal -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.VariableRef    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DC6EAF0280' 
          name = 'VariableRef' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.xpath.VariableRef.variable    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DC6EC703D8' 
              name = 'variable' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DC6EC703D8'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.xpath.ContextItemExpr    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DDE18B029F' 
          name = 'ContextItemExpr' annotation = 'The "." expression' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.FunctionCall    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DDE1B9007D' 
          name = 'FunctionCall' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.xpath.FunctionCall.functionToCall    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DDE2E7004E' 
              name = 'functionToCall' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DDE2DF02FD'/>  <!-- coghead.xpath.Function -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DDE2E7004E'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.FunctionCall.parameters    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DDE2FF0213' 
              name = 'parameters' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DDE2FF0213'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.xpath.Function    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DDE2DF02FD' 
          name = 'Function' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' />
        <!-- ==================== coghead.xpath.PathRootKind    [DataType] ==================== -->
        <Model:DataType xmi.id = 'a49DDE54F01A5' 
          name = 'PathRootKind' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' >
          <Model:DataType.typeCode>
            <XMI.CorbaTypeCode>
              <XMI.CorbaTcEnum xmi.tcName = 'PathRootKind'>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'RELATIVE'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'ABSOLUTE'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'ALLNODES'/>
              </XMI.CorbaTcEnum>
            </XMI.CorbaTypeCode>
          </Model:DataType.typeCode>
        </Model:DataType>
        <!-- ==================== coghead.xpath.FilterExpr    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DDE6B0009C' 
          name = 'FilterExpr' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.constraints>
            <Model:Constraint xmi.idref = 'a49DDFC8A004E'/>  <!-- coghead.xpath.FilterExpr.OperandsInContext_FilterExpr -->
            <Model:Constraint xmi.idref = 'a49DDFC41006D'/>  <!-- coghead.xpath.FilterExpr.OperandsInContext -->
            <Model:Constraint xmi.idref = 'a49DDF408002E'/>  <!-- coghead.xpath.FilterExpr.PredicatedMustHaveBooleanOrNumberType -->
          </Model:ModelElement.constraints>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.xpath.FilterExpr.expression    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DDE6D601C5' 
              name = 'expression' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DDE6D601C5'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.FilterExpr.predicates    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra4A042B5A0078' 
              name = 'predicates' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a4A042B5A0078'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.FilterExpr.OperandsInContext_FilterExpr    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a49DDFC8A004E' 
              name = 'OperandsInContext_FilterExpr' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context FilterExpr
inv:
  self.expression.context_ = self.context_</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a49DDE6B0009C'/>  <!-- coghead.xpath.FilterExpr -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
            <!-- ==================== coghead.xpath.FilterExpr.OperandsInContext    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a49DDFC41006D' 
              name = 'OperandsInContext' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context FilterExpr
inv:
  self.predicates-&gt;forAll(p | p.context_ = self)</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a49DDE6B0009C'/>  <!-- coghead.xpath.FilterExpr -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
            <!-- ==================== coghead.xpath.FilterExpr.PredicatedMustHaveBooleanOrNumberType    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a49DDF408002E' 
              name = 'PredicatedMustHaveBooleanOrNumberType' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context FilterExpr
inv:
  self.predicates-&gt;forAll(e | 
    Set {ElementaryTypeEnum::boolean, ElementaryTypeEnum::number}-&gt;includes(e.getType()) )</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a49DDE6B0009C'/>  <!-- coghead.xpath.FilterExpr -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.xpath.AxisStep    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DDE6B10119' 
          name = 'AxisStep' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.xpath.AxisStep.nodeTest    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49DDE94303D8' 
              name = 'nodeTest' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DDE93C000F'/>  <!-- coghead.xpath.NodeTest -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49DDE94303D8'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.AxisStep.axis    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a49DDE911001F' 
              name = 'axis' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DDE8D7001F'/>  <!-- coghead.xpath.Axis -->
              </Model:TypedElement.type>
            </Model:Attribute>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.xpath.Axis    [DataType] ==================== -->
        <Model:DataType xmi.id = 'a49DDE8D7001F' 
          name = 'Axis' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' >
          <Model:DataType.typeCode>
            <XMI.CorbaTypeCode>
              <XMI.CorbaTcEnum xmi.tcName = 'Axis'>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'child'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'descendant'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'attribute'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'self'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'descendant_or_self'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'following_sibling'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'following'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'namespace'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'ancestor'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'preceding_sibling'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'preceding'/>
              <XMI.CorbaTcEnumLabel xmi.tcName = 'ancestor_or_self'/>
              </XMI.CorbaTcEnum>
            </XMI.CorbaTypeCode>
          </Model:DataType.typeCode>
        </Model:DataType>
        <!-- ==================== coghead.xpath.NodeTest    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DDE93C000F' 
          name = 'NodeTest' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' />
        <!-- ==================== coghead.xpath.NameTest    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DDE9E402CE' 
          name = 'NameTest' annotation = 'The namespace part may be empty, but the name attribute has to contain a non-empty string. For one of the two parts a "*" wildcard may be used. Using "*" for both, namespace and name is equivalent to using * just for name and leaving namespace empty.' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.constraints>
            <Model:Constraint xmi.idref = 'a49DDEAE30280'/>  <!-- coghead.xpath.NameTest.NameMustNotBeEmpty -->
          </Model:ModelElement.constraints>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DDE93C000F'/>  <!-- coghead.xpath.NodeTest -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.xpath.NameTest.namespace    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a49DDEA3401F4' 
              name = 'namespace' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
              </Model:TypedElement.type>
            </Model:Attribute>
            <!-- ==================== coghead.xpath.NameTest.name    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a49DDEA470167' 
              name = 'name' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
              </Model:TypedElement.type>
            </Model:Attribute>
            <!-- ==================== coghead.xpath.NameTest.NameMustNotBeEmpty    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a49DDEAE30280' 
              name = 'NameMustNotBeEmpty' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context NameTest
inv:
  self.name-&gt;notEmpty() and self.name.size() &gt; 0</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a49DDE9E402CE'/>  <!-- coghead.xpath.NameTest -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.xpath.KindTest    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DDE9E50290' 
          name = 'KindTest' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DDE93C000F'/>  <!-- coghead.xpath.NodeTest -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.DocumentTest    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DDED11000F' 
          name = 'DocumentTest' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DDE9E50290'/>  <!-- coghead.xpath.KindTest -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.ElementTest    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DDED1102BF' 
          name = 'ElementTest' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DDE9E50290'/>  <!-- coghead.xpath.KindTest -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.SchemaElementTest    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DDED120186' 
          name = 'SchemaElementTest' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DDE9E50290'/>  <!-- coghead.xpath.KindTest -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.AttributeTest    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DDED13000F' 
          name = 'AttributeTest' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DDE9E50290'/>  <!-- coghead.xpath.KindTest -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.SchemaAttributeTest    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DDED130213' 
          name = 'SchemaAttributeTest' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DDE9E50290'/>  <!-- coghead.xpath.KindTest -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.PITest    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DDED14000F' 
          name = 'PITest' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DDE9E50290'/>  <!-- coghead.xpath.KindTest -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.CommentTest    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DDED140232' 
          name = 'CommentTest' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DDE9E50290'/>  <!-- coghead.xpath.KindTest -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.TextTest    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DDED15004E' 
          name = 'TextTest' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DDE9E50290'/>  <!-- coghead.xpath.KindTest -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.AnyKindTest    [Class] ==================== -->
        <Model:Class xmi.id = 'a49DDED1502AF' 
          name = 'AnyKindTest' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DDE9E50290'/>  <!-- coghead.xpath.KindTest -->
          </Model:GeneralizableElement.supertypes>
        </Model:Class>
        <!-- ==================== coghead.xpath.WithContext    [Class] ==================== -->
        <Model:Class xmi.id = 'a4A01E0830261' 
          name = 'WithContext' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:Namespace.contents>
            <!-- ==================== coghead.xpath.WithContext.context_    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra4A01E286005F' 
              name = 'context_' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a4A01E286005F'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.xpath.PathExpr    [Class] ==================== -->
        <Model:Class xmi.id = 'a4A080A9601FA' 
          name = 'PathExpr' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.constraints>
            <Model:Constraint xmi.idref = 'a4A0831A70328'/>  <!-- coghead.xpath.PathExpr.InitialRootValue -->
          </Model:ModelElement.constraints>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.xpath.PathExpr.lhs    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra4A080AB40104' 
              name = 'lhs' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a4A080AB40104'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.PathExpr.rhs    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra4A080AD30133' 
              name = 'rhs' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a4A080AD30133'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.xpath.PathExpr.root    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a49DC6B6202AF' 
              name = 'root' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DDE54F01A5'/>  <!-- coghead.xpath.PathRootKind -->
              </Model:TypedElement.type>
            </Model:Attribute>
            <!-- ==================== coghead.xpath.PathExpr.InitialRootValue    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a4A0831A70328' 
              name = 'InitialRootValue' annotation = '' 
              language = 'OCLInit' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context PathExpr::root:PathRootKind
init:
  PathRootKind::RELATIVE</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a4A080A9601FA'/>  <!-- coghead.xpath.PathExpr -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.xpath.org.omg.xmi.defaultValue=context PathExpr::root:PathRootKind...    [Tag] ==================== -->
        <Model:Tag xmi.id = 'G.364' 
          name = 'org.omg.xmi.defaultValue=context PathExpr::root:PathRootKind...' annotation = '' 
          tagId = 'org.omg.xmi.defaultValue' >
          <Model:Tag.values>
            <XMI.any xmi.type = 'string' xmi.name = ''>context PathExpr::root:PathRootKind
init: 
  PathRootKind::RELATIVE</XMI.any>
          </Model:Tag.values>
          <Model:Tag.elements>
            <Model:ModelElement xmi.idref = 'a49DC6B6202AF'/>  <!-- coghead.xpath.PathExpr.root -->
          </Model:Tag.elements>
        </Model:Tag>
        <!-- ==================== coghead.xpath.A_evaluate_iteration    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DC5CFC005D' 
          name = 'A_evaluate_iteration' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DC5CFF00DA' 
              name = 'evaluate' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DC5CFF00DC' 
              name = 'iteration' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5EE6000F'/>  <!-- coghead.xpath.Iteration -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_variable_iteratorDeclaration    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DC5D8A0138' 
          name = 'A_variable_iteratorDeclaration' annotation = 'the variable to which the values in the "in" expression will be assigned, one after the other' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DC5D8A031C' 
              name = 'variable' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5D2D0177'/>  <!-- coghead.xpath.XPathVariable -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DC5D8A031E' 
              name = 'iteratorDeclaration' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5FD8000F'/>  <!-- coghead.xpath.IteratorDeclaration -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_in__iteratorDeclaration    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DC5DB602DE' 
          name = 'A_in__iteratorDeclaration' annotation = 'defines the "in" clause&apos;s expression over which the variable will iterate' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DC5DB902BF' 
              name = 'in_' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DC5DB902C1' 
              name = 'iteratorDeclaration' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5FD8000F'/>  <!-- coghead.xpath.IteratorDeclaration -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_iteratorDeclarations_iteration    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DC5FEE0148' 
          name = 'A_iteratorDeclarations_iteration' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DC5FEE035B' 
              name = 'iteratorDeclarations' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5FD8000F'/>  <!-- coghead.xpath.IteratorDeclaration -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DC5FEE035D' 
              name = 'iteration' annotation = '' 
              isNavigable = 'true' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5EE6000F'/>  <!-- coghead.xpath.Iteration -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_conditions_ifExpr    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DC62D50242' 
          name = 'A_conditions_ifExpr' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DC62D800FA' 
              name = 'conditions' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DC62D80109' 
              name = 'ifExpr' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5CA4004E'/>  <!-- coghead.xpath.IfExpr -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_then__ifExpr    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DC62F8008C' 
          name = 'A_then__ifExpr' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DC62FA01D4' 
              name = 'then_' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DC62FA01E4' 
              name = 'ifExpr' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5CA4004E'/>  <!-- coghead.xpath.IfExpr -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_else__ifExpr    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DC631900CB' 
          name = 'A_else__ifExpr' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DC631B0203' 
              name = 'else_' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DC631B0213' 
              name = 'ifExpr' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5CA4004E'/>  <!-- coghead.xpath.IfExpr -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_left_comparisonExpr    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DC644F038A' 
          name = 'A_left_comparisonExpr' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DC645603D8' 
              name = 'left' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DC645603DA' 
              name = 'comparisonExpr' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC641B0177'/>  <!-- coghead.xpath.ComparisonExpr -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_right_comparisonExpr    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DC646B032C' 
          name = 'A_right_comparisonExpr' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DC646D0138' 
              name = 'right' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DC646D0148' 
              name = 'comparisonExpr' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC641B0177'/>  <!-- coghead.xpath.ComparisonExpr -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_operands_booleanExpr    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DC64B700EA' 
          name = 'A_operands_booleanExpr' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DC64BA00DA' 
              name = 'operands' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DC64BA00DC' 
              name = 'booleanExpr' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5CA50203'/>  <!-- coghead.xpath.BooleanExpr -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_operands_numericExpr    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DC66F403D8' 
          name = 'A_operands_numericExpr' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DC66F60222' 
              name = 'operands' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '2' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DC66F60232' 
              name = 'numericExpr' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC66910290'/>  <!-- coghead.xpath.NumericExpr -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_to_rangeExpr    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DC678E0242' 
          name = 'A_to_rangeExpr' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DC679200AB' 
              name = 'to' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DC679200CB' 
              name = 'rangeExpr' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC663D03A9'/>  <!-- coghead.xpath.RangeExpr -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_from_rangeExpr    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DC679400CB' 
          name = 'A_from_rangeExpr' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DC679503D8' 
              name = 'from' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DC679503DA' 
              name = 'rangeExpr' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC663D03A9'/>  <!-- coghead.xpath.RangeExpr -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_variable_variableRef    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DC6EC70222' 
          name = 'A_variable_variableRef' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DC6EC703D8' 
              name = 'variable' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DC6EC703DA' 
              name = 'variableRef' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC6EAF0280'/>  <!-- coghead.xpath.VariableRef -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_functionToCall_functionCall    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DDE2E60213' 
          name = 'A_functionToCall_functionCall' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DDE2E7004E' 
              name = 'functionToCall' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DDE2DF02FD'/>  <!-- coghead.xpath.Function -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DDE2E7009C' 
              name = 'functionCall' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DDE1B9007D'/>  <!-- coghead.xpath.FunctionCall -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_parameters_functionCall    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DDE2FD0167' 
          name = 'A_parameters_functionCall' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DDE2FF0213' 
              name = 'parameters' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DDE2FF0261' 
              name = 'functionCall' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DDE1B9007D'/>  <!-- coghead.xpath.FunctionCall -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_expression_filterExpr    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DDE6D301B5' 
          name = 'A_expression_filterExpr' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DDE6D601C5' 
              name = 'expression' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DDE6D601D4' 
              name = 'filterExpr' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DDE6B0009C'/>  <!-- coghead.xpath.FilterExpr -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_nodeTest_axisStep    [Association] ==================== -->
        <Model:Association xmi.id = 'a49DDE94301E4' 
          name = 'A_nodeTest_axisStep' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49DDE94303D8' 
              name = 'nodeTest' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DDE93C000F'/>  <!-- coghead.xpath.NodeTest -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49DDE94303DA' 
              name = 'axisStep' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DDE6B10119'/>  <!-- coghead.xpath.AxisStep -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_withContext_context_    [Association] ==================== -->
        <Model:Association xmi.id = 'a4A01E286005D' 
          name = 'A_withContext_context_' annotation = 'An XPath expression has a context on which it is being evaluated. Only the "outermost" expression receives its context from outside the XPath expression tree, such as a node in some document tree. All other expressions obtain their context by iterating over the sequence produced by some other XPath expression. This association points to the expression that provides the context sequence out of which the context element for this expression is obtained. Only for the outermost expression this is not set.' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a4A01E286005E' 
              name = 'withContext' annotation = '' 
              isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A01E0830261'/>  <!-- coghead.xpath.WithContext -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a4A01E286005F' 
              name = 'context_' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_predicates_filterExpr    [Association] ==================== -->
        <Model:Association xmi.id = 'a4A042B5A0077' 
          name = 'A_predicates_filterExpr' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a4A042B5A0078' 
              name = 'predicates' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a4A042B5A0079' 
              name = 'filterExpr' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DDE6B0009C'/>  <!-- coghead.xpath.FilterExpr -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_lhs_pathExpr    [Association] ==================== -->
        <Model:Association xmi.id = 'a4A080AB301D1' 
          name = 'A_lhs_pathExpr' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a4A080AB40104' 
              name = 'lhs' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a4A080AB40114' 
              name = 'pathExpr' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A080A9601FA'/>  <!-- coghead.xpath.PathExpr -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
        <!-- ==================== coghead.xpath.A_rhs_pathExpr    [Association] ==================== -->
        <Model:Association xmi.id = 'a4A080AD202BB' 
          name = 'A_rhs_pathExpr' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a4A080AD30133' 
              name = 'rhs' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49DC5C18004E'/>  <!-- coghead.xpath.XPathExpression -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a4A080AD30135' 
              name = 'pathExpr' annotation = '' 
              isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a4A080A9601FA'/>  <!-- coghead.xpath.PathExpr -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
      </Model:Namespace.contents>
    </Model:Package>
    <!-- ==================== coghead.packages    [Package] ==================== -->
    <Model:Package xmi.id = 'a49F860390118' 
      name = 'packages' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' >
      <Model:Namespace.contents>
        <!-- ==================== coghead.packages.Package    [Class] ==================== -->
        <Model:Class xmi.id = 'a49F860510231' 
          name = 'Package' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:ModelElement.constraints>
            <Model:Constraint xmi.idref = 'a49F860D703D7'/>  <!-- coghead.packages.Package.UniqueNames -->
          </Model:ModelElement.constraints>
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49F860630166'/>  <!-- coghead.packages.Packagable -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.packages.Package.contents    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49F860690166' 
              name = 'contents' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49F860630166'/>  <!-- coghead.packages.Packagable -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49F860690166'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.packages.Package.UniqueNames    [Constraint] ==================== -->
            <Model:Constraint xmi.id = 'a49F860D703D7' 
              name = 'UniqueNames' annotation = '' 
              language = 'OCL' evaluationPolicy = 'deferred' >
              <Model:Constraint.expression>
                <XMI.any xmi.type = 'string' xmi.name = ''>context Package
inv:
  self.contents-&gt;forAll(p1, p2 | p1 &lt;&gt; p2 implies p1.name &lt;&gt; p2.name)</XMI.any>
              </Model:Constraint.expression>
              <Model:Constraint.constrainedElements>
                <Model:ModelElement xmi.idref = 'a49F860510231'/>  <!-- coghead.packages.Package -->
              </Model:Constraint.constrainedElements>
            </Model:Constraint>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.packages.org.omg.sap2mof.store=no    [Tag] ==================== -->
        <Model:Tag xmi.id = 'G.365' 
          name = 'org.omg.sap2mof.store=no' annotation = '' 
          tagId = 'org.omg.sap2mof.store' >
          <Model:Tag.values>
            <XMI.any xmi.type = 'string' xmi.name = ''>no</XMI.any>
          </Model:Tag.values>
          <Model:Tag.elements>
            <Model:ModelElement xmi.idref = 'ra49F860690166'/>  <!-- coghead.packages.Package.contents -->
            <Model:ModelElement xmi.idref = 'a49F860690166'/>
          </Model:Tag.elements>
        </Model:Tag>
        <!-- ==================== coghead.packages.NamedElement    [Class] ==================== -->
        <Model:Class xmi.id = 'a49F8605502CE' 
          name = 'NamedElement' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:Namespace.contents>
            <!-- ==================== coghead.packages.NamedElement.name    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a49F860B30251' 
              name = 'name' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
              </Model:TypedElement.type>
            </Model:Attribute>
            <!-- ==================== coghead.packages.NamedElement.description    [Attribute] ==================== -->
            <Model:Attribute xmi.id = 'a49F860B600CA' 
              name = 'description' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' 
              isDerived = 'false' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
              </Model:TypedElement.type>
            </Model:Attribute>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.packages.Packagable    [Class] ==================== -->
        <Model:Class xmi.id = 'a49F860630166' 
          name = 'Packagable' annotation = '' 
          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
          isSingleton = 'false' >
          <Model:GeneralizableElement.supertypes>
            <Model:GeneralizableElement xmi.idref = 'a49F8605502CE'/>  <!-- coghead.packages.NamedElement -->
          </Model:GeneralizableElement.supertypes>
          <Model:Namespace.contents>
            <!-- ==================== coghead.packages.Packagable.pkg    [Reference] ==================== -->
            <Model:Reference xmi.id = 'ra49F860690176' 
              name = 'pkg' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isChangeable = 'true' >
              <Model:StructuralFeature.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:StructuralFeature.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49F860510231'/>  <!-- coghead.packages.Package -->
              </Model:TypedElement.type>
              <Model:Reference.referencedEnd>
                <Model:AssociationEnd xmi.idref = 'a49F860690176'/>
              </Model:Reference.referencedEnd>
            </Model:Reference>
            <!-- ==================== coghead.packages.Packagable.getApplication    [Operation] ==================== -->
            <Model:Operation xmi.id = 'a4A1AAF8E0249' 
              name = 'getApplication' annotation = '' 
              scope = 'instance_level' visibility = 'public_vis' 
              isQuery = 'false' >
              <Model:Namespace.contents>
                <Model:Parameter xmi.id = 'XX.6' 
                  name = '*return' annotation = '' 
                  direction = 'return_dir' >
                  <Model:Parameter.multiplicity>
                    <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
                  </Model:Parameter.multiplicity>
                  <Model:TypedElement.type>
                    <Model:Classifier xmi.idref = 'a49D5204002DE'/>  <!-- coghead.Application -->
                  </Model:TypedElement.type>
                </Model:Parameter>
              </Model:Namespace.contents>
            </Model:Operation>
          </Model:Namespace.contents>
        </Model:Class>
        <!-- ==================== coghead.packages.org.omg.sap2mof.store=yes    [Tag] ==================== -->
        <Model:Tag xmi.id = 'G.366' 
          name = 'org.omg.sap2mof.store=yes' annotation = '' 
          tagId = 'org.omg.sap2mof.store' >
          <Model:Tag.values>
            <XMI.any xmi.type = 'string' xmi.name = ''>yes</XMI.any>
          </Model:Tag.values>
          <Model:Tag.elements>
            <Model:ModelElement xmi.idref = 'ra49F860690176'/>  <!-- coghead.packages.Packagable.pkg -->
            <Model:ModelElement xmi.idref = 'a49F860690176'/>
          </Model:Tag.elements>
        </Model:Tag>
        <!-- ==================== coghead.packages.org.omg.sap2mof.OperationCodeOcl=context Packagable::getApplication():Application...    [Tag] ==================== -->
        <Model:Tag xmi.id = 'G.367' 
          name = 'org.omg.sap2mof.OperationCodeOcl=context Packagable::getApplication():Application...' annotation = '' 
          tagId = 'org.omg.sap2mof.OperationCodeOcl' >
          <Model:Tag.values>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Packagable::getApplication():Application
body:
  if self.myApplication-&gt;isEmpty() then
    self.pkg.getApplication()
  else
    self.myApplication
  endif</XMI.any>
          </Model:Tag.values>
          <Model:Tag.elements>
            <Model:ModelElement xmi.idref = 'a4A1AAF8E0249'/>  <!-- coghead.packages.Packagable.getApplication -->
          </Model:Tag.elements>
        </Model:Tag>
        <!-- ==================== coghead.packages.A_contents_pkg    [Association] ==================== -->
        <Model:Association xmi.id = 'a49F86069000F' 
          name = 'A_contents_pkg' annotation = '' 
          isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
          isDerived = 'false' >
          <Model:Namespace.contents>
            <Model:AssociationEnd xmi.id = 'a49F860690166' 
              name = 'contents' annotation = '' 
              isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49F860630166'/>  <!-- coghead.packages.Packagable -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
            <Model:AssociationEnd xmi.id = 'a49F860690176' 
              name = 'pkg' annotation = '' 
              isNavigable = 'true' aggregation = 'composite' isChangeable = 'true' >
              <Model:AssociationEnd.multiplicity>
                <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:AssociationEnd.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49F860510231'/>  <!-- coghead.packages.Package -->
              </Model:TypedElement.type>
            </Model:AssociationEnd>
          </Model:Namespace.contents>
        </Model:Association>
      </Model:Namespace.contents>
    </Model:Package>
    <!-- ==================== coghead.Account    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D5203C0290' 
      name = 'Account' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49F8605502CE'/>  <!-- coghead.packages.NamedElement -->
      </Model:GeneralizableElement.supertypes>
      <Model:Namespace.contents>
        <!-- ==================== coghead.Account.applications    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D520B00148' 
          name = 'applications' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204002DE'/>  <!-- coghead.Application -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D520B00148'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Account.permissions    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D5229003A9' 
          name = 'permissions' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520880213'/>  <!-- coghead.AccountLevelPermission -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D5229003A9'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Account.roles    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra4A1674820119' 
          name = 'roles' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a4A1674820119'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.org.omg.sap2mof.requiresPartition=True    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.368' 
      name = 'org.omg.sap2mof.requiresPartition=True' annotation = '' 
      tagId = 'org.omg.sap2mof.requiresPartition' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>True</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xmi.idref = 'a49D5203C0290'/>  <!-- coghead.Account -->
        <Model:ModelElement xmi.idref = 'a49D5204002DE'/>  <!-- coghead.Application -->
        <Model:ModelElement xmi.idref = 'a49D5204500DA'/>  <!-- coghead.Collection -->
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== coghead.Application    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D5204002DE' 
      name = 'Application' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49F8605502CE'/>  <!-- coghead.packages.NamedElement -->
      </Model:GeneralizableElement.supertypes>
      <Model:Namespace.contents>
        <!-- ==================== coghead.Application.rootPackages    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D520B401E4' 
          name = 'rootPackages' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49F860630166'/>  <!-- coghead.packages.Packagable -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D520B401E4'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Application.permissions    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D522A203D8' 
          name = 'permissions' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5208101C5'/>  <!-- coghead.ApplicationLevelPermission -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D522A203D8'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.Collection    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D5204500DA' 
      name = 'Collection' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:ModelElement.constraints>
        <Model:Constraint xmi.idref = 'a4A1A9526029F'/>  <!-- coghead.Collection.FormsMustHaveDistinctNames -->
      </Model:ModelElement.constraints>
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49F860630166'/>  <!-- coghead.packages.Packagable -->
        <Model:GeneralizableElement xmi.idref = 'a4A0A69870218'/>  <!-- coghead.DefinitionEnvironment -->
      </Model:GeneralizableElement.supertypes>
      <Model:Namespace.contents>
        <!-- ==================== coghead.Collection.actions    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D520B90399' 
          name = 'actions' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D52049036B'/>  <!-- coghead.action.Action -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D520B90399'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Collection.permissions    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D522B00128' 
          name = 'permissions' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D52074000F'/>  <!-- coghead.CollectionLevelPermission -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D522B00128'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Collection.forms    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D522C201A5' 
          name = 'forms' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5205A02AF'/>  <!-- coghead.Form -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D522C201A5'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Collection.schema    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D522C4007D' 
          name = 'schema' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204F01F4'/>  <!-- coghead.Schema -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D522C4007D'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Collection.views    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D522D9000F' 
          name = 'views' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520600148'/>  <!-- coghead.View -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D522D9000F'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Collection.getDefaultForm    [Operation] ==================== -->
        <Model:Operation xmi.id = 'a4A1C4BA201C5' 
          name = 'getDefaultForm' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isQuery = 'true' >
          <Model:Namespace.contents>
            <Model:Parameter xmi.id = 'XX.7' 
              name = '*return' annotation = '' 
              direction = 'return_dir' >
              <Model:Parameter.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:Parameter.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D5205A02AF'/>  <!-- coghead.Form -->
              </Model:TypedElement.type>
            </Model:Parameter>
          </Model:Namespace.contents>
        </Model:Operation>
        <!-- ==================== coghead.Collection.FormsMustHaveDistinctNames    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a4A1A9526029F' 
          name = 'FormsMustHaveDistinctNames' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context "Collection"
inv:
  self.forms-&gt;forAll(a, b | a&lt;&gt;b implies a.name &lt;&gt; b.name)</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a49D5204500DA'/>  <!-- coghead.Collection -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.org.omg.sap2mof.store=yes    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.369' 
      name = 'org.omg.sap2mof.store=yes' annotation = '' 
      tagId = 'org.omg.sap2mof.store' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>yes</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xmi.idref = 'ra49D522C4007D'/>  <!-- coghead.Collection.schema -->
        <Model:ModelElement xmi.idref = 'ra49D542B80242'/>  <!-- coghead.Schema.entries -->
        <Model:ModelElement xmi.idref = 'ra49D541A40000'/>  <!-- coghead.Field.defaultValue -->
        <Model:ModelElement xmi.idref = 'ra49D541C70148'/>  <!-- coghead.Field.constraint -->
        <Model:ModelElement xmi.idref = 'ra49D6281F0271'/>  <!-- coghead.Field.formula -->
        <Model:ModelElement xmi.idref = 'a49D522C4007D'/>
        <Model:ModelElement xmi.idref = 'a49D541A40000'/>
        <Model:ModelElement xmi.idref = 'a49D541C70148'/>
        <Model:ModelElement xmi.idref = 'a49D542B80242'/>
        <Model:ModelElement xmi.idref = 'a49D6281F0271'/>
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== coghead.org.omg.sap2mof.OperationCodeOcl=context "Collection"::getDefaultForm():Form...    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.370' 
      name = 'org.omg.sap2mof.OperationCodeOcl=context "Collection"::getDefaultForm():Form...' annotation = '' 
      tagId = 'org.omg.sap2mof.OperationCodeOcl' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>context "Collection"::getDefaultForm():Form
body:
  if self.forms-&gt;size() = 1 then
    self.forms-&gt;asSequence()-&gt;at(1)
  else
    let deff = self.forms-&gt;select(f | f.name = self.name) in
    if deff-&gt;notEmpty() then
      deff-&gt;asSequence()-&gt;at(1)
    else
      null
    endif
  endif</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xmi.idref = 'a4A1C4BA201C5'/>  <!-- coghead.Collection.getDefaultForm -->
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== coghead.Schema    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D5204F01F4' 
      name = 'Schema' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:Namespace.contents>
        <!-- ==================== coghead.Schema.collection    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D522C4007F' 
          name = 'collection' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204500DA'/>  <!-- coghead.Collection -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D522C4007F'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Schema.entries    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D542B80242' 
          name = 'entries' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D542A602CE'/>  <!-- coghead.SchemaEntry -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D542B80242'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.org.omg.sap2mof.store=no    [Tag] ==================== -->
    <Model:Tag xmi.id = 'G.371' 
      name = 'org.omg.sap2mof.store=no' annotation = '' 
      tagId = 'org.omg.sap2mof.store' >
      <Model:Tag.values>
        <XMI.any xmi.type = 'string' xmi.name = ''>no</XMI.any>
      </Model:Tag.values>
      <Model:Tag.elements>
        <Model:ModelElement xmi.idref = 'ra49D522C4007F'/>  <!-- coghead.Schema.collection -->
        <Model:ModelElement xmi.idref = 'ra49D542B80244'/>  <!-- coghead.SchemaEntry.schema -->
        <Model:ModelElement xmi.idref = 'a49D522C4007F'/>
        <Model:ModelElement xmi.idref = 'a49D541A40002'/>
        <Model:ModelElement xmi.idref = 'a49D541C70157'/>
        <Model:ModelElement xmi.idref = 'a49D542B80244'/>
        <Model:ModelElement xmi.idref = 'a49D6281F0273'/>
      </Model:Tag.elements>
    </Model:Tag>
    <!-- ==================== coghead.Item    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D520550271' 
      name = 'Item' annotation = 'create and delete are disabled on records of Item types, making Item a singleton collection with exactly one record.' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49D5204500DA'/>  <!-- coghead.Collection -->
      </Model:GeneralizableElement.supertypes>
    </Model:Class>
    <!-- ==================== coghead.Form    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D5205A02AF' 
      name = 'Form' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49F8605502CE'/>  <!-- coghead.packages.NamedElement -->
      </Model:GeneralizableElement.supertypes>
    </Model:Class>
    <!-- ==================== coghead.View    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D520600148' 
      name = 'View' annotation = 'View or change one record. A tabular projection of subsets of records of a collection.' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49F8605502CE'/>  <!-- coghead.packages.NamedElement -->
      </Model:GeneralizableElement.supertypes>
      <Model:Namespace.contents>
        <!-- ==================== coghead.View.query    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D521270000' 
          name = 'query' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D521270000'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.View.form    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D52330033C' 
          name = 'form' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5205A02AF'/>  <!-- coghead.Form -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D52330033C'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.Query    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D520650128' 
      name = 'Query' annotation = 'Chooses which subset is to be shown. The result set contains a set of record sets where each record set holds a record per collection template.' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:Namespace.contents>
        <!-- ==================== coghead.Query.collectionTemplates    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D5294802FD' 
          name = 'collectionTemplates' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D52AAB003E'/>  <!-- coghead.CollectionTemplate -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D5294802FD'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Query.condition    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D53A08008C' 
          name = 'condition' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D53A08008C'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Query.sortBy    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D53ADB00FA' 
          name = 'sortBy' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'true' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53A7A0242'/>  <!-- coghead.SortSpec -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D53ADB00FA'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Query.groupBy    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D53BCB02CE' 
          name = 'groupBy' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'true' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53BC402BF'/>  <!-- coghead.GroupBySpec -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D53BCB02CE'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Query.projection    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D53D2E032C' 
          name = 'projection' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53D270000'/>  <!-- coghead.Projection -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D53D2E032C'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.TemplatedPermission    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D5206A030D' 
      name = 'TemplatedPermission' annotation = 'permission specification for records; the permission applies and is enforced for records matching the query' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:Namespace.contents>
        <!-- ==================== coghead.TemplatedPermission.query    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D526E9004E' 
          name = 'query' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D526E9004E'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.TemplatedPermission.retrieve    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D537FA00CB' 
          name = 'retrieve' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D537FA00CB'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.TemplatedPermission.delete    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra4A1E5F18012F' 
          name = 'delete' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a4A1E5F18012F'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.TemplatedPermission.update    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra4A1E5F1B0035' 
          name = 'update' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a4A1E5F1B0035'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.CollectionLevelPermission    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D52074000F' 
      name = 'CollectionLevelPermission' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:Namespace.contents>
        <!-- ==================== coghead.CollectionLevelPermission.createRecord    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D536A20213' 
          name = 'createRecord' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D536A20213'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.CollectionLevelPermission.retrieveAllRecords    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D536E9031C' 
          name = 'retrieveAllRecords' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D536E9031C'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.CollectionLevelPermission.updateAllRecords    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D536EC00FA' 
          name = 'updateAllRecords' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D536EC00FA'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.CollectionLevelPermission.deleteAllRecords    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D536EF031C' 
          name = 'deleteAllRecords' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D536EF031C'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.CollectionLevelPermission.templatedPermissions    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra4A1E5EAF005D' 
          name = 'templatedPermissions' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'true' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5206A030D'/>  <!-- coghead.TemplatedPermission -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a4A1E5EAF005D'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.ApplicationLevelPermission    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D5208101C5' 
      name = 'ApplicationLevelPermission' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:Namespace.contents>
        <!-- ==================== coghead.ApplicationLevelPermission.runtimeCreate    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D535F8033C' 
          name = 'runtimeCreate' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D535F8033C'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.ApplicationLevelPermission.runtimeRetrieve    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D535FC01E4' 
          name = 'runtimeRetrieve' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D535FC01E4'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.ApplicationLevelPermission.runtimeUpdate    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D535FF01D4' 
          name = 'runtimeUpdate' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D535FF01D4'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.ApplicationLevelPermission.runtimeDelete    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D5360201A5' 
          name = 'runtimeDelete' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D5360201A5'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.ApplicationLevelPermission.role    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D5360600FA' 
          name = 'role' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D5360600FA'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.ApplicationLevelPermission.designTimeRetrieve    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D5360901C5' 
          name = 'designTimeRetrieve' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D5360901C5'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.ApplicationLevelPermission.designTimeUpdate    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D5360C032C' 
          name = 'designTimeUpdate' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D5360C032C'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.ApplicationLevelPermission.designTimeDelete    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D53610005D' 
          name = 'designTimeDelete' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D53610005D'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.AccountLevelPermission    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D520880213' 
      name = 'AccountLevelPermission' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:Namespace.contents>
        <!-- ==================== coghead.AccountLevelPermission.runtimeCreate    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D534CC002E' 
          name = 'runtimeCreate' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D534CC002E'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.AccountLevelPermission.runtimeRetrieve    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D534CE00DA' 
          name = 'runtimeRetrieve' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D534CE00DA'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.AccountLevelPermission.runtimeUpdate    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D534D002EE' 
          name = 'runtimeUpdate' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D534D002EE'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.AccountLevelPermission.runtimeDelete    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D534D2037A' 
          name = 'runtimeDelete' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D534D2037A'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.AccountLevelPermission.designTimeCreate    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D535910000' 
          name = 'designTimeCreate' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D535910000'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.AccountLevelPermission.designTimeRetrieve    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D53594005D' 
          name = 'designTimeRetrieve' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D53594005D'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.AccountLevelPermission.designTimeUpdate    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D535960271' 
          name = 'designTimeUpdate' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D535960271'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.AccountLevelPermission.designTimeDelete    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D5359903A9' 
          name = 'designTimeDelete' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D5359903A9'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.FieldTemplate    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D529D50148' 
      name = 'FieldTemplate' annotation = 'Like an "alias" in an SQL query specification; used as the anchor to which other parts of the query may reference, such as a sort-by or group-by specification.' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:Namespace.contents>
        <!-- ==================== coghead.FieldTemplate.field    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D53DE10290' 
          name = 'field' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D53DE10290'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.CollectionTemplate    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D52AAB003E' 
      name = 'CollectionTemplate' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:Namespace.contents>
        <!-- ==================== coghead.CollectionTemplate.fieldTemplates    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D52A50033C' 
          name = 'fieldTemplates' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D529D50148'/>  <!-- coghead.FieldTemplate -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D52A50033C'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.CollectionTemplate.collection    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D52AEC0128' 
          name = 'collection' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204500DA'/>  <!-- coghead.Collection -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D52AEC0128'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.CollectionTemplate.name    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a49DB70AD02A4' 
          name = 'name' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
          </Model:TypedElement.type>
        </Model:Attribute>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.OperatorTemplate    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D52B5F006D' 
      name = 'OperatorTemplate' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49D529D50148'/>  <!-- coghead.FieldTemplate -->
      </Model:GeneralizableElement.supertypes>
      <Model:Namespace.contents>
        <!-- ==================== coghead.OperatorTemplate.operator    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a49D52BF70167' 
          name = 'operator' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D52C00034B'/>  <!-- coghead.OperatorEnum -->
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== coghead.OperatorTemplate.valueOrListOrFunction    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a49D52C3A0186' 
          name = 'valueOrListOrFunction' annotation = 'a constant or a list of constants or an XPath function' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
          </Model:TypedElement.type>
        </Model:Attribute>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.OperatorEnum    [DataType] ==================== -->
    <Model:DataType xmi.id = 'a49D52C00034B' 
      name = 'OperatorEnum' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' >
      <Model:DataType.typeCode>
        <XMI.CorbaTypeCode>
          <XMI.CorbaTcEnum xmi.tcName = 'OperatorEnum'>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'EQUALS'/>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'GREATER_THAN'/>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'LESS_THAN'/>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'GREATER_OR_EQUALS'/>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'LESS_OR_EQUALS'/>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'CONTAINS'/>
          </XMI.CorbaTcEnum>
        </XMI.CorbaTypeCode>
      </Model:DataType.typeCode>
    </Model:DataType>
    <!-- ==================== coghead.Expression    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D5310C007D' 
      name = 'Expression' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:Namespace.contents>
        <!-- ==================== coghead.Expression.getType    [Operation] ==================== -->
        <Model:Operation xmi.id = 'a49DA1A930128' 
          name = 'getType' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isQuery = 'false' >
          <Model:Namespace.contents>
            <Model:Parameter xmi.id = 'XX.8' 
              name = '*return' annotation = '' 
              direction = 'return_dir' >
              <Model:Parameter.multiplicity>
                <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
              </Model:Parameter.multiplicity>
              <Model:TypedElement.type>
                <Model:Classifier xmi.idref = 'a49D53EF4036B'/>  <!-- coghead.ElementaryTypeEnum -->
              </Model:TypedElement.type>
            </Model:Parameter>
          </Model:Namespace.contents>
        </Model:Operation>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.QueryVariable    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D5312E03D8' 
      name = 'QueryVariable' annotation = 'Variables are used to express "joins" across fields, collections and even applications within the same account.' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49DB6ABD0118'/>  <!-- coghead.VariableExpression -->
      </Model:GeneralizableElement.supertypes>
    </Model:Class>
    <!-- ==================== coghead.Role    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D534C401C5' 
      name = 'Role' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49F8605502CE'/>  <!-- coghead.packages.NamedElement -->
      </Model:GeneralizableElement.supertypes>
    </Model:Class>
    <!-- ==================== coghead.SortSpec    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D53A7A0242' 
      name = 'SortSpec' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:Namespace.contents>
        <!-- ==================== coghead.SortSpec.field    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D53AF0000F' 
          name = 'field' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D53AF0000F'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.SortSpec.ordering    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a49D53AA301D4' 
          name = 'ordering' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53A8400CB'/>  <!-- coghead.OrderEnum -->
          </Model:TypedElement.type>
        </Model:Attribute>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.OrderEnum    [DataType] ==================== -->
    <Model:DataType xmi.id = 'a49D53A8400CB' 
      name = 'OrderEnum' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' >
      <Model:DataType.typeCode>
        <XMI.CorbaTypeCode>
          <XMI.CorbaTcEnum xmi.tcName = 'OrderEnum'>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'ASCENDING'/>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'DESCENDING'/>
          </XMI.CorbaTcEnum>
        </XMI.CorbaTypeCode>
      </Model:DataType.typeCode>
    </Model:DataType>
    <!-- ==================== coghead.Field    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D53AE800EA' 
      name = 'Field' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:ModelElement.constraints>
        <Model:Constraint xmi.idref = 'a49DA1C3F01B5'/>  <!-- coghead.Field.ValueListQueryType -->
        <Model:Constraint xmi.idref = 'a4A018A75000A'/>  <!-- coghead.Field.EitherFormularOrDefaultValue -->
      </Model:ModelElement.constraints>
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49D542A602CE'/>  <!-- coghead.SchemaEntry -->
      </Model:GeneralizableElement.supertypes>
      <Model:Namespace.contents>
        <!-- ==================== coghead.Field.defaultValue    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D541A40000' 
          name = 'defaultValue' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D541A40000'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Field.constraint    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D541C70148' 
          name = 'constraint' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D541C70148'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Field.formula    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D6281F0271' 
          name = 'formula' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D6281F0271'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Field.valueList    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D62C64005D' 
          name = 'valueList' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D62C64005D'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Field.unique    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a49D627B8029F' 
          name = 'unique' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== coghead.Field.type    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a49D627C7007D' 
          name = 'type' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53EF4036B'/>  <!-- coghead.ElementaryTypeEnum -->
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== coghead.Field.ValueListQueryType    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a49DA1C3F01B5' 
          name = 'ValueListQueryType' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Field
inv:
  self.valueList-&gt;notEmpty() implies
  (
   self.valueList.projection.fields-&gt;size() = 2 and
   self.valueList.projection.fields-&gt;at(1).type = ElementaryTypeEnum::string and
   self.valueList.projection.fields-&gt;at(2).type = self.type
  )</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== coghead.Field.EitherFormularOrDefaultValue    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a4A018A75000A' 
          name = 'EitherFormularOrDefaultValue' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Field
inv:
  ( self.formula-&gt;size() + self.defaultValue-&gt;size() ) &lt;= 1</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.GroupBySpec    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D53BC402BF' 
      name = 'GroupBySpec' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:Namespace.contents>
        <!-- ==================== coghead.GroupBySpec.field    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D53DC802BF' 
          name = 'field' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D53DC802BF'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.Projection    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D53D270000' 
      name = 'Projection' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:Namespace.contents>
        <!-- ==================== coghead.Projection.fields    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D53DB600BB' 
          name = 'fields' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '-1' is_ordered = 'true' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D53DB600BB'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.FieldGroup    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D53E8E02AF' 
      name = 'FieldGroup' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49D542A602CE'/>  <!-- coghead.SchemaEntry -->
      </Model:GeneralizableElement.supertypes>
      <Model:Namespace.contents>
        <!-- ==================== coghead.FieldGroup.fields    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D541F0001F' 
          name = 'fields' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D541F0001F'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.ElementaryTypeEnum    [DataType] ==================== -->
    <Model:DataType xmi.id = 'a49D53EF4036B' 
      name = 'ElementaryTypeEnum' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' >
      <Model:DataType.typeCode>
        <XMI.CorbaTypeCode>
          <XMI.CorbaTcEnum xmi.tcName = 'ElementaryTypeEnum'>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'string'/>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'timepoint'/>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'duration'/>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'number'/>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'boolean'/>
          </XMI.CorbaTcEnum>
        </XMI.CorbaTypeCode>
      </Model:DataType.typeCode>
    </Model:DataType>
    <!-- ==================== coghead.SchemaEntry    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D542A602CE' 
      name = 'SchemaEntry' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49F8605502CE'/>  <!-- coghead.packages.NamedElement -->
      </Model:GeneralizableElement.supertypes>
      <Model:Namespace.contents>
        <!-- ==================== coghead.SchemaEntry.schema    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D542B80244' 
          name = 'schema' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204F01F4'/>  <!-- coghead.Schema -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D542B80244'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.SchemaEntry.cardinality    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a49D5418E0138' 
          name = 'cardinality' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a3B538AB300B3'/>
          </Model:TypedElement.type>
        </Model:Attribute>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.SequenceField    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D62DF601A5' 
      name = 'SequenceField' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:ModelElement.constraints>
        <Model:Constraint xmi.idref = 'a49DA050800FA'/>  <!-- coghead.SequenceField.SequenceFieldsHaveNoFormula -->
        <Model:Constraint xmi.idref = 'a49DA052A006D'/>  <!-- coghead.SequenceField.SequenceFieldsHaveNoValueList -->
        <Model:Constraint xmi.idref = 'a49DA05450213'/>  <!-- coghead.SequenceField.SequenceFieldsAreUnique -->
        <Model:Constraint xmi.idref = 'a49DA0562032C'/>  <!-- coghead.SequenceField.SequenceFieldHasCardinality1 -->
        <Model:Constraint xmi.idref = 'a49DA0584000F'/>  <!-- coghead.SequenceField.SequenceFieldsHaveTypeLong -->
      </Model:ModelElement.constraints>
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
      </Model:GeneralizableElement.supertypes>
      <Model:Namespace.contents>
        <!-- ==================== coghead.SequenceField.SequenceFieldsHaveNoFormula    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a49DA050800FA' 
          name = 'SequenceFieldsHaveNoFormula' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context SequenceField
inv:
  self.formula-&gt;isEmpty()</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a49D62DF601A5'/>  <!-- coghead.SequenceField -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== coghead.SequenceField.SequenceFieldsHaveNoValueList    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a49DA052A006D' 
          name = 'SequenceFieldsHaveNoValueList' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context SequenceField
inv:
  self.valueList-&gt;isEmpty()</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a49D62DF601A5'/>  <!-- coghead.SequenceField -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== coghead.SequenceField.SequenceFieldsAreUnique    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a49DA05450213' 
          name = 'SequenceFieldsAreUnique' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context SequenceField
inv:
  self.unique</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a49D62DF601A5'/>  <!-- coghead.SequenceField -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== coghead.SequenceField.SequenceFieldHasCardinality1    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a49DA0562032C' 
          name = 'SequenceFieldHasCardinality1' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context SequenceField
inv:
  self.cardinality = 1</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a49D62DF601A5'/>  <!-- coghead.SequenceField -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== coghead.SequenceField.SequenceFieldsHaveTypeLong    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a49DA0584000F' 
          name = 'SequenceFieldsHaveTypeLong' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context SequenceField
inv:
  self.type = ElementaryTypeEnum::number</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a49D62DF601A5'/>  <!-- coghead.SequenceField -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.LinkField    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D63181029F' 
      name = 'LinkField' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
      </Model:GeneralizableElement.supertypes>
      <Model:Namespace.contents>
        <!-- ==================== coghead.LinkField.field    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D631C600CB' 
          name = 'field' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D631C600CB'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.LinkField.query    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D6322A00FA' 
          name = 'query' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D6322A00FA'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.LinkField.byValue    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a49D6320E030D' 
          name = 'byValue' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60392'/>
          </Model:TypedElement.type>
        </Model:Attribute>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.Aggregation    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D63541035B' 
      name = 'Aggregation' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:ModelElement.constraints>
        <Model:Constraint xmi.idref = 'a49DA03540203'/>  <!-- coghead.Aggregation.QueryHasExactlyOneCollectionTemplate -->
      </Model:ModelElement.constraints>
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
      </Model:GeneralizableElement.supertypes>
      <Model:Namespace.contents>
        <!-- ==================== coghead.Aggregation.query    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D6358302BF' 
          name = 'query' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D6358302BF'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Aggregation.function    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a49D63571038A' 
          name = 'function' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D635490261'/>  <!-- coghead.AggregationFunction -->
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== coghead.Aggregation.QueryHasExactlyOneCollectionTemplate    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a49DA03540203' 
          name = 'QueryHasExactlyOneCollectionTemplate' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Aggregation
inv:
  self.query.collectionTemplates-&gt;size() = 1</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a49D63541035B'/>  <!-- coghead.Aggregation -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.AggregationFunction    [DataType] ==================== -->
    <Model:DataType xmi.id = 'a49D635490261' 
      name = 'AggregationFunction' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' >
      <Model:DataType.typeCode>
        <XMI.CorbaTypeCode>
          <XMI.CorbaTcEnum xmi.tcName = 'AggregationFunction'>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'SUM'/>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'COUNT'/>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'MIN'/>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'MAX'/>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'AVG'/>
          </XMI.CorbaTcEnum>
        </XMI.CorbaTypeCode>
      </Model:DataType.typeCode>
    </Model:DataType>
    <!-- ==================== coghead.AttachmentField    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D63846037A' 
      name = 'AttachmentField' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:ModelElement.constraints>
        <Model:Constraint xmi.idref = 'a49DA04300109'/>  <!-- coghead.AttachmentField.AttachmentsAreNonUnique -->
        <Model:Constraint xmi.idref = 'a49DA04900242'/>  <!-- coghead.AttachmentField.AttachmentsHaveNoFormula -->
        <Model:Constraint xmi.idref = 'a49DA04B603C8'/>  <!-- coghead.AttachmentField.AttachmentsHaveNoDefaultValue -->
        <Model:Constraint xmi.idref = 'a49DA04CE004E'/>  <!-- coghead.AttachmentField.AttachmentsHaveNoValueList -->
      </Model:ModelElement.constraints>
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
      </Model:GeneralizableElement.supertypes>
      <Model:Namespace.contents>
        <!-- ==================== coghead.AttachmentField.displayName    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a49D638850213' 
          name = 'displayName' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== coghead.AttachmentField.uri    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a49D63888029F' 
          name = 'uri' annotation = 'can be an ID that is then relative to the collection owning the field, or could be an external URI / URL' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xml:link = 'simple' href = 'PrimitiveTypes.xml|a39A2BDA60394'/>
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== coghead.AttachmentField.AttachmentsAreNonUnique    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a49DA04300109' 
          name = 'AttachmentsAreNonUnique' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context AttachmentField
inv:
  not self.unique</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a49D63846037A'/>  <!-- coghead.AttachmentField -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== coghead.AttachmentField.AttachmentsHaveNoFormula    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a49DA04900242' 
          name = 'AttachmentsHaveNoFormula' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context AttachmentField
inv:
  self.formula-&gt;isEmpty()</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a49D63846037A'/>  <!-- coghead.AttachmentField -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== coghead.AttachmentField.AttachmentsHaveNoDefaultValue    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a49DA04B603C8' 
          name = 'AttachmentsHaveNoDefaultValue' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context AttachmentField
inv:
  self.defaultValue-&gt;isEmpty()</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a49D63846037A'/>  <!-- coghead.AttachmentField -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
        <!-- ==================== coghead.AttachmentField.AttachmentsHaveNoValueList    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a49DA04CE004E' 
          name = 'AttachmentsHaveNoValueList' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context AttachmentField
inv:
  self.valueList-&gt;isEmpty()</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a49D63846037A'/>  <!-- coghead.AttachmentField -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.LinkFieldGroup    [Class] ==================== -->
    <Model:Class xmi.id = 'a49D63A790186' 
      name = 'LinkFieldGroup' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49D53E8E02AF'/>  <!-- coghead.FieldGroup -->
      </Model:GeneralizableElement.supertypes>
      <Model:Namespace.contents>
        <!-- ==================== coghead.LinkFieldGroup.query    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49D63AFB008C' 
          name = 'query' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49D63AFB008C'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.ScopeEnum    [DataType] ==================== -->
    <Model:DataType xmi.id = 'a49DA74F500E4' 
      name = 'ScopeEnum' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' >
      <Model:DataType.typeCode>
        <XMI.CorbaTypeCode>
          <XMI.CorbaTcEnum xmi.tcName = 'ScopeEnum'>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'RECORD'/>
          <XMI.CorbaTcEnumLabel xmi.tcName = 'COLLECTION'/>
          </XMI.CorbaTcEnum>
        </XMI.CorbaTypeCode>
      </Model:DataType.typeCode>
    </Model:DataType>
    <!-- ==================== coghead.ThisExpression    [Class] ==================== -->
    <Model:Class xmi.id = 'a49DB6A670052' 
      name = 'ThisExpression' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
      </Model:GeneralizableElement.supertypes>
    </Model:Class>
    <!-- ==================== coghead.VariableExpression    [Class] ==================== -->
    <Model:Class xmi.id = 'a49DB6ABD0118' 
      name = 'VariableExpression' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
      </Model:GeneralizableElement.supertypes>
    </Model:Class>
    <!-- ==================== coghead.CollectionTemplateIterator    [Class] ==================== -->
    <Model:Class xmi.id = 'a49DB711302D0' 
      name = 'CollectionTemplateIterator' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49DB6ABD0118'/>  <!-- coghead.VariableExpression -->
      </Model:GeneralizableElement.supertypes>
      <Model:Namespace.contents>
        <!-- ==================== coghead.CollectionTemplateIterator.template    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49DB71E002A8' 
          name = 'template' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D52AAB003E'/>  <!-- coghead.CollectionTemplate -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49DB71E002A8'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.ActionVariableExpression    [Class] ==================== -->
    <Model:Class xmi.id = 'a49DB7185007A' 
      name = 'ActionVariableExpression' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49DB6ABD0118'/>  <!-- coghead.VariableExpression -->
      </Model:GeneralizableElement.supertypes>
      <Model:Namespace.contents>
        <!-- ==================== coghead.ActionVariableExpression.variable    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra49DB6B28038C' 
          name = 'variable' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a49DB6B28038C'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.DefinitionEnvironment    [Class] ==================== -->
    <Model:Class xmi.id = 'a4A0A69870218' 
      name = 'DefinitionEnvironment' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'true' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:ModelElement.constraints>
        <Model:Constraint xmi.idref = 'a4A0A6E8200B1'/>  <!-- coghead.DefinitionEnvironment.VariableNamesMustBeUniqueWithinEnvironment -->
      </Model:ModelElement.constraints>
      <Model:Namespace.contents>
        <!-- ==================== coghead.DefinitionEnvironment.parent    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra4A0A69A50034' 
          name = 'parent' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a4A0A69870218'/>  <!-- coghead.DefinitionEnvironment -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a4A0A69A50034'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.DefinitionEnvironment.variables    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra4A0A6C630285' 
          name = 'variables' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a4A0A6C630285'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.DefinitionEnvironment.VariableNamesMustBeUniqueWithinEnvironment    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a4A0A6E8200B1' 
          name = 'VariableNamesMustBeUniqueWithinEnvironment' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context DefinitionEnvironment
inv:
  self.variables-&gt;forAll( a, b | a &lt;&gt; b implies a.name &lt;&gt; b.name )</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a4A0A69870218'/>  <!-- coghead.DefinitionEnvironment -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.Variable    [Class] ==================== -->
    <Model:Class xmi.id = 'a4A0A6C5002E3' 
      name = 'Variable' annotation = '' 
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' visibility = 'public_vis' 
      isSingleton = 'false' >
      <Model:ModelElement.constraints>
        <Model:Constraint xmi.idref = 'a4A1C09B6030D'/>  <!-- coghead.Variable.HasEitherElementaryOrSchemaType -->
      </Model:ModelElement.constraints>
      <Model:GeneralizableElement.supertypes>
        <Model:GeneralizableElement xmi.idref = 'a49F8605502CE'/>  <!-- coghead.packages.NamedElement -->
      </Model:GeneralizableElement.supertypes>
      <Model:Namespace.contents>
        <!-- ==================== coghead.Variable.schemaType    [Reference] ==================== -->
        <Model:Reference xmi.id = 'ra4A1C098E01C6' 
          name = 'schemaType' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204F01F4'/>  <!-- coghead.Schema -->
          </Model:TypedElement.type>
          <Model:Reference.referencedEnd>
            <Model:AssociationEnd xmi.idref = 'a4A1C098E01C6'/>
          </Model:Reference.referencedEnd>
        </Model:Reference>
        <!-- ==================== coghead.Variable.multiplicity    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a49DA4A4A00CE' 
          name = 'multiplicity' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49DA40CF032C'/>  <!-- coghead.action.Multiplicity -->
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== coghead.Variable.elementaryType    [Attribute] ==================== -->
        <Model:Attribute xmi.id = 'a4A1BC01503D8' 
          name = 'elementaryType' annotation = '' 
          scope = 'instance_level' visibility = 'public_vis' 
          isChangeable = 'true' 
          isDerived = 'false' >
          <Model:StructuralFeature.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:StructuralFeature.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53EF4036B'/>  <!-- coghead.ElementaryTypeEnum -->
          </Model:TypedElement.type>
        </Model:Attribute>
        <!-- ==================== coghead.Variable.HasEitherElementaryOrSchemaType    [Constraint] ==================== -->
        <Model:Constraint xmi.id = 'a4A1C09B6030D' 
          name = 'HasEitherElementaryOrSchemaType' annotation = '' 
          language = 'OCL' evaluationPolicy = 'deferred' >
          <Model:Constraint.expression>
            <XMI.any xmi.type = 'string' xmi.name = ''>context Variable
inv:
  self.elementaryType-&gt;isEmpty() &lt;&gt; self.schemaType-&gt;isEmpty()</XMI.any>
          </Model:Constraint.expression>
          <Model:Constraint.constrainedElements>
            <Model:ModelElement xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
          </Model:Constraint.constrainedElements>
        </Model:Constraint>
      </Model:Namespace.contents>
    </Model:Class>
    <!-- ==================== coghead.A_applications_myAccount    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D520AF005D' 
      name = 'A_applications_myAccount' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D520B00148' 
          name = 'applications' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204002DE'/>  <!-- coghead.Application -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D520B00157' 
          name = 'myAccount' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5203C0290'/>  <!-- coghead.Account -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_rootPackages_myApplication    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D520B202DE' 
      name = 'A_rootPackages_myApplication' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D520B401E4' 
          name = 'rootPackages' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49F860630166'/>  <!-- coghead.packages.Packagable -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D520B401E6' 
          name = 'myApplication' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204002DE'/>  <!-- coghead.Application -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_actions_collection    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D520B70203' 
      name = 'A_actions_collection' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D520B90399' 
          name = 'actions' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D52049036B'/>  <!-- coghead.action.Action -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D520B9039B' 
          name = 'collection' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204500DA'/>  <!-- coghead.Collection -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_query_view    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D52126002E' 
      name = 'A_query_view' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D521270000' 
          name = 'query' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D521270002' 
          name = 'view' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520600148'/>  <!-- coghead.View -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_permissions_account    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D5228F03A9' 
      name = 'A_permissions_account' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D5229003A9' 
          name = 'permissions' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520880213'/>  <!-- coghead.AccountLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D5229003AB' 
          name = 'account' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5203C0290'/>  <!-- coghead.Account -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_permissions_application    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D522A200DA' 
      name = 'A_permissions_application' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D522A203D8' 
          name = 'permissions' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5208101C5'/>  <!-- coghead.ApplicationLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D522A203DA' 
          name = 'application' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204002DE'/>  <!-- coghead.Application -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_permissions_theCollection    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D522AF0186' 
      name = 'A_permissions_theCollection' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D522B00128' 
          name = 'permissions' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D52074000F'/>  <!-- coghead.CollectionLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D522B0012A' 
          name = 'theCollection' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204500DA'/>  <!-- coghead.Collection -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_forms_collection    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D522C10213' 
      name = 'A_forms_collection' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D522C201A5' 
          name = 'forms' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5205A02AF'/>  <!-- coghead.Form -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D522C201A7' 
          name = 'collection' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204500DA'/>  <!-- coghead.Collection -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_schema_collection    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D522C301D4' 
      name = 'A_schema_collection' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D522C4007D' 
          name = 'schema' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204F01F4'/>  <!-- coghead.Schema -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D522C4007F' 
          name = 'collection' annotation = '' 
          isNavigable = 'true' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204500DA'/>  <!-- coghead.Collection -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_views_collection    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D522D70271' 
      name = 'A_views_collection' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D522D9000F' 
          name = 'views' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520600148'/>  <!-- coghead.View -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D522D90011' 
          name = 'collection' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204500DA'/>  <!-- coghead.Collection -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_form_view    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D5232F0177' 
      name = 'A_form_view' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D52330033C' 
          name = 'form' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5205A02AF'/>  <!-- coghead.Form -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D52330033E' 
          name = 'view' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520600148'/>  <!-- coghead.View -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_query_templatedPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D526E80280' 
      name = 'A_query_templatedPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D526E9004E' 
          name = 'query' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D526E90050' 
          name = 'templatedPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5206A030D'/>  <!-- coghead.TemplatedPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_collectionTemplates_query    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D529480177' 
      name = 'A_collectionTemplates_query' annotation = 'Can point to collections within the same Account. Connected by AND. Multiple collection templates are allowed for the same collection.' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D5294802FD' 
          name = 'collectionTemplates' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D52AAB003E'/>  <!-- coghead.CollectionTemplate -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D52948030D' 
          name = 'query' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_fieldTemplates_collectionTemplate    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D52A50005D' 
      name = 'A_fieldTemplates_collectionTemplate' annotation = '"AND" semantics' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D52A50033C' 
          name = 'fieldTemplates' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D529D50148'/>  <!-- coghead.FieldTemplate -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D52A50033E' 
          name = 'collectionTemplate' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D52AAB003E'/>  <!-- coghead.CollectionTemplate -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_collection_collectionTemplate    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D52AEB0222' 
      name = 'A_collection_collectionTemplate' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D52AEC0128' 
          name = 'collection' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204500DA'/>  <!-- coghead.Collection -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D52AEC012A' 
          name = 'collectionTemplate' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D52AAB003E'/>  <!-- coghead.CollectionTemplate -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_runtimeCreate_accountLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D534CA000F' 
      name = 'A_runtimeCreate_accountLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D534CC002E' 
          name = 'runtimeCreate' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D534CC0030' 
          name = 'accountLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520880213'/>  <!-- coghead.AccountLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_runtimeRetrieve_accountLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D534CC03B9' 
      name = 'A_runtimeRetrieve_accountLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D534CE00DA' 
          name = 'runtimeRetrieve' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D534CE00DC' 
          name = 'accountLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520880213'/>  <!-- coghead.AccountLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_runtimeUpdate_accountLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D534CF01F4' 
      name = 'A_runtimeUpdate_accountLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D534D002EE' 
          name = 'runtimeUpdate' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D534D002F0' 
          name = 'accountLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520880213'/>  <!-- coghead.AccountLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_runtimeDelete_accountLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D534D101D4' 
      name = 'A_runtimeDelete_accountLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D534D2037A' 
          name = 'runtimeDelete' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D534D2038A' 
          name = 'accountLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520880213'/>  <!-- coghead.AccountLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_designTimeCreate_accountLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D5358F02BF' 
      name = 'A_designTimeCreate_accountLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D535910000' 
          name = 'designTimeCreate' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D535910002' 
          name = 'accountLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520880213'/>  <!-- coghead.AccountLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_designTimeRetrieve_accountLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D53592008C' 
      name = 'A_designTimeRetrieve_accountLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D53594005D' 
          name = 'designTimeRetrieve' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D53594005F' 
          name = 'accountLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520880213'/>  <!-- coghead.AccountLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_designTimeUpdate_accountLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D53595001F' 
      name = 'A_designTimeUpdate_accountLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D535960271' 
          name = 'designTimeUpdate' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D535960273' 
          name = 'accountLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520880213'/>  <!-- coghead.AccountLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_designTimeDelete_accountLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D53597030D' 
      name = 'A_designTimeDelete_accountLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D5359903A9' 
          name = 'designTimeDelete' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D5359903AB' 
          name = 'accountLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520880213'/>  <!-- coghead.AccountLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_runtimeCreate_applicationLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D535F602AF' 
      name = 'A_runtimeCreate_applicationLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D535F8033C' 
          name = 'runtimeCreate' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D535F8033E' 
          name = 'applicationLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5208101C5'/>  <!-- coghead.ApplicationLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_runtimeRetrieve_applicationLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D535FA0128' 
      name = 'A_runtimeRetrieve_applicationLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D535FC01E4' 
          name = 'runtimeRetrieve' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D535FC01F4' 
          name = 'applicationLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5208101C5'/>  <!-- coghead.ApplicationLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_runtimeUpdate_applicationLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D535FD0196' 
      name = 'A_runtimeUpdate_applicationLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D535FF01D4' 
          name = 'runtimeUpdate' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D535FF01D6' 
          name = 'applicationLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5208101C5'/>  <!-- coghead.ApplicationLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_runtimeDelete_applicationLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D536000119' 
      name = 'A_runtimeDelete_applicationLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D5360201A5' 
          name = 'runtimeDelete' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D5360201B5' 
          name = 'applicationLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5208101C5'/>  <!-- coghead.ApplicationLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_role_applicationLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D53604001F' 
      name = 'A_role_applicationLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D5360600FA' 
          name = 'role' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D5360600FC' 
          name = 'applicationLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5208101C5'/>  <!-- coghead.ApplicationLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_designTimeRetrieve_applicationLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D5360700EA' 
      name = 'A_designTimeRetrieve_applicationLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D5360901C5' 
          name = 'designTimeRetrieve' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D5360901C7' 
          name = 'applicationLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5208101C5'/>  <!-- coghead.ApplicationLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_designTimeUpdate_applicationLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D5360A0261' 
      name = 'A_designTimeUpdate_applicationLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D5360C032C' 
          name = 'designTimeUpdate' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D5360C033C' 
          name = 'applicationLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5208101C5'/>  <!-- coghead.ApplicationLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_designTimeDelete_applicationLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D5360D033C' 
      name = 'A_designTimeDelete_applicationLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D53610005D' 
          name = 'designTimeDelete' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D53610005F' 
          name = 'applicationLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5208101C5'/>  <!-- coghead.ApplicationLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_createRecord_collectionLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D536A103D8' 
      name = 'A_createRecord_collectionLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D536A20213' 
          name = 'createRecord' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D536A20223' 
          name = 'collectionLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D52074000F'/>  <!-- coghead.CollectionLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_retrieveAllRecords_collectionLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D536E70186' 
      name = 'A_retrieveAllRecords_collectionLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D536E9031C' 
          name = 'retrieveAllRecords' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D536E9031E' 
          name = 'collectionLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D52074000F'/>  <!-- coghead.CollectionLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_updateAllRecords_collectionLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D536EA0290' 
      name = 'A_updateAllRecords_collectionLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D536EC00FA' 
          name = 'updateAllRecords' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D536EC0109' 
          name = 'collectionLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D52074000F'/>  <!-- coghead.CollectionLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_deleteAllRecords_collectionLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D536ED00CB' 
      name = 'A_deleteAllRecords_collectionLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D536EF031C' 
          name = 'deleteAllRecords' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D536EF032C' 
          name = 'collectionLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D52074000F'/>  <!-- coghead.CollectionLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_retrieve_templatedPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D537F90232' 
      name = 'A_retrieve_templatedPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D537FA00CB' 
          name = 'retrieve' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D537FA00CD' 
          name = 'templatedPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5206A030D'/>  <!-- coghead.TemplatedPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_condition_query    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D53A070232' 
      name = 'A_condition_query' annotation = 'ANDed with the collection templates; expression must evaluate to a Boolean. It can use all variables and any collection referenced in the set of collection templates.' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D53A08008C' 
          name = 'condition' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D53A08008E' 
          name = 'query' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_sortBy_query    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D53ADA01A5' 
      name = 'A_sortBy_query' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D53ADB00FA' 
          name = 'sortBy' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'true' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53A7A0242'/>  <!-- coghead.SortSpec -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D53ADB00FC' 
          name = 'query' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_field_sortSpec    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D53AEF01A5' 
      name = 'A_field_sortSpec' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D53AF0000F' 
          name = 'field' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D53AF00011' 
          name = 'sortSpec' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53A7A0242'/>  <!-- coghead.SortSpec -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_groupBy_query    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D53BCA030D' 
      name = 'A_groupBy_query' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D53BCB02CE' 
          name = 'groupBy' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'true' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53BC402BF'/>  <!-- coghead.GroupBySpec -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D53BCB02D0' 
          name = 'query' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_projection_query    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D53D2C01D4' 
      name = 'A_projection_query' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D53D2E032C' 
          name = 'projection' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53D270000'/>  <!-- coghead.Projection -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D53D2E032E' 
          name = 'query' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_fields_projection    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D53DB5008C' 
      name = 'A_fields_projection' annotation = 'The cardinality of the field referenced by the FieldTemplate must be 1.' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D53DB600BB' 
          name = 'fields' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '-1' is_ordered = 'true' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D53DB600BD' 
          name = 'projection' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53D270000'/>  <!-- coghead.Projection -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_field_groupBySpec    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D53DC70213' 
      name = 'A_field_groupBySpec' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D53DC802BF' 
          name = 'field' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D53DC802CE' 
          name = 'groupBySpec' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53BC402BF'/>  <!-- coghead.GroupBySpec -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_field_fieldTemplate    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D53DE003C8' 
      name = 'A_field_fieldTemplate' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D53DE10290' 
          name = 'field' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D53DE10292' 
          name = 'fieldTemplate' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D529D50148'/>  <!-- coghead.FieldTemplate -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_defaultValue_field    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D541A30167' 
      name = 'A_defaultValue_field' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D541A40000' 
          name = 'defaultValue' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D541A40002' 
          name = 'field' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_constraint_field    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D541C6035B' 
      name = 'A_constraint_field' annotation = 'The constraint expression has to evaluate to a Boolean' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D541C70148' 
          name = 'constraint' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D541C70157' 
          name = 'field' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_fields_fieldGroup    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D541EF01D4' 
      name = 'A_fields_fieldGroup' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D541F0001F' 
          name = 'fields' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D541F00021' 
          name = 'fieldGroup' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53E8E02AF'/>  <!-- coghead.FieldGroup -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_entries_schema    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D542B70251' 
      name = 'A_entries_schema' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D542B80242' 
          name = 'entries' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D542A602CE'/>  <!-- coghead.SchemaEntry -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D542B80244' 
          name = 'schema' annotation = '' 
          isNavigable = 'true' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204F01F4'/>  <!-- coghead.Schema -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_formula_field    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D6281C0261' 
      name = 'A_formula_field' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:ModelElement.annotation>A formula must only use elements from the current record to which the field it computes belongs to and the fields of all records to which the current record links. The value computed by a formula could be overwritten by a user, but it would be re-computed by the formula and therefore be overwritten again later. By and large, field that have a formula defined are read-only.

When fields from records of linked fields are used, those fields are added to the part of the record that is copied.</Model:ModelElement.annotation>
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D6281F0271' 
          name = 'formula' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5310C007D'/>  <!-- coghead.Expression -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D6281F0273' 
          name = 'field' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_valueList_field    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D62C61029F' 
      name = 'A_valueList_field' annotation = 'points to an expression that evaluates to a set/list of pairs of (String, value of the field&apos;s type)' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D62C64005D' 
          name = 'valueList' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D62C64006D' 
          name = 'field' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_field_linkField    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D631C103D8' 
      name = 'A_field_linkField' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D631C600CB' 
          name = 'field' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D53AE800EA'/>  <!-- coghead.Field -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D631C600DA' 
          name = 'linkField' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D63181029F'/>  <!-- coghead.LinkField -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_query_linkField    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D6322802AF' 
      name = 'A_query_linkField' annotation = 'The query must result in exactly one record of the collection to which self belongs' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D6322A00FA' 
          name = 'query' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D6322A00FC' 
          name = 'linkField' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D63181029F'/>  <!-- coghead.LinkField -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_query_aggregation    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D6358300AB' 
      name = 'A_query_aggregation' annotation = 'This query must contain exactly one collection template for one collection.' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D6358302BF' 
          name = 'query' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D6358302C1' 
          name = 'aggregation' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D63541035B'/>  <!-- coghead.Aggregation -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_query_linkFieldGroup    [Association] ==================== -->
    <Model:Association xmi.id = 'a49D63AFA0196' 
      name = 'A_query_linkFieldGroup' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49D63AFB008C' 
          name = 'query' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D520650128'/>  <!-- coghead.Query -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49D63AFB008E' 
          name = 'linkFieldGroup' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D63A790186'/>  <!-- coghead.LinkFieldGroup -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_variable_actionVariableExpression    [Association] ==================== -->
    <Model:Association xmi.id = 'a49DB6B2800CB' 
      name = 'A_variable_actionVariableExpression' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49DB6B28038C' 
          name = 'variable' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49DB6B28038E' 
          name = 'actionVariableExpression' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49DB7185007A'/>  <!-- coghead.ActionVariableExpression -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_template_collectionTemplateIterator    [Association] ==================== -->
    <Model:Association xmi.id = 'a49DB71E0002B' 
      name = 'A_template_collectionTemplateIterator' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a49DB71E002A8' 
          name = 'template' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D52AAB003E'/>  <!-- coghead.CollectionTemplate -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a49DB71E002B8' 
          name = 'collectionTemplateIterator' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49DB711302D0'/>  <!-- coghead.CollectionTemplateIterator -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_parent_definitionEnvironment    [Association] ==================== -->
    <Model:Association xmi.id = 'a4A0A69A2038F' 
      name = 'A_parent_definitionEnvironment' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a4A0A69A50034' 
          name = 'parent' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a4A0A69870218'/>  <!-- coghead.DefinitionEnvironment -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a4A0A69A500A2' 
          name = 'definitionEnvironment' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a4A0A69870218'/>  <!-- coghead.DefinitionEnvironment -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_variables_env    [Association] ==================== -->
    <Model:Association xmi.id = 'a4A0A6C630043' 
      name = 'A_variables_env' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a4A0A6C630285' 
          name = 'variables' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a4A0A6C630295' 
          name = 'env' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a4A0A69870218'/>  <!-- coghead.DefinitionEnvironment -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_roles_account    [Association] ==================== -->
    <Model:Association xmi.id = 'a4A1674810261' 
      name = 'A_roles_account' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a4A1674820119' 
          name = 'roles' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a4A167482011B' 
          name = 'account' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5203C0290'/>  <!-- coghead.Account -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_schemaType_variable    [Association] ==================== -->
    <Model:Association xmi.id = 'a4A1C098E01C5' 
      name = 'A_schemaType_variable' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a4A1C098E01C6' 
          name = 'schemaType' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5204F01F4'/>  <!-- coghead.Schema -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a4A1C098E01C7' 
          name = 'variable' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a4A0A6C5002E3'/>  <!-- coghead.Variable -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_templatedPermissions_collectionLevelPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a4A1E5EAE0176' 
      name = 'A_templatedPermissions_collectionLevelPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a4A1E5EAF005D' 
          name = 'templatedPermissions' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'true' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5206A030D'/>  <!-- coghead.TemplatedPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a4A1E5EAF005F' 
          name = 'collectionLevelPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'composite' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '1' upper = '1' is_ordered = 'false' is_unique = 'false' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D52074000F'/>  <!-- coghead.CollectionLevelPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_delete_templatedPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a4A1E5F170313' 
      name = 'A_delete_templatedPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a4A1E5F18012F' 
          name = 'delete' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a4A1E5F180131' 
          name = 'templatedPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5206A030D'/>  <!-- coghead.TemplatedPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
    <!-- ==================== coghead.A_update_templatedPermission    [Association] ==================== -->
    <Model:Association xmi.id = 'a4A1E5F1A02B5' 
      name = 'A_update_templatedPermission' annotation = '' 
      isRoot = 'true' isLeaf = 'true' isAbstract = 'false' visibility = 'public_vis' 
      isDerived = 'false' >
      <Model:Namespace.contents>
        <Model:AssociationEnd xmi.id = 'a4A1E5F1B0035' 
          name = 'update' annotation = '' 
          isNavigable = 'true' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D534C401C5'/>  <!-- coghead.Role -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
        <Model:AssociationEnd xmi.id = 'a4A1E5F1B0037' 
          name = 'templatedPermission' annotation = '' 
          isNavigable = 'false' aggregation = 'none' isChangeable = 'true' >
          <Model:AssociationEnd.multiplicity>
            <Model:MultiplicityType lower = '0' upper = '-1' is_ordered = 'false' is_unique = 'true' />
          </Model:AssociationEnd.multiplicity>
          <Model:TypedElement.type>
            <Model:Classifier xmi.idref = 'a49D5206A030D'/>  <!-- coghead.TemplatedPermission -->
          </Model:TypedElement.type>
        </Model:AssociationEnd>
      </Model:Namespace.contents>
    </Model:Association>
  </Model:Namespace.contents>
</Model:Package>
</XMI.content>
</XMI>
