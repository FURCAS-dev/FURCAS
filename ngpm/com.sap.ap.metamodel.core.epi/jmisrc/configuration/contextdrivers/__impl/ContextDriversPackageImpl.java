/**
 * Generated by the MOIN Generator Version 3.0
 **/

package configuration.contextdrivers.__impl;

public final class ContextDriversPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;

    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(14);
        FEATURE_IDS.put("ContextCategory", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("ContextCategoryValue", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("ContextualElement", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("ContexConfiguration", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("ValuesOfBusinessContext", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("CategoryForConfiguration", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("IncludedContextValues", Integer.valueOf(6)); //$NON-NLS-1$
        FEATURE_IDS.put("ContextForElement", Integer.valueOf(7)); //$NON-NLS-1$
        FEATURE_IDS.put("ContextValueHierarchy", Integer.valueOf(8)); //$NON-NLS-1$
        FEATURE_IDS.put("ExcludedContextValues", Integer.valueOf(9)); //$NON-NLS-1$
    }

    // constructors    
    public ContextDriversPackageImpl()
    {
        super();
    }
    public ContextDriversPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    // internal structure type creators
    // nested packages
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getContextCategory(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ContextCategory"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getContextCategoryValue(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ContextCategoryValue"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getContextualElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ContextualElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getContexConfiguration(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ContexConfiguration"); //$NON-NLS-1$
    }
    // associations
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getValuesOfBusinessContext(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "ValuesOfBusinessContext"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getCategoryForConfiguration(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "CategoryForConfiguration"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getIncludedContextValues(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "IncludedContextValues"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getContextForElement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "ContextForElement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getContextValueHierarchy(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "ContextValueHierarchy"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getExcludedContextValues(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "ExcludedContextValues"); //$NON-NLS-1$
    }
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("configuration.contextdrivers.__impl.ContextCategoryImpl")); //$NON-NLS-1$
                case 1:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("configuration.contextdrivers.__impl.ContextCategoryValueImpl")); //$NON-NLS-1$
                case 2:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("configuration.contextdrivers.__impl.ContextualElementImpl")); //$NON-NLS-1$
                case 3:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("configuration.contextdrivers.__impl.ContexConfigurationImpl")); //$NON-NLS-1$
                case 4:
                    return new configuration.contextdrivers.__impl.ValuesOfBusinessContextImpl(workspace, mofId, immediatePackage, metaObject);
                case 5:
                    return new configuration.contextdrivers.__impl.CategoryForConfigurationImpl(workspace, mofId, immediatePackage, metaObject);
                case 6:
                    return new configuration.contextdrivers.__impl.IncludedContextValuesImpl(workspace, mofId, immediatePackage, metaObject);
                case 7:
                    return new configuration.contextdrivers.__impl.ContextForElementImpl(workspace, mofId, immediatePackage, metaObject);
                case 8:
                    return new configuration.contextdrivers.__impl.ContextValueHierarchyImpl(workspace, mofId, immediatePackage, metaObject);
                case 9:
                    return new configuration.contextdrivers.__impl.ExcludedContextValuesImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<configuration.contextdrivers.ContextDriversPackage> get___JmiInterface() {
        return configuration.contextdrivers.ContextDriversPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(0);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefPackageAndName rpan = null;
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(4);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
            name = "ContextCategory"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "configuration.contextdrivers.ContextCategory"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ContextCategoryValue"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "configuration.contextdrivers.ContextCategoryValue"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ContextualElement"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "configuration.contextdrivers.ContextualElement"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ContexConfiguration"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "configuration.contextdrivers.ContexConfiguration"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(6);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefAssociationAndName raan = null;
            name = "ValuesOfBusinessContext"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "configuration.contextdrivers.ValuesOfBusinessContext"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "CategoryForConfiguration"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "configuration.contextdrivers.CategoryForConfiguration"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "IncludedContextValues"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "configuration.contextdrivers.IncludedContextValues"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "ContextForElement"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "configuration.contextdrivers.ContextForElement"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "ContextValueHierarchy"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "configuration.contextdrivers.ContextValueHierarchy"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "ExcludedContextValues"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "configuration.contextdrivers.ExcludedContextValues"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<configuration.contextdrivers.__impl.ContextDriversPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new configuration.contextdrivers.__impl.ContextDriversPackageWrapper(conn, this, synchronize);
    }

}