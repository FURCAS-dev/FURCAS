/**
 * Generated by the MOIN Generator Version 3.0
 **/

package configuration.__impl;

public class ConfigurationPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<configuration.__impl.ConfigurationPackageImpl> implements configuration.ConfigurationPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ConfigurationPackage wrapper
     */
    public ConfigurationPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, configuration.__impl.ConfigurationPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private configuration.__impl.ConfigurationPackageImpl getCastWrappedObject() {
        return (configuration.__impl.ConfigurationPackageImpl) getWrappedObject();
    }
    
    public configuration.__impl.ConfigurationPackageImpl unwrap() {
        return (configuration.__impl.ConfigurationPackageImpl) getWrappedObject();
    }
    
    public configuration.businessconfiguration.BusinessconfigurationPackage getBusinessconfiguration()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (configuration.businessconfiguration.BusinessconfigurationPackage) wrapResult(getCastWrappedObject().getBusinessconfiguration(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (configuration.businessconfiguration.BusinessconfigurationPackage) wrapResult(getCastWrappedObject().getBusinessconfiguration(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public configuration.contextdrivers.ContextDriversPackage getContextDrivers()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (configuration.contextdrivers.ContextDriversPackage) wrapResult(getCastWrappedObject().getContextDrivers(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (configuration.contextdrivers.ContextDriversPackage) wrapResult(getCastWrappedObject().getContextDrivers(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    public java.lang.Class<configuration.ConfigurationPackage> get___JmiInterface() {
        return configuration.ConfigurationPackage.class;
    }
    
    protected String metaObjectToString() {
        return "configuration.ConfigurationPackage (Java Type)\nconfiguration (MOF Type)"; //$NON-NLS-1$
    }
}