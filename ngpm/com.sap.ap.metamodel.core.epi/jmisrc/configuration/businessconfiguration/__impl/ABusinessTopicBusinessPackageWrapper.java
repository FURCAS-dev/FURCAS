/**
 * Generated by the MOIN Generator Version 3.0
 **/

package configuration.businessconfiguration.__impl;

public class ABusinessTopicBusinessPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<configuration.businessconfiguration.ABusinessTopicBusinessPackage> implements configuration.businessconfiguration.ABusinessTopicBusinessPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ABusinessTopicBusinessPackage wrapper
     */
    public ABusinessTopicBusinessPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, configuration.businessconfiguration.__impl.ABusinessTopicBusinessPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private configuration.businessconfiguration.__impl.ABusinessTopicBusinessPackageImpl getCastWrappedObject() {
        return (configuration.businessconfiguration.__impl.ABusinessTopicBusinessPackageImpl) getWrappedObject();
    }

    public configuration.businessconfiguration.ABusinessTopicBusinessPackage unwrap() {
        return (configuration.businessconfiguration.ABusinessTopicBusinessPackage) getWrappedObject();
    }
    
    public boolean exists(configuration.businessconfiguration.BusinessTopic _BusinessTopic, configuration.businessconfiguration.BusinessPackage _BusinessPackage) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessTopic), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessPackage));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessTopic), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessPackage)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getBusinessTopic(configuration.businessconfiguration.BusinessPackage _BusinessPackage) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getBusinessTopic(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessPackage)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getBusinessTopic(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessPackage))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public configuration.businessconfiguration.BusinessPackage getBusinessPackage(configuration.businessconfiguration.BusinessTopic _BusinessTopic) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (configuration.businessconfiguration.BusinessPackage) wrapResult(getCastWrappedObject().getBusinessPackage(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessTopic)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (configuration.businessconfiguration.BusinessPackage) wrapResult(getCastWrappedObject().getBusinessPackage(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessTopic))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(configuration.businessconfiguration.BusinessTopic _BusinessTopic, configuration.businessconfiguration.BusinessPackage _BusinessPackage) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessTopic), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessPackage));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessTopic), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessPackage)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(configuration.businessconfiguration.BusinessTopic _BusinessTopic, configuration.businessconfiguration.BusinessPackage _BusinessPackage) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessTopic), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessPackage));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessTopic), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessPackage)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<configuration.businessconfiguration.ABusinessTopicBusinessPackage> get___JmiInterface() {
        return configuration.businessconfiguration.ABusinessTopicBusinessPackage.class;
    }

    protected String metaObjectToString() {
        return "configuration.businessconfiguration.ABusinessTopicBusinessPackage (Java Type)\nconfiguration.businessconfiguration.A_businessTopic_businessPackage (MOF Type)"; //$NON-NLS-1$
    }    
}