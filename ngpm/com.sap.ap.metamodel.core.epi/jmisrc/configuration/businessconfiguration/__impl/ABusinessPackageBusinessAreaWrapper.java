/**
 * Generated by the MOIN Generator Version 3.0
 **/

package configuration.businessconfiguration.__impl;

public class ABusinessPackageBusinessAreaWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<configuration.businessconfiguration.ABusinessPackageBusinessArea> implements configuration.businessconfiguration.ABusinessPackageBusinessArea,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ABusinessPackageBusinessArea wrapper
     */
    public ABusinessPackageBusinessAreaWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, configuration.businessconfiguration.__impl.ABusinessPackageBusinessAreaImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private configuration.businessconfiguration.__impl.ABusinessPackageBusinessAreaImpl getCastWrappedObject() {
        return (configuration.businessconfiguration.__impl.ABusinessPackageBusinessAreaImpl) getWrappedObject();
    }

    public configuration.businessconfiguration.ABusinessPackageBusinessArea unwrap() {
        return (configuration.businessconfiguration.ABusinessPackageBusinessArea) getWrappedObject();
    }
    
    public boolean exists(configuration.businessconfiguration.BusinessPackage _BusinessPackage, configuration.businessconfiguration.BusinessArea _BusinessArea) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessPackage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessArea));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessPackage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessArea)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getBusinessPackage(configuration.businessconfiguration.BusinessArea _BusinessArea) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getBusinessPackage(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessArea)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getBusinessPackage(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessArea))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public configuration.businessconfiguration.BusinessArea getBusinessArea(configuration.businessconfiguration.BusinessPackage _BusinessPackage) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (configuration.businessconfiguration.BusinessArea) wrapResult(getCastWrappedObject().getBusinessArea(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessPackage)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (configuration.businessconfiguration.BusinessArea) wrapResult(getCastWrappedObject().getBusinessArea(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessPackage))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(configuration.businessconfiguration.BusinessPackage _BusinessPackage, configuration.businessconfiguration.BusinessArea _BusinessArea) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessPackage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessArea));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessPackage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessArea)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(configuration.businessconfiguration.BusinessPackage _BusinessPackage, configuration.businessconfiguration.BusinessArea _BusinessArea) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessPackage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessArea));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessPackage), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessArea)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<configuration.businessconfiguration.ABusinessPackageBusinessArea> get___JmiInterface() {
        return configuration.businessconfiguration.ABusinessPackageBusinessArea.class;
    }

    protected String metaObjectToString() {
        return "configuration.businessconfiguration.ABusinessPackageBusinessArea (Java Type)\nconfiguration.businessconfiguration.A_businessPackage_businessArea (MOF Type)"; //$NON-NLS-1$
    }    
}