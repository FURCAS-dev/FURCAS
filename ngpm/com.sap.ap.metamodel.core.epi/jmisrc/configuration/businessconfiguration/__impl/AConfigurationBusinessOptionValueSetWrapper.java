/**
 * Generated by the MOIN Generator Version 3.0
 **/

package configuration.businessconfiguration.__impl;

public class AConfigurationBusinessOptionValueSetWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<configuration.businessconfiguration.AConfigurationBusinessOptionValueSet> implements configuration.businessconfiguration.AConfigurationBusinessOptionValueSet,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The AConfigurationBusinessOptionValueSet wrapper
     */
    public AConfigurationBusinessOptionValueSetWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, configuration.businessconfiguration.__impl.AConfigurationBusinessOptionValueSetImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private configuration.businessconfiguration.__impl.AConfigurationBusinessOptionValueSetImpl getCastWrappedObject() {
        return (configuration.businessconfiguration.__impl.AConfigurationBusinessOptionValueSetImpl) getWrappedObject();
    }

    public configuration.businessconfiguration.AConfigurationBusinessOptionValueSet unwrap() {
        return (configuration.businessconfiguration.AConfigurationBusinessOptionValueSet) getWrappedObject();
    }
    
    public boolean exists(configuration.businessconfiguration.BusinessOption _ConfigurationBusinessOption, configuration.businessconfiguration.ValueSet _ValueSet) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ConfigurationBusinessOption), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ValueSet));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ConfigurationBusinessOption), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ValueSet)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public configuration.businessconfiguration.BusinessOption getConfigurationBusinessOption(configuration.businessconfiguration.ValueSet _ValueSet) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (configuration.businessconfiguration.BusinessOption) wrapResult(getCastWrappedObject().getConfigurationBusinessOption(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ValueSet)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (configuration.businessconfiguration.BusinessOption) wrapResult(getCastWrappedObject().getConfigurationBusinessOption(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ValueSet))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getValueSet(configuration.businessconfiguration.BusinessOption _ConfigurationBusinessOption) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getValueSet(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ConfigurationBusinessOption)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getValueSet(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ConfigurationBusinessOption))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(configuration.businessconfiguration.BusinessOption _ConfigurationBusinessOption, configuration.businessconfiguration.ValueSet _ValueSet) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ConfigurationBusinessOption), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ValueSet));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ConfigurationBusinessOption), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ValueSet)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(configuration.businessconfiguration.BusinessOption _ConfigurationBusinessOption, configuration.businessconfiguration.ValueSet _ValueSet) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ConfigurationBusinessOption), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ValueSet));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ConfigurationBusinessOption), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ValueSet)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<configuration.businessconfiguration.AConfigurationBusinessOptionValueSet> get___JmiInterface() {
        return configuration.businessconfiguration.AConfigurationBusinessOptionValueSet.class;
    }

    protected String metaObjectToString() {
        return "configuration.businessconfiguration.AConfigurationBusinessOptionValueSet (Java Type)\nconfiguration.businessconfiguration.A_configurationBusinessOption_valueSet (MOF Type)"; //$NON-NLS-1$
    }    
}