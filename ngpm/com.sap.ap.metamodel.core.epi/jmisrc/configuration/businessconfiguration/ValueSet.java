/**
 * Generated by the MOIN Generator Version 3.0
 **/

package configuration.businessconfiguration;

/**
 * A set of values of a specific type which can be added to a system. For example, if the type is "Country" then the value set could be a list of countries known to or relevant for the application.
 * <p>
 * Value sets may be extensible or constant. In the "Country" example, the list of countries may change, be it because new countries are created or countries cease to exist because they get merged, or just because more countries are relevant for the application than originally thought.
 * <p>
 * Such value sets are also known as "BC Sets" (Business Configuration Sets).
 * This interface is not intended to be implemented by clients.
 */
public interface ValueSet extends modelmanagement.NamedElement,data.classes.TypedElement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, configuration.businessconfiguration.ValueSet> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, configuration.businessconfiguration.ValueSet>("E0DDC76451FC44903E4B11DE90300018DE1146FF", "sap.com/moin/mm/ap/core", "configuration", "businessconfiguration", "ValueSet"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // attributes
    public boolean isExtensible() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setExtensible(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public configuration.businessconfiguration.BusinessOption getConfigurationBusinessOption() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setConfigurationBusinessOption(configuration.businessconfiguration.BusinessOption newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<configuration.businessconfiguration.ValueSetEntry> getEntries() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,modelmanagement.NamedElement,java.lang.String> NAME( ) {
            return modelmanagement.NamedElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>description</code> attribute.
         * @return  the descriptor for the <code>description</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,modelmanagement.NamedElement,localization.TranslatableText> DESCRIPTION( ) {
            return modelmanagement.NamedElement.DESCRIPTORS.DESCRIPTION( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,configuration.businessconfiguration.ValueSet,java.lang.Boolean> __extensible;
        /**
         * Returns the descriptor for the <code>extensible</code> attribute.
         * @return  the descriptor for the <code>extensible</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,configuration.businessconfiguration.ValueSet,java.lang.Boolean> EXTENSIBLE( ) {
            if ( __extensible == null ) {
                __extensible = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,configuration.businessconfiguration.ValueSet,java.lang.Boolean>( "E0DDC76451F9D3DD3E4B11DE90700018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "configuration", "businessconfiguration", "ValueSet", "extensible" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __extensible;
        }
        /**
         * Returns the descriptor for the <code>ownedTypeDefinition</code> reference.
         * @return  the descriptor for the <code>ownedTypeDefinition</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.TypedElement,data.classes.TypeDefinition> OWNED_TYPE_DEFINITION( ) {
            return data.classes.TypedElement.DESCRIPTORS.OWNED_TYPE_DEFINITION( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,configuration.businessconfiguration.ValueSet,configuration.businessconfiguration.BusinessOption> __configurationBusinessOption;
        /**
         * Returns the descriptor for the <code>configurationBusinessOption</code> reference.
         * @return  the descriptor for the <code>configurationBusinessOption</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,configuration.businessconfiguration.ValueSet,configuration.businessconfiguration.BusinessOption> CONFIGURATION_BUSINESS_OPTION( ) {
            if ( __configurationBusinessOption == null ) {
                __configurationBusinessOption = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,configuration.businessconfiguration.ValueSet,configuration.businessconfiguration.BusinessOption>( "E0DDC76451F9D3DB3E4B11DE9C090018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "configuration", "businessconfiguration", "ValueSet", "configurationBusinessOption" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __configurationBusinessOption;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,configuration.businessconfiguration.ValueSet,java.util.Collection<configuration.businessconfiguration.ValueSetEntry>> __entries;
        /**
         * Returns the descriptor for the <code>entries</code> reference.
         * @return  the descriptor for the <code>entries</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,configuration.businessconfiguration.ValueSet,java.util.Collection<configuration.businessconfiguration.ValueSetEntry>> ENTRIES( ) {
            if ( __entries == null ) {
                __entries = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,configuration.businessconfiguration.ValueSet,java.util.Collection<configuration.businessconfiguration.ValueSetEntry>>( "E0DDC76451F9D3DC3E4B11DEA0F90018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "configuration", "businessconfiguration", "ValueSet", "entries" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __entries;
        }
        /**
         * Returns the descriptor for the <code>conformsTo</code> operation.
         * @return  the descriptor for the <code>conformsTo</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypedElement,java.lang.Boolean> CONFORMS_TO( ) {
            return data.classes.TypedElement.DESCRIPTORS.CONFORMS_TO( );
        }
        /**
         * Returns the descriptor for the <code>getType</code> operation.
         * @return  the descriptor for the <code>getType</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypedElement,data.classes.TypeDefinition> GET_TYPE( ) {
            return data.classes.TypedElement.DESCRIPTORS.GET_TYPE( );
        }
    }
}    