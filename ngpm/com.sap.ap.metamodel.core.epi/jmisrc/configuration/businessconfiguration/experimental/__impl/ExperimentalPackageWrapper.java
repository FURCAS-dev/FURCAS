/**
 * Generated by the MOIN Generator Version 3.0
 **/

package configuration.businessconfiguration.experimental.__impl;

public class ExperimentalPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<configuration.businessconfiguration.experimental.__impl.ExperimentalPackageImpl> implements configuration.businessconfiguration.experimental.ExperimentalPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ExperimentalPackage wrapper
     */
    public ExperimentalPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, configuration.businessconfiguration.experimental.__impl.ExperimentalPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private configuration.businessconfiguration.experimental.__impl.ExperimentalPackageImpl getCastWrappedObject() {
        return (configuration.businessconfiguration.experimental.__impl.ExperimentalPackageImpl) getWrappedObject();
    }
    
    public configuration.businessconfiguration.experimental.__impl.ExperimentalPackageImpl unwrap() {
        return (configuration.businessconfiguration.experimental.__impl.ExperimentalPackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getPackageUse()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getPackageUse(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getPackageUse(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getConfigurationEntity()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getConfigurationEntity(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getConfigurationEntity(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getConfigurationSetting()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getConfigurationSetting(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getConfigurationSetting(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public configuration.businessconfiguration.experimental.AValueValueSetEntry getAValueValueSetEntry()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (configuration.businessconfiguration.experimental.AValueValueSetEntry) wrapResult(getCastWrappedObject().getAValueValueSetEntry(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (configuration.businessconfiguration.experimental.AValueValueSetEntry) wrapResult(getCastWrappedObject().getAValueValueSetEntry(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public configuration.businessconfiguration.experimental.AConfigurationEntityPickList getAConfigurationEntityPickList()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (configuration.businessconfiguration.experimental.AConfigurationEntityPickList) wrapResult(getCastWrappedObject().getAConfigurationEntityPickList(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (configuration.businessconfiguration.experimental.AConfigurationEntityPickList) wrapResult(getCastWrappedObject().getAConfigurationEntityPickList(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public configuration.businessconfiguration.experimental.AConfigurableItemConfigurationEntity getAConfigurableItemConfigurationEntity()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (configuration.businessconfiguration.experimental.AConfigurableItemConfigurationEntity) wrapResult(getCastWrappedObject().getAConfigurableItemConfigurationEntity(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (configuration.businessconfiguration.experimental.AConfigurableItemConfigurationEntity) wrapResult(getCastWrappedObject().getAConfigurableItemConfigurationEntity(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public configuration.businessconfiguration.experimental.AConfigurabilityPackage getAConfigurabilityPackage()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (configuration.businessconfiguration.experimental.AConfigurabilityPackage) wrapResult(getCastWrappedObject().getAConfigurabilityPackage(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (configuration.businessconfiguration.experimental.AConfigurabilityPackage) wrapResult(getCastWrappedObject().getAConfigurabilityPackage(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public configuration.businessconfiguration.experimental.APackagePackageUse getAPackagePackageUse()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (configuration.businessconfiguration.experimental.APackagePackageUse) wrapResult(getCastWrappedObject().getAPackagePackageUse(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (configuration.businessconfiguration.experimental.APackagePackageUse) wrapResult(getCastWrappedObject().getAPackagePackageUse(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public configuration.businessconfiguration.experimental.ASettingPackageUse getASettingPackageUse()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (configuration.businessconfiguration.experimental.ASettingPackageUse) wrapResult(getCastWrappedObject().getASettingPackageUse(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (configuration.businessconfiguration.experimental.ASettingPackageUse) wrapResult(getCastWrappedObject().getASettingPackageUse(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public configuration.businessconfiguration.experimental.AEntityConfigurationSetting getAEntityConfigurationSetting()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (configuration.businessconfiguration.experimental.AEntityConfigurationSetting) wrapResult(getCastWrappedObject().getAEntityConfigurationSetting(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (configuration.businessconfiguration.experimental.AEntityConfigurationSetting) wrapResult(getCastWrappedObject().getAEntityConfigurationSetting(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public configuration.businessconfiguration.experimental.AValueConfigurationSetting getAValueConfigurationSetting()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (configuration.businessconfiguration.experimental.AValueConfigurationSetting) wrapResult(getCastWrappedObject().getAValueConfigurationSetting(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (configuration.businessconfiguration.experimental.AValueConfigurationSetting) wrapResult(getCastWrappedObject().getAValueConfigurationSetting(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    public java.lang.Class<configuration.businessconfiguration.experimental.ExperimentalPackage> get___JmiInterface() {
        return configuration.businessconfiguration.experimental.ExperimentalPackage.class;
    }
    
    protected String metaObjectToString() {
        return "configuration.businessconfiguration.experimental.ExperimentalPackage (Java Type)\nconfiguration.businessconfiguration.experimental (MOF Type)"; //$NON-NLS-1$
    }
}