/**
 * Generated by the MOIN Generator Version 3.0
 **/

package ngpm.__impl;

public class NgpmPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<ngpm.__impl.NgpmPackageImpl> implements ngpm.NgpmPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The NgpmPackage wrapper
     */
    public NgpmPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, ngpm.__impl.NgpmPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private ngpm.__impl.NgpmPackageImpl getCastWrappedObject() {
        return (ngpm.__impl.NgpmPackageImpl) getWrappedObject();
    }
    
    public ngpm.__impl.NgpmPackageImpl unwrap() {
        return (ngpm.__impl.NgpmPackageImpl) getWrappedObject();
    }
    
    public behavioral.BehavioralPackage getBehavioral()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavioral.BehavioralPackage) wrapResult(getCastWrappedObject().getBehavioral(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavioral.BehavioralPackage) wrapResult(getCastWrappedObject().getBehavioral(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.DataPackage getData()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.DataPackage) wrapResult(getCastWrappedObject().getData(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.DataPackage) wrapResult(getCastWrappedObject().getData(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public dataaccess.DataaccessPackage getDataaccess()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (dataaccess.DataaccessPackage) wrapResult(getCastWrappedObject().getDataaccess(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (dataaccess.DataaccessPackage) wrapResult(getCastWrappedObject().getDataaccess(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public localization.LocalizationPackage getLocalization()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (localization.LocalizationPackage) wrapResult(getCastWrappedObject().getLocalization(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (localization.LocalizationPackage) wrapResult(getCastWrappedObject().getLocalization(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public modelmanagement.ModelmanagementPackage getModelmanagement()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (modelmanagement.ModelmanagementPackage) wrapResult(getCastWrappedObject().getModelmanagement(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (modelmanagement.ModelmanagementPackage) wrapResult(getCastWrappedObject().getModelmanagement(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public ui.UiPackage getUi()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (ui.UiPackage) wrapResult(getCastWrappedObject().getUi(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (ui.UiPackage) wrapResult(getCastWrappedObject().getUi(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public configuration.ConfigurationPackage getConfiguration()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (configuration.ConfigurationPackage) wrapResult(getCastWrappedObject().getConfiguration(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (configuration.ConfigurationPackage) wrapResult(getCastWrappedObject().getConfiguration(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public integration.IntegrationPackage getIntegration()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (integration.IntegrationPackage) wrapResult(getCastWrappedObject().getIntegration(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (integration.IntegrationPackage) wrapResult(getCastWrappedObject().getIntegration(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public deployment.DeploymentPackage getDeployment()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (deployment.DeploymentPackage) wrapResult(getCastWrappedObject().getDeployment(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (deployment.DeploymentPackage) wrapResult(getCastWrappedObject().getDeployment(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public abapmapping.AbapMappingPackage getAbapMapping()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (abapmapping.AbapMappingPackage) wrapResult(getCastWrappedObject().getAbapMapping(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (abapmapping.AbapMappingPackage) wrapResult(getCastWrappedObject().getAbapMapping(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public persistence.PersistencePackage getPersistence()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (persistence.PersistencePackage) wrapResult(getCastWrappedObject().getPersistence(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (persistence.PersistencePackage) wrapResult(getCastWrappedObject().getPersistence(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    public java.lang.Class<ngpm.NgpmPackage> get___JmiInterface() {
        return ngpm.NgpmPackage.class;
    }
    
    protected String metaObjectToString() {
        return "ngpm.NgpmPackage (Java Type)\nngpm (MOF Type)"; //$NON-NLS-1$
    }
}