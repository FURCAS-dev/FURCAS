/**
 * Generated by the MOIN Generator Version 3.0
 **/

package ngpm.__impl;

public final class NgpmPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;
    
    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(15);
        FEATURE_IDS.put("behavioral", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("data", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("dataaccess", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("localization", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("modelmanagement", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("ui", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("configuration", Integer.valueOf(6)); //$NON-NLS-1$
        FEATURE_IDS.put("integration", Integer.valueOf(7)); //$NON-NLS-1$
        FEATURE_IDS.put("deployment", Integer.valueOf(8)); //$NON-NLS-1$
        FEATURE_IDS.put("abapMapping", Integer.valueOf(9)); //$NON-NLS-1$
        FEATURE_IDS.put("persistence", Integer.valueOf(10)); //$NON-NLS-1$
    }

    // constructors    
    public NgpmPackageImpl()
    {
        super();
    }
    public NgpmPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    // internal structure type creators
    // nested packages
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getBehavioral(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "behavioral"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getData(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "data"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getDataaccess(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "dataaccess"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getLocalization(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "localization"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getModelmanagement(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "modelmanagement"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getUi(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "ui"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getConfiguration(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "configuration"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getIntegration(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "integration"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getDeployment(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "deployment"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getAbapMapping(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "abapMapping"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getPersistence(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "persistence"); //$NON-NLS-1$
    }
    // classes
    // associations
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new behavioral.__impl.BehavioralPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 1:
                    return new data.__impl.DataPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 2:
                    return new dataaccess.__impl.DataaccessPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 3:
                    return new localization.__impl.LocalizationPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 4:
                    return new modelmanagement.__impl.ModelmanagementPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 5:
                    return new ui.__impl.UiPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 6:
                    return new configuration.__impl.ConfigurationPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 7:
                    return new integration.__impl.IntegrationPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 8:
                    return new deployment.__impl.DeploymentPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 9:
                    return new abapmapping.__impl.AbapMappingPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 10:
                    return new persistence.__impl.PersistencePackageImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    public java.lang.Class<ngpm.NgpmPackage> get___JmiInterface() {
        return ngpm.NgpmPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(11);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefPackageAndName rpan = null;
            name = "behavioral"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "behavioral.BehavioralPackage", true); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
            name = "data"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "data.DataPackage", true); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
            name = "dataaccess"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "dataaccess.DataaccessPackage", true); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
            name = "localization"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "localization.LocalizationPackage", true); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
            name = "modelmanagement"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "modelmanagement.ModelmanagementPackage", true); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
            name = "ui"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "ui.UiPackage", true); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
            name = "configuration"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "configuration.ConfigurationPackage", true); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
            name = "integration"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "integration.IntegrationPackage", true); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
            name = "deployment"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "deployment.DeploymentPackage", true); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
            name = "abapMapping"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "abapmapping.AbapMappingPackage", true); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
            name = "persistence"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "persistence.PersistencePackage", true); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(0);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(0);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefAssociationAndName raan = null;
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<ngpm.__impl.NgpmPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new ngpm.__impl.NgpmPackageWrapper(conn, this, synchronize);
    }

}