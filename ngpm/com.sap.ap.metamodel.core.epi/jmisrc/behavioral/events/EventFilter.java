/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavioral.events;

/**
 * From Holger's slides:
 * <p>
 * Event Patterns:
 * An event pattern is a decision rule that describes how to match a certain set of events
 * Each match is a (partially ordered) set of events that is an instance of the event pattern constructed by replacing variables in the pattern with values
 * It is similar to mathematical language for logical expressions
 * The main features of an event pattern language are (in order of complexity):
 * Basic event patterns to express patterns that match single event types
 * Content-based event matching in terms of the event type?s attributes
 * Pattern operators for expressing relationships between events
 * Like logical operators, set operators, structural operators (causes, is independent of, before)
 * Context that restricts matches of patterns to specific contexts in which events are observed
 * Context refers to information outside the events
 * Temporal operators to specify the timing of events that match a pattern, or when a pattern should or should not match
 * Like ?at?, ?after?, ?during?
 * This interface is not intended to be implemented by clients.
 */
public interface EventFilter extends com.sap.tc.moin.repository.mmi.reflect.RefObject {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, behavioral.events.EventFilter> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, behavioral.events.EventFilter>("E0BC871351CA381D3E4B11DE830A0018DE1146FF", "sap.com/moin/mm/ap/core", "behavioral", "events", "EventFilter"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // references
    public behavioral.events.Subscription getSubscription() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setSubscription(behavioral.events.Subscription newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public behavioral.actions.Block getTest() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setTest(behavioral.actions.Block newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.EventFilter,behavioral.events.Subscription> __subscription;
        /**
         * Returns the descriptor for the <code>subscription</code> reference.
         * @return  the descriptor for the <code>subscription</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.EventFilter,behavioral.events.Subscription> SUBSCRIPTION( ) {
            if ( __subscription == null ) {
                __subscription = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.EventFilter,behavioral.events.Subscription>( "E0BC871351CA381B3E4B11DE88B90018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "behavioral", "events", "EventFilter", "subscription" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __subscription;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.EventFilter,behavioral.actions.Block> __test;
        /**
         * Returns the descriptor for the <code>test</code> reference.
         * @return  the descriptor for the <code>test</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.EventFilter,behavioral.actions.Block> TEST( ) {
            if ( __test == null ) {
                __test = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.EventFilter,behavioral.actions.Block>( "E0BC871351CA381C3E4B11DEBB260018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "behavioral", "events", "EventFilter", "test" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __test;
        }
    }
}    