/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavioral.events;

/**
 * Represents an EventConsumer's interest in being notified about occurrences of events produced by one or more EventProducers. The subscription can specify rules that constrain which events the consumer is interested in. It is then the event infrastructure's task to optimize the event forwarding to the consumers appropriately.
 * This interface is not intended to be implemented by clients.
 */
public interface Subscription extends modelmanagement.NamedElement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, behavioral.events.Subscription> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, behavioral.events.Subscription>("E0BC871351CA38133E4B11DEA6950018DE1146FF", "sap.com/moin/mm/ap/core", "behavioral", "events", "Subscription"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // references
    public behavioral.events.EventProducer getProducer() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setProducer(behavioral.events.EventProducer newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<behavioral.events.EventFilter> getFilters() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public data.classes.SapClass getSubscribingClass() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setSubscribingClass(data.classes.SapClass newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,modelmanagement.NamedElement,java.lang.String> NAME( ) {
            return modelmanagement.NamedElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>description</code> attribute.
         * @return  the descriptor for the <code>description</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,modelmanagement.NamedElement,localization.TranslatableText> DESCRIPTION( ) {
            return modelmanagement.NamedElement.DESCRIPTORS.DESCRIPTION( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.Subscription,behavioral.events.EventProducer> __producer;
        /**
         * Returns the descriptor for the <code>producer</code> reference.
         * @return  the descriptor for the <code>producer</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.Subscription,behavioral.events.EventProducer> PRODUCER( ) {
            if ( __producer == null ) {
                __producer = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.Subscription,behavioral.events.EventProducer>( "E0BC871351CA38103E4B11DE9D370018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "behavioral", "events", "Subscription", "producer" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __producer;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.Subscription,java.util.Collection<behavioral.events.EventFilter>> __filters;
        /**
         * Returns the descriptor for the <code>filters</code> reference.
         * @return  the descriptor for the <code>filters</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.Subscription,java.util.Collection<behavioral.events.EventFilter>> FILTERS( ) {
            if ( __filters == null ) {
                __filters = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.Subscription,java.util.Collection<behavioral.events.EventFilter>>( "E0BC871351CA38113E4B11DEBCEB0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "behavioral", "events", "Subscription", "filters" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __filters;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.Subscription,data.classes.SapClass> __subscribingClass;
        /**
         * Returns the descriptor for the <code>subscribingClass</code> reference.
         * @return  the descriptor for the <code>subscribingClass</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.Subscription,data.classes.SapClass> SUBSCRIBING_CLASS( ) {
            if ( __subscribingClass == null ) {
                __subscribingClass = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.Subscription,data.classes.SapClass>( "E0BC871351CA38123E4B11DECC090018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "behavioral", "events", "Subscription", "subscribingClass" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __subscribingClass;
        }
    }
}    