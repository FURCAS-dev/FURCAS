/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavioral.events.__impl;

public final class EventsPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;

    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(11);
        FEATURE_IDS.put("Subscription", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("EventProducer", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("EventFilter", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("Producer", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("A_filters_subscription", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("Subscriptions", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("A_test_filter", Integer.valueOf(6)); //$NON-NLS-1$
        FEATURE_IDS.put("NotificationSignatures", Integer.valueOf(7)); //$NON-NLS-1$
    }

    // constructors    
    public EventsPackageImpl()
    {
        super();
    }
    public EventsPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    // internal structure type creators
    // nested packages
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSubscription(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Subscription"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getEventProducer(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "EventProducer"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getEventFilter(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "EventFilter"); //$NON-NLS-1$
    }
    // associations
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getProducer(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Producer"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAFiltersSubscription(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_filters_subscription"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSubscriptions(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Subscriptions"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getATestFilter(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_test_filter"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getNotificationSignatures(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "NotificationSignatures"); //$NON-NLS-1$
    }
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavioral.events.__impl.SubscriptionImpl")); //$NON-NLS-1$
                case 1:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 2:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavioral.events.__impl.EventFilterImpl")); //$NON-NLS-1$
                case 3:
                    return new behavioral.events.__impl.ProducerImpl(workspace, mofId, immediatePackage, metaObject);
                case 4:
                    return new behavioral.events.__impl.AFiltersSubscriptionImpl(workspace, mofId, immediatePackage, metaObject);
                case 5:
                    return new behavioral.events.__impl.SubscriptionsImpl(workspace, mofId, immediatePackage, metaObject);
                case 6:
                    return new behavioral.events.__impl.ATestFilterImpl(workspace, mofId, immediatePackage, metaObject);
                case 7:
                    return new behavioral.events.__impl.NotificationSignaturesImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<behavioral.events.EventsPackage> get___JmiInterface() {
        return behavioral.events.EventsPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(0);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefPackageAndName rpan = null;
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(3);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
            name = "Subscription"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavioral.events.Subscription"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "EventProducer"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavioral.events.EventProducer"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "EventFilter"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavioral.events.EventFilter"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(5);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefAssociationAndName raan = null;
            name = "Producer"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.events.Producer"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_filters_subscription"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.events.AFiltersSubscription"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "Subscriptions"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.events.Subscriptions"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_test_filter"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.events.ATestFilter"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "NotificationSignatures"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.events.NotificationSignatures"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<behavioral.events.__impl.EventsPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new behavioral.events.__impl.EventsPackageWrapper(conn, this, synchronize);
    }

}