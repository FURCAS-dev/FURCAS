/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavioral.statusandactionold.__impl;

public final class StatusAndActionOldPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;
    
    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(42);
        FEATURE_IDS.put("SAMAction", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMStatusVariable", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMDerivator", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMStatusValue", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMStatusSchema", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMOperator", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMSchemaVariable", Integer.valueOf(6)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMSchemaValue", Integer.valueOf(7)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMSchemaAction", Integer.valueOf(8)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMSchemaDerivator", Integer.valueOf(9)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMActionForBusinessObjectNode", Integer.valueOf(10)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMStatusVariableForBusinessObjectNode", Integer.valueOf(11)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMDerivatorForBusinessObject", Integer.valueOf(12)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMStatusValueForSAMStatusVariable", Integer.valueOf(13)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMStatusSchemaForBusinessObjectNode", Integer.valueOf(14)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMOperatorForSAMStatusSchema", Integer.valueOf(15)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMSchemaVariableForSAMStatusSchema", Integer.valueOf(16)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMSchemaValueForSAMSchemaVariable", Integer.valueOf(17)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMSchemaActionForSAMStatusSchema", Integer.valueOf(18)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMSchemaActionForSAMAction", Integer.valueOf(19)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMSchemaVariableForSAMStatusVariable", Integer.valueOf(20)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMSchemaDerivatorForSAMDerivator", Integer.valueOf(21)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMSchemaDerivatorForSAMStatusSchema", Integer.valueOf(22)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMStatusTransition", Integer.valueOf(23)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMStatusSynchronizer", Integer.valueOf(24)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMSchemaDerivatorForSAMSchemaVariable", Integer.valueOf(25)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMSchemaVariableForSAMSchemaDerivator", Integer.valueOf(26)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMNeutralPreconditonFromValueToOperator", Integer.valueOf(27)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMNeutralPreconditionFromOperatorToOperator", Integer.valueOf(28)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMPreconditionFromValueToAction", Integer.valueOf(29)); //$NON-NLS-1$
        FEATURE_IDS.put("SAMPreconditionFromOperatorToAction", Integer.valueOf(30)); //$NON-NLS-1$
    }

    // constructors    
    public StatusAndActionOldPackageImpl()
    {
        super();
    }
    public StatusAndActionOldPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    public com.sap.tc.moin.repository.mmi.reflect.RefEnum create___RefEnum(com.sap.tc.moin.repository.mmi.model.EnumerationType enumType, String name) {
        com.sap.tc.moin.repository.mmi.reflect.RefEnum result = null;
        java.lang.String enumName = enumType.getName();
          if (enumName.equals("SAMOperatorKindEnum")) { //$NON-NLS-1$
            result = behavioral.statusandactionold.SamoperatorKindEnumEnum.forName(name);
          }
          else if (enumName.equals("SAMDerivatorKindEnum")) { //$NON-NLS-1$
            result = behavioral.statusandactionold.SamderivatorKindEnumEnum.forName(name);
          }
          else if (enumName.equals("PreconditionKindEnum")) { //$NON-NLS-1$
            result = behavioral.statusandactionold.PreconditionKindEnumEnum.forName(name);
          }
        return result;
    }
    // internal structure type creators
    // nested packages
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSamaction(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "SAMAction"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSamstatusVariable(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "SAMStatusVariable"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSamderivator(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "SAMDerivator"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSamstatusValue(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "SAMStatusValue"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSamstatusSchema(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "SAMStatusSchema"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSamoperator(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "SAMOperator"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSamschemaVariable(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "SAMSchemaVariable"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSamschemaValue(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "SAMSchemaValue"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSamschemaAction(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "SAMSchemaAction"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSamschemaDerivator(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "SAMSchemaDerivator"); //$NON-NLS-1$
    }
    // associations
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamactionForBusinessObjectNode(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMActionForBusinessObjectNode"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamstatusVariableForBusinessObjectNode(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMStatusVariableForBusinessObjectNode"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamderivatorForBusinessObject(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMDerivatorForBusinessObject"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamstatusValueForSamstatusVariable(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMStatusValueForSAMStatusVariable"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamstatusSchemaForBusinessObjectNode(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMStatusSchemaForBusinessObjectNode"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamoperatorForSamstatusSchema(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMOperatorForSAMStatusSchema"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamschemaVariableForSamstatusSchema(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMSchemaVariableForSAMStatusSchema"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamschemaValueForSamschemaVariable(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMSchemaValueForSAMSchemaVariable"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamschemaActionForSamstatusSchema(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMSchemaActionForSAMStatusSchema"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamschemaActionForSamaction(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMSchemaActionForSAMAction"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamschemaVariableForSamstatusVariable(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMSchemaVariableForSAMStatusVariable"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamschemaDerivatorForSamderivator(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMSchemaDerivatorForSAMDerivator"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamschemaDerivatorForSamstatusSchema(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMSchemaDerivatorForSAMStatusSchema"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamstatusTransition(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMStatusTransition"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamstatusSynchronizer(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMStatusSynchronizer"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamschemaDerivatorForSamschemaVariable(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMSchemaDerivatorForSAMSchemaVariable"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamschemaVariableForSamschemaDerivator(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMSchemaVariableForSAMSchemaDerivator"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamneutralPreconditonFromValueToOperator(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMNeutralPreconditonFromValueToOperator"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSamneutralPreconditionFromOperatorToOperator(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMNeutralPreconditionFromOperatorToOperator"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSampreconditionFromValueToAction(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMPreconditionFromValueToAction"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSampreconditionFromOperatorToAction(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SAMPreconditionFromOperatorToAction"); //$NON-NLS-1$
    }
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavioral.statusandactionold.__impl.SamactionImpl")); //$NON-NLS-1$
                case 1:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavioral.statusandactionold.__impl.SamstatusVariableImpl")); //$NON-NLS-1$
                case 2:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavioral.statusandactionold.__impl.SamderivatorImpl")); //$NON-NLS-1$
                case 3:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavioral.statusandactionold.__impl.SamstatusValueImpl")); //$NON-NLS-1$
                case 4:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavioral.statusandactionold.__impl.SamstatusSchemaImpl")); //$NON-NLS-1$
                case 5:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavioral.statusandactionold.__impl.SamoperatorImpl")); //$NON-NLS-1$
                case 6:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavioral.statusandactionold.__impl.SamschemaVariableImpl")); //$NON-NLS-1$
                case 7:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavioral.statusandactionold.__impl.SamschemaValueImpl")); //$NON-NLS-1$
                case 8:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavioral.statusandactionold.__impl.SamschemaActionImpl")); //$NON-NLS-1$
                case 9:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("behavioral.statusandactionold.__impl.SamschemaDerivatorImpl")); //$NON-NLS-1$
                case 10:
                    return new behavioral.statusandactionold.__impl.SamactionForBusinessObjectNodeImpl(workspace, mofId, immediatePackage, metaObject);
                case 11:
                    return new behavioral.statusandactionold.__impl.SamstatusVariableForBusinessObjectNodeImpl(workspace, mofId, immediatePackage, metaObject);
                case 12:
                    return new behavioral.statusandactionold.__impl.SamderivatorForBusinessObjectImpl(workspace, mofId, immediatePackage, metaObject);
                case 13:
                    return new behavioral.statusandactionold.__impl.SamstatusValueForSamstatusVariableImpl(workspace, mofId, immediatePackage, metaObject);
                case 14:
                    return new behavioral.statusandactionold.__impl.SamstatusSchemaForBusinessObjectNodeImpl(workspace, mofId, immediatePackage, metaObject);
                case 15:
                    return new behavioral.statusandactionold.__impl.SamoperatorForSamstatusSchemaImpl(workspace, mofId, immediatePackage, metaObject);
                case 16:
                    return new behavioral.statusandactionold.__impl.SamschemaVariableForSamstatusSchemaImpl(workspace, mofId, immediatePackage, metaObject);
                case 17:
                    return new behavioral.statusandactionold.__impl.SamschemaValueForSamschemaVariableImpl(workspace, mofId, immediatePackage, metaObject);
                case 18:
                    return new behavioral.statusandactionold.__impl.SamschemaActionForSamstatusSchemaImpl(workspace, mofId, immediatePackage, metaObject);
                case 19:
                    return new behavioral.statusandactionold.__impl.SamschemaActionForSamactionImpl(workspace, mofId, immediatePackage, metaObject);
                case 20:
                    return new behavioral.statusandactionold.__impl.SamschemaVariableForSamstatusVariableImpl(workspace, mofId, immediatePackage, metaObject);
                case 21:
                    return new behavioral.statusandactionold.__impl.SamschemaDerivatorForSamderivatorImpl(workspace, mofId, immediatePackage, metaObject);
                case 22:
                    return new behavioral.statusandactionold.__impl.SamschemaDerivatorForSamstatusSchemaImpl(workspace, mofId, immediatePackage, metaObject);
                case 23:
                    return new behavioral.statusandactionold.__impl.SamstatusTransitionImpl(workspace, mofId, immediatePackage, metaObject);
                case 24:
                    return new behavioral.statusandactionold.__impl.SamstatusSynchronizerImpl(workspace, mofId, immediatePackage, metaObject);
                case 25:
                    return new behavioral.statusandactionold.__impl.SamschemaDerivatorForSamschemaVariableImpl(workspace, mofId, immediatePackage, metaObject);
                case 26:
                    return new behavioral.statusandactionold.__impl.SamschemaVariableForSamschemaDerivatorImpl(workspace, mofId, immediatePackage, metaObject);
                case 27:
                    return new behavioral.statusandactionold.__impl.SamneutralPreconditonFromValueToOperatorImpl(workspace, mofId, immediatePackage, metaObject);
                case 28:
                    return new behavioral.statusandactionold.__impl.SamneutralPreconditionFromOperatorToOperatorImpl(workspace, mofId, immediatePackage, metaObject);
                case 29:
                    return new behavioral.statusandactionold.__impl.SampreconditionFromValueToActionImpl(workspace, mofId, immediatePackage, metaObject);
                case 30:
                    return new behavioral.statusandactionold.__impl.SampreconditionFromOperatorToActionImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    public java.lang.Class<behavioral.statusandactionold.StatusAndActionOldPackage> get___JmiInterface() {
        return behavioral.statusandactionold.StatusAndActionOldPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(0);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefPackageAndName rpan = null;
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(10);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
            name = "SAMAction"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavioral.statusandactionold.Samaction"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "SAMStatusVariable"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavioral.statusandactionold.SamstatusVariable"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "SAMDerivator"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavioral.statusandactionold.Samderivator"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "SAMStatusValue"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavioral.statusandactionold.SamstatusValue"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "SAMStatusSchema"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavioral.statusandactionold.SamstatusSchema"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "SAMOperator"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavioral.statusandactionold.Samoperator"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "SAMSchemaVariable"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavioral.statusandactionold.SamschemaVariable"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "SAMSchemaValue"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavioral.statusandactionold.SamschemaValue"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "SAMSchemaAction"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavioral.statusandactionold.SamschemaAction"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "SAMSchemaDerivator"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "behavioral.statusandactionold.SamschemaDerivator"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(21);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefAssociationAndName raan = null;
            name = "SAMActionForBusinessObjectNode"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamactionForBusinessObjectNode"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMStatusVariableForBusinessObjectNode"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamstatusVariableForBusinessObjectNode"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMDerivatorForBusinessObject"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamderivatorForBusinessObject"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMStatusValueForSAMStatusVariable"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamstatusValueForSamstatusVariable"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMStatusSchemaForBusinessObjectNode"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamstatusSchemaForBusinessObjectNode"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMOperatorForSAMStatusSchema"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamoperatorForSamstatusSchema"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMSchemaVariableForSAMStatusSchema"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamschemaVariableForSamstatusSchema"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMSchemaValueForSAMSchemaVariable"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamschemaValueForSamschemaVariable"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMSchemaActionForSAMStatusSchema"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamschemaActionForSamstatusSchema"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMSchemaActionForSAMAction"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamschemaActionForSamaction"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMSchemaVariableForSAMStatusVariable"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamschemaVariableForSamstatusVariable"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMSchemaDerivatorForSAMDerivator"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamschemaDerivatorForSamderivator"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMSchemaDerivatorForSAMStatusSchema"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamschemaDerivatorForSamstatusSchema"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMStatusTransition"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamstatusTransition"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMStatusSynchronizer"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamstatusSynchronizer"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMSchemaDerivatorForSAMSchemaVariable"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamschemaDerivatorForSamschemaVariable"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMSchemaVariableForSAMSchemaDerivator"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamschemaVariableForSamschemaDerivator"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMNeutralPreconditonFromValueToOperator"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamneutralPreconditonFromValueToOperator"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMNeutralPreconditionFromOperatorToOperator"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SamneutralPreconditionFromOperatorToOperator"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMPreconditionFromValueToAction"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SampreconditionFromValueToAction"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SAMPreconditionFromOperatorToAction"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "behavioral.statusandactionold.SampreconditionFromOperatorToAction"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<behavioral.statusandactionold.__impl.StatusAndActionOldPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new behavioral.statusandactionold.__impl.StatusAndActionOldPackageWrapper(conn, this, synchronize);
    }

}