/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavioral.statusandactionold.__impl;

public class SamderivatorForBusinessObjectWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<behavioral.statusandactionold.SamderivatorForBusinessObject> implements behavioral.statusandactionold.SamderivatorForBusinessObject,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The SamderivatorForBusinessObject wrapper
     */
    public SamderivatorForBusinessObjectWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, behavioral.statusandactionold.__impl.SamderivatorForBusinessObjectImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private behavioral.statusandactionold.__impl.SamderivatorForBusinessObjectImpl getCastWrappedObject() {
        return (behavioral.statusandactionold.__impl.SamderivatorForBusinessObjectImpl) getWrappedObject();
    }

    public behavioral.statusandactionold.SamderivatorForBusinessObject unwrap() {
        return (behavioral.statusandactionold.SamderivatorForBusinessObject) getWrappedObject();
    }
    
    public boolean exists(behavioral.statusandactionold.Samderivator _SamDerivators, data.classes.SapClass _BusinessObject) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _SamDerivators), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessObject));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _SamDerivators), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessObject)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getSamDerivators(data.classes.SapClass _BusinessObject) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getSamDerivators(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessObject)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getSamDerivators(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessObject))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.classes.SapClass getBusinessObject(behavioral.statusandactionold.Samderivator _SamDerivators) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.classes.SapClass) wrapResult(getCastWrappedObject().getBusinessObject(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _SamDerivators)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.classes.SapClass) wrapResult(getCastWrappedObject().getBusinessObject(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _SamDerivators))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(behavioral.statusandactionold.Samderivator _SamDerivators, data.classes.SapClass _BusinessObject) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _SamDerivators), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessObject));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _SamDerivators), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessObject)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(behavioral.statusandactionold.Samderivator _SamDerivators, data.classes.SapClass _BusinessObject) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _SamDerivators), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessObject));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _SamDerivators), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _BusinessObject)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<behavioral.statusandactionold.SamderivatorForBusinessObject> get___JmiInterface() {
        return behavioral.statusandactionold.SamderivatorForBusinessObject.class;
    }

    protected String metaObjectToString() {
        return "behavioral.statusandactionold.SamderivatorForBusinessObject (Java Type)\nbehavioral.status_and_action_old.SAMDerivatorForBusinessObject (MOF Type)"; //$NON-NLS-1$
    }    
}