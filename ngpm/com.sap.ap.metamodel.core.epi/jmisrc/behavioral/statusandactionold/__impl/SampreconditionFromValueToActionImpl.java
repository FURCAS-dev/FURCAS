/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavioral.statusandactionold.__impl;

public final class SampreconditionFromValueToActionImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationImpl
{
    // default constructor
    public SampreconditionFromValueToActionImpl() {
        super();
    }

    // specific constructor
    public SampreconditionFromValueToActionImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSchemaActions, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return exists(get___CurrentConnection(), _SamSchemaActions, _SamSchemaValues);
    }
    public boolean exists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSchemaActions, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return ___existsMultN( connection, _SamSchemaValues, _SamSchemaActions, "E0BC871351DD4B083E4B11DECD390018DE1146FF"); //$NON-NLS-1$
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getSamSchemaActions(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getSamSchemaActions(get___CurrentConnection(), _SamSchemaValues);
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getSamSchemaActions(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject>) ___getElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _SamSchemaValues, get___EndAndMetaObject( 1 ) );
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getSamSchemaValues(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSchemaActions) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getSamSchemaValues(get___CurrentConnection(), _SamSchemaActions);
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getSamSchemaValues(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSchemaActions) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject>) ___queryElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _SamSchemaActions, get___EndAndMetaObject( 0 ) );
    }
    public boolean add(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSchemaActions, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_SamSchemaActions, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_SamSchemaValues);
    }
    public boolean add(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSchemaActions, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_SamSchemaActions, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_SamSchemaValues);
    }
    public boolean remove(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSchemaActions, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_SamSchemaActions, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_SamSchemaValues);
    }
    public boolean remove(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSchemaActions, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_SamSchemaActions, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_SamSchemaValues);
    }
    public boolean refLinkExists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefObject firstEnd, com.sap.tc.moin.repository.mmi.reflect.RefObject secondEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        if ( firstEnd == null || secondEnd == null ) { return false; }
        checkTypesForRefLinkExists( connection, firstEnd, secondEnd );
        return exists( connection, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) firstEnd, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) secondEnd );
    }

    public java.lang.Class<behavioral.statusandactionold.SampreconditionFromValueToAction> get___JmiInterface() {
        return behavioral.statusandactionold.SampreconditionFromValueToAction.class;
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<behavioral.statusandactionold.SampreconditionFromValueToAction> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new behavioral.statusandactionold.__impl.SampreconditionFromValueToActionWrapper(conn, this, synchronize);
    }
}