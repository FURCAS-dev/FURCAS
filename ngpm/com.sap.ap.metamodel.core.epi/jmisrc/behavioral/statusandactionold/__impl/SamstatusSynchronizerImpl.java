/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavioral.statusandactionold.__impl;

public final class SamstatusSynchronizerImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationImpl
{
    // default constructor
    public SamstatusSynchronizerImpl() {
        super();
    }

    // specific constructor
    public SamstatusSynchronizerImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSourceSchemaValues, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamTargetSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return exists(get___CurrentConnection(), _SamSourceSchemaValues, _SamTargetSchemaValues);
    }
    public boolean exists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSourceSchemaValues, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamTargetSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return ___existsMultN( connection, _SamTargetSchemaValues, _SamSourceSchemaValues, "E0BC871351DD4AF93E4B11DE95CF0018DE1146FF"); //$NON-NLS-1$
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getSamSourceSchemaValues(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamTargetSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getSamSourceSchemaValues(get___CurrentConnection(), _SamTargetSchemaValues);
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getSamSourceSchemaValues(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamTargetSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject>) ___getElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _SamTargetSchemaValues, get___EndAndMetaObject( 1 ) );
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getSamTargetSchemaValues(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSourceSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getSamTargetSchemaValues(get___CurrentConnection(), _SamSourceSchemaValues);
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getSamTargetSchemaValues(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSourceSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject>) ___queryElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _SamSourceSchemaValues, get___EndAndMetaObject( 0 ) );
    }
    public boolean add(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSourceSchemaValues, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamTargetSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_SamSourceSchemaValues, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_SamTargetSchemaValues);
    }
    public boolean add(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSourceSchemaValues, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamTargetSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_SamSourceSchemaValues, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_SamTargetSchemaValues);
    }
    public boolean remove(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSourceSchemaValues, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamTargetSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_SamSourceSchemaValues, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_SamTargetSchemaValues);
    }
    public boolean remove(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamSourceSchemaValues, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _SamTargetSchemaValues) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_SamSourceSchemaValues, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_SamTargetSchemaValues);
    }
    public boolean refLinkExists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefObject firstEnd, com.sap.tc.moin.repository.mmi.reflect.RefObject secondEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        if ( firstEnd == null || secondEnd == null ) { return false; }
        checkTypesForRefLinkExists( connection, firstEnd, secondEnd );
        return exists( connection, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) firstEnd, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) secondEnd );
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<behavioral.statusandactionold.SamstatusSynchronizer> get___JmiInterface() {
        return behavioral.statusandactionold.SamstatusSynchronizer.class;
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<behavioral.statusandactionold.SamstatusSynchronizer> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new behavioral.statusandactionold.__impl.SamstatusSynchronizerWrapper(conn, this, synchronize);
    }
}