/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavioral.actions;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface Statement extends com.sap.tc.moin.repository.mmi.reflect.RefObject {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, behavioral.actions.Statement> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, behavioral.actions.Statement>("E0BC871351C09B253E4B11DEA0950018DE1146FF", "sap.com/moin/mm/ap/core", "behavioral", "actions", "Statement"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // references
    public behavioral.actions.Block getBlock() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setBlock(behavioral.actions.Block newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // operations
    public behavioral.actions.Block getOutermostBlock() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * A statement is said to be side effect free if it does not modify any variable declared outside the scope of the block owning the statement and if it does not modify any object's state and if it does not modify any association's link set.
     * <p>
     * TODO We need a more context-sensitive definition of sideEffectFree. While assigning to a local variable disallows statement reordering within the block, the block can still overall be side effect free such that its invocation may be reordered. There seem to be at least two notions of side effect freeness: one within the block in which it occurs (and variable assignment in this context counts as a side effect because it will disallow reordering), and another one regarding side effects observable outside the block; those are all modifications that can "escape" from the block, including changing the state of an object that is reachable outside the block (even if created in the block but then returned from the block), or changing the contents of a link container visible outside the block.
     */
    public boolean isSideEffectFree() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Assignment statements to block-local variables do not imply a side effect w.r.t the block
     */
    public boolean isSideEffectFreeForBlock(behavioral.actions.Block block) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.actions.Statement,behavioral.actions.Block> __block;
        /**
         * Returns the descriptor for the <code>block</code> reference.
         * @return  the descriptor for the <code>block</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.actions.Statement,behavioral.actions.Block> BLOCK( ) {
            if ( __block == null ) {
                __block = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.actions.Statement,behavioral.actions.Block>( "E0BC871351C09B203E4B11DE8A390018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "behavioral", "actions", "Statement", "block" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __block;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavioral.actions.Statement,behavioral.actions.Block> __getOutermostBlock;
        /**
         * Returns the descriptor for the <code>getOutermostBlock</code> operation.
         * @return  the descriptor for the <code>getOutermostBlock</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavioral.actions.Statement,behavioral.actions.Block> GET_OUTERMOST_BLOCK( ) {
            if ( __getOutermostBlock == null ) {
                __getOutermostBlock = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavioral.actions.Statement,behavioral.actions.Block>( "E0BC871351C09B223E4B11DE92520018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "behavioral", "actions", "Statement", "getOutermostBlock" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __getOutermostBlock;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavioral.actions.Statement,java.lang.Boolean> __isSideEffectFree;
        /**
         * Returns the descriptor for the <code>isSideEffectFree</code> operation.
         * @return  the descriptor for the <code>isSideEffectFree</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavioral.actions.Statement,java.lang.Boolean> IS_SIDE_EFFECT_FREE( ) {
            if ( __isSideEffectFree == null ) {
                __isSideEffectFree = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavioral.actions.Statement,java.lang.Boolean>( "E0BC871351C09B243E4B11DEB0390018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "behavioral", "actions", "Statement", "isSideEffectFree" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __isSideEffectFree;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavioral.actions.Statement,java.lang.Boolean> __isSideEffectFreeForBlock;
        /**
         * Returns the descriptor for the <code>isSideEffectFreeForBlock</code> operation.
         * @return  the descriptor for the <code>isSideEffectFreeForBlock</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavioral.actions.Statement,java.lang.Boolean> IS_SIDE_EFFECT_FREE_FOR_BLOCK( ) {
            if ( __isSideEffectFreeForBlock == null ) {
                __isSideEffectFreeForBlock = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavioral.actions.Statement,java.lang.Boolean>( "E0BC8713DADAF9F2512411DE95200019D29902CC", "sap.com/moin/mm/ap/core", new java.lang.String[] { "behavioral", "actions", "Statement", "isSideEffectFreeForBlock" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __isSideEffectFreeForBlock;
        }
    }
}    