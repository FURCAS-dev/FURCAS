/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavioral.actions;

/**
 * Some action language that talks in the concepts of BOs, BONodes, invoking services, sending messages, explicitly declaring that an event occurred, triggering actions, evaluating rules, ...
 * <p>
 * The language can be used, e.g., to specify the behavior of an action (part of a BO or BONode) or a service implementation.
 * This interface is not intended to be implemented by clients.
 */
public interface ActionsPackage extends com.sap.tc.moin.repository.mmi.reflect.RefPackage
{
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.PackageDescriptor<behavioral.actions.ActionsPackage> PACKAGE_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.PackageDescriptor<behavioral.actions.ActionsPackage>("E0BC871351C7C7253E4B11DEBA800018DE1146FF", "sap.com/moin/mm/ap/core", "behavioral", "actions"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAssignment();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getStatement();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getBlock();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getIfElse();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getWhileLoop();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getForeach();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getReturn();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAddLink();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getRemoveLink();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getLinkManipulationStatement();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getExpressionStatement();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSort();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getQueryInvocation();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getConstant();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getVariable();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getIterator();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getNamedValueDeclaration();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getStatementWithNestedBlocks();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSingleBlockStatement();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getStatementWithArgument();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getNamedValueWithOptionalInitExpression();
    // associations
    public behavioral.actions.AAssignToAssignments getAAssignToAssignments();
    public behavioral.actions.AStatementsBlock getAStatementsBlock();
    public behavioral.actions.AVariablesOwner getAVariablesOwner();
    public behavioral.actions.ACollectionForeach getACollectionForeach();
    public behavioral.actions.AAssociationLinkManipulationStatement getAAssociationLinkManipulationStatement();
    public behavioral.actions.AObjectsLinkManipulationStatement getAObjectsLinkManipulationStatement();
    public behavioral.actions.AExpressionExpressionStatement getAExpressionExpressionStatement();
    public behavioral.actions.AForVariableBoundToFor getAForVariableBoundToFor();
    public behavioral.actions.AInitExpressionNamedValueWithOptionalInitExpression getAInitExpressionNamedValueWithOptionalInitExpression();
    public behavioral.actions.AOwningStatementNestedBlocks getAOwningStatementNestedBlocks();
    public behavioral.actions.ANamedValueNamedValueDeclaration getANamedValueNamedValueDeclaration();
}