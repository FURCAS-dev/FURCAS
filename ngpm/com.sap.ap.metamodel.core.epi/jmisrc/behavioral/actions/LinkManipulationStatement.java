/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavioral.actions;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface LinkManipulationStatement extends behavioral.actions.Statement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, behavioral.actions.LinkManipulationStatement> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, behavioral.actions.LinkManipulationStatement>("E0BC871351C30C323E4B11DECF930018DE1146FF", "sap.com/moin/mm/ap/core", "behavioral", "actions", "LinkManipulationStatement"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // attributes
    /**
     * An optional position specification which will be ignored for associations with no ordered ends. If not set for an association with ordered ends, a reasonable default will be chosen.
     */
    public java.lang.Integer getAt() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * An optional position specification which will be ignored for associations with no ordered ends. If not set for an association with ordered ends, a reasonable default will be chosen.
     */
    public void setAt(java.lang.Integer newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public data.classes.Association getAssociation() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAssociation(data.classes.Association newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<dataaccess.expressions.Expression> getObjects() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,behavioral.actions.LinkManipulationStatement,java.lang.Integer> __at;
        /**
         * Returns the descriptor for the <code>at</code> attribute.
         * @return  the descriptor for the <code>at</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,behavioral.actions.LinkManipulationStatement,java.lang.Integer> AT( ) {
            if ( __at == null ) {
                __at = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,behavioral.actions.LinkManipulationStatement,java.lang.Integer>( "E0BC87134ADC38507A8C11DE919400155883529C", "sap.com/moin/mm/ap/core", new java.lang.String[] { "behavioral", "actions", "LinkManipulationStatement", "at" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __at;
        }
        /**
         * Returns the descriptor for the <code>block</code> reference.
         * @return  the descriptor for the <code>block</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.actions.Statement,behavioral.actions.Block> BLOCK( ) {
            return behavioral.actions.Statement.DESCRIPTORS.BLOCK( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.actions.LinkManipulationStatement,data.classes.Association> __association;
        /**
         * Returns the descriptor for the <code>association</code> reference.
         * @return  the descriptor for the <code>association</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.actions.LinkManipulationStatement,data.classes.Association> ASSOCIATION( ) {
            if ( __association == null ) {
                __association = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.actions.LinkManipulationStatement,data.classes.Association>( "E0BC871351C30C303E4B11DE94F10018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "behavioral", "actions", "LinkManipulationStatement", "association" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __association;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.actions.LinkManipulationStatement,java.util.List<dataaccess.expressions.Expression>> __objects;
        /**
         * Returns the descriptor for the <code>objects</code> reference.
         * @return  the descriptor for the <code>objects</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.actions.LinkManipulationStatement,java.util.List<dataaccess.expressions.Expression>> OBJECTS( ) {
            if ( __objects == null ) {
                __objects = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.actions.LinkManipulationStatement,java.util.List<dataaccess.expressions.Expression>>( "E0BC871351C30C313E4B11DE9D4C0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "behavioral", "actions", "LinkManipulationStatement", "objects" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __objects;
        }
        /**
         * Returns the descriptor for the <code>getOutermostBlock</code> operation.
         * @return  the descriptor for the <code>getOutermostBlock</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavioral.actions.Statement,behavioral.actions.Block> GET_OUTERMOST_BLOCK( ) {
            return behavioral.actions.Statement.DESCRIPTORS.GET_OUTERMOST_BLOCK( );
        }
        /**
         * Returns the descriptor for the <code>isSideEffectFree</code> operation.
         * @return  the descriptor for the <code>isSideEffectFree</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavioral.actions.Statement,java.lang.Boolean> IS_SIDE_EFFECT_FREE( ) {
            return behavioral.actions.Statement.DESCRIPTORS.IS_SIDE_EFFECT_FREE( );
        }
        /**
         * Returns the descriptor for the <code>isSideEffectFreeForBlock</code> operation.
         * @return  the descriptor for the <code>isSideEffectFreeForBlock</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,behavioral.actions.Statement,java.lang.Boolean> IS_SIDE_EFFECT_FREE_FOR_BLOCK( ) {
            return behavioral.actions.Statement.DESCRIPTORS.IS_SIDE_EFFECT_FREE_FOR_BLOCK( );
        }
    }
}    