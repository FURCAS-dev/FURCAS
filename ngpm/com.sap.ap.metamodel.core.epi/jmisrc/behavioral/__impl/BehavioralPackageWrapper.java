/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavioral.__impl;

public class BehavioralPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<behavioral.__impl.BehavioralPackageImpl> implements behavioral.BehavioralPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The BehavioralPackage wrapper
     */
    public BehavioralPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, behavioral.__impl.BehavioralPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private behavioral.__impl.BehavioralPackageImpl getCastWrappedObject() {
        return (behavioral.__impl.BehavioralPackageImpl) getWrappedObject();
    }
    
    public behavioral.__impl.BehavioralPackageImpl unwrap() {
        return (behavioral.__impl.BehavioralPackageImpl) getWrappedObject();
    }
    
    public behavioral.bpdm.BpdmPackage getBpdm()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavioral.bpdm.BpdmPackage) wrapResult(getCastWrappedObject().getBpdm(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavioral.bpdm.BpdmPackage) wrapResult(getCastWrappedObject().getBpdm(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavioral.businesstasks.BusinesstasksPackage getBusinesstasks()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavioral.businesstasks.BusinesstasksPackage) wrapResult(getCastWrappedObject().getBusinesstasks(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavioral.businesstasks.BusinesstasksPackage) wrapResult(getCastWrappedObject().getBusinesstasks(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavioral.actions.ActionsPackage getActions()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavioral.actions.ActionsPackage) wrapResult(getCastWrappedObject().getActions(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavioral.actions.ActionsPackage) wrapResult(getCastWrappedObject().getActions(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavioral.rules.RulesPackage getRules()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavioral.rules.RulesPackage) wrapResult(getCastWrappedObject().getRules(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavioral.rules.RulesPackage) wrapResult(getCastWrappedObject().getRules(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavioral.events.EventsPackage getEvents()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavioral.events.EventsPackage) wrapResult(getCastWrappedObject().getEvents(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavioral.events.EventsPackage) wrapResult(getCastWrappedObject().getEvents(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavioral.transactions.TransactionsPackage getTransactions()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavioral.transactions.TransactionsPackage) wrapResult(getCastWrappedObject().getTransactions(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavioral.transactions.TransactionsPackage) wrapResult(getCastWrappedObject().getTransactions(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavioral.statusandactionold.StatusAndActionOldPackage getStatusAndActionOld()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavioral.statusandactionold.StatusAndActionOldPackage) wrapResult(getCastWrappedObject().getStatusAndActionOld(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavioral.statusandactionold.StatusAndActionOldPackage) wrapResult(getCastWrappedObject().getStatusAndActionOld(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavioral.statusandaction.StatusAndActionPackage getStatusAndAction()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavioral.statusandaction.StatusAndActionPackage) wrapResult(getCastWrappedObject().getStatusAndAction(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavioral.statusandaction.StatusAndActionPackage) wrapResult(getCastWrappedObject().getStatusAndAction(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    public java.lang.Class<behavioral.BehavioralPackage> get___JmiInterface() {
        return behavioral.BehavioralPackage.class;
    }
    
    protected String metaObjectToString() {
        return "behavioral.BehavioralPackage (Java Type)\nbehavioral (MOF Type)"; //$NON-NLS-1$
    }
}