/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavioral.statusandaction.assembly.__impl;

public class NeutralStrategyWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefObjectWrapperImpl<behavioral.statusandaction.assembly.__impl.NeutralStrategyImpl> implements behavioral.statusandaction.assembly.NeutralStrategy,com.sap.tc.moin.repository.Partitionable {


    static {
    }

    public NeutralStrategyWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, behavioral.statusandaction.assembly.__impl.NeutralStrategyImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    @SuppressWarnings("unused")
    private behavioral.statusandaction.assembly.__impl.NeutralStrategyImpl getCastWrappedObject() {
        return (behavioral.statusandaction.assembly.__impl.NeutralStrategyImpl) getWrappedObject();
    }
    
    public behavioral.statusandaction.assembly.__impl.NeutralStrategyImpl unwrap() {
        return (behavioral.statusandaction.assembly.__impl.NeutralStrategyImpl) getWrappedObject();
    }
        
    // methods for attributes
     
    // methods for references
   
    // methods for modeled operations
    
    // methods for internal modeled operations

    // reflective methods
    

    // get the JMI interface
    @SuppressWarnings("unchecked")
    public java.lang.Class<behavioral.statusandaction.assembly.NeutralStrategy> get___JmiInterface() {
        return behavioral.statusandaction.assembly.NeutralStrategy.class;
    }

    // to String
    protected String metaObjectToString() {
        return "behavioral.statusandaction.assembly.NeutralStrategy (Java Type)\nbehavioral.status_and_action.assembly.NeutralStrategy (MOF Type)"; //$NON-NLS-1$
    }    
}