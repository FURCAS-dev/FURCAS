/**
 * Generated by the MOIN Generator Version 3.0
 **/

package behavioral.statusandaction.design.__impl;

public class VariableHasValuesWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<behavioral.statusandaction.design.VariableHasValues> implements behavioral.statusandaction.design.VariableHasValues,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The VariableHasValues wrapper
     */
    public VariableHasValuesWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, behavioral.statusandaction.design.__impl.VariableHasValuesImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private behavioral.statusandaction.design.__impl.VariableHasValuesImpl getCastWrappedObject() {
        return (behavioral.statusandaction.design.__impl.VariableHasValuesImpl) getWrappedObject();
    }

    public behavioral.statusandaction.design.VariableHasValues unwrap() {
        return (behavioral.statusandaction.design.VariableHasValues) getWrappedObject();
    }
    
    public boolean exists(behavioral.statusandaction.design.AbstractStatusValue _Values, behavioral.statusandaction.design.AbstractStatusVariable _Variable) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Values), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Variable));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Values), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Variable)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getValues(behavioral.statusandaction.design.AbstractStatusVariable _Variable) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getValues(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Variable)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getValues(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Variable))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public behavioral.statusandaction.design.AbstractStatusVariable getVariable(behavioral.statusandaction.design.AbstractStatusValue _Values) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (behavioral.statusandaction.design.AbstractStatusVariable) wrapResult(getCastWrappedObject().getVariable(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Values)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (behavioral.statusandaction.design.AbstractStatusVariable) wrapResult(getCastWrappedObject().getVariable(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Values))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(behavioral.statusandaction.design.AbstractStatusValue _Values, behavioral.statusandaction.design.AbstractStatusVariable _Variable) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Values), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Variable));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Values), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Variable)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(behavioral.statusandaction.design.AbstractStatusValue _Values, behavioral.statusandaction.design.AbstractStatusVariable _Variable) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Values), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Variable));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Values), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Variable)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<behavioral.statusandaction.design.VariableHasValues> get___JmiInterface() {
        return behavioral.statusandaction.design.VariableHasValues.class;
    }

    protected String metaObjectToString() {
        return "behavioral.statusandaction.design.VariableHasValues (Java Type)\nbehavioral.status_and_action.design.VariableHasValues (MOF Type)"; //$NON-NLS-1$
    }    
}