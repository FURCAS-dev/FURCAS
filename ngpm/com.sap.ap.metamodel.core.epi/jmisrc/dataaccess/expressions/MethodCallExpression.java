/**
 * Generated by the MOIN Generator Version 3.0
 **/

package dataaccess.expressions;

/**
 * The MethodCallExpression executes an implementation of the signature using the "parameters" expressions as arguments on the object evaluated by the "object" expression. For that, first the "object" expression is evaluated. the parameter expressions (if provided) are evaluated and then passed to the implementation.
 * <p>
 * The object expression must evaluate to a single value, i.e., a TypeDefinition with upperMultiplicity = 1.
 * This interface is not intended to be implemented by clients.
 */
public interface MethodCallExpression extends dataaccess.expressions.ObjectBasedExpression,dataaccess.expressions.SignatureCallExpression {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, dataaccess.expressions.MethodCallExpression> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, dataaccess.expressions.MethodCallExpression>("E075D95551F2A7D43E4B11DEA30B0018DE1146FF", "sap.com/moin/mm/ap/core", "dataaccess", "expressions", "MethodCallExpression"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // attributes
    /**
     * An operation may be invoked asynchronously. If the operation returns a value, it is ignored, as are any exceptions raised by the operation. An OperationExpression with this attribute set to true has itself no type and therefore cannot reasonably be used in a side effect-free expression but only as a statement.
     */
    public boolean isAsynchronous() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * An operation may be invoked asynchronously. If the operation returns a value, it is ignored, as are any exceptions raised by the operation. An OperationExpression with this attribute set to true has itself no type and therefore cannot reasonably be used in a side effect-free expression but only as a statement.
     */
    public void setAsynchronous(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public data.classes.MethodSignature getMethodSignature() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setMethodSignature(data.classes.MethodSignature newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,dataaccess.expressions.MethodCallExpression,java.lang.Boolean> __asynchronous;
        /**
         * Returns the descriptor for the <code>asynchronous</code> attribute.
         * @return  the descriptor for the <code>asynchronous</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,dataaccess.expressions.MethodCallExpression,java.lang.Boolean> ASYNCHRONOUS( ) {
            if ( __asynchronous == null ) {
                __asynchronous = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,dataaccess.expressions.MethodCallExpression,java.lang.Boolean>( "E075D95551F2A7D33E4B11DECCBF0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "dataaccess", "expressions", "MethodCallExpression", "asynchronous" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __asynchronous;
        }
        /**
         * Returns the descriptor for the <code>ownedTypeDefinition</code> reference.
         * @return  the descriptor for the <code>ownedTypeDefinition</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.TypedElement,data.classes.TypeDefinition> OWNED_TYPE_DEFINITION( ) {
            return data.classes.TypedElement.DESCRIPTORS.OWNED_TYPE_DEFINITION( );
        }
        /**
         * Returns the descriptor for the <code>object</code> reference.
         * @return  the descriptor for the <code>object</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.expressions.ObjectBasedExpression,dataaccess.expressions.Expression> OBJECT( ) {
            return dataaccess.expressions.ObjectBasedExpression.DESCRIPTORS.OBJECT( );
        }
        /**
         * Returns the descriptor for the <code>parameters</code> reference.
         * @return  the descriptor for the <code>parameters</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.expressions.SignatureCallExpression,java.util.List<dataaccess.expressions.Expression>> PARAMETERS( ) {
            return dataaccess.expressions.SignatureCallExpression.DESCRIPTORS.PARAMETERS( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.expressions.MethodCallExpression,data.classes.MethodSignature> __methodSignature;
        /**
         * Returns the descriptor for the <code>methodSignature</code> reference.
         * @return  the descriptor for the <code>methodSignature</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.expressions.MethodCallExpression,data.classes.MethodSignature> METHOD_SIGNATURE( ) {
            if ( __methodSignature == null ) {
                __methodSignature = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.expressions.MethodCallExpression,data.classes.MethodSignature>( "E075D95551F2A7D23E4B11DEAD5D0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "dataaccess", "expressions", "MethodCallExpression", "methodSignature" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __methodSignature;
        }
        /**
         * Returns the descriptor for the <code>conformsTo</code> operation.
         * @return  the descriptor for the <code>conformsTo</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypedElement,java.lang.Boolean> CONFORMS_TO( ) {
            return data.classes.TypedElement.DESCRIPTORS.CONFORMS_TO( );
        }
        /**
         * Returns the descriptor for the <code>getType</code> operation.
         * @return  the descriptor for the <code>getType</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypedElement,data.classes.TypeDefinition> GET_TYPE( ) {
            return data.classes.TypedElement.DESCRIPTORS.GET_TYPE( );
        }
        /**
         * Returns the descriptor for the <code>isSideEffectFree</code> operation.
         * @return  the descriptor for the <code>isSideEffectFree</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,dataaccess.expressions.Expression,java.lang.Boolean> IS_SIDE_EFFECT_FREE( ) {
            return dataaccess.expressions.Expression.DESCRIPTORS.IS_SIDE_EFFECT_FREE( );
        }
        /**
         * Returns the descriptor for the <code>evaluatesToEqualAs</code> operation.
         * @return  the descriptor for the <code>evaluatesToEqualAs</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,dataaccess.expressions.Expression,java.lang.Boolean> EVALUATES_TO_EQUAL_AS( ) {
            return dataaccess.expressions.Expression.DESCRIPTORS.EVALUATES_TO_EQUAL_AS( );
        }
        /**
         * Returns the descriptor for the <code>getSignature</code> operation.
         * @return  the descriptor for the <code>getSignature</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,dataaccess.expressions.SignatureCallExpression,data.classes.Signature> GET_SIGNATURE( ) {
            return dataaccess.expressions.SignatureCallExpression.DESCRIPTORS.GET_SIGNATURE( );
        }
        /**
         * Returns the descriptor for the <code>getMultiplicityOfCallTarget</code> operation.
         * @return  the descriptor for the <code>getMultiplicityOfCallTarget</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,dataaccess.expressions.SignatureCallExpression,data.classes.Multiplicity> GET_MULTIPLICITY_OF_CALL_TARGET( ) {
            return dataaccess.expressions.SignatureCallExpression.DESCRIPTORS.GET_MULTIPLICITY_OF_CALL_TARGET( );
        }
    }
}    