/**
 * Generated by the MOIN Generator Version 3.0
 **/

package dataaccess.expressions;
/**
 * If specified, the expression must evaluate to a function such that the association end's (to) type definition conforms to the function's single input argument's type definition and the output is a single Boolean object.
 * This interface is not intended to be implemented by clients.
 */
public interface AFilterFunctionNavigationStep extends com.sap.tc.moin.repository.mmi.reflect.RefAssociation
{
    // association extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.AssociationDescriptor<dataaccess.expressions.AFilterFunctionNavigationStep> ASSOCIATION_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.AssociationDescriptor<dataaccess.expressions.AFilterFunctionNavigationStep>("E075D95551F518CD3E4B11DECB940018DE1146FF", "sap.com/moin/mm/ap/core", "dataaccess", "expressions", "A_filterFunction_navigationStep"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 


    // association interface
    public boolean exists(dataaccess.expressions.Expression _FilterFunction, dataaccess.expressions.NavigationStep _NavigationStep) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public dataaccess.expressions.Expression getFilterFunction(dataaccess.expressions.NavigationStep _NavigationStep) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public dataaccess.expressions.NavigationStep getNavigationStep(dataaccess.expressions.Expression _FilterFunction) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean add(dataaccess.expressions.Expression _FilterFunction, dataaccess.expressions.NavigationStep _NavigationStep) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean remove(dataaccess.expressions.Expression _FilterFunction, dataaccess.expressions.NavigationStep _NavigationStep) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
}