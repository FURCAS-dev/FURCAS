/**
 * Generated by the MOIN Generator Version 3.0
 **/

package dataaccess.expressions;

/**
 * Specifies an expression language that allows its users for form expressions over objects and values, producing other objects and values.
 * This interface is not intended to be implemented by clients.
 */
public interface ExpressionsPackage extends com.sap.tc.moin.repository.mmi.reflect.RefPackage
{
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.PackageDescriptor<dataaccess.expressions.ExpressionsPackage> PACKAGE_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.PackageDescriptor<dataaccess.expressions.ExpressionsPackage>("E075D95551F518D13E4B11DE84CF0018DE1146FF", "sap.com/moin/mm/ap/core", "dataaccess", "expressions"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 
    // packages
    public dataaccess.expressions.literals.LiteralsPackage getLiterals();
    public dataaccess.expressions.collectionexpressions.CollectionExpressionsPackage getCollectionExpressions();
    public dataaccess.expressions.fp.FpPackage getFp();
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getExpression();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getVariableExpression();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getMethodCallExpression();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getObjectBasedExpression();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getObjectCreationExpression();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getFunctionCallExpression();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getWithArgument();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getThis();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getEquals();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAssociationEndNavigationExpression();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSignatureCallExpression();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getObjectCount();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getReplace();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getNavigationStep();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getHead();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getTail();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAsList();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getConditional();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getTernary();
    // associations
    public dataaccess.expressions.AVariableVariableExpression getAVariableVariableExpression();
    public dataaccess.expressions.AObjectObjectBasedExpression getAObjectObjectBasedExpression();
    public dataaccess.expressions.AClassToInstantiateObjectCreationExpression getAClassToInstantiateObjectCreationExpression();
    public dataaccess.expressions.AWithArgumentArgument getAWithArgumentArgument();
    public dataaccess.expressions.ACalledBlockFunctionCallExpression getACalledBlockFunctionCallExpression();
    public dataaccess.expressions.ALeftEquals getALeftEquals();
    public dataaccess.expressions.AToEndAssociationEndNavigationExpression getAToEndAssociationEndNavigationExpression();
    public dataaccess.expressions.SignatureCallParameters getSignatureCallParameters();
    public dataaccess.expressions.SignatureCallToSignature getSignatureCallToSignature();
    public dataaccess.expressions.ARightEquals getARightEquals();
    public dataaccess.expressions.AStepsReplace getAStepsReplace();
    public dataaccess.expressions.AToNavigationStep getAToNavigationStep();
    public dataaccess.expressions.AFilterFunctionNavigationStep getAFilterFunctionNavigationStep();
    public dataaccess.expressions.AWithReplace getAWithReplace();
    public dataaccess.expressions.AFalseExprTernary getAFalseExprTernary();
    public dataaccess.expressions.ATrueExprTernary getATrueExprTernary();
    public dataaccess.expressions.AConditionConditional getAConditionConditional();
}