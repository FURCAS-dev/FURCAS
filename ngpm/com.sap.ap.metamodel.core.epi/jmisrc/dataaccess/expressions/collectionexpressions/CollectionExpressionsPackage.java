/**
 * Generated by the MOIN Generator Version 3.0
 **/

package dataaccess.expressions.collectionexpressions;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface CollectionExpressionsPackage extends com.sap.tc.moin.repository.mmi.reflect.RefPackage
{
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.PackageDescriptor<dataaccess.expressions.collectionexpressions.CollectionExpressionsPackage> PACKAGE_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.PackageDescriptor<dataaccess.expressions.collectionexpressions.CollectionExpressionsPackage>("E075D95551F2A7BD3E4B11DE864B0018DE1146FF", "sap.com/moin/mm/ap/core", "dataaccess", "expressions", "collectionExpressions"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getIncluding();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getExcluding();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getIncludingAt();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getIterate();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getCollectionExpression();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getExcludingAt();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getWithPosition();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getCollectionExpressionWithArgument();
    // associations
    public dataaccess.expressions.collectionexpressions.SourceOfCollectionExpression getSourceOfCollectionExpression();
    public dataaccess.expressions.collectionexpressions.IterateIterator getIterateIterator();
    public dataaccess.expressions.collectionexpressions.IterateAccumulator getIterateAccumulator();
    public dataaccess.expressions.collectionexpressions.AIteratorExpressionInIterator getAIteratorExpressionInIterator();
}