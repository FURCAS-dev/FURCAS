/**
 * Generated by the MOIN Generator Version 3.0
 **/

package dataaccess.expressions.__impl;

public class AClassToInstantiateObjectCreationExpressionWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<dataaccess.expressions.AClassToInstantiateObjectCreationExpression> implements dataaccess.expressions.AClassToInstantiateObjectCreationExpression,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The AClassToInstantiateObjectCreationExpression wrapper
     */
    public AClassToInstantiateObjectCreationExpressionWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, dataaccess.expressions.__impl.AClassToInstantiateObjectCreationExpressionImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private dataaccess.expressions.__impl.AClassToInstantiateObjectCreationExpressionImpl getCastWrappedObject() {
        return (dataaccess.expressions.__impl.AClassToInstantiateObjectCreationExpressionImpl) getWrappedObject();
    }

    public dataaccess.expressions.AClassToInstantiateObjectCreationExpression unwrap() {
        return (dataaccess.expressions.AClassToInstantiateObjectCreationExpression) getWrappedObject();
    }
    
    public boolean exists(data.classes.SapClass _ClassToInstantiate, dataaccess.expressions.ObjectCreationExpression _ObjectCreationExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ClassToInstantiate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ObjectCreationExpression));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ClassToInstantiate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ObjectCreationExpression)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.classes.SapClass getClassToInstantiate(dataaccess.expressions.ObjectCreationExpression _ObjectCreationExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.classes.SapClass) wrapResult(getCastWrappedObject().getClassToInstantiate(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ObjectCreationExpression)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.classes.SapClass) wrapResult(getCastWrappedObject().getClassToInstantiate(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ObjectCreationExpression))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getObjectCreationExpression(data.classes.SapClass _ClassToInstantiate) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getObjectCreationExpression(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ClassToInstantiate)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getObjectCreationExpression(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ClassToInstantiate))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(data.classes.SapClass _ClassToInstantiate, dataaccess.expressions.ObjectCreationExpression _ObjectCreationExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ClassToInstantiate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ObjectCreationExpression));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ClassToInstantiate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ObjectCreationExpression)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(data.classes.SapClass _ClassToInstantiate, dataaccess.expressions.ObjectCreationExpression _ObjectCreationExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ClassToInstantiate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ObjectCreationExpression));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ClassToInstantiate), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ObjectCreationExpression)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<dataaccess.expressions.AClassToInstantiateObjectCreationExpression> get___JmiInterface() {
        return dataaccess.expressions.AClassToInstantiateObjectCreationExpression.class;
    }

    protected String metaObjectToString() {
        return "dataaccess.expressions.AClassToInstantiateObjectCreationExpression (Java Type)\ndataaccess.expressions.A_classToInstantiate_objectCreationExpression (MOF Type)"; //$NON-NLS-1$
    }    
}