/**
 * Generated by the MOIN Generator Version 3.0
 **/

package dataaccess.query;

/**
 * A query language (overlap with rules package?) based on the structural package (BO, BONodes, associations, attributes). The language is independent of the mapping to the persistence layer but can be mapped to efficient queries in the persistence layer for those BOs that have a declared persistence mapping. Look closely at FSI, its query and view builder and how they have structured their metadata.
 * <p>
 * Should this be a subset of the expression language?
 * Note the particular issues around *retrieval* (as opposed to just querying IDs) as mentioned by Maic Wintel. Modeling of aspects to retrieve by a query?
 * <p>
 * What about regular expressions?
 * <p>
 * TODO: Most queries by means of their projection (SELECT) clause will implicitly define a tuple type, and the value returned by the query is a multi-object of that tuple type. We need to think about what these types exactly are (currently we don't support tuple types). Are they classes that are implicitly defined by the query? Or does a class explicitly have to be defined whose associations then can assume the values of the individual columns? Can that class somehow be referenced otherwise? What happens when the result of a query is assigned to a variable that uses type inference? I would hope that the implicit result class of the query is used as the variable's type. But is there / should there also be explicit ways of referencing this type?
 * This interface is not intended to be implemented by clients.
 */
public interface QueryPackage extends com.sap.tc.moin.repository.mmi.reflect.RefPackage
{
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.PackageDescriptor<dataaccess.query.QueryPackage> PACKAGE_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.PackageDescriptor<dataaccess.query.QueryPackage>("E075D95551F518D83E4B11DEACF10018DE1146FF", "sap.com/moin/mm/ap/core", "dataaccess", "query"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSelection();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getOqlQuery();
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getFromClause();
    // associations
    public dataaccess.query.AIteratorSelection getAIteratorSelection();
    public dataaccess.query.ASelectionExprSelection getASelectionExprSelection();
    public dataaccess.query.AConditionConditionOfOqlQuery getAConditionConditionOfOqlQuery();
    public dataaccess.query.AFromClausesFromClauseOfOqlQuery getAFromClausesFromClauseOfOqlQuery();
    public dataaccess.query.AFromExpressionFromClause getAFromExpressionFromClause();
    public dataaccess.query.AAliasFromClause getAAliasFromClause();
    public dataaccess.query.ASelectedOqlQuery getASelectedOqlQuery();
}