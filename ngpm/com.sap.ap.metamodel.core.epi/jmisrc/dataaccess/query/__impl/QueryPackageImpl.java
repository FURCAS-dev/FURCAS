/**
 * Generated by the MOIN Generator Version 3.0
 **/

package dataaccess.query.__impl;

public final class QueryPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;

    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(14);
        FEATURE_IDS.put("Selection", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("OqlQuery", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("FromClause", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("A_iterator_selection", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("A_selectionExpr_selection", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("A_condition_conditionOfOqlQuery", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("A_fromClauses_fromClauseOfOqlQuery", Integer.valueOf(6)); //$NON-NLS-1$
        FEATURE_IDS.put("A_fromExpression_fromClause", Integer.valueOf(7)); //$NON-NLS-1$
        FEATURE_IDS.put("A_alias_fromClause", Integer.valueOf(8)); //$NON-NLS-1$
        FEATURE_IDS.put("A_selected_oqlQuery", Integer.valueOf(9)); //$NON-NLS-1$
    }

    // constructors    
    public QueryPackageImpl()
    {
        super();
    }
    public QueryPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    // internal structure type creators
    // nested packages
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSelection(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Selection"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getOqlQuery(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "OqlQuery"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getFromClause(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "FromClause"); //$NON-NLS-1$
    }
    // associations
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAIteratorSelection(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_iterator_selection"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getASelectionExprSelection(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_selectionExpr_selection"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAConditionConditionOfOqlQuery(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_condition_conditionOfOqlQuery"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAFromClausesFromClauseOfOqlQuery(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_fromClauses_fromClauseOfOqlQuery"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAFromExpressionFromClause(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_fromExpression_fromClause"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAAliasFromClause(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_alias_fromClause"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getASelectedOqlQuery(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_selected_oqlQuery"); //$NON-NLS-1$
    }
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("dataaccess.query.__impl.SelectionImpl")); //$NON-NLS-1$
                case 1:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("dataaccess.query.__impl.OqlQueryImpl")); //$NON-NLS-1$
                case 2:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("dataaccess.query.__impl.FromClauseImpl")); //$NON-NLS-1$
                case 3:
                    return new dataaccess.query.__impl.AIteratorSelectionImpl(workspace, mofId, immediatePackage, metaObject);
                case 4:
                    return new dataaccess.query.__impl.ASelectionExprSelectionImpl(workspace, mofId, immediatePackage, metaObject);
                case 5:
                    return new dataaccess.query.__impl.AConditionConditionOfOqlQueryImpl(workspace, mofId, immediatePackage, metaObject);
                case 6:
                    return new dataaccess.query.__impl.AFromClausesFromClauseOfOqlQueryImpl(workspace, mofId, immediatePackage, metaObject);
                case 7:
                    return new dataaccess.query.__impl.AFromExpressionFromClauseImpl(workspace, mofId, immediatePackage, metaObject);
                case 8:
                    return new dataaccess.query.__impl.AAliasFromClauseImpl(workspace, mofId, immediatePackage, metaObject);
                case 9:
                    return new dataaccess.query.__impl.ASelectedOqlQueryImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<dataaccess.query.QueryPackage> get___JmiInterface() {
        return dataaccess.query.QueryPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(0);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefPackageAndName rpan = null;
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(3);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
            name = "Selection"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "dataaccess.query.Selection"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "OqlQuery"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "dataaccess.query.OqlQuery"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "FromClause"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "dataaccess.query.FromClause"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(7);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefAssociationAndName raan = null;
            name = "A_iterator_selection"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "dataaccess.query.AIteratorSelection"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_selectionExpr_selection"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "dataaccess.query.ASelectionExprSelection"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_condition_conditionOfOqlQuery"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "dataaccess.query.AConditionConditionOfOqlQuery"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_fromClauses_fromClauseOfOqlQuery"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "dataaccess.query.AFromClausesFromClauseOfOqlQuery"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_fromExpression_fromClause"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "dataaccess.query.AFromExpressionFromClause"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_alias_fromClause"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "dataaccess.query.AAliasFromClause"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_selected_oqlQuery"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "dataaccess.query.ASelectedOqlQuery"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<dataaccess.query.__impl.QueryPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new dataaccess.query.__impl.QueryPackageWrapper(conn, this, synchronize);
    }

}