/**
 * Generated by the MOIN Generator Version 3.0
 **/

package dataaccess.analytics;

/**
 * A cell set computes an aggregated view on a domain of values, aggregated according to the different values for the different dimensions, using the aggregation function defined by the cell set. The domain (fact base) type is specified by factsType.
 * <p>
 * It subclasses FunctionSignatureImplementation. The function signature that a CellSet implements takes as its first argument a value whose type conforms to factsType, furthermore one argument per dimension and returns the aggregated cell value for the coordinate specified by the parameters. Therefore, the aggregationFunction's output type must conform to the CellSet's function signature's output type.
 * This interface is not intended to be implemented by clients.
 */
public interface CellSet extends data.classes.FunctionSignatureImplementation {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, dataaccess.analytics.CellSet> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, dataaccess.analytics.CellSet>("E075D95551F518E43E4B11DEB2FE0018DE1146FF", "sap.com/moin/mm/ap/core", "dataaccess", "analytics", "CellSet"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // references
    public java.util.List<dataaccess.analytics.Dimension> getDimensions() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public data.classes.FunctionSignature getValueFunction() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setValueFunction(data.classes.FunctionSignature newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public data.classes.FunctionSignature getAggregationFunction() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAggregationFunction(data.classes.FunctionSignature newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public data.classes.TypeDefinition getFactsType() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setFactsType(data.classes.TypeDefinition newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // operations
    /**
     * Determines the type over which to aggregate. If no valueFunction is provided, this is the type of the cell set's elements. Otherwise, this is the type output by the valueFunction.
     */
    public data.classes.TypeDefinition keyFigureType() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public data.classes.TypeDefinition cellType() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean localIsSideEffectFree() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>implements</code> reference.
         * @return  the descriptor for the <code>implements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SignatureImplementation,data.classes.MethodSignature> IMPLEMENTS( ) {
            return data.classes.SignatureImplementation.DESCRIPTORS.IMPLEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>functionSignature</code> reference.
         * @return  the descriptor for the <code>functionSignature</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.FunctionSignatureImplementation,data.classes.FunctionSignature> FUNCTION_SIGNATURE( ) {
            return data.classes.FunctionSignatureImplementation.DESCRIPTORS.FUNCTION_SIGNATURE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.CellSet,java.util.List<dataaccess.analytics.Dimension>> __dimensions;
        /**
         * Returns the descriptor for the <code>dimensions</code> reference.
         * @return  the descriptor for the <code>dimensions</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.CellSet,java.util.List<dataaccess.analytics.Dimension>> DIMENSIONS( ) {
            if ( __dimensions == null ) {
                __dimensions = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.CellSet,java.util.List<dataaccess.analytics.Dimension>>( "E075D95551F518DC3E4B11DE81EF0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "dataaccess", "analytics", "CellSet", "dimensions" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __dimensions;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.CellSet,data.classes.FunctionSignature> __valueFunction;
        /**
         * Returns the descriptor for the <code>valueFunction</code> reference.
         * @return  the descriptor for the <code>valueFunction</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.CellSet,data.classes.FunctionSignature> VALUE_FUNCTION( ) {
            if ( __valueFunction == null ) {
                __valueFunction = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.CellSet,data.classes.FunctionSignature>( "E075D95551F518DD3E4B11DE9FEC0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "dataaccess", "analytics", "CellSet", "valueFunction" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __valueFunction;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.CellSet,data.classes.FunctionSignature> __aggregationFunction;
        /**
         * Returns the descriptor for the <code>aggregationFunction</code> reference.
         * @return  the descriptor for the <code>aggregationFunction</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.CellSet,data.classes.FunctionSignature> AGGREGATION_FUNCTION( ) {
            if ( __aggregationFunction == null ) {
                __aggregationFunction = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.CellSet,data.classes.FunctionSignature>( "E075D95551F518DF3E4B11DECD0E0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "dataaccess", "analytics", "CellSet", "aggregationFunction" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __aggregationFunction;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.CellSet,data.classes.TypeDefinition> __factsType;
        /**
         * Returns the descriptor for the <code>factsType</code> reference.
         * @return  the descriptor for the <code>factsType</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.CellSet,data.classes.TypeDefinition> FACTS_TYPE( ) {
            if ( __factsType == null ) {
                __factsType = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.CellSet,data.classes.TypeDefinition>( "E075D95513BC56A05AA411DE95560019D29902CC", "sap.com/moin/mm/ap/core", new java.lang.String[] { "dataaccess", "analytics", "CellSet", "factsType" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __factsType;
        }
        /**
         * Returns the descriptor for the <code>getImplementedSignature</code> operation.
         * @return  the descriptor for the <code>getImplementedSignature</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SignatureImplementation,data.classes.Signature> GET_IMPLEMENTED_SIGNATURE( ) {
            return data.classes.SignatureImplementation.DESCRIPTORS.GET_IMPLEMENTED_SIGNATURE( );
        }
        /**
         * Returns the descriptor for the <code>isSideEffectFree</code> operation.
         * @return  the descriptor for the <code>isSideEffectFree</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.FunctionSignatureImplementation,java.lang.Boolean> IS_SIDE_EFFECT_FREE( ) {
            return data.classes.FunctionSignatureImplementation.DESCRIPTORS.IS_SIDE_EFFECT_FREE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,dataaccess.analytics.CellSet,data.classes.TypeDefinition> __keyFigureType;
        /**
         * Returns the descriptor for the <code>keyFigureType</code> operation.
         * @return  the descriptor for the <code>keyFigureType</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,dataaccess.analytics.CellSet,data.classes.TypeDefinition> KEY_FIGURE_TYPE( ) {
            if ( __keyFigureType == null ) {
                __keyFigureType = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,dataaccess.analytics.CellSet,data.classes.TypeDefinition>( "E075D95551F518E13E4B11DE90460018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "dataaccess", "analytics", "CellSet", "keyFigureType" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __keyFigureType;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,dataaccess.analytics.CellSet,data.classes.TypeDefinition> __cellType;
        /**
         * Returns the descriptor for the <code>cellType</code> operation.
         * @return  the descriptor for the <code>cellType</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,dataaccess.analytics.CellSet,data.classes.TypeDefinition> CELL_TYPE( ) {
            if ( __cellType == null ) {
                __cellType = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,dataaccess.analytics.CellSet,data.classes.TypeDefinition>( "E075D95551F518E33E4B11DEB6AB0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "dataaccess", "analytics", "CellSet", "cellType" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __cellType;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,dataaccess.analytics.CellSet,java.lang.Boolean> __localIsSideEffectFree;
        /**
         * Returns the descriptor for the <code>localIsSideEffectFree</code> operation.
         * @return  the descriptor for the <code>localIsSideEffectFree</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,dataaccess.analytics.CellSet,java.lang.Boolean> LOCAL_IS_SIDE_EFFECT_FREE( ) {
            if ( __localIsSideEffectFree == null ) {
                __localIsSideEffectFree = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,dataaccess.analytics.CellSet,java.lang.Boolean>( "E075D9554605BC315C9F11DEA66D00155883529C", "sap.com/moin/mm/ap/core", new java.lang.String[] { "dataaccess", "analytics", "CellSet", "localIsSideEffectFree" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __localIsSideEffectFree;
        }
    }
}    