/**
 * Generated by the MOIN Generator Version 3.0
 **/

package dataaccess.analytics.__impl;

public final class AnalyticsPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;

    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(15);
        FEATURE_IDS.put("Dimension", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("CellSet", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("DimensionExpression", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("A_dimensions_cellSet", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("A_characteristicFunction_dimension", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("A_valueFunction_cellSetForValueFunction", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("A_aggregationFunction_cellSetForAggregationFunction", Integer.valueOf(6)); //$NON-NLS-1$
        FEATURE_IDS.put("A_cellSet_dimensionExpression", Integer.valueOf(7)); //$NON-NLS-1$
        FEATURE_IDS.put("A_dimension_dimensionExpression", Integer.valueOf(8)); //$NON-NLS-1$
        FEATURE_IDS.put("A_factsType_cellSet", Integer.valueOf(9)); //$NON-NLS-1$
        FEATURE_IDS.put("A_facts_dimensionExpression", Integer.valueOf(10)); //$NON-NLS-1$
    }

    // constructors    
    public AnalyticsPackageImpl()
    {
        super();
    }
    public AnalyticsPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    // internal structure type creators
    // nested packages
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getDimension(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Dimension"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getCellSet(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "CellSet"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getDimensionExpression(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "DimensionExpression"); //$NON-NLS-1$
    }
    // associations
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getADimensionsCellSet(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_dimensions_cellSet"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getACharacteristicFunctionDimension(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_characteristicFunction_dimension"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAValueFunctionCellSetForValueFunction(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_valueFunction_cellSetForValueFunction"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAAggregationFunctionCellSetForAggregationFunction(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_aggregationFunction_cellSetForAggregationFunction"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getACellSetDimensionExpression(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_cellSet_dimensionExpression"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getADimensionDimensionExpression(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_dimension_dimensionExpression"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAFactsTypeCellSet(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_factsType_cellSet"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAFactsDimensionExpression(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_facts_dimensionExpression"); //$NON-NLS-1$
    }
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("dataaccess.analytics.__impl.DimensionImpl")); //$NON-NLS-1$
                case 1:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("dataaccess.analytics.__impl.CellSetImpl")); //$NON-NLS-1$
                case 2:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("dataaccess.analytics.__impl.DimensionExpressionImpl")); //$NON-NLS-1$
                case 3:
                    return new dataaccess.analytics.__impl.ADimensionsCellSetImpl(workspace, mofId, immediatePackage, metaObject);
                case 4:
                    return new dataaccess.analytics.__impl.ACharacteristicFunctionDimensionImpl(workspace, mofId, immediatePackage, metaObject);
                case 5:
                    return new dataaccess.analytics.__impl.AValueFunctionCellSetForValueFunctionImpl(workspace, mofId, immediatePackage, metaObject);
                case 6:
                    return new dataaccess.analytics.__impl.AAggregationFunctionCellSetForAggregationFunctionImpl(workspace, mofId, immediatePackage, metaObject);
                case 7:
                    return new dataaccess.analytics.__impl.ACellSetDimensionExpressionImpl(workspace, mofId, immediatePackage, metaObject);
                case 8:
                    return new dataaccess.analytics.__impl.ADimensionDimensionExpressionImpl(workspace, mofId, immediatePackage, metaObject);
                case 9:
                    return new dataaccess.analytics.__impl.AFactsTypeCellSetImpl(workspace, mofId, immediatePackage, metaObject);
                case 10:
                    return new dataaccess.analytics.__impl.AFactsDimensionExpressionImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<dataaccess.analytics.AnalyticsPackage> get___JmiInterface() {
        return dataaccess.analytics.AnalyticsPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(0);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefPackageAndName rpan = null;
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(3);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
            name = "Dimension"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "dataaccess.analytics.Dimension"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "CellSet"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "dataaccess.analytics.CellSet"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "DimensionExpression"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "dataaccess.analytics.DimensionExpression"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(8);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefAssociationAndName raan = null;
            name = "A_dimensions_cellSet"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "dataaccess.analytics.ADimensionsCellSet"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_characteristicFunction_dimension"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "dataaccess.analytics.ACharacteristicFunctionDimension"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_valueFunction_cellSetForValueFunction"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "dataaccess.analytics.AValueFunctionCellSetForValueFunction"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_aggregationFunction_cellSetForAggregationFunction"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "dataaccess.analytics.AAggregationFunctionCellSetForAggregationFunction"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_cellSet_dimensionExpression"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "dataaccess.analytics.ACellSetDimensionExpression"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_dimension_dimensionExpression"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "dataaccess.analytics.ADimensionDimensionExpression"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_factsType_cellSet"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "dataaccess.analytics.AFactsTypeCellSet"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_facts_dimensionExpression"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "dataaccess.analytics.AFactsDimensionExpression"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<dataaccess.analytics.__impl.AnalyticsPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new dataaccess.analytics.__impl.AnalyticsPackageWrapper(conn, this, synchronize);
    }

}