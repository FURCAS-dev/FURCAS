/**
 * Generated by the MOIN Generator Version 3.0
 **/

package dataaccess.analytics.__impl;

public class ADimensionsCellSetWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<dataaccess.analytics.ADimensionsCellSet> implements dataaccess.analytics.ADimensionsCellSet,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ADimensionsCellSet wrapper
     */
    public ADimensionsCellSetWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, dataaccess.analytics.__impl.ADimensionsCellSetImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private dataaccess.analytics.__impl.ADimensionsCellSetImpl getCastWrappedObject() {
        return (dataaccess.analytics.__impl.ADimensionsCellSetImpl) getWrappedObject();
    }

    public dataaccess.analytics.ADimensionsCellSet unwrap() {
        return (dataaccess.analytics.ADimensionsCellSet) getWrappedObject();
    }
    
    public boolean exists(dataaccess.analytics.Dimension _Dimensions, dataaccess.analytics.CellSet _CellSet) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Dimensions), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CellSet));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Dimensions), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CellSet)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.List getDimensions(dataaccess.analytics.CellSet _CellSet) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.List) wrapResult(getCastWrappedObject().getDimensions(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CellSet)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.List) wrapResult(getCastWrappedObject().getDimensions(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CellSet))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public dataaccess.analytics.CellSet getCellSet(dataaccess.analytics.Dimension _Dimensions) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (dataaccess.analytics.CellSet) wrapResult(getCastWrappedObject().getCellSet(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Dimensions)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (dataaccess.analytics.CellSet) wrapResult(getCastWrappedObject().getCellSet(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Dimensions))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(dataaccess.analytics.Dimension _Dimensions, dataaccess.analytics.CellSet _CellSet) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Dimensions), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CellSet));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Dimensions), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CellSet)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(dataaccess.analytics.Dimension _Dimensions, dataaccess.analytics.CellSet _CellSet) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Dimensions), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CellSet));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Dimensions), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CellSet)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<dataaccess.analytics.ADimensionsCellSet> get___JmiInterface() {
        return dataaccess.analytics.ADimensionsCellSet.class;
    }

    protected String metaObjectToString() {
        return "dataaccess.analytics.ADimensionsCellSet (Java Type)\ndataaccess.analytics.A_dimensions_cellSet (MOF Type)"; //$NON-NLS-1$
    }    
}