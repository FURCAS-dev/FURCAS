/**
 * Generated by the MOIN Generator Version 3.0
 **/

package dataaccess.analytics.__impl;

public class AFactsDimensionExpressionWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<dataaccess.analytics.AFactsDimensionExpression> implements dataaccess.analytics.AFactsDimensionExpression,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The AFactsDimensionExpression wrapper
     */
    public AFactsDimensionExpressionWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, dataaccess.analytics.__impl.AFactsDimensionExpressionImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private dataaccess.analytics.__impl.AFactsDimensionExpressionImpl getCastWrappedObject() {
        return (dataaccess.analytics.__impl.AFactsDimensionExpressionImpl) getWrappedObject();
    }

    public dataaccess.analytics.AFactsDimensionExpression unwrap() {
        return (dataaccess.analytics.AFactsDimensionExpression) getWrappedObject();
    }
    
    public boolean exists(dataaccess.expressions.Expression _Facts, dataaccess.analytics.DimensionExpression _DimensionExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Facts), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DimensionExpression));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Facts), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DimensionExpression)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public dataaccess.expressions.Expression getFacts(dataaccess.analytics.DimensionExpression _DimensionExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (dataaccess.expressions.Expression) wrapResult(getCastWrappedObject().getFacts(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DimensionExpression)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (dataaccess.expressions.Expression) wrapResult(getCastWrappedObject().getFacts(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DimensionExpression))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public dataaccess.analytics.DimensionExpression getDimensionExpression(dataaccess.expressions.Expression _Facts) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (dataaccess.analytics.DimensionExpression) wrapResult(getCastWrappedObject().getDimensionExpression(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Facts)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (dataaccess.analytics.DimensionExpression) wrapResult(getCastWrappedObject().getDimensionExpression(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Facts))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(dataaccess.expressions.Expression _Facts, dataaccess.analytics.DimensionExpression _DimensionExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Facts), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DimensionExpression));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Facts), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DimensionExpression)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(dataaccess.expressions.Expression _Facts, dataaccess.analytics.DimensionExpression _DimensionExpression) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Facts), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DimensionExpression));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Facts), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _DimensionExpression)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<dataaccess.analytics.AFactsDimensionExpression> get___JmiInterface() {
        return dataaccess.analytics.AFactsDimensionExpression.class;
    }

    protected String metaObjectToString() {
        return "dataaccess.analytics.AFactsDimensionExpression (Java Type)\ndataaccess.analytics.A_facts_dimensionExpression (MOF Type)"; //$NON-NLS-1$
    }    
}