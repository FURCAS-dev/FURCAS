/**
 * Generated by the MOIN Generator Version 3.0
 **/

package dataaccess.analytics.__impl;

public class ACharacteristicFunctionDimensionWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<dataaccess.analytics.ACharacteristicFunctionDimension> implements dataaccess.analytics.ACharacteristicFunctionDimension,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ACharacteristicFunctionDimension wrapper
     */
    public ACharacteristicFunctionDimensionWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, dataaccess.analytics.__impl.ACharacteristicFunctionDimensionImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private dataaccess.analytics.__impl.ACharacteristicFunctionDimensionImpl getCastWrappedObject() {
        return (dataaccess.analytics.__impl.ACharacteristicFunctionDimensionImpl) getWrappedObject();
    }

    public dataaccess.analytics.ACharacteristicFunctionDimension unwrap() {
        return (dataaccess.analytics.ACharacteristicFunctionDimension) getWrappedObject();
    }
    
    public boolean exists(data.classes.FunctionSignature _CharacteristicFunction, dataaccess.analytics.Dimension _Dimension) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CharacteristicFunction), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Dimension));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CharacteristicFunction), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Dimension)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.classes.FunctionSignature getCharacteristicFunction(dataaccess.analytics.Dimension _Dimension) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.classes.FunctionSignature) wrapResult(getCastWrappedObject().getCharacteristicFunction(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Dimension)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.classes.FunctionSignature) wrapResult(getCastWrappedObject().getCharacteristicFunction(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Dimension))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public dataaccess.analytics.Dimension getDimension(data.classes.FunctionSignature _CharacteristicFunction) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (dataaccess.analytics.Dimension) wrapResult(getCastWrappedObject().getDimension(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CharacteristicFunction)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (dataaccess.analytics.Dimension) wrapResult(getCastWrappedObject().getDimension(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CharacteristicFunction))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(data.classes.FunctionSignature _CharacteristicFunction, dataaccess.analytics.Dimension _Dimension) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CharacteristicFunction), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Dimension));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CharacteristicFunction), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Dimension)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(data.classes.FunctionSignature _CharacteristicFunction, dataaccess.analytics.Dimension _Dimension) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CharacteristicFunction), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Dimension));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _CharacteristicFunction), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Dimension)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<dataaccess.analytics.ACharacteristicFunctionDimension> get___JmiInterface() {
        return dataaccess.analytics.ACharacteristicFunctionDimension.class;
    }

    protected String metaObjectToString() {
        return "dataaccess.analytics.ACharacteristicFunctionDimension (Java Type)\ndataaccess.analytics.A_characteristicFunction_dimension (MOF Type)"; //$NON-NLS-1$
    }    
}