/**
 * Generated by the MOIN Generator Version 3.0
 **/

package dataaccess.analytics;

/**
 * For the given cell set, obtain all distinct characteristic values of the given dimension. For example, for a CellSet based on SalesOrderItem with one Dimension being Product, yield all products for which a SalesOrderItem exists in the CellSet.
 * <p>
 * The type of this DimensionExpression is Set<self.dimension.type>
 * This interface is not intended to be implemented by clients.
 */
public interface DimensionExpression extends dataaccess.expressions.Expression {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, dataaccess.analytics.DimensionExpression> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, dataaccess.analytics.DimensionExpression>("E075D95551F762923E4B11DE923A0018DE1146FF", "sap.com/moin/mm/ap/core", "dataaccess", "analytics", "DimensionExpression"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // references
    public dataaccess.expressions.Expression getCellSet() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setCellSet(dataaccess.expressions.Expression newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public data.classes.Parameter getDimension() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setDimension(data.classes.Parameter newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public dataaccess.expressions.Expression getFacts() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setFacts(dataaccess.expressions.Expression newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>ownedTypeDefinition</code> reference.
         * @return  the descriptor for the <code>ownedTypeDefinition</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.TypedElement,data.classes.TypeDefinition> OWNED_TYPE_DEFINITION( ) {
            return data.classes.TypedElement.DESCRIPTORS.OWNED_TYPE_DEFINITION( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.DimensionExpression,dataaccess.expressions.Expression> __cellSet;
        /**
         * Returns the descriptor for the <code>cellSet</code> reference.
         * @return  the descriptor for the <code>cellSet</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.DimensionExpression,dataaccess.expressions.Expression> CELL_SET( ) {
            if ( __cellSet == null ) {
                __cellSet = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.DimensionExpression,dataaccess.expressions.Expression>( "E075D95551F762903E4B11DEB2110018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "dataaccess", "analytics", "DimensionExpression", "cellSet" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __cellSet;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.DimensionExpression,data.classes.Parameter> __dimension;
        /**
         * Returns the descriptor for the <code>dimension</code> reference.
         * @return  the descriptor for the <code>dimension</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.DimensionExpression,data.classes.Parameter> DIMENSION( ) {
            if ( __dimension == null ) {
                __dimension = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.DimensionExpression,data.classes.Parameter>( "E075D95551F762913E4B11DE9AC90018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "dataaccess", "analytics", "DimensionExpression", "dimension" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __dimension;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.DimensionExpression,dataaccess.expressions.Expression> __facts;
        /**
         * Returns the descriptor for the <code>facts</code> reference.
         * @return  the descriptor for the <code>facts</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.DimensionExpression,dataaccess.expressions.Expression> FACTS( ) {
            if ( __facts == null ) {
                __facts = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,dataaccess.analytics.DimensionExpression,dataaccess.expressions.Expression>( "E075D955B879A7B05C1611DEC4B500155883529C", "sap.com/moin/mm/ap/core", new java.lang.String[] { "dataaccess", "analytics", "DimensionExpression", "facts" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __facts;
        }
        /**
         * Returns the descriptor for the <code>conformsTo</code> operation.
         * @return  the descriptor for the <code>conformsTo</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypedElement,java.lang.Boolean> CONFORMS_TO( ) {
            return data.classes.TypedElement.DESCRIPTORS.CONFORMS_TO( );
        }
        /**
         * Returns the descriptor for the <code>getType</code> operation.
         * @return  the descriptor for the <code>getType</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypedElement,data.classes.TypeDefinition> GET_TYPE( ) {
            return data.classes.TypedElement.DESCRIPTORS.GET_TYPE( );
        }
        /**
         * Returns the descriptor for the <code>isSideEffectFree</code> operation.
         * @return  the descriptor for the <code>isSideEffectFree</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,dataaccess.expressions.Expression,java.lang.Boolean> IS_SIDE_EFFECT_FREE( ) {
            return dataaccess.expressions.Expression.DESCRIPTORS.IS_SIDE_EFFECT_FREE( );
        }
        /**
         * Returns the descriptor for the <code>evaluatesToEqualAs</code> operation.
         * @return  the descriptor for the <code>evaluatesToEqualAs</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,dataaccess.expressions.Expression,java.lang.Boolean> EVALUATES_TO_EQUAL_AS( ) {
            return dataaccess.expressions.Expression.DESCRIPTORS.EVALUATES_TO_EQUAL_AS( );
        }
    }
}    