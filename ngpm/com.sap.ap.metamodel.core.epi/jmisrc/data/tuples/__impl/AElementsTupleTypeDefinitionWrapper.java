/**
 * Generated by the MOIN Generator Version 3.0
 **/

package data.tuples.__impl;

public class AElementsTupleTypeDefinitionWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<data.tuples.AElementsTupleTypeDefinition> implements data.tuples.AElementsTupleTypeDefinition,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The AElementsTupleTypeDefinition wrapper
     */
    public AElementsTupleTypeDefinitionWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, data.tuples.__impl.AElementsTupleTypeDefinitionImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private data.tuples.__impl.AElementsTupleTypeDefinitionImpl getCastWrappedObject() {
        return (data.tuples.__impl.AElementsTupleTypeDefinitionImpl) getWrappedObject();
    }

    public data.tuples.AElementsTupleTypeDefinition unwrap() {
        return (data.tuples.AElementsTupleTypeDefinition) getWrappedObject();
    }
    
    public boolean exists(data.tuples.TupleElement _Elements, data.tuples.TupleTypeDefinition _TupleTypeDefinition) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Elements), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TupleTypeDefinition));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Elements), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TupleTypeDefinition)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getElements(data.tuples.TupleTypeDefinition _TupleTypeDefinition) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getElements(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TupleTypeDefinition)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getElements(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TupleTypeDefinition))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.tuples.TupleTypeDefinition getTupleTypeDefinition(data.tuples.TupleElement _Elements) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.tuples.TupleTypeDefinition) wrapResult(getCastWrappedObject().getTupleTypeDefinition(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Elements)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.tuples.TupleTypeDefinition) wrapResult(getCastWrappedObject().getTupleTypeDefinition(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Elements))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(data.tuples.TupleElement _Elements, data.tuples.TupleTypeDefinition _TupleTypeDefinition) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Elements), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TupleTypeDefinition));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Elements), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TupleTypeDefinition)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(data.tuples.TupleElement _Elements, data.tuples.TupleTypeDefinition _TupleTypeDefinition) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Elements), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TupleTypeDefinition));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Elements), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _TupleTypeDefinition)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<data.tuples.AElementsTupleTypeDefinition> get___JmiInterface() {
        return data.tuples.AElementsTupleTypeDefinition.class;
    }

    protected String metaObjectToString() {
        return "data.tuples.AElementsTupleTypeDefinition (Java Type)\ndata.tuples.A_elements_tupleTypeDefinition (MOF Type)"; //$NON-NLS-1$
    }    
}