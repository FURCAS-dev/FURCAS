/**
 * Generated by the MOIN Generator Version 3.0
 **/

package data.classes.__impl;

public class ATypeAssociationEndWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<data.classes.ATypeAssociationEnd> implements data.classes.ATypeAssociationEnd,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The ATypeAssociationEnd wrapper
     */
    public ATypeAssociationEndWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, data.classes.__impl.ATypeAssociationEndImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private data.classes.__impl.ATypeAssociationEndImpl getCastWrappedObject() {
        return (data.classes.__impl.ATypeAssociationEndImpl) getWrappedObject();
    }

    public data.classes.ATypeAssociationEnd unwrap() {
        return (data.classes.ATypeAssociationEnd) getWrappedObject();
    }
    
    public boolean exists(data.classes.ClassTypeDefinition _Type, data.classes.AssociationEnd _AssociationEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Type), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AssociationEnd));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Type), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AssociationEnd)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.classes.ClassTypeDefinition getType(data.classes.AssociationEnd _AssociationEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.classes.ClassTypeDefinition) wrapResult(getCastWrappedObject().getType(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AssociationEnd)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.classes.ClassTypeDefinition) wrapResult(getCastWrappedObject().getType(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AssociationEnd))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.classes.AssociationEnd getAssociationEnd(data.classes.ClassTypeDefinition _Type) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.classes.AssociationEnd) wrapResult(getCastWrappedObject().getAssociationEnd(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Type)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.classes.AssociationEnd) wrapResult(getCastWrappedObject().getAssociationEnd(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Type))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(data.classes.ClassTypeDefinition _Type, data.classes.AssociationEnd _AssociationEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Type), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AssociationEnd));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Type), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AssociationEnd)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(data.classes.ClassTypeDefinition _Type, data.classes.AssociationEnd _AssociationEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Type), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AssociationEnd));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Type), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AssociationEnd)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<data.classes.ATypeAssociationEnd> get___JmiInterface() {
        return data.classes.ATypeAssociationEnd.class;
    }

    protected String metaObjectToString() {
        return "data.classes.ATypeAssociationEnd (Java Type)\ndata.classes.A_type_associationEnd (MOF Type)"; //$NON-NLS-1$
    }    
}