/**
 * Generated by the MOIN Generator Version 3.0
 **/

package data.classes;

/**
 * A signature can be implemented by a block (this would be a "method" in the classical sense) or, e.g., by an association navigation or by a link set manipulation statement.
 * This interface is not intended to be implemented by clients.
 */
public interface SignatureImplementation extends com.sap.tc.moin.repository.mmi.reflect.RefObject {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, data.classes.SignatureImplementation> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, data.classes.SignatureImplementation>("E0234C8C51E6C0E53E4B11DEC1680018DE1146FF", "sap.com/moin/mm/ap/core", "data", "classes", "SignatureImplementation"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // references
    public data.classes.MethodSignature getImplements() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setImplements(data.classes.MethodSignature newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // operations
    /**
     * A block implements either a FunctionSignature or a MethodSignature. Two different associations connect the Block with the respective Signature subclasses. This operation is a convenience that chooses the one or the other, depending on which one is filled.
     */
    public data.classes.Signature getImplementedSignature() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SignatureImplementation,data.classes.MethodSignature> __implements;
        /**
         * Returns the descriptor for the <code>implements</code> reference.
         * @return  the descriptor for the <code>implements</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SignatureImplementation,data.classes.MethodSignature> IMPLEMENTS( ) {
            if ( __implements == null ) {
                __implements = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SignatureImplementation,data.classes.MethodSignature>( "E0234C8C51E6C0E23E4B11DEBAD20018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SignatureImplementation", "implements_" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __implements;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SignatureImplementation,data.classes.Signature> __getImplementedSignature;
        /**
         * Returns the descriptor for the <code>getImplementedSignature</code> operation.
         * @return  the descriptor for the <code>getImplementedSignature</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SignatureImplementation,data.classes.Signature> GET_IMPLEMENTED_SIGNATURE( ) {
            if ( __getImplementedSignature == null ) {
                __getImplementedSignature = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SignatureImplementation,data.classes.Signature>( "E0234C8C51E6C0E43E4B11DE95BE0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SignatureImplementation", "getImplementedSignature" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __getImplementedSignature;
        }
    }
}    