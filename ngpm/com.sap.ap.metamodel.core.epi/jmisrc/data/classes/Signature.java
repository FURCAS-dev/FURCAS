/**
 * Generated by the MOIN Generator Version 3.0
 **/

package data.classes;

/**
 * Defines an abstract callable operation or block signature with input parameter types, return type and exception / fault types. A signature may also be implemented by association navigation expressions or link set manipulation statements.
 * <p>
 * The enforcement of side effect freeness is the SignatureImplementation subclasses' responsibility.
 * This interface is not intended to be implemented by clients.
 */
public interface Signature extends com.sap.tc.moin.repository.mmi.reflect.RefObject {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, data.classes.Signature> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, data.classes.Signature>("E0234C8C51E2060E3E4B11DE88C20018DE1146FF", "sap.com/moin/mm/ap/core", "data", "classes", "Signature"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // attributes
    /**
     * If this flag is set, the signature's implementation must not use a link-modifying implementation on any object of an entity class. It is permissible for an implementation to create value objects. All signatures being called by an implementation must then also have this flag set.
     * <p>
     * This flag is also relevant for conformance. A signature only conforms to one with this flag set if it also has this flag set.
     * <p>
     * Note that activities that do not modify the link structure may still have side effects outside of the scope of this programming model, such as producing a log entry in some persistence layer about a query being executed. Such side effects that are outside of this programming model do not count as a side effect in the sense of this flag. In particular, they do not make the program's semantics depend on execution order of such signature implementations.
     */
    public boolean isSideEffectFree() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * If this flag is set, the signature's implementation must not use a link-modifying implementation on any object of an entity class. It is permissible for an implementation to create value objects. All signatures being called by an implementation must then also have this flag set.
     * <p>
     * This flag is also relevant for conformance. A signature only conforms to one with this flag set if it also has this flag set.
     * <p>
     * Note that activities that do not modify the link structure may still have side effects outside of the scope of this programming model, such as producing a log entry in some persistence layer about a query being executed. Such side effects that are outside of this programming model do not count as a side effect in the sense of this flag. In particular, they do not make the program's semantics depend on execution order of such signature implementations.
     */
    public void setSideEffectFree(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public data.classes.SapClass getFaults() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setFaults(data.classes.SapClass newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public data.classes.TypeDefinition getOutput() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setOutput(data.classes.TypeDefinition newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public data.classes.TypeDefinition getOwnedTypeDefinitions() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setOwnedTypeDefinitions(data.classes.TypeDefinition newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<data.classes.Parameter> getInput() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // operations
    public boolean conformsTo(data.classes.Signature s) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Same as conformsTo(Featured):Boolean but with the possibility to pass pairs of Featured elements that are to be considered conforming and thus don't need further exploration. This can be used to avoid endless recursions in conformance testing.
     */
    public boolean conformsToExcluding(data.classes.Signature s, java.util.List<? extends data.classes.SapClass> excludingConforming, java.util.List<? extends data.classes.SapClass> excludingTo) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,data.classes.Signature,java.lang.Boolean> __sideEffectFree;
        /**
         * Returns the descriptor for the <code>sideEffectFree</code> attribute.
         * @return  the descriptor for the <code>sideEffectFree</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,data.classes.Signature,java.lang.Boolean> SIDE_EFFECT_FREE( ) {
            if ( __sideEffectFree == null ) {
                __sideEffectFree = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,data.classes.Signature,java.lang.Boolean>( "E0234C8C51E206053E4B11DEA6500018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "Signature", "sideEffectFree" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __sideEffectFree;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.Signature,data.classes.SapClass> __faults;
        /**
         * Returns the descriptor for the <code>faults</code> reference.
         * @return  the descriptor for the <code>faults</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.Signature,data.classes.SapClass> FAULTS( ) {
            if ( __faults == null ) {
                __faults = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.Signature,data.classes.SapClass>( "E0234C8C51E206013E4B11DE8AC70018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "Signature", "faults" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __faults;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.Signature,data.classes.TypeDefinition> __output;
        /**
         * Returns the descriptor for the <code>output</code> reference.
         * @return  the descriptor for the <code>output</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.Signature,data.classes.TypeDefinition> OUTPUT( ) {
            if ( __output == null ) {
                __output = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.Signature,data.classes.TypeDefinition>( "E0234C8C51E206023E4B11DECDDE0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "Signature", "output" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __output;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.Signature,data.classes.TypeDefinition> __ownedTypeDefinitions;
        /**
         * Returns the descriptor for the <code>ownedTypeDefinitions</code> reference.
         * @return  the descriptor for the <code>ownedTypeDefinitions</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.Signature,data.classes.TypeDefinition> OWNED_TYPE_DEFINITIONS( ) {
            if ( __ownedTypeDefinitions == null ) {
                __ownedTypeDefinitions = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.Signature,data.classes.TypeDefinition>( "E0234C8C51E206033E4B11DE8CBE0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "Signature", "ownedTypeDefinitions" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __ownedTypeDefinitions;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.Signature,java.util.List<data.classes.Parameter>> __input;
        /**
         * Returns the descriptor for the <code>input</code> reference.
         * @return  the descriptor for the <code>input</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.Signature,java.util.List<data.classes.Parameter>> INPUT( ) {
            if ( __input == null ) {
                __input = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.Signature,java.util.List<data.classes.Parameter>>( "E0234C8C51E206043E4B11DEB4830018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "Signature", "input" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __input;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.Signature,java.lang.Boolean> __conformsTo;
        /**
         * Returns the descriptor for the <code>conformsTo</code> operation.
         * @return  the descriptor for the <code>conformsTo</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.Signature,java.lang.Boolean> CONFORMS_TO( ) {
            if ( __conformsTo == null ) {
                __conformsTo = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.Signature,java.lang.Boolean>( "E0234C8C51E206083E4B11DECBC00018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "Signature", "conformsTo" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __conformsTo;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.Signature,java.lang.Boolean> __conformsToExcluding;
        /**
         * Returns the descriptor for the <code>conformsToExcluding</code> operation.
         * @return  the descriptor for the <code>conformsToExcluding</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.Signature,java.lang.Boolean> CONFORMS_TO_EXCLUDING( ) {
            if ( __conformsToExcluding == null ) {
                __conformsToExcluding = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.Signature,java.lang.Boolean>( "E0234C8C51E2060D3E4B11DEAF8C0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "Signature", "conformsToExcluding" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __conformsToExcluding;
        }
    }
}    