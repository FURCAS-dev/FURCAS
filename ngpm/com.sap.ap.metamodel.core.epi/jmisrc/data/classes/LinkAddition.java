/**
 * Generated by the MOIN Generator Version 3.0
 **/

package data.classes;

/**
 * Adds a link to the association of which *end* is one end, such that the object on which the implementation is invoked is on the other end, and the parameters passed to this implementation are in the role denoted by *end*.
 * This interface is not intended to be implemented by clients.
 */
public interface LinkAddition extends data.classes.LinkManipulationAtPosition {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, data.classes.LinkAddition> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, data.classes.LinkAddition>("E0234C8C51E6C0E93E4B11DEC7040018DE1146FF", "sap.com/moin/mm/ap/core", "data", "classes", "LinkAddition"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    

    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>at</code> attribute.
         * @return  the descriptor for the <code>at</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,data.classes.LinkManipulationAtPosition,java.lang.Integer> AT( ) {
            return data.classes.LinkManipulationAtPosition.DESCRIPTORS.AT( );
        }
        /**
         * Returns the descriptor for the <code>implements</code> reference.
         * @return  the descriptor for the <code>implements</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SignatureImplementation,data.classes.MethodSignature> IMPLEMENTS( ) {
            return data.classes.SignatureImplementation.DESCRIPTORS.IMPLEMENTS( );
        }
        /**
         * Returns the descriptor for the <code>end</code> reference.
         * @return  the descriptor for the <code>end</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.AssociationEndSignatureImplementation,data.classes.AssociationEnd> END( ) {
            return data.classes.AssociationEndSignatureImplementation.DESCRIPTORS.END( );
        }
        /**
         * Returns the descriptor for the <code>getImplementedSignature</code> operation.
         * @return  the descriptor for the <code>getImplementedSignature</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SignatureImplementation,data.classes.Signature> GET_IMPLEMENTED_SIGNATURE( ) {
            return data.classes.SignatureImplementation.DESCRIPTORS.GET_IMPLEMENTED_SIGNATURE( );
        }
    }
}    