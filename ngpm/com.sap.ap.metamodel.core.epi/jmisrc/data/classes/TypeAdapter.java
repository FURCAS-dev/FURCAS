/**
 * Generated by the MOIN Generator Version 3.0
 **/

package data.classes;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface TypeAdapter extends data.classes.SignatureOwner {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, data.classes.TypeAdapter> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, data.classes.TypeAdapter>("E0234C8C51E931EF3E4B11DEADE30018DE1146FF", "sap.com/moin/mm/ap/core", "data", "classes", "TypeAdapter"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // references
    public data.classes.SapClass getTo() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setTo(data.classes.SapClass newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public data.classes.SapClass getAdapted() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAdapted(data.classes.SapClass newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // operations
    /**
     * A class A conforms to a class B if for every signature that B has (either directly or by delegation, but not from any adapters), A has a conforming signature, either immediately declared in A or by delegation or through a type adapter.
     */
    public boolean conformsTo(data.classes.SapClass type) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Same as conformsTo(Featured):Boolean but with the possibility to pass pairs of Featured elements that are to be considered conforming and thus don't need further exploration. This can be used to avoid endless recursions in conformance testing.
     */
    public boolean conformsToExcluding(data.classes.SapClass type, java.util.List<? extends data.classes.SapClass> excludingConforming, java.util.List<? extends data.classes.SapClass> excludingTo) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Computes all locally-defined signatures plus not conforming signatures offered by 'To' Class. 
     */
    public java.util.Collection<data.classes.MethodSignature> allSignatures() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Same as allSignatures() but with the possibility to to avoid endless recursions.
     */
    public java.util.Collection<data.classes.MethodSignature> allSignaturesExcluding(java.util.Collection<? extends data.classes.SapClass> excluding) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,modelmanagement.NamedElement,java.lang.String> NAME( ) {
            return modelmanagement.NamedElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>description</code> attribute.
         * @return  the descriptor for the <code>description</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,modelmanagement.NamedElement,localization.TranslatableText> DESCRIPTION( ) {
            return modelmanagement.NamedElement.DESCRIPTORS.DESCRIPTION( );
        }
        /**
         * Returns the descriptor for the <code>ownedSignatures</code> reference.
         * @return  the descriptor for the <code>ownedSignatures</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SignatureOwner,java.util.Collection<data.classes.MethodSignature>> OWNED_SIGNATURES( ) {
            return data.classes.SignatureOwner.DESCRIPTORS.OWNED_SIGNATURES( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.TypeAdapter,data.classes.SapClass> __to;
        /**
         * Returns the descriptor for the <code>to</code> reference.
         * @return  the descriptor for the <code>to</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.TypeAdapter,data.classes.SapClass> TO( ) {
            if ( __to == null ) {
                __to = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.TypeAdapter,data.classes.SapClass>( "E0234C8C51E931E03E4B11DEAF4E0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "TypeAdapter", "to" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __to;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.TypeAdapter,data.classes.SapClass> __adapted;
        /**
         * Returns the descriptor for the <code>adapted</code> reference.
         * @return  the descriptor for the <code>adapted</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.TypeAdapter,data.classes.SapClass> ADAPTED( ) {
            if ( __adapted == null ) {
                __adapted = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.TypeAdapter,data.classes.SapClass>( "E0234C8C51E931E13E4B11DEA1830018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "TypeAdapter", "adapted" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __adapted;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypeAdapter,java.lang.Boolean> __conformsTo;
        /**
         * Returns the descriptor for the <code>conformsTo</code> operation.
         * @return  the descriptor for the <code>conformsTo</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypeAdapter,java.lang.Boolean> CONFORMS_TO( ) {
            if ( __conformsTo == null ) {
                __conformsTo = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypeAdapter,java.lang.Boolean>( "E0234C8C51E931E43E4B11DE9B930018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "TypeAdapter", "conformsTo" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __conformsTo;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypeAdapter,java.lang.Boolean> __conformsToExcluding;
        /**
         * Returns the descriptor for the <code>conformsToExcluding</code> operation.
         * @return  the descriptor for the <code>conformsToExcluding</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypeAdapter,java.lang.Boolean> CONFORMS_TO_EXCLUDING( ) {
            if ( __conformsToExcluding == null ) {
                __conformsToExcluding = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypeAdapter,java.lang.Boolean>( "E0234C8C51E931E93E4B11DEAC100018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "TypeAdapter", "conformsToExcluding" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __conformsToExcluding;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypeAdapter,java.util.Collection<data.classes.MethodSignature>> __allSignatures;
        /**
         * Returns the descriptor for the <code>allSignatures</code> operation.
         * @return  the descriptor for the <code>allSignatures</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypeAdapter,java.util.Collection<data.classes.MethodSignature>> ALL_SIGNATURES( ) {
            if ( __allSignatures == null ) {
                __allSignatures = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypeAdapter,java.util.Collection<data.classes.MethodSignature>>( "E0234C8C51E931EB3E4B11DE8D370018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "TypeAdapter", "allSignatures" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __allSignatures;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypeAdapter,java.util.Collection<data.classes.MethodSignature>> __allSignaturesExcluding;
        /**
         * Returns the descriptor for the <code>allSignaturesExcluding</code> operation.
         * @return  the descriptor for the <code>allSignaturesExcluding</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypeAdapter,java.util.Collection<data.classes.MethodSignature>> ALL_SIGNATURES_EXCLUDING( ) {
            if ( __allSignaturesExcluding == null ) {
                __allSignaturesExcluding = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.TypeAdapter,java.util.Collection<data.classes.MethodSignature>>( "E0234C8C51E931EE3E4B11DEC8760018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "TypeAdapter", "allSignaturesExcluding" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __allSignaturesExcluding;
        }
    }
}    