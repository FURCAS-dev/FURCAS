/**
 * Generated by the MOIN Generator Version 3.0
 **/

package data.classes;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface SapClass extends behavioral.events.EventProducer,data.classes.SignatureOwner {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, data.classes.SapClass> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, data.classes.SapClass>("E0234C8C51E4770E3E4B11DE910A0018DE1146FF", "sap.com/moin/mm/ap/core", "data", "classes", "SapClass"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // attributes
    /**
     * If true, instances of the class will be immutable. Comparison will be by equality. Their identity is defined by value equality. Value types can of course contain associations to non-value (or "entity") types.
     * <p>
     * As opposed to value types, instances of entity types have identity and mutable state. They are always passed by reference. Variables only hold a reference to a shared instance. Comparing two entity objects using "Equals" will compare their identities.
     */
    public boolean isValueType() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * If true, instances of the class will be immutable. Comparison will be by equality. Their identity is defined by value equality. Value types can of course contain associations to non-value (or "entity") types.
     * <p>
     * As opposed to value types, instances of entity types have identity and mutable state. They are always passed by reference. Variables only hold a reference to a shared instance. Comparing two entity objects using "Equals" will compare their identities.
     */
    public void setValueType(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public java.util.Collection<data.classes.Signature> getSignaturesWithFault() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<data.classes.ClassTypeDefinition> getElementsOfType() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public modelmanagement.Package getPackage() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setPackage(modelmanagement.Package newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<data.classes.TypeAdapter> getAdaptedBy() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<data.classes.TypeAdapter> getAdapters() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.List<data.classes.Parameter> getFormalObjectParameters() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public data.classes.ConverterBetweenParametrizations getConverterBetweenParametrizations() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setConverterBetweenParametrizations(data.classes.ConverterBetweenParametrizations newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // operations
    public boolean isAbstract() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public boolean isParameterizedClassDefinition() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * A class A conforms to a class B if they are the same or if there is a chain of (TypeAdapter_i, Class_i) pairs (0<=i<=n) where TypeAdapter_0 adapts A to Class_0, and where Class_n is B.
     */
    public boolean conformsTo(data.classes.SapClass type) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Computes all locally-defined signatures plus those signatures offered by any Class (directly, or by delegation or recursively by type adaptation) attached to this class as a type adapter, plus allSignatures() recursively of all classes to which this class delegates.
     */
    public java.util.Collection<data.classes.MethodSignature> allSignatures() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * A class can delegate to another class via an attached association end that in turn has attached a Delegation element. The delegating class by this exposes all operations and association ends exposed by the delegate class (recursively). The semantics of such a delegation is that when invoked, the invocation will be forwarded to the delegate object transparently and recursively.
     * <p>
     * Note, that TypeAdapter objects cannot delegate because they cannot have association ends attached to them. They can only expose association ends whose other end is attached to a class to which the TypeAdapter conforms.
     */
    public java.util.Collection<data.classes.SapClass> delegatesTo() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Same as conformsTo(Featured):Boolean but with the possibility to pass pairs of Featured elements that are to be considered conforming and thus don't need further exploration. This can be used to avoid endless recursions in conformance testing.
     */
    public boolean conformsToExcluding(data.classes.SapClass type, java.util.List<? extends data.classes.SapClass> excludingConforming, java.util.List<? extends data.classes.SapClass> excludingTo) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Signature declared directly by this class and those signatures obtained by delegation, recursively.
     */
    public java.util.Collection<data.classes.MethodSignature> signaturesWithDelegation() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Signatures obtained by delegation recursively.
     */
    public java.util.Collection<data.classes.MethodSignature> delegatedSignatures() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Computes signatures offered by any Class (directly, or by delegation or recursively by type adaptation) attached to this class as a type adapter
     */
    public java.util.Collection<data.classes.MethodSignature> adaptedSignatures() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Computes signatures offered by any type adapter adapting this class to another class, minus those signatures redefined in the local class
     */
    public java.util.Collection<data.classes.MethodSignature> adaptedSignaturesExcluding(java.util.Collection<? extends data.classes.SapClass> excluding) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Computes all locally-defined signatures plus those signatures offered by any Class (directly, or by delegation or recursively by type adaptation) attached to this class as a type adapter, plus allSignatures() recursively of all classes to which this class delegates.
     */
    public java.util.Collection<data.classes.MethodSignature> allSignaturesExcluding(java.util.Collection<? extends data.classes.SapClass> excluding) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Signature declared directly by this class and those signatures obtained by delegation, recursively.
     */
    public java.util.Collection<data.classes.MethodSignature> signaturesWithDelegationExcluding(java.util.Collection<? extends data.classes.SapClass> excluding) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Signatures obtained by delegation recursively.
     */
    public java.util.Collection<data.classes.MethodSignature> delegatedSignaturesExcluding(java.util.Collection<? extends data.classes.SapClass> excluding) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<data.classes.SapClass> getConformingClasses() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Retrieves those association ends that use this class in their type definition.
     */
    public java.util.Collection<data.classes.AssociationEnd> getAssociationEnds() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Obtains all association ends that use this class in their type definition and that contribute to this class's equality, indicated by their contributesToEquality attribute being set to true.
     */
    public java.util.Collection<data.classes.AssociationEnd> getEqualityRelevantAssociationEnds() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Determines all classes to which this class conforms, directly and transitively, through chains of TypeAdapters. The result includes this class itself.
     */
    public java.util.Collection<data.classes.SapClass> getConformsToClasses() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Determines all association ends to whose type this class conforms. This means that an instance of this class can be inserted on that respective end of the corresponding association. For example, if there is an association between Order and Item with ends "order" and "items" and there are classes SalesOrder and SalesOrderItem conforming to Order and Item, respectively, then the "order" end will be returned by this method when invoked on the SalesOrder class because SalesOrder conforms to Order and therefore a SalesOrder can be inserted into the association in role "order."
     */
    public java.util.Collection<data.classes.AssociationEnd> getConformsToAssociationEnds() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Like getConformsToAssociationEnds(), but selects only those association ends that are marked as composite.
     */
    public java.util.Collection<data.classes.AssociationEnd> getConformsToCompositeParentAssociationEnds() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    /**
     * Like getConformsToAssociationEnds(), but selects only those association ends whose other ends are marked as composite.
     */
    public java.util.Collection<data.classes.AssociationEnd> getConformsToCompositeChildAssociationEnds() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,modelmanagement.NamedElement,java.lang.String> NAME( ) {
            return modelmanagement.NamedElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>description</code> attribute.
         * @return  the descriptor for the <code>description</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,modelmanagement.NamedElement,localization.TranslatableText> DESCRIPTION( ) {
            return modelmanagement.NamedElement.DESCRIPTORS.DESCRIPTION( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,data.classes.SapClass,java.lang.Boolean> __valueType;
        /**
         * Returns the descriptor for the <code>valueType</code> attribute.
         * @return  the descriptor for the <code>valueType</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,data.classes.SapClass,java.lang.Boolean> VALUE_TYPE( ) {
            if ( __valueType == null ) {
                __valueType = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,data.classes.SapClass,java.lang.Boolean>( "E0234C8C51E476DD3E4B11DE83EC0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "valueType" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __valueType;
        }
        /**
         * Returns the descriptor for the <code>subscriptions</code> reference.
         * @return  the descriptor for the <code>subscriptions</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.EventProducer,java.util.Collection<behavioral.events.Subscription>> SUBSCRIPTIONS( ) {
            return behavioral.events.EventProducer.DESCRIPTORS.SUBSCRIPTIONS( );
        }
        /**
         * Returns the descriptor for the <code>notificationSignatures</code> reference.
         * @return  the descriptor for the <code>notificationSignatures</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.EventProducer,java.util.Collection<data.classes.MethodSignature>> NOTIFICATION_SIGNATURES( ) {
            return behavioral.events.EventProducer.DESCRIPTORS.NOTIFICATION_SIGNATURES( );
        }
        /**
         * Returns the descriptor for the <code>ownedSignatures</code> reference.
         * @return  the descriptor for the <code>ownedSignatures</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SignatureOwner,java.util.Collection<data.classes.MethodSignature>> OWNED_SIGNATURES( ) {
            return data.classes.SignatureOwner.DESCRIPTORS.OWNED_SIGNATURES( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.Collection<data.classes.Signature>> __signaturesWithFault;
        /**
         * Returns the descriptor for the <code>signaturesWithFault</code> reference.
         * @return  the descriptor for the <code>signaturesWithFault</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.Collection<data.classes.Signature>> SIGNATURES_WITH_FAULT( ) {
            if ( __signaturesWithFault == null ) {
                __signaturesWithFault = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.Collection<data.classes.Signature>>( "E0234C8C51E476D63E4B11DEC96D0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "signaturesWithFault" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __signaturesWithFault;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.Collection<data.classes.ClassTypeDefinition>> __elementsOfType;
        /**
         * Returns the descriptor for the <code>elementsOfType</code> reference.
         * @return  the descriptor for the <code>elementsOfType</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.Collection<data.classes.ClassTypeDefinition>> ELEMENTS_OF_TYPE( ) {
            if ( __elementsOfType == null ) {
                __elementsOfType = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.Collection<data.classes.ClassTypeDefinition>>( "E0234C8C51E476D73E4B11DE96D60018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "elementsOfType" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __elementsOfType;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,modelmanagement.Package> __package;
        /**
         * Returns the descriptor for the <code>package</code> reference.
         * @return  the descriptor for the <code>package</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,modelmanagement.Package> PACKAGE( ) {
            if ( __package == null ) {
                __package = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,modelmanagement.Package>( "E0234C8C51E476D83E4B11DEC6F00018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "package_" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __package;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.Collection<data.classes.TypeAdapter>> __adaptedBy;
        /**
         * Returns the descriptor for the <code>adaptedBy</code> reference.
         * @return  the descriptor for the <code>adaptedBy</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.Collection<data.classes.TypeAdapter>> ADAPTED_BY( ) {
            if ( __adaptedBy == null ) {
                __adaptedBy = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.Collection<data.classes.TypeAdapter>>( "E0234C8C51E476D93E4B11DEA9DB0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "adaptedBy" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __adaptedBy;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.Collection<data.classes.TypeAdapter>> __adapters;
        /**
         * Returns the descriptor for the <code>adapters</code> reference.
         * @return  the descriptor for the <code>adapters</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.Collection<data.classes.TypeAdapter>> ADAPTERS( ) {
            if ( __adapters == null ) {
                __adapters = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.Collection<data.classes.TypeAdapter>>( "E0234C8C51E476DA3E4B11DEC6950018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "adapters" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __adapters;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.List<data.classes.Parameter>> __formalObjectParameters;
        /**
         * Returns the descriptor for the <code>formalObjectParameters</code> reference.
         * @return  the descriptor for the <code>formalObjectParameters</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.List<data.classes.Parameter>> FORMAL_OBJECT_PARAMETERS( ) {
            if ( __formalObjectParameters == null ) {
                __formalObjectParameters = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.List<data.classes.Parameter>>( "E0234C8C51E476DB3E4B11DE81280018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "formalObjectParameters" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __formalObjectParameters;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,data.classes.ConverterBetweenParametrizations> __converterBetweenParametrizations;
        /**
         * Returns the descriptor for the <code>converterBetweenParametrizations</code> reference.
         * @return  the descriptor for the <code>converterBetweenParametrizations</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,data.classes.ConverterBetweenParametrizations> CONVERTER_BETWEEN_PARAMETRIZATIONS( ) {
            if ( __converterBetweenParametrizations == null ) {
                __converterBetweenParametrizations = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,data.classes.ConverterBetweenParametrizations>( "E0234C8C51E476DC3E4B11DE857B0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "converterBetweenParametrizations" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __converterBetweenParametrizations;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.lang.Boolean> __isAbstract;
        /**
         * Returns the descriptor for the <code>isAbstract</code> operation.
         * @return  the descriptor for the <code>isAbstract</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.lang.Boolean> IS_ABSTRACT( ) {
            if ( __isAbstract == null ) {
                __isAbstract = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.lang.Boolean>( "E0234C8C51E476DF3E4B11DE8F6A0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "isAbstract" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __isAbstract;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.lang.Boolean> __isParameterizedClassDefinition;
        /**
         * Returns the descriptor for the <code>isParameterizedClassDefinition</code> operation.
         * @return  the descriptor for the <code>isParameterizedClassDefinition</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.lang.Boolean> IS_PARAMETERIZED_CLASS_DEFINITION( ) {
            if ( __isParameterizedClassDefinition == null ) {
                __isParameterizedClassDefinition = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.lang.Boolean>( "E0234C8C51E476E13E4B11DE922C0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "isParameterizedClassDefinition" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __isParameterizedClassDefinition;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.lang.Boolean> __conformsTo;
        /**
         * Returns the descriptor for the <code>conformsTo</code> operation.
         * @return  the descriptor for the <code>conformsTo</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.lang.Boolean> CONFORMS_TO( ) {
            if ( __conformsTo == null ) {
                __conformsTo = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.lang.Boolean>( "E0234C8C51E476E43E4B11DEB1500018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "conformsTo" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __conformsTo;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> __allSignatures;
        /**
         * Returns the descriptor for the <code>allSignatures</code> operation.
         * @return  the descriptor for the <code>allSignatures</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> ALL_SIGNATURES( ) {
            if ( __allSignatures == null ) {
                __allSignatures = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>>( "E0234C8C51E476E63E4B11DEC61F0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "allSignatures" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __allSignatures;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.SapClass>> __delegatesTo;
        /**
         * Returns the descriptor for the <code>delegatesTo</code> operation.
         * @return  the descriptor for the <code>delegatesTo</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.SapClass>> DELEGATES_TO( ) {
            if ( __delegatesTo == null ) {
                __delegatesTo = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.SapClass>>( "E0234C8C51E476E83E4B11DEA4CA0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "delegatesTo" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __delegatesTo;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.lang.Boolean> __conformsToExcluding;
        /**
         * Returns the descriptor for the <code>conformsToExcluding</code> operation.
         * @return  the descriptor for the <code>conformsToExcluding</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.lang.Boolean> CONFORMS_TO_EXCLUDING( ) {
            if ( __conformsToExcluding == null ) {
                __conformsToExcluding = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.lang.Boolean>( "E0234C8C51E476ED3E4B11DEC5130018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "conformsToExcluding" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __conformsToExcluding;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> __signaturesWithDelegation;
        /**
         * Returns the descriptor for the <code>signaturesWithDelegation</code> operation.
         * @return  the descriptor for the <code>signaturesWithDelegation</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> SIGNATURES_WITH_DELEGATION( ) {
            if ( __signaturesWithDelegation == null ) {
                __signaturesWithDelegation = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>>( "E0234C8C51E476EF3E4B11DEAE650018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "signaturesWithDelegation" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __signaturesWithDelegation;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> __delegatedSignatures;
        /**
         * Returns the descriptor for the <code>delegatedSignatures</code> operation.
         * @return  the descriptor for the <code>delegatedSignatures</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> DELEGATED_SIGNATURES( ) {
            if ( __delegatedSignatures == null ) {
                __delegatedSignatures = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>>( "E0234C8C51E476F13E4B11DEB5620018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "delegatedSignatures" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __delegatedSignatures;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> __adaptedSignatures;
        /**
         * Returns the descriptor for the <code>adaptedSignatures</code> operation.
         * @return  the descriptor for the <code>adaptedSignatures</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> ADAPTED_SIGNATURES( ) {
            if ( __adaptedSignatures == null ) {
                __adaptedSignatures = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>>( "E0234C8C51E476F33E4B11DEAB8D0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "adaptedSignatures" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __adaptedSignatures;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> __adaptedSignaturesExcluding;
        /**
         * Returns the descriptor for the <code>adaptedSignaturesExcluding</code> operation.
         * @return  the descriptor for the <code>adaptedSignaturesExcluding</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> ADAPTED_SIGNATURES_EXCLUDING( ) {
            if ( __adaptedSignaturesExcluding == null ) {
                __adaptedSignaturesExcluding = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>>( "E0234C8C51E476F63E4B11DECBE50018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "adaptedSignaturesExcluding" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __adaptedSignaturesExcluding;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> __allSignaturesExcluding;
        /**
         * Returns the descriptor for the <code>allSignaturesExcluding</code> operation.
         * @return  the descriptor for the <code>allSignaturesExcluding</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> ALL_SIGNATURES_EXCLUDING( ) {
            if ( __allSignaturesExcluding == null ) {
                __allSignaturesExcluding = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>>( "E0234C8C51E476F93E4B11DEBFAC0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "allSignaturesExcluding" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __allSignaturesExcluding;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> __signaturesWithDelegationExcluding;
        /**
         * Returns the descriptor for the <code>signaturesWithDelegationExcluding</code> operation.
         * @return  the descriptor for the <code>signaturesWithDelegationExcluding</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> SIGNATURES_WITH_DELEGATION_EXCLUDING( ) {
            if ( __signaturesWithDelegationExcluding == null ) {
                __signaturesWithDelegationExcluding = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>>( "E0234C8C51E476FC3E4B11DE93840018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "signaturesWithDelegationExcluding" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __signaturesWithDelegationExcluding;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> __delegatedSignaturesExcluding;
        /**
         * Returns the descriptor for the <code>delegatedSignaturesExcluding</code> operation.
         * @return  the descriptor for the <code>delegatedSignaturesExcluding</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> DELEGATED_SIGNATURES_EXCLUDING( ) {
            if ( __delegatedSignaturesExcluding == null ) {
                __delegatedSignaturesExcluding = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>>( "E0234C8C51E476FF3E4B11DEC94F0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "delegatedSignaturesExcluding" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __delegatedSignaturesExcluding;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.SapClass>> __getConformingClasses;
        /**
         * Returns the descriptor for the <code>getConformingClasses</code> operation.
         * @return  the descriptor for the <code>getConformingClasses</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.SapClass>> GET_CONFORMING_CLASSES( ) {
            if ( __getConformingClasses == null ) {
                __getConformingClasses = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.SapClass>>( "E0234C8C51E477013E4B11DEACF40018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "getConformingClasses" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __getConformingClasses;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>> __getAssociationEnds;
        /**
         * Returns the descriptor for the <code>getAssociationEnds</code> operation.
         * @return  the descriptor for the <code>getAssociationEnds</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>> GET_ASSOCIATION_ENDS( ) {
            if ( __getAssociationEnds == null ) {
                __getAssociationEnds = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>>( "E0234C8C51E477033E4B11DE899F0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "getAssociationEnds" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __getAssociationEnds;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>> __getEqualityRelevantAssociationEnds;
        /**
         * Returns the descriptor for the <code>getEqualityRelevantAssociationEnds</code> operation.
         * @return  the descriptor for the <code>getEqualityRelevantAssociationEnds</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>> GET_EQUALITY_RELEVANT_ASSOCIATION_ENDS( ) {
            if ( __getEqualityRelevantAssociationEnds == null ) {
                __getEqualityRelevantAssociationEnds = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>>( "E0234C8C51E477053E4B11DEA3580018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "getEqualityRelevantAssociationEnds" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __getEqualityRelevantAssociationEnds;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.SapClass>> __getConformsToClasses;
        /**
         * Returns the descriptor for the <code>getConformsToClasses</code> operation.
         * @return  the descriptor for the <code>getConformsToClasses</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.SapClass>> GET_CONFORMS_TO_CLASSES( ) {
            if ( __getConformsToClasses == null ) {
                __getConformsToClasses = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.SapClass>>( "E0234C8C51E477073E4B11DECF430018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "getConformsToClasses" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __getConformsToClasses;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>> __getConformsToAssociationEnds;
        /**
         * Returns the descriptor for the <code>getConformsToAssociationEnds</code> operation.
         * @return  the descriptor for the <code>getConformsToAssociationEnds</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>> GET_CONFORMS_TO_ASSOCIATION_ENDS( ) {
            if ( __getConformsToAssociationEnds == null ) {
                __getConformsToAssociationEnds = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>>( "E0234C8C51E477093E4B11DECF280018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "getConformsToAssociationEnds" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __getConformsToAssociationEnds;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>> __getConformsToCompositeParentAssociationEnds;
        /**
         * Returns the descriptor for the <code>getConformsToCompositeParentAssociationEnds</code> operation.
         * @return  the descriptor for the <code>getConformsToCompositeParentAssociationEnds</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>> GET_CONFORMS_TO_COMPOSITE_PARENT_ASSOCIATION_ENDS( ) {
            if ( __getConformsToCompositeParentAssociationEnds == null ) {
                __getConformsToCompositeParentAssociationEnds = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>>( "E0234C8C51E4770B3E4B11DE81710018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "getConformsToCompositeParentAssociationEnds" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __getConformsToCompositeParentAssociationEnds;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>> __getConformsToCompositeChildAssociationEnds;
        /**
         * Returns the descriptor for the <code>getConformsToCompositeChildAssociationEnds</code> operation.
         * @return  the descriptor for the <code>getConformsToCompositeChildAssociationEnds</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>> GET_CONFORMS_TO_COMPOSITE_CHILD_ASSOCIATION_ENDS( ) {
            if ( __getConformsToCompositeChildAssociationEnds == null ) {
                __getConformsToCompositeChildAssociationEnds = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>>( "E0234C8C51E4770D3E4B11DEAA2A0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "classes", "SapClass", "getConformsToCompositeChildAssociationEnds" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __getConformsToCompositeChildAssociationEnds;
        }
    }
}    