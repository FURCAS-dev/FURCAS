/**
 * Generated by the MOIN Generator Version 3.0
 **/

package data.__impl;

public final class DataPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;

    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(10);
        FEATURE_IDS.put("classes", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("constraints", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("quantitystructure", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("timedependency", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("documents", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("generics", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("tuples", Integer.valueOf(6)); //$NON-NLS-1$
    }

    // constructors    
    public DataPackageImpl()
    {
        super();
    }
    public DataPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    // internal structure type creators
    // nested packages
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getClasses(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "classes"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getConstraints(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "constraints"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getQuantitystructure(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "quantitystructure"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getTimedependency(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "timedependency"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getDocuments(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "documents"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getGenerics(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "generics"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getTuples(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "tuples"); //$NON-NLS-1$
    }
    // classes
    // associations
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new data.classes.__impl.ClassesPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 1:
                    return new data.constraints.__impl.ConstraintsPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 2:
                    return new data.quantitystructure.__impl.QuantitystructurePackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 3:
                    return new data.timedependency.__impl.TimedependencyPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 4:
                    return new data.documents.__impl.DocumentsPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 5:
                    return new data.generics.__impl.GenericsPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 6:
                    return new data.tuples.__impl.TuplesPackageImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<data.DataPackage> get___JmiInterface() {
        return data.DataPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(7);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefPackageAndName rpan = null;
            name = "classes"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "data.classes.ClassesPackage", false); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
            name = "constraints"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "data.constraints.ConstraintsPackage", false); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
            name = "quantitystructure"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "data.quantitystructure.QuantitystructurePackage", false); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
            name = "timedependency"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "data.timedependency.TimedependencyPackage", false); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
            name = "documents"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "data.documents.DocumentsPackage", false); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
            name = "generics"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "data.generics.GenericsPackage", false); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
            name = "tuples"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "data.tuples.TuplesPackage", false); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(0);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(0);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefAssociationAndName raan = null;
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<data.__impl.DataPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new data.__impl.DataPackageWrapper(conn, this, synchronize);
    }

}