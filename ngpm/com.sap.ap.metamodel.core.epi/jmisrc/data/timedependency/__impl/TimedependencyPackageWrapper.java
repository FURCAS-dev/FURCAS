/**
 * Generated by the MOIN Generator Version 3.0
 **/

package data.timedependency.__impl;

public class TimedependencyPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<data.timedependency.__impl.TimedependencyPackageImpl> implements data.timedependency.TimedependencyPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The TimedependencyPackage wrapper
     */
    public TimedependencyPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, data.timedependency.__impl.TimedependencyPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private data.timedependency.__impl.TimedependencyPackageImpl getCastWrappedObject() {
        return (data.timedependency.__impl.TimedependencyPackageImpl) getWrappedObject();
    }
    
    public data.timedependency.__impl.TimedependencyPackageImpl unwrap() {
        return (data.timedependency.__impl.TimedependencyPackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getTimeDependency()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getTimeDependency(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getTimeDependency(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.timedependency.ATheClassTimeDependency getATheClassTimeDependency()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.timedependency.ATheClassTimeDependency) wrapResult(getCastWrappedObject().getATheClassTimeDependency(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.timedependency.ATheClassTimeDependency) wrapResult(getCastWrappedObject().getATheClassTimeDependency(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.timedependency.AAssociationTimeDependency getAAssociationTimeDependency()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.timedependency.AAssociationTimeDependency) wrapResult(getCastWrappedObject().getAAssociationTimeDependency(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.timedependency.AAssociationTimeDependency) wrapResult(getCastWrappedObject().getAAssociationTimeDependency(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    @SuppressWarnings("unchecked")
    public java.lang.Class<data.timedependency.TimedependencyPackage> get___JmiInterface() {
        return data.timedependency.TimedependencyPackage.class;
    }
    
    protected String metaObjectToString() {
        return "data.timedependency.TimedependencyPackage (Java Type)\ndata.timedependency (MOF Type)"; //$NON-NLS-1$
    }
}