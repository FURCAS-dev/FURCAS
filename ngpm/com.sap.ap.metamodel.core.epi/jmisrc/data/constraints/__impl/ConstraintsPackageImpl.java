/**
 * Generated by the MOIN Generator Version 3.0
 **/

package data.constraints.__impl;

public final class ConstraintsPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;

    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(10);
        FEATURE_IDS.put("Constraint", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("SeverityInState", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("Constrains", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("SeveritiesForConstraint", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("A_constraintExpression_constraint", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("A_preconditions_preconditionForSignature", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("A_postconditions_postconditionForSignature", Integer.valueOf(6)); //$NON-NLS-1$
    }

    // constructors    
    public ConstraintsPackageImpl()
    {
        super();
    }
    public ConstraintsPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    public com.sap.tc.moin.repository.mmi.reflect.RefEnum create___RefEnum(com.sap.tc.moin.repository.mmi.model.EnumerationType enumType, String name) {
        com.sap.tc.moin.repository.mmi.reflect.RefEnum result = null;
        java.lang.String enumName = enumType.getName();
          if (enumName.equals("ObjectState")) { //$NON-NLS-1$
            result = data.constraints.ObjectStateEnum.forName(name);
          }
          else if (enumName.equals("Severity")) { //$NON-NLS-1$
            result = data.constraints.SeverityEnum.forName(name);
          }
        return result;
    }
    // internal structure type creators
    // nested packages
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getConstraint(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Constraint"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getSeverityInState(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "SeverityInState"); //$NON-NLS-1$
    }
    // associations
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getConstrains(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "Constrains"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getSeveritiesForConstraint(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "SeveritiesForConstraint"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAConstraintExpressionConstraint(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_constraintExpression_constraint"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAPreconditionsPreconditionForSignature(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_preconditions_preconditionForSignature"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAPostconditionsPostconditionForSignature(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_postconditions_postconditionForSignature"); //$NON-NLS-1$
    }
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("data.constraints.__impl.ConstraintImpl")); //$NON-NLS-1$
                case 1:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("data.constraints.__impl.SeverityInStateImpl")); //$NON-NLS-1$
                case 2:
                    return new data.constraints.__impl.ConstrainsImpl(workspace, mofId, immediatePackage, metaObject);
                case 3:
                    return new data.constraints.__impl.SeveritiesForConstraintImpl(workspace, mofId, immediatePackage, metaObject);
                case 4:
                    return new data.constraints.__impl.AConstraintExpressionConstraintImpl(workspace, mofId, immediatePackage, metaObject);
                case 5:
                    return new data.constraints.__impl.APreconditionsPreconditionForSignatureImpl(workspace, mofId, immediatePackage, metaObject);
                case 6:
                    return new data.constraints.__impl.APostconditionsPostconditionForSignatureImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<data.constraints.ConstraintsPackage> get___JmiInterface() {
        return data.constraints.ConstraintsPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(0);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefPackageAndName rpan = null;
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(2);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
            name = "Constraint"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "data.constraints.Constraint"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "SeverityInState"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "data.constraints.SeverityInState"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(5);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefAssociationAndName raan = null;
            name = "Constrains"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "data.constraints.Constrains"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "SeveritiesForConstraint"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "data.constraints.SeveritiesForConstraint"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_constraintExpression_constraint"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "data.constraints.AConstraintExpressionConstraint"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_preconditions_preconditionForSignature"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "data.constraints.APreconditionsPreconditionForSignature"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_postconditions_postconditionForSignature"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "data.constraints.APostconditionsPostconditionForSignature"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<data.constraints.__impl.ConstraintsPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new data.constraints.__impl.ConstraintsPackageWrapper(conn, this, synchronize);
    }

}