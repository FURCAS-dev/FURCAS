/**
 * Generated by the MOIN Generator Version 3.0
 **/

package data.constraints;

/**
 * An instance of this class defines a subset of the instances of the type it constains. It does so by providing a predicate ("characteristic function"). Instances of the type constrained for which the predicate holds are part of the subset, the others are not.
 * This interface is not intended to be implemented by clients.
 */
public interface Constraint extends modelmanagement.NamedElement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, data.constraints.Constraint> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, data.constraints.Constraint>("E0234C8C51EDECC93E4B11DE93870018DE1146FF", "sap.com/moin/mm/ap/core", "data", "constraints", "Constraint"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // references
    public data.classes.SapClass getConstrainedType() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setConstrainedType(data.classes.SapClass newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public java.util.Collection<data.constraints.SeverityInState> getSeverityInState() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public dataaccess.expressions.Expression getConstraintExpression() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setConstraintExpression(dataaccess.expressions.Expression newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,modelmanagement.NamedElement,java.lang.String> NAME( ) {
            return modelmanagement.NamedElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>description</code> attribute.
         * @return  the descriptor for the <code>description</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,modelmanagement.NamedElement,localization.TranslatableText> DESCRIPTION( ) {
            return modelmanagement.NamedElement.DESCRIPTORS.DESCRIPTION( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.constraints.Constraint,data.classes.SapClass> __constrainedType;
        /**
         * Returns the descriptor for the <code>constrainedType</code> reference.
         * @return  the descriptor for the <code>constrainedType</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.constraints.Constraint,data.classes.SapClass> CONSTRAINED_TYPE( ) {
            if ( __constrainedType == null ) {
                __constrainedType = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.constraints.Constraint,data.classes.SapClass>( "E0234C8C51EDECC63E4B11DEB6FD0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "constraints", "Constraint", "constrainedType" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __constrainedType;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.constraints.Constraint,java.util.Collection<data.constraints.SeverityInState>> __severityInState;
        /**
         * Returns the descriptor for the <code>severityInState</code> reference.
         * @return  the descriptor for the <code>severityInState</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.constraints.Constraint,java.util.Collection<data.constraints.SeverityInState>> SEVERITY_IN_STATE( ) {
            if ( __severityInState == null ) {
                __severityInState = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.constraints.Constraint,java.util.Collection<data.constraints.SeverityInState>>( "E0234C8C51EDECC73E4B11DEACAD0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "constraints", "Constraint", "severityInState" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __severityInState;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.constraints.Constraint,dataaccess.expressions.Expression> __constraintExpression;
        /**
         * Returns the descriptor for the <code>constraintExpression</code> reference.
         * @return  the descriptor for the <code>constraintExpression</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.constraints.Constraint,dataaccess.expressions.Expression> CONSTRAINT_EXPRESSION( ) {
            if ( __constraintExpression == null ) {
                __constraintExpression = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.constraints.Constraint,dataaccess.expressions.Expression>( "E0234C8C51EDECC83E4B11DE8F700018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "constraints", "Constraint", "constraintExpression" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __constraintExpression;
        }
    }
}    