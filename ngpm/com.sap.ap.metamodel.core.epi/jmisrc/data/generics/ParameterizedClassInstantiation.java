/**
 * Generated by the MOIN Generator Version 3.0
 **/

package data.generics;

/**
 * An instantiation of a parameterized class (a class that has one or more FormalTypeParameters associated) with a set of data types that match the parameterized type's signature. The instantiation is itself usable as a Class. It may as such itself still have formal type parameters which then make it a parameterized class that itself requires instantiation before it it a fully-specified type.
 * This interface is not intended to be implemented by clients.
 */
public interface ParameterizedClassInstantiation extends data.classes.SapClass {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, data.generics.ParameterizedClassInstantiation> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, data.generics.ParameterizedClassInstantiation>("E0234C8C51F05DBA3E4B11DEA4850018DE1146FF", "sap.com/moin/mm/ap/core", "data", "generics", "ParameterizedClassInstantiation"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // references
    public java.util.List<data.generics.ActualTypeParameter> getActualTypeParametersForInstantiation() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public data.classes.SapClass getParameterizedClass() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setParameterizedClass(data.classes.SapClass newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // operations
    /**
     * Returns the ActualTypeParameter's type (a Class) from the actualTypeParameters association end whose formalTypeParameter is the one passed. If no such formal type parameter is found, no object (null) is returned.
     */
    public data.classes.SapClass resolveFormalTypeParameter(data.generics.FormalTypeParameter ftp) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public data.generics.ClassParameterization getClassParameterization() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,modelmanagement.NamedElement,java.lang.String> NAME( ) {
            return modelmanagement.NamedElement.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>description</code> attribute.
         * @return  the descriptor for the <code>description</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,modelmanagement.NamedElement,localization.TranslatableText> DESCRIPTION( ) {
            return modelmanagement.NamedElement.DESCRIPTORS.DESCRIPTION( );
        }
        /**
         * Returns the descriptor for the <code>valueType</code> attribute.
         * @return  the descriptor for the <code>valueType</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,data.classes.SapClass,java.lang.Boolean> VALUE_TYPE( ) {
            return data.classes.SapClass.DESCRIPTORS.VALUE_TYPE( );
        }
        /**
         * Returns the descriptor for the <code>subscriptions</code> reference.
         * @return  the descriptor for the <code>subscriptions</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.EventProducer,java.util.Collection<behavioral.events.Subscription>> SUBSCRIPTIONS( ) {
            return behavioral.events.EventProducer.DESCRIPTORS.SUBSCRIPTIONS( );
        }
        /**
         * Returns the descriptor for the <code>notificationSignatures</code> reference.
         * @return  the descriptor for the <code>notificationSignatures</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,behavioral.events.EventProducer,java.util.Collection<data.classes.MethodSignature>> NOTIFICATION_SIGNATURES( ) {
            return behavioral.events.EventProducer.DESCRIPTORS.NOTIFICATION_SIGNATURES( );
        }
        /**
         * Returns the descriptor for the <code>ownedSignatures</code> reference.
         * @return  the descriptor for the <code>ownedSignatures</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SignatureOwner,java.util.Collection<data.classes.MethodSignature>> OWNED_SIGNATURES( ) {
            return data.classes.SignatureOwner.DESCRIPTORS.OWNED_SIGNATURES( );
        }
        /**
         * Returns the descriptor for the <code>signaturesWithFault</code> reference.
         * @return  the descriptor for the <code>signaturesWithFault</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.Collection<data.classes.Signature>> SIGNATURES_WITH_FAULT( ) {
            return data.classes.SapClass.DESCRIPTORS.SIGNATURES_WITH_FAULT( );
        }
        /**
         * Returns the descriptor for the <code>elementsOfType</code> reference.
         * @return  the descriptor for the <code>elementsOfType</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.Collection<data.classes.ClassTypeDefinition>> ELEMENTS_OF_TYPE( ) {
            return data.classes.SapClass.DESCRIPTORS.ELEMENTS_OF_TYPE( );
        }
        /**
         * Returns the descriptor for the <code>package</code> reference.
         * @return  the descriptor for the <code>package</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,modelmanagement.Package> PACKAGE( ) {
            return data.classes.SapClass.DESCRIPTORS.PACKAGE( );
        }
        /**
         * Returns the descriptor for the <code>adaptedBy</code> reference.
         * @return  the descriptor for the <code>adaptedBy</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.Collection<data.classes.TypeAdapter>> ADAPTED_BY( ) {
            return data.classes.SapClass.DESCRIPTORS.ADAPTED_BY( );
        }
        /**
         * Returns the descriptor for the <code>adapters</code> reference.
         * @return  the descriptor for the <code>adapters</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.Collection<data.classes.TypeAdapter>> ADAPTERS( ) {
            return data.classes.SapClass.DESCRIPTORS.ADAPTERS( );
        }
        /**
         * Returns the descriptor for the <code>formalObjectParameters</code> reference.
         * @return  the descriptor for the <code>formalObjectParameters</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,java.util.List<data.classes.Parameter>> FORMAL_OBJECT_PARAMETERS( ) {
            return data.classes.SapClass.DESCRIPTORS.FORMAL_OBJECT_PARAMETERS( );
        }
        /**
         * Returns the descriptor for the <code>converterBetweenParametrizations</code> reference.
         * @return  the descriptor for the <code>converterBetweenParametrizations</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.classes.SapClass,data.classes.ConverterBetweenParametrizations> CONVERTER_BETWEEN_PARAMETRIZATIONS( ) {
            return data.classes.SapClass.DESCRIPTORS.CONVERTER_BETWEEN_PARAMETRIZATIONS( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.generics.ParameterizedClassInstantiation,java.util.List<data.generics.ActualTypeParameter>> __actualTypeParametersForInstantiation;
        /**
         * Returns the descriptor for the <code>actualTypeParametersForInstantiation</code> reference.
         * @return  the descriptor for the <code>actualTypeParametersForInstantiation</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.generics.ParameterizedClassInstantiation,java.util.List<data.generics.ActualTypeParameter>> ACTUAL_TYPE_PARAMETERS_FOR_INSTANTIATION( ) {
            if ( __actualTypeParametersForInstantiation == null ) {
                __actualTypeParametersForInstantiation = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.generics.ParameterizedClassInstantiation,java.util.List<data.generics.ActualTypeParameter>>( "E0234C8C51F05DB33E4B11DEA5240018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "generics", "ParameterizedClassInstantiation", "actualTypeParametersForInstantiation" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __actualTypeParametersForInstantiation;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.generics.ParameterizedClassInstantiation,data.classes.SapClass> __parameterizedClass;
        /**
         * Returns the descriptor for the <code>parameterizedClass</code> reference.
         * @return  the descriptor for the <code>parameterizedClass</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.generics.ParameterizedClassInstantiation,data.classes.SapClass> PARAMETERIZED_CLASS( ) {
            if ( __parameterizedClass == null ) {
                __parameterizedClass = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,data.generics.ParameterizedClassInstantiation,data.classes.SapClass>( "E0234C8C51F05DB43E4B11DE82330018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "generics", "ParameterizedClassInstantiation", "parameterizedClass" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __parameterizedClass;
        }
        /**
         * Returns the descriptor for the <code>isAbstract</code> operation.
         * @return  the descriptor for the <code>isAbstract</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.lang.Boolean> IS_ABSTRACT( ) {
            return data.classes.SapClass.DESCRIPTORS.IS_ABSTRACT( );
        }
        /**
         * Returns the descriptor for the <code>isParameterizedClassDefinition</code> operation.
         * @return  the descriptor for the <code>isParameterizedClassDefinition</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.lang.Boolean> IS_PARAMETERIZED_CLASS_DEFINITION( ) {
            return data.classes.SapClass.DESCRIPTORS.IS_PARAMETERIZED_CLASS_DEFINITION( );
        }
        /**
         * Returns the descriptor for the <code>conformsTo</code> operation.
         * @return  the descriptor for the <code>conformsTo</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.lang.Boolean> CONFORMS_TO( ) {
            return data.classes.SapClass.DESCRIPTORS.CONFORMS_TO( );
        }
        /**
         * Returns the descriptor for the <code>allSignatures</code> operation.
         * @return  the descriptor for the <code>allSignatures</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> ALL_SIGNATURES( ) {
            return data.classes.SapClass.DESCRIPTORS.ALL_SIGNATURES( );
        }
        /**
         * Returns the descriptor for the <code>delegatesTo</code> operation.
         * @return  the descriptor for the <code>delegatesTo</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.SapClass>> DELEGATES_TO( ) {
            return data.classes.SapClass.DESCRIPTORS.DELEGATES_TO( );
        }
        /**
         * Returns the descriptor for the <code>conformsToExcluding</code> operation.
         * @return  the descriptor for the <code>conformsToExcluding</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.lang.Boolean> CONFORMS_TO_EXCLUDING( ) {
            return data.classes.SapClass.DESCRIPTORS.CONFORMS_TO_EXCLUDING( );
        }
        /**
         * Returns the descriptor for the <code>signaturesWithDelegation</code> operation.
         * @return  the descriptor for the <code>signaturesWithDelegation</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> SIGNATURES_WITH_DELEGATION( ) {
            return data.classes.SapClass.DESCRIPTORS.SIGNATURES_WITH_DELEGATION( );
        }
        /**
         * Returns the descriptor for the <code>delegatedSignatures</code> operation.
         * @return  the descriptor for the <code>delegatedSignatures</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> DELEGATED_SIGNATURES( ) {
            return data.classes.SapClass.DESCRIPTORS.DELEGATED_SIGNATURES( );
        }
        /**
         * Returns the descriptor for the <code>adaptedSignatures</code> operation.
         * @return  the descriptor for the <code>adaptedSignatures</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> ADAPTED_SIGNATURES( ) {
            return data.classes.SapClass.DESCRIPTORS.ADAPTED_SIGNATURES( );
        }
        /**
         * Returns the descriptor for the <code>adaptedSignaturesExcluding</code> operation.
         * @return  the descriptor for the <code>adaptedSignaturesExcluding</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> ADAPTED_SIGNATURES_EXCLUDING( ) {
            return data.classes.SapClass.DESCRIPTORS.ADAPTED_SIGNATURES_EXCLUDING( );
        }
        /**
         * Returns the descriptor for the <code>allSignaturesExcluding</code> operation.
         * @return  the descriptor for the <code>allSignaturesExcluding</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> ALL_SIGNATURES_EXCLUDING( ) {
            return data.classes.SapClass.DESCRIPTORS.ALL_SIGNATURES_EXCLUDING( );
        }
        /**
         * Returns the descriptor for the <code>signaturesWithDelegationExcluding</code> operation.
         * @return  the descriptor for the <code>signaturesWithDelegationExcluding</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> SIGNATURES_WITH_DELEGATION_EXCLUDING( ) {
            return data.classes.SapClass.DESCRIPTORS.SIGNATURES_WITH_DELEGATION_EXCLUDING( );
        }
        /**
         * Returns the descriptor for the <code>delegatedSignaturesExcluding</code> operation.
         * @return  the descriptor for the <code>delegatedSignaturesExcluding</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.MethodSignature>> DELEGATED_SIGNATURES_EXCLUDING( ) {
            return data.classes.SapClass.DESCRIPTORS.DELEGATED_SIGNATURES_EXCLUDING( );
        }
        /**
         * Returns the descriptor for the <code>getConformingClasses</code> operation.
         * @return  the descriptor for the <code>getConformingClasses</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.SapClass>> GET_CONFORMING_CLASSES( ) {
            return data.classes.SapClass.DESCRIPTORS.GET_CONFORMING_CLASSES( );
        }
        /**
         * Returns the descriptor for the <code>getAssociationEnds</code> operation.
         * @return  the descriptor for the <code>getAssociationEnds</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>> GET_ASSOCIATION_ENDS( ) {
            return data.classes.SapClass.DESCRIPTORS.GET_ASSOCIATION_ENDS( );
        }
        /**
         * Returns the descriptor for the <code>getEqualityRelevantAssociationEnds</code> operation.
         * @return  the descriptor for the <code>getEqualityRelevantAssociationEnds</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>> GET_EQUALITY_RELEVANT_ASSOCIATION_ENDS( ) {
            return data.classes.SapClass.DESCRIPTORS.GET_EQUALITY_RELEVANT_ASSOCIATION_ENDS( );
        }
        /**
         * Returns the descriptor for the <code>getConformsToClasses</code> operation.
         * @return  the descriptor for the <code>getConformsToClasses</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.SapClass>> GET_CONFORMS_TO_CLASSES( ) {
            return data.classes.SapClass.DESCRIPTORS.GET_CONFORMS_TO_CLASSES( );
        }
        /**
         * Returns the descriptor for the <code>getConformsToAssociationEnds</code> operation.
         * @return  the descriptor for the <code>getConformsToAssociationEnds</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>> GET_CONFORMS_TO_ASSOCIATION_ENDS( ) {
            return data.classes.SapClass.DESCRIPTORS.GET_CONFORMS_TO_ASSOCIATION_ENDS( );
        }
        /**
         * Returns the descriptor for the <code>getConformsToCompositeParentAssociationEnds</code> operation.
         * @return  the descriptor for the <code>getConformsToCompositeParentAssociationEnds</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>> GET_CONFORMS_TO_COMPOSITE_PARENT_ASSOCIATION_ENDS( ) {
            return data.classes.SapClass.DESCRIPTORS.GET_CONFORMS_TO_COMPOSITE_PARENT_ASSOCIATION_ENDS( );
        }
        /**
         * Returns the descriptor for the <code>getConformsToCompositeChildAssociationEnds</code> operation.
         * @return  the descriptor for the <code>getConformsToCompositeChildAssociationEnds</code> operation
         */
        public com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.classes.SapClass,java.util.Collection<data.classes.AssociationEnd>> GET_CONFORMS_TO_COMPOSITE_CHILD_ASSOCIATION_ENDS( ) {
            return data.classes.SapClass.DESCRIPTORS.GET_CONFORMS_TO_COMPOSITE_CHILD_ASSOCIATION_ENDS( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.generics.ParameterizedClassInstantiation,data.classes.SapClass> __resolveFormalTypeParameter;
        /**
         * Returns the descriptor for the <code>resolveFormalTypeParameter</code> operation.
         * @return  the descriptor for the <code>resolveFormalTypeParameter</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.generics.ParameterizedClassInstantiation,data.classes.SapClass> RESOLVE_FORMAL_TYPE_PARAMETER( ) {
            if ( __resolveFormalTypeParameter == null ) {
                __resolveFormalTypeParameter = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.generics.ParameterizedClassInstantiation,data.classes.SapClass>( "E0234C8C51F05DB73E4B11DE9B000018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "generics", "ParameterizedClassInstantiation", "resolveFormalTypeParameter" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __resolveFormalTypeParameter;
        }
        private com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.generics.ParameterizedClassInstantiation,data.generics.ClassParameterization> __getClassParameterization;
        /**
         * Returns the descriptor for the <code>getClassParameterization</code> operation.
         * @return  the descriptor for the <code>getClassParameterization</code> operation
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.generics.ParameterizedClassInstantiation,data.generics.ClassParameterization> GET_CLASS_PARAMETERIZATION( ) {
            if ( __getClassParameterization == null ) {
                __getClassParameterization = new com.sap.tc.moin.repository.mmi.descriptors.OperationDescriptor<com.sap.tc.moin.repository.mmi.model.Operation,data.generics.ParameterizedClassInstantiation,data.generics.ClassParameterization>( "E0234C8C51F05DB93E4B11DEC8B40018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "data", "generics", "ParameterizedClassInstantiation", "getClassParameterization" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __getClassParameterization;
        }
    }
}    