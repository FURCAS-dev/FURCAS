/**
 * Generated by the MOIN Generator Version 3.0
 **/

package data.generics.__impl;

public class GenericsPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<data.generics.__impl.GenericsPackageImpl> implements data.generics.GenericsPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The GenericsPackage wrapper
     */
    public GenericsPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, data.generics.__impl.GenericsPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private data.generics.__impl.GenericsPackageImpl getCastWrappedObject() {
        return (data.generics.__impl.GenericsPackageImpl) getWrappedObject();
    }
    
    public data.generics.__impl.GenericsPackageImpl unwrap() {
        return (data.generics.__impl.GenericsPackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getFormalTypeParameter()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getFormalTypeParameter(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getFormalTypeParameter(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getParameterizedClassInstantiation()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getParameterizedClassInstantiation(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getParameterizedClassInstantiation(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getClassParameterization()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getClassParameterization(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getClassParameterization(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getActualTypeParameter()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getActualTypeParameter(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getActualTypeParameter(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.generics.AFormalTypeParametersParameterOf getAFormalTypeParametersParameterOf()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.generics.AFormalTypeParametersParameterOf) wrapResult(getCastWrappedObject().getAFormalTypeParametersParameterOf(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.generics.AFormalTypeParametersParameterOf) wrapResult(getCastWrappedObject().getAFormalTypeParametersParameterOf(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.generics.ATypeConstraintFormalTypeParameter getATypeConstraintFormalTypeParameter()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.generics.ATypeConstraintFormalTypeParameter) wrapResult(getCastWrappedObject().getATypeConstraintFormalTypeParameter(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.generics.ATypeConstraintFormalTypeParameter) wrapResult(getCastWrappedObject().getATypeConstraintFormalTypeParameter(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.generics.AActualTypeParametersForInstantiationParameterizedClassInstantiation getAActualTypeParametersForInstantiationParameterizedClassInstantiation()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.generics.AActualTypeParametersForInstantiationParameterizedClassInstantiation) wrapResult(getCastWrappedObject().getAActualTypeParametersForInstantiationParameterizedClassInstantiation(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.generics.AActualTypeParametersForInstantiationParameterizedClassInstantiation) wrapResult(getCastWrappedObject().getAActualTypeParametersForInstantiationParameterizedClassInstantiation(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.generics.ParameterizedClassDeclaration getParameterizedClassDeclaration()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.generics.ParameterizedClassDeclaration) wrapResult(getCastWrappedObject().getParameterizedClassDeclaration(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.generics.ParameterizedClassDeclaration) wrapResult(getCastWrappedObject().getParameterizedClassDeclaration(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.generics.ATypeActualTypeParametersOfClass getATypeActualTypeParametersOfClass()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.generics.ATypeActualTypeParametersOfClass) wrapResult(getCastWrappedObject().getATypeActualTypeParametersOfClass(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.generics.ATypeActualTypeParametersOfClass) wrapResult(getCastWrappedObject().getATypeActualTypeParametersOfClass(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.generics.AParameterizedClassesPackage getAParameterizedClassesPackage()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.generics.AParameterizedClassesPackage) wrapResult(getCastWrappedObject().getAParameterizedClassesPackage(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.generics.AParameterizedClassesPackage) wrapResult(getCastWrappedObject().getAParameterizedClassesPackage(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.generics.AFormalTypeParameterActualTypeParameters getAFormalTypeParameterActualTypeParameters()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.generics.AFormalTypeParameterActualTypeParameters) wrapResult(getCastWrappedObject().getAFormalTypeParameterActualTypeParameters(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.generics.AFormalTypeParameterActualTypeParameters) wrapResult(getCastWrappedObject().getAFormalTypeParameterActualTypeParameters(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.generics.AParameterizedClassParameterizedClassInstantiation getAParameterizedClassParameterizedClassInstantiation()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.generics.AParameterizedClassParameterizedClassInstantiation) wrapResult(getCastWrappedObject().getAParameterizedClassParameterizedClassInstantiation(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.generics.AParameterizedClassParameterizedClassInstantiation) wrapResult(getCastWrappedObject().getAParameterizedClassParameterizedClassInstantiation(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    public java.lang.Class<data.generics.GenericsPackage> get___JmiInterface() {
        return data.generics.GenericsPackage.class;
    }
    
    protected String metaObjectToString() {
        return "data.generics.GenericsPackage (Java Type)\ndata.generics (MOF Type)"; //$NON-NLS-1$
    }
}