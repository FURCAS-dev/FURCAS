/**
 * Generated by the MOIN Generator Version 3.0
 **/

package data.generics.__impl;

public class AParameterizedClassParameterizedClassInstantiationWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<data.generics.AParameterizedClassParameterizedClassInstantiation> implements data.generics.AParameterizedClassParameterizedClassInstantiation,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The AParameterizedClassParameterizedClassInstantiation wrapper
     */
    public AParameterizedClassParameterizedClassInstantiationWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, data.generics.__impl.AParameterizedClassParameterizedClassInstantiationImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private data.generics.__impl.AParameterizedClassParameterizedClassInstantiationImpl getCastWrappedObject() {
        return (data.generics.__impl.AParameterizedClassParameterizedClassInstantiationImpl) getWrappedObject();
    }

    public data.generics.AParameterizedClassParameterizedClassInstantiation unwrap() {
        return (data.generics.AParameterizedClassParameterizedClassInstantiation) getWrappedObject();
    }
    
    public boolean exists(data.classes.SapClass _ParameterizedClass, data.generics.ParameterizedClassInstantiation _ParameterizedClassInstantiation) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParameterizedClass), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParameterizedClassInstantiation));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParameterizedClass), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParameterizedClassInstantiation)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public data.classes.SapClass getParameterizedClass(data.generics.ParameterizedClassInstantiation _ParameterizedClassInstantiation) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (data.classes.SapClass) wrapResult(getCastWrappedObject().getParameterizedClass(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParameterizedClassInstantiation)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (data.classes.SapClass) wrapResult(getCastWrappedObject().getParameterizedClass(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParameterizedClassInstantiation))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getParameterizedClassInstantiation(data.classes.SapClass _ParameterizedClass) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getParameterizedClassInstantiation(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParameterizedClass)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getParameterizedClassInstantiation(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParameterizedClass))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(data.classes.SapClass _ParameterizedClass, data.generics.ParameterizedClassInstantiation _ParameterizedClassInstantiation) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParameterizedClass), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParameterizedClassInstantiation));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParameterizedClass), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParameterizedClassInstantiation)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(data.classes.SapClass _ParameterizedClass, data.generics.ParameterizedClassInstantiation _ParameterizedClassInstantiation) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParameterizedClass), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParameterizedClassInstantiation));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParameterizedClass), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _ParameterizedClassInstantiation)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    public java.lang.Class<data.generics.AParameterizedClassParameterizedClassInstantiation> get___JmiInterface() {
        return data.generics.AParameterizedClassParameterizedClassInstantiation.class;
    }

    protected String metaObjectToString() {
        return "data.generics.AParameterizedClassParameterizedClassInstantiation (Java Type)\ndata.generics.A_parameterizedClass_parameterizedClassInstantiation (MOF Type)"; //$NON-NLS-1$
    }    
}