/**
 * Generated by the MOIN Generator Version 3.0
 **/

package abapmapping.abapdictionary.__impl;

public class AbapStructureFieldsWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationWrapperImpl<abapmapping.abapdictionary.AbapStructureFields> implements abapmapping.abapdictionary.AbapStructureFields,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The AbapStructureFields wrapper
     */
    public AbapStructureFieldsWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, abapmapping.abapdictionary.__impl.AbapStructureFieldsImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }
    
    private abapmapping.abapdictionary.__impl.AbapStructureFieldsImpl getCastWrappedObject() {
        return (abapmapping.abapdictionary.__impl.AbapStructureFieldsImpl) getWrappedObject();
    }

    public abapmapping.abapdictionary.AbapStructureFields unwrap() {
        return (abapmapping.abapdictionary.AbapStructureFields) getWrappedObject();
    }
    
    public boolean exists(abapmapping.abapdictionary.AbapStructureField _Fields, abapmapping.abapdictionary.AbapStructureType _AbapStructureType) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Fields), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AbapStructureType));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().exists(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Fields), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AbapStructureType)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getFields(abapmapping.abapdictionary.AbapStructureType _AbapStructureType) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getFields(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AbapStructureType)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getFields(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AbapStructureType))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public java.util.Collection getAbapStructureType(abapmapping.abapdictionary.AbapStructureField _Fields) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (java.util.Collection) wrapResult(getCastWrappedObject().getAbapStructureType(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Fields)));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (java.util.Collection) wrapResult(getCastWrappedObject().getAbapStructureType(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Fields))); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean add(abapmapping.abapdictionary.AbapStructureField _Fields, abapmapping.abapdictionary.AbapStructureType _AbapStructureType) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Fields), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AbapStructureType));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().add(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Fields), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AbapStructureType)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public boolean remove(abapmapping.abapdictionary.AbapStructureField _Fields, abapmapping.abapdictionary.AbapStructureType _AbapStructureType) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        try {
            if (synchronize) {
                synchronized (synchronizationManager.getProhibitWriteSyncObject()) {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Fields), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AbapStructureType));
                }       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return getCastWrappedObject().remove(connection, unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _Fields), unwrapArg((com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) _AbapStructureType)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }   

    @SuppressWarnings("unchecked")
    public java.lang.Class<abapmapping.abapdictionary.AbapStructureFields> get___JmiInterface() {
        return abapmapping.abapdictionary.AbapStructureFields.class;
    }

    protected String metaObjectToString() {
        return "abapmapping.abapdictionary.AbapStructureFields (Java Type)\nabapMapping.AbapDictionary.AbapStructureFields (MOF Type)"; //$NON-NLS-1$
    }    
}