/**
 * Generated by the MOIN Generator Version 3.0
 **/

package abapmapping.abapdictionary;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface DataElement extends abapmapping.abapdictionary.UnstructuredAbapType {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, abapmapping.abapdictionary.DataElement> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, abapmapping.abapdictionary.DataElement>("E05D452A5200FFBA3E4B11DE94550018DE1146FF", "sap.com/moin/mm/ap/core", "abapMapping", "AbapDictionary", "DataElement"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // references
    public abapmapping.abapdictionary.AbapPrimtiveType getAbapType() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setAbapType(abapmapping.abapdictionary.AbapPrimtiveType newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,abapmapping.abapdictionary.AbapType,java.lang.String> NAME( ) {
            return abapmapping.abapdictionary.AbapType.DESCRIPTORS.NAME( );
        }
        /**
         * Returns the descriptor for the <code>xsdRepresentation</code> reference.
         * @return  the descriptor for the <code>xsdRepresentation</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,abapmapping.abapdictionary.AbapType,abapmapping.abapdictionary.XsdType> XSD_REPRESENTATION( ) {
            return abapmapping.abapdictionary.AbapType.DESCRIPTORS.XSD_REPRESENTATION( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,abapmapping.abapdictionary.DataElement,abapmapping.abapdictionary.AbapPrimtiveType> __abapType;
        /**
         * Returns the descriptor for the <code>abapType</code> reference.
         * @return  the descriptor for the <code>abapType</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,abapmapping.abapdictionary.DataElement,abapmapping.abapdictionary.AbapPrimtiveType> ABAP_TYPE( ) {
            if ( __abapType == null ) {
                __abapType = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,abapmapping.abapdictionary.DataElement,abapmapping.abapdictionary.AbapPrimtiveType>( "E05D452A5200FFB93E4B11DEBDA00018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "abapMapping", "AbapDictionary", "DataElement", "abapType" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __abapType;
        }
    }
}    