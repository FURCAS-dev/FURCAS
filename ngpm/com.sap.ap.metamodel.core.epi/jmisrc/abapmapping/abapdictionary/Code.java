/**
 * Generated by the MOIN Generator Version 3.0
 **/

package abapmapping.abapdictionary;

/**
 * This interface is not intended to be implemented by clients.
 */
public interface Code extends abapmapping.abapdictionary.DataElement {

    /**
     * Descriptors for all features of this MofClass and its supertypes.
     */
    public static final Descriptors DESCRIPTORS = new Descriptors( );

    // class extent descriptor
    /**
     * Extent descriptor
     */
    public final com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, abapmapping.abapdictionary.Code> CLASS_DESCRIPTOR = new com.sap.tc.moin.repository.mmi.descriptors.ClassDescriptor<com.sap.tc.moin.repository.mmi.reflect.RefClass, abapmapping.abapdictionary.Code>("E05D452A5200FFB83E4B11DEC25A0018DE1146FF", "sap.com/moin/mm/ap/core", "abapMapping", "AbapDictionary", "Code"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 

    
    // attributes
    public boolean isExtensible() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;
    public void setExtensible(boolean newValue) throws com.sap.tc.moin.repository.mmi.reflect.JmiException;

    // references
    public java.util.Collection<abapmapping.abapdictionary.CodeValue> getValues() throws com.sap.tc.moin.repository.mmi.reflect.JmiException;


    public static final class Descriptors {
        Descriptors( ) { 
        }
        /**
         * Returns the descriptor for the <code>name</code> attribute.
         * @return  the descriptor for the <code>name</code> attribute
         */
        public com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,abapmapping.abapdictionary.AbapType,java.lang.String> NAME( ) {
            return abapmapping.abapdictionary.AbapType.DESCRIPTORS.NAME( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,abapmapping.abapdictionary.Code,java.lang.Boolean> __extensible;
        /**
         * Returns the descriptor for the <code>extensible</code> attribute.
         * @return  the descriptor for the <code>extensible</code> attribute
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,abapmapping.abapdictionary.Code,java.lang.Boolean> EXTENSIBLE( ) {
            if ( __extensible == null ) {
                __extensible = new com.sap.tc.moin.repository.mmi.descriptors.AttributeDescriptor<com.sap.tc.moin.repository.mmi.model.Attribute,abapmapping.abapdictionary.Code,java.lang.Boolean>( "E05D452A5200FFB73E4B11DEA32B0018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "abapMapping", "AbapDictionary", "Code", "extensible" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __extensible;
        }
        /**
         * Returns the descriptor for the <code>xsdRepresentation</code> reference.
         * @return  the descriptor for the <code>xsdRepresentation</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,abapmapping.abapdictionary.AbapType,abapmapping.abapdictionary.XsdType> XSD_REPRESENTATION( ) {
            return abapmapping.abapdictionary.AbapType.DESCRIPTORS.XSD_REPRESENTATION( );
        }
        /**
         * Returns the descriptor for the <code>abapType</code> reference.
         * @return  the descriptor for the <code>abapType</code> reference
         */
        public com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,abapmapping.abapdictionary.DataElement,abapmapping.abapdictionary.AbapPrimtiveType> ABAP_TYPE( ) {
            return abapmapping.abapdictionary.DataElement.DESCRIPTORS.ABAP_TYPE( );
        }
        private com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,abapmapping.abapdictionary.Code,java.util.Collection<abapmapping.abapdictionary.CodeValue>> __values;
        /**
         * Returns the descriptor for the <code>values</code> reference.
         * @return  the descriptor for the <code>values</code> reference
         */
        public synchronized com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,abapmapping.abapdictionary.Code,java.util.Collection<abapmapping.abapdictionary.CodeValue>> VALUES( ) {
            if ( __values == null ) {
                __values = new com.sap.tc.moin.repository.mmi.descriptors.ReferenceDescriptor<com.sap.tc.moin.repository.mmi.model.Reference,abapmapping.abapdictionary.Code,java.util.Collection<abapmapping.abapdictionary.CodeValue>>( "E05D452A5200FFB63E4B11DEA0000018DE1146FF", "sap.com/moin/mm/ap/core", new java.lang.String[] { "abapMapping", "AbapDictionary", "Code", "values" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
            }
            return __values;
        }
    }
}    