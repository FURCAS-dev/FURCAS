/**
 * Generated by the MOIN Generator Version 3.0
 **/

package abapmapping.__impl;

public final class AbapMappingPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;
    
    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(14);
        FEATURE_IDS.put("AbapDictionary", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("AbapClassImplementationAnnotation", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("AbapAssociationImplementationAnnotation", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("AbapAssociationEndImplementationAnnotation", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("AbapSignatureImplementationAnnotation", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("A_abapAnnotation_sapClass", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("A_abapAnnotation_association", Integer.valueOf(6)); //$NON-NLS-1$
        FEATURE_IDS.put("A_abapAnnotation_associationEnd", Integer.valueOf(7)); //$NON-NLS-1$
        FEATURE_IDS.put("A_abapAnnotation_signature", Integer.valueOf(8)); //$NON-NLS-1$
        FEATURE_IDS.put("A_abapType_abapClassImplementationAnnotation", Integer.valueOf(9)); //$NON-NLS-1$
    }

    // constructors    
    public AbapMappingPackageImpl()
    {
        super();
    }
    public AbapMappingPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    public com.sap.tc.moin.repository.mmi.reflect.RefEnum create___RefEnum(com.sap.tc.moin.repository.mmi.model.EnumerationType enumType, String name) {
        com.sap.tc.moin.repository.mmi.reflect.RefEnum result = null;
        java.lang.String enumName = enumType.getName();
          if (enumName.equals("AbapClassKind")) { //$NON-NLS-1$
            result = abapmapping.AbapClassKindEnum.forName(name);
          }
          else if (enumName.equals("AbapSignatureKind")) { //$NON-NLS-1$
            result = abapmapping.AbapSignatureKindEnum.forName(name);
          }
        return result;
    }
    // internal structure type creators
    // nested packages
    public com.sap.tc.moin.repository.mmi.reflect.RefPackage getAbapDictionary(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refPackage(connection, "AbapDictionary"); //$NON-NLS-1$
    }
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAbapClassImplementationAnnotation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "AbapClassImplementationAnnotation"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAbapAssociationImplementationAnnotation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "AbapAssociationImplementationAnnotation"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAbapAssociationEndImplementationAnnotation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "AbapAssociationEndImplementationAnnotation"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getAbapSignatureImplementationAnnotation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "AbapSignatureImplementationAnnotation"); //$NON-NLS-1$
    }
    // associations
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAAbapAnnotationSapClass(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_abapAnnotation_sapClass"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAAbapAnnotationAssociation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_abapAnnotation_association"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAAbapAnnotationAssociationEnd(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_abapAnnotation_associationEnd"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAAbapAnnotationSignature(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_abapAnnotation_signature"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAAbapTypeAbapClassImplementationAnnotation(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_abapType_abapClassImplementationAnnotation"); //$NON-NLS-1$
    }
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new abapmapping.abapdictionary.__impl.AbapDictionaryPackageImpl(workspace, mofId, immediatePackage, metaObject);
                case 1:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("abapmapping.__impl.AbapClassImplementationAnnotationImpl")); //$NON-NLS-1$
                case 2:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("abapmapping.__impl.AbapAssociationImplementationAnnotationImpl")); //$NON-NLS-1$
                case 3:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("abapmapping.__impl.AbapAssociationEndImplementationAnnotationImpl")); //$NON-NLS-1$
                case 4:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("abapmapping.__impl.AbapSignatureImplementationAnnotationImpl")); //$NON-NLS-1$
                case 5:
                    return new abapmapping.__impl.AAbapAnnotationSapClassImpl(workspace, mofId, immediatePackage, metaObject);
                case 6:
                    return new abapmapping.__impl.AAbapAnnotationAssociationImpl(workspace, mofId, immediatePackage, metaObject);
                case 7:
                    return new abapmapping.__impl.AAbapAnnotationAssociationEndImpl(workspace, mofId, immediatePackage, metaObject);
                case 8:
                    return new abapmapping.__impl.AAbapAnnotationSignatureImpl(workspace, mofId, immediatePackage, metaObject);
                case 9:
                    return new abapmapping.__impl.AAbapTypeAbapClassImplementationAnnotationImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    public java.lang.Class<abapmapping.AbapMappingPackage> get___JmiInterface() {
        return abapmapping.AbapMappingPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(1);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefPackageAndName rpan = null;
            name = "AbapDictionary"; //$NON-NLS-1$
            rpan = new RefPackageAndName(name, "abapmapping.abapdictionary.AbapDictionaryPackage", false); //$NON-NLS-1$
            ___refPackages.add(rpan);
            ___refPackagesByName.put(name, rpan);
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(4);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
            name = "AbapClassImplementationAnnotation"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "abapmapping.AbapClassImplementationAnnotation"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "AbapAssociationImplementationAnnotation"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "abapmapping.AbapAssociationImplementationAnnotation"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "AbapAssociationEndImplementationAnnotation"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "abapmapping.AbapAssociationEndImplementationAnnotation"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "AbapSignatureImplementationAnnotation"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "abapmapping.AbapSignatureImplementationAnnotation"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(5);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefAssociationAndName raan = null;
            name = "A_abapAnnotation_sapClass"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "abapmapping.AAbapAnnotationSapClass"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_abapAnnotation_association"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "abapmapping.AAbapAnnotationAssociation"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_abapAnnotation_associationEnd"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "abapmapping.AAbapAnnotationAssociationEnd"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_abapAnnotation_signature"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "abapmapping.AAbapAnnotationSignature"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_abapType_abapClassImplementationAnnotation"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "abapmapping.AAbapTypeAbapClassImplementationAnnotation"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<abapmapping.__impl.AbapMappingPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new abapmapping.__impl.AbapMappingPackageWrapper(conn, this, synchronize);
    }

}