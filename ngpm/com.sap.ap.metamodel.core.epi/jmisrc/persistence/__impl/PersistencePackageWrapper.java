/**
 * Generated by the MOIN Generator Version 3.0
 **/

package persistence.__impl;

public class PersistencePackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<persistence.__impl.PersistencePackageImpl> implements persistence.PersistencePackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The PersistencePackage wrapper
     */
    public PersistencePackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, persistence.__impl.PersistencePackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private persistence.__impl.PersistencePackageImpl getCastWrappedObject() {
        return (persistence.__impl.PersistencePackageImpl) getWrappedObject();
    }
    
    public persistence.__impl.PersistencePackageImpl unwrap() {
        return (persistence.__impl.PersistencePackageImpl) getWrappedObject();
    }
    
    public persistence.actions.ActionsPackage getActions()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (persistence.actions.ActionsPackage) wrapResult(getCastWrappedObject().getActions(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (persistence.actions.ActionsPackage) wrapResult(getCastWrappedObject().getActions(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public persistence.expressions.ExpressionsPackage getExpressions()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (persistence.expressions.ExpressionsPackage) wrapResult(getCastWrappedObject().getExpressions(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (persistence.expressions.ExpressionsPackage) wrapResult(getCastWrappedObject().getExpressions(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    public java.lang.Class<persistence.PersistencePackage> get___JmiInterface() {
        return persistence.PersistencePackage.class;
    }
    
    protected String metaObjectToString() {
        return "persistence.PersistencePackage (Java Type)\npersistence (MOF Type)"; //$NON-NLS-1$
    }
}