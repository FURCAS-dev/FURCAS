/**
 * Generated by the MOIN Generator Version 3.0
 **/

package persistence.actions.__impl;

public final class ActionsPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;

    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(6);
        FEATURE_IDS.put("Store", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("Delete", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("StatementWithEntityArgument", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("Rollback", Integer.valueOf(3)); //$NON-NLS-1$
    }

    // constructors    
    public ActionsPackageImpl()
    {
        super();
    }
    public ActionsPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    // internal structure type creators
    // nested packages
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getStore(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Store"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getDelete(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Delete"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getStatementWithEntityArgument(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "StatementWithEntityArgument"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getRollback(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "Rollback"); //$NON-NLS-1$
    }
    // associations
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("persistence.actions.__impl.StoreImpl")); //$NON-NLS-1$
                case 1:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("persistence.actions.__impl.DeleteImpl")); //$NON-NLS-1$
                case 2:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("persistence.actions.__impl.StatementWithEntityArgumentImpl")); //$NON-NLS-1$
                case 3:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("persistence.actions.__impl.RollbackImpl")); //$NON-NLS-1$
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<persistence.actions.ActionsPackage> get___JmiInterface() {
        return persistence.actions.ActionsPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(0);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefPackageAndName rpan = null;
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(4);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
            name = "Store"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "persistence.actions.Store"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Delete"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "persistence.actions.Delete"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "StatementWithEntityArgument"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "persistence.actions.StatementWithEntityArgument"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "Rollback"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "persistence.actions.Rollback"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(0);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefAssociationAndName raan = null;
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<persistence.actions.__impl.ActionsPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new persistence.actions.__impl.ActionsPackageWrapper(conn, this, synchronize);
    }

}