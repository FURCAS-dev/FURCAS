/**
 * Generated by the MOIN Generator Version 3.0
 **/

package integration.processintegration.__impl;

public final class IsInitiatorImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationImpl
{
    // default constructor
    public IsInitiatorImpl() {
        super();
    }

    // specific constructor
    public IsInitiatorImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _InitiatedInteractions, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _InitiatorProcessComponent) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return exists(get___CurrentConnection(), _InitiatedInteractions, _InitiatorProcessComponent);
    }
    public boolean exists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _InitiatedInteractions, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _InitiatorProcessComponent) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return ___existsMult1( connection, _InitiatedInteractions, _InitiatorProcessComponent, "E0AD8E3251FE8E813E4B11DE8A710018DE1146FF"); //$NON-NLS-1$
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getInitiatedInteractions(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _InitiatorProcessComponent) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getInitiatedInteractions(get___CurrentConnection(), _InitiatorProcessComponent);
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getInitiatedInteractions(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _InitiatorProcessComponent) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject>) ___queryElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _InitiatorProcessComponent, get___EndAndMetaObject( 1 ) );
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefBaseObject getInitiatorProcessComponent(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _InitiatedInteractions) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getInitiatorProcessComponent(get___CurrentConnection(), _InitiatedInteractions);
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefBaseObject getInitiatorProcessComponent(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _InitiatedInteractions) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) ___getElementAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _InitiatedInteractions, "E0AD8E3251FE8E813E4B11DE8A710018DE1146FF"); //$NON-NLS-1$
    }
    public boolean add(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _InitiatedInteractions, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _InitiatorProcessComponent) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_InitiatedInteractions, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_InitiatorProcessComponent);
    }
    public boolean add(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _InitiatedInteractions, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _InitiatorProcessComponent) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_InitiatedInteractions, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_InitiatorProcessComponent);
    }
    public boolean remove(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _InitiatedInteractions, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _InitiatorProcessComponent) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_InitiatedInteractions, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_InitiatorProcessComponent);
    }
    public boolean remove(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _InitiatedInteractions, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _InitiatorProcessComponent) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_InitiatedInteractions, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_InitiatorProcessComponent);
    }
    public boolean refLinkExists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefObject firstEnd, com.sap.tc.moin.repository.mmi.reflect.RefObject secondEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        if ( firstEnd == null || secondEnd == null ) { return false; }
        checkTypesForRefLinkExists( connection, firstEnd, secondEnd );
        return exists( connection, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) firstEnd, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) secondEnd );
    }

    public java.lang.Class<integration.processintegration.IsInitiator> get___JmiInterface() {
        return integration.processintegration.IsInitiator.class;
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<integration.processintegration.IsInitiator> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new integration.processintegration.__impl.IsInitiatorWrapper(conn, this, synchronize);
    }
}