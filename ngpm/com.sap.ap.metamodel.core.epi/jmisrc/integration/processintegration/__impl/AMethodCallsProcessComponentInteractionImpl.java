/**
 * Generated by the MOIN Generator Version 3.0
 **/

package integration.processintegration.__impl;

public final class AMethodCallsProcessComponentInteractionImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefAssociationImpl
{
    // default constructor
    public AMethodCallsProcessComponentInteractionImpl() {
        super();
    }

    // specific constructor
    public AMethodCallsProcessComponentInteractionImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    
    public boolean exists(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _MethodCalls, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ProcessComponentInteraction) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return exists(get___CurrentConnection(), _MethodCalls, _ProcessComponentInteraction);
    }
    public boolean exists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _MethodCalls, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ProcessComponentInteraction) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return ___existsMultN( connection, _ProcessComponentInteraction, _MethodCalls, "E0AD8E3251FE8E8C3E4B11DEA9550018DE1146FF"); //$NON-NLS-1$
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getMethodCalls(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ProcessComponentInteraction) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getMethodCalls(get___CurrentConnection(), _ProcessComponentInteraction);
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getMethodCalls(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ProcessComponentInteraction) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject>) ___getElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _ProcessComponentInteraction, get___EndAndMetaObject( 1 ) );
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getProcessComponentInteraction(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _MethodCalls) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return getProcessComponentInteraction(get___CurrentConnection(), _MethodCalls);
    }
    public java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject> getProcessComponentInteraction(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _MethodCalls) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return (java.util.Collection<com.sap.tc.moin.repository.mmi.reflect.RefBaseObject>) ___queryElementsAtOtherLinkEnd( connection, (com.sap.tc.moin.repository.core.CorePartitionable) _MethodCalls, get___EndAndMetaObject( 0 ) );
    }
    public boolean add(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _MethodCalls, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ProcessComponentInteraction) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_MethodCalls, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_ProcessComponentInteraction);
    }
    public boolean add(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _MethodCalls, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ProcessComponentInteraction) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
          return refAddLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_MethodCalls, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_ProcessComponentInteraction);
    }
    public boolean remove(com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _MethodCalls, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ProcessComponentInteraction) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink((com.sap.tc.moin.repository.mmi.reflect.RefObject)_MethodCalls, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_ProcessComponentInteraction);
    }
    public boolean remove(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _MethodCalls, com.sap.tc.moin.repository.mmi.reflect.RefBaseObject _ProcessComponentInteraction) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        return refRemoveLink(connection, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_MethodCalls, (com.sap.tc.moin.repository.mmi.reflect.RefObject)_ProcessComponentInteraction);
    }
    public boolean refLinkExists(com.sap.tc.moin.repository.core.CoreConnection connection, com.sap.tc.moin.repository.mmi.reflect.RefObject firstEnd, com.sap.tc.moin.repository.mmi.reflect.RefObject secondEnd) throws com.sap.tc.moin.repository.mmi.reflect.JmiException
    {
        if ( firstEnd == null || secondEnd == null ) { return false; }
        checkTypesForRefLinkExists( connection, firstEnd, secondEnd );
        return exists( connection, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) firstEnd, (com.sap.tc.moin.repository.mmi.reflect.RefBaseObject) secondEnd );
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<integration.processintegration.AMethodCallsProcessComponentInteraction> get___JmiInterface() {
        return integration.processintegration.AMethodCallsProcessComponentInteraction.class;
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<integration.processintegration.AMethodCallsProcessComponentInteraction> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new integration.processintegration.__impl.AMethodCallsProcessComponentInteractionWrapper(conn, this, synchronize);
    }
}