/**
 * Generated by the MOIN Generator Version 3.0
 **/

package integration.processintegration.__impl;

public final class ProcessintegrationPackageImpl extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageImpl
{
        
    public static final java.util.Map<java.lang.String, java.lang.Integer> FEATURE_IDS;

    static {
        
        FEATURE_IDS = new java.util.HashMap<java.lang.String, java.lang.Integer>(11);
        FEATURE_IDS.put("IntegrationScenario", Integer.valueOf(0)); //$NON-NLS-1$
        FEATURE_IDS.put("ProcessComponentInteraction", Integer.valueOf(1)); //$NON-NLS-1$
        FEATURE_IDS.put("IsInitiator", Integer.valueOf(2)); //$NON-NLS-1$
        FEATURE_IDS.put("IsActor", Integer.valueOf(3)); //$NON-NLS-1$
        FEATURE_IDS.put("A_uses_interactions", Integer.valueOf(4)); //$NON-NLS-1$
        FEATURE_IDS.put("A_integrationScenarios_application", Integer.valueOf(5)); //$NON-NLS-1$
        FEATURE_IDS.put("A_methodCalls_processComponentInteraction", Integer.valueOf(6)); //$NON-NLS-1$
        FEATURE_IDS.put("A_subscriptions_processComponentInteraction", Integer.valueOf(7)); //$NON-NLS-1$
    }

    // constructors    
    public ProcessintegrationPackageImpl()
    {
        super();
    }
    public ProcessintegrationPackageImpl(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject)
    {
        super(workspace, mofId, immediatePackage, metaObject);
    }
    // internal enumeration creators
    // internal structure type creators
    // nested packages
    // classes
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getIntegrationScenario(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "IntegrationScenario"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getProcessComponentInteraction(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refClass(connection, "ProcessComponentInteraction"); //$NON-NLS-1$
    }
    // associations
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getIsInitiator(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "IsInitiator"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getIsActor(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "IsActor"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAUsesInteractions(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_uses_interactions"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAIntegrationScenariosApplication(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_integrationScenarios_application"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getAMethodCallsProcessComponentInteraction(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_methodCalls_processComponentInteraction"); //$NON-NLS-1$
    }
    public com.sap.tc.moin.repository.mmi.reflect.RefAssociation getASubscriptionsProcessComponentInteraction(com.sap.tc.moin.repository.core.CoreConnection connection) {
        return  refAssociation(connection, "A_subscriptions_processComponentInteraction"); //$NON-NLS-1$
    }
    // structure type creators

    protected java.lang.Object create___Extent(java.lang.Object workspace, java.lang.String mofId, com.sap.tc.moin.repository.mmi.reflect.RefPackage immediatePackage, com.sap.tc.moin.repository.mmi.reflect.RefObject metaObject) {
        java.lang.String name = ((com.sap.tc.moin.repository.mmi.model.ModelElement) metaObject).getName();
        com.sap.tc.moin.repository.mmi.reflect.RefBaseObject result = null;
        try {
            switch (FEATURE_IDS.get(name)) {
                case 0:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("integration.processintegration.__impl.IntegrationScenarioImpl")); //$NON-NLS-1$
                case 1:
                    return new com.sap.tc.moin.repository.core.jmi.reflect.RefClassImpl(workspace, mofId, immediatePackage, metaObject, Class.forName("integration.processintegration.__impl.ProcessComponentInteractionImpl")); //$NON-NLS-1$
                case 2:
                    return new integration.processintegration.__impl.IsInitiatorImpl(workspace, mofId, immediatePackage, metaObject);
                case 3:
                    return new integration.processintegration.__impl.IsActorImpl(workspace, mofId, immediatePackage, metaObject);
                case 4:
                    return new integration.processintegration.__impl.AUsesInteractionsImpl(workspace, mofId, immediatePackage, metaObject);
                case 5:
                    return new integration.processintegration.__impl.AIntegrationScenariosApplicationImpl(workspace, mofId, immediatePackage, metaObject);
                case 6:
                    return new integration.processintegration.__impl.AMethodCallsProcessComponentInteractionImpl(workspace, mofId, immediatePackage, metaObject);
                case 7:
                    return new integration.processintegration.__impl.ASubscriptionsProcessComponentInteractionImpl(workspace, mofId, immediatePackage, metaObject);
                default:
                    throw new com.sap.tc.moin.repository.mmi.reflect.InvalidCallException(name, null, "create___Extent()"); //$NON-NLS-1$
        }
        }
        catch(com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            throw ex;
        }
        catch(java.lang.Exception ex) {
            throw new com.sap.tc.moin.repository.mmi.reflect.JmiException(ex);
        }        
    }

    @SuppressWarnings("unchecked")
    public java.lang.Class<integration.processintegration.ProcessintegrationPackage> get___JmiInterface() {
        return integration.processintegration.ProcessintegrationPackage.class;
    }
    
    protected void initialize() {
        if (___refPackages == null) {
            ___refPackages = new java.util.ArrayList<RefPackageAndName>(0);
            ___refPackagesByName = new java.util.HashMap<String, RefPackageAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefPackageAndName rpan = null;
        }
  
        if (___refClasses == null) {
            ___refClasses = new java.util.ArrayList<RefClassAndName>(2);
            ___refClassesByName = new java.util.HashMap<String, RefClassAndName>();
            java.lang.String name = ""; //$NON-NLS-1$
            RefClassAndName rcan = null;
            name = "IntegrationScenario"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "integration.processintegration.IntegrationScenario"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
            name = "ProcessComponentInteraction"; //$NON-NLS-1$
            rcan = new RefClassAndName(name, "integration.processintegration.ProcessComponentInteraction"); //$NON-NLS-1$
            ___refClasses.add(rcan);
            ___refClassesByName.put(name, rcan);
        }
  
        if (___refAssociations == null) {
            ___refAssociations = new java.util.ArrayList<RefAssociationAndName>(6);
            ___refAssociationsByName = new java.util.HashMap<String, RefAssociationAndName>();
            @SuppressWarnings("unused")
            java.lang.String name = ""; //$NON-NLS-1$
            @SuppressWarnings("unused")
            RefAssociationAndName raan = null;
            name = "IsInitiator"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "integration.processintegration.IsInitiator"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "IsActor"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "integration.processintegration.IsActor"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_uses_interactions"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "integration.processintegration.AUsesInteractions"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_integrationScenarios_application"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "integration.processintegration.AIntegrationScenariosApplication"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_methodCalls_processComponentInteraction"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "integration.processintegration.AMethodCallsProcessComponentInteraction"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
            name = "A_subscriptions_processComponentInteraction"; //$NON-NLS-1$
            raan = new RefAssociationAndName(name, "integration.processintegration.ASubscriptionsProcessComponentInteraction"); //$NON-NLS-1$
            ___refAssociations.add(raan);
            ___refAssociationsByName.put(name, raan);
        }
    }
    
    @Override
    public com.sap.tc.moin.repository.spi.core.Wrapper<integration.processintegration.__impl.ProcessintegrationPackageImpl> createWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, boolean synchronize) {
        return new integration.processintegration.__impl.ProcessintegrationPackageWrapper(conn, this, synchronize);
    }

}