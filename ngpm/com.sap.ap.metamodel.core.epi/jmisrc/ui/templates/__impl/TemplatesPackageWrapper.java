/**
 * Generated by the MOIN Generator Version 3.0
 **/

package ui.templates.__impl;

public class TemplatesPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<ui.templates.__impl.TemplatesPackageImpl> implements ui.templates.TemplatesPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The TemplatesPackage wrapper
     */
    public TemplatesPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, ui.templates.__impl.TemplatesPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private ui.templates.__impl.TemplatesPackageImpl getCastWrappedObject() {
        return (ui.templates.__impl.TemplatesPackageImpl) getWrappedObject();
    }
    
    public ui.templates.__impl.TemplatesPackageImpl unwrap() {
        return (ui.templates.__impl.TemplatesPackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getStringTemplate()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getStringTemplate(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getStringTemplate(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public ui.templates.AExpressionsTemplate getAExpressionsTemplate()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (ui.templates.AExpressionsTemplate) wrapResult(getCastWrappedObject().getAExpressionsTemplate(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (ui.templates.AExpressionsTemplate) wrapResult(getCastWrappedObject().getAExpressionsTemplate(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    public java.lang.Class<ui.templates.TemplatesPackage> get___JmiInterface() {
        return ui.templates.TemplatesPackage.class;
    }
    
    protected String metaObjectToString() {
        return "ui.templates.TemplatesPackage (Java Type)\nui.templates (MOF Type)"; //$NON-NLS-1$
    }
}