/**
 * Generated by the MOIN Generator Version 3.0
 **/

package modelmanagement.deploymentunits.__impl;

public class DeploymentunitsPackageWrapper extends com.sap.tc.moin.repository.core.jmi.reflect.RefPackageWrapperImpl<modelmanagement.deploymentunits.__impl.DeploymentunitsPackageImpl> implements modelmanagement.deploymentunits.DeploymentunitsPackage,com.sap.tc.moin.repository.Partitionable
{

    /**
     * The DeploymentunitsPackage wrapper
     */
    public DeploymentunitsPackageWrapper(com.sap.tc.moin.repository.core.CoreConnection conn, modelmanagement.deploymentunits.__impl.DeploymentunitsPackageImpl baseObject, boolean synchronize) {
        super(conn, baseObject, synchronize);
    }

    private modelmanagement.deploymentunits.__impl.DeploymentunitsPackageImpl getCastWrappedObject() {
        return (modelmanagement.deploymentunits.__impl.DeploymentunitsPackageImpl) getWrappedObject();
    }
    
    public modelmanagement.deploymentunits.__impl.DeploymentunitsPackageImpl unwrap() {
        return (modelmanagement.deploymentunits.__impl.DeploymentunitsPackageImpl) getWrappedObject();
    }
    
    public com.sap.tc.moin.repository.mmi.reflect.RefClass getDeploymentUnit()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getDeploymentUnit(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (com.sap.tc.moin.repository.mmi.reflect.RefClass) wrapResult(getCastWrappedObject().getDeploymentUnit(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public modelmanagement.deploymentunits.APcsInsideCompanyDeploymentUnit getAPcsInsideCompanyDeploymentUnit()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (modelmanagement.deploymentunits.APcsInsideCompanyDeploymentUnit) wrapResult(getCastWrappedObject().getAPcsInsideCompanyDeploymentUnit(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (modelmanagement.deploymentunits.APcsInsideCompanyDeploymentUnit) wrapResult(getCastWrappedObject().getAPcsInsideCompanyDeploymentUnit(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    public modelmanagement.deploymentunits.ADeploymentUnitsApplication getADeploymentUnitsApplication()
    {
        try {
            if (synchronize) {
                synchronizationManager.acquireReadLock();
                try {
                    assertConnectionAlive();
                    attachConnectionIfRequired();
                    return (modelmanagement.deploymentunits.ADeploymentUnitsApplication) wrapResult(getCastWrappedObject().getADeploymentUnitsApplication(connection));
                } finally {
                    synchronizationManager.releaseReadLock();
                }
       
            }
            assertConnectionAlive();
            attachConnectionIfRequired();
            return (modelmanagement.deploymentunits.ADeploymentUnitsApplication) wrapResult(getCastWrappedObject().getADeploymentUnitsApplication(connection)); 
        } catch (com.sap.tc.moin.repository.mmi.reflect.JmiException ex) {
            wrapJmiExceptionArgs(ex);
            throw ex;
        }
    }
    // methods for structure type creators
    
    public java.lang.Class<modelmanagement.deploymentunits.DeploymentunitsPackage> get___JmiInterface() {
        return modelmanagement.deploymentunits.DeploymentunitsPackage.class;
    }
    
    protected String metaObjectToString() {
        return "modelmanagement.deploymentunits.DeploymentunitsPackage (Java Type)\nmodelmanagement.deploymentunits (MOF Type)"; //$NON-NLS-1$
    }
}